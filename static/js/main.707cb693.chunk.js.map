{"version":3,"sources":["nystrum/Screen/constants.js","helper.js","nystrum/Entities/Entity.js","nystrum/constants.js","nystrum/Actions/ActionResources/ActionResource.js","nystrum/Actions/ActionResources/EnergyResource.js","nystrum/Actions/Base.js","nystrum/Actions/DestroySelf.js","nystrum/Actions/EngineCrank.js","nystrum/Entities/Parent.js","nystrum/Display/konvaCustom.js","nystrum/message.js","nystrum/Entities/Attacking.js","nystrum/Entities/RangedAttacking.js","nystrum/Entities/Equipable.js","nystrum/Entities/Acting.js","nystrum/Entities/Rendering.js","nystrum/Entities/Containing.js","nystrum/sounds.js","nystrum/Entities/Playing.js","nystrum/Entities/helper.js","nystrum/Actions/Say.js","nystrum/Actions/Attack.js","nystrum/Actions/Move.js","nystrum/Actions/ThrowProjectile.js","nystrum/Actions/SelfDestructiveAttack.js","nystrum/Actions/ProjectileMove.js","nystrum/Actions/Shove.js","nystrum/Actions/ThrowProjectileGas.js","nystrum/Entities/Chasing.js","nystrum/Actions/PlaceActor.js","nystrum/Entities/Draggable.js","nystrum/Entities/Pushable.js","nystrum/items.js","nystrum/Entities/Destructable.js","nystrum/Entities/Burnable.js","nystrum/Entities/HasKeymap.js","nystrum/Entities/Upgradable.js","nystrum/Entities/index.js","nystrum/Entities/UI.js","nystrum/Entities/Speaking.js","nystrum/Entities/Helpless.js","nystrum/Entities/Covering.js","nystrum/Entities/Exploding.js","nystrum/Entities/DirectionalPushing.js","nystrum/Entities/RangedChasing.js","nystrum/Entities/PresentingUI.js","nystrum/Entities/HasTargetingCursor.js","nystrum/Entities/Dragging.js","nystrum/Entities/Charging.js","nystrum/Entities/Signing.js","nystrum/Entities/Equiping.js","nystrum/Entities/Cloning.js","nystrum/Entities/HasShapePattern.js","nystrum/Entities/DestructiveProjecting.js","nystrum/Entities/DirectionalProjecting.js","nystrum/Entities/GaseousDestructiveProjecting.js","nystrum/Entities/Gaseous.js","nystrum/Entities/Spreading.js","nystrum/Entities/Spawning.js","nystrum/Entities/IsParticle.js","nystrum/Engine/engine.js","nystrum/Maps/helper.js","nystrum/Maps/generator.js","nystrum/Modes/Jacinto/theme.js","nystrum/Modes/index.js","nystrum/Modes/Jacinto/jacinto.js","nystrum/Modes/default.js","nystrum/game.js","nystrum/UI/Instructions.js","nystrum/UI/Button.js","nystrum/UI/Information.js","nystrum/UI/Tooltip.js","nystrum/UI/ActionBar.js","nystrum/UI/Entity/CharacterCard.js","nystrum/UI/Entity/PlayerInformation.js","nystrum/UI/Inventory.js","nystrum/UI/Messages.js","nystrum/Actions/EquipItemFromContainer.js","nystrum/UI/Jacinto/Equipment.js","nystrum/UI/Jacinto/Help.js","nystrum/Screen/Level.js","nystrum/Screen/Title.js","nystrum/UI/CharacterSelect.js","nystrum/Screen/Lose.js","nystrum/Screen/Win.js","nystrum/Screen/CharacterSelect.js","nystrum/UI/ModeSelect.js","nystrum/Screen/index.js","nystrum/Screen/ModeSelect.js","nystrum/Actions/ActionResources/ChakraResource.js","nystrum/Actions/GoToPreviousKeymap.js","nystrum/Actions/MoveRangedAttackCursor.js","nystrum/Actions/MultiTargetRangedAttack.js","nystrum/Actions/PrepareRangedAttack.js","nystrum/Actions/OpenInventory.js","nystrum/Actions/UnequipItemToTile.js","nystrum/Actions/OpenEquipment.js","nystrum/Actions/Upgrade.js","nystrum/Actions/ActionResources/UpgradeResource.js","nystrum/Actions/OpenUpgrades.js","nystrum/Actions/PickupRandomItem.js","nystrum/Actions/Reload.js","nystrum/Characters/GearBasic.js","nystrum/Items/Pickups/Ammo.js","nystrum/Items/Weapons/Lancer.js","nystrum/Characters/index.js","nystrum/Nystrum.js","App.js","serviceWorker.js","index.js"],"names":["SCREENS","delay","timeDelayed","Promise","resolve","setTimeout","clamp","value","min","max","Math","getRandomInArray","array","floor","random","length","getRandomInt","ceil","coordsToString","coords","x","y","isPassableDefault","game","tile","map","tileKey","type","passable","calculatePath","targetPos","currentPos","topology","isPassable","isPassableCallback","astar","ROT","AStar","path","compute","push","slice","lerp_point","p0","p1","t","lerp","start","end","calculateStraightPath","p","points","N","dx","dy","abs","diagonal_distance","step","round","calculatePathWithRange","range","getRandomPos","keys","Object","key","split","coordinates","parseInt","text","getDestructableEntities","entites","filter","entity","hasOwnProperty","getGranularity","radius","pow","getPointsOnCircumference","centerX","centerY","r","n","list","i","cos","PI","sin","Entity","name","id","uuid","this","entityTypes","active","COLORS","THEMES","base03","base02","base01","base00","base0","base1","base2","base3","yellow","orange","red","magenta","violet","blue","cyan","green","TILE_KEY","background","foreground","character","sprite","animation","DIRECTIONS","NE","W","NW","SW","S","SE","E","NONE","EQUIPMENT_TYPES","EQUIPMENT_LAYOUTS","item","CLONE_PATTERNS","point","x_offset","y_offset","positions","taken","verticalLine","smallSquare","square","bigSquare","circle","Helper","PARTICLE_TEMPLATES","default","renderer","color","fail","succede","damage","leaf","water","PARTICLE_TYPE","ActionResource","getResourceCost","actorResourcePath","actorResourceGetter","actorResourceSetter","EnergyResource","args","Base","actor","label","hidden","energyCost","processDelay","particles","particleTemplate","Constant","onBefore","onAfter","onSuccess","onFailure","interrupt","requiredResources","life","pos","direction","particle","Particle","energy","setNextAction","_","resource","actorVariable","canPay","listPayableResources","resourceCost","success","alternative","DestroySelf","destroy","EngineCrank","engine","console","log","Parent","superclass","children","CrankEngine","concat","isInitialized","child","entities","e","actors","draw","includes","forEach","destroyChild","canAttack","bind","placeActorOnMap","addActor","initialize","ANIMATION_TYPES","Animation","display","lifeTime","node","frame","timeDiff","getActive","removeAnimation","ExampleAnimation","BlinkTile","lerpDirection","rect","Konva","Rect","tileWidth","tileOffset","tileGutter","tileHeight","offsetX","offsetY","width","height","fill","strokeEnabled","transformsEnabled","perfectDrawEnabled","listening","shadowForStrokeEnabled","animationLayer","add","opacity","Display","containerId","stage","layer","animations","animationLoop","document","d","getElementById","displayContainer","createElement","appendChild","adjustContentToScreen","Stage","container","Layer","hitGraphEnabled","update","isRunning","stop","display_element","offsetWidth","mapWidth","mapHeight","anim","actual_x","actual_y","Group","Text","fontSize","fontFamily","align","verticalAlign","dis_layer","Image","fromURL","darthNode","setAttrs","scaleX","scaleY","batchDraw","MESSAGE_TYPE","INFORMATION","backgroundColor","ACTION","DANGER","STATUS_EFFECT","ERROR","Message","Attacking","attackDamage","additional","targets","target","getAttackDamage","equipment","slot","addMessage","decreaseDurability","RangedAttacking","attackRange","baseRangedAccuracy","baseRangedDamage","magazineSize","magazine","weaponAccuracy","getRangedWeaponAccuracy","coverDebuff","getRangedAttackCoverDebuff","distanceDebuff","getRangedAttackDistanceDebuff","result","getPosition","reduce","acc","curr","entitiesProvidingCover","coverModifer","accuracyModifer","getAttackRange","accuracy","getRangedAttackChance","getRangedWeaponDamage","getRangedAttackDamage","getEquipedWeapons","weapon","reloaded","amount","ammo","contains","removeFromContainer","additionalDamage","additionalAccuracy","hit","attackChance","hitChance","useAmmo","canRangedAttack","Equipable","equipmentType","Acting","actions","speed","action","Rendering","currentFrame","canOccupyPosition","targetTile","pushable","newPos","move","ContainerSlot","itemType","items","Containing","slots","index","findIndex","createSlot","it","splice","window","PUBLIC_URL","fire_0","Howl","src","volume","loop","fire_1","scream_0","scream_1","scream_2","water_0","water_1","chop_0","chop_1","equip_0","equip_1","explosion_0","save","lose","grab_0","release_0","Playing","keymap","nextAction","destroyEntity","removeStatusEffectByActorId","Say","message","messageType","Attack","attack","SOUNDS","play","addParticle","Move","ThrowProjectile","move_result","shift","SelfDestructiveAttack","damageToSelf","decreaseDurabilityWithoutDefense","ProjectileMove","Shove","shove","ThrowProjectileGas","Chasing","targetEntity","PlaceActor","forcePlacement","addActorAsNext","Draggable","draggable","Pushable","TYPE","directionalKunai","DirectionalProjectile","Destructable","durability","defense","onDestroy","getDefense","current","newDurability","Burnable","canBurn","willResetCanBurn","HasKeymap","initializeKeymap","keymapStack","addKeymap","newKeymap","unshift","ignoredKeys","getKeymap","removeKeymap","Upgrade","activate","canUpgrade","cost","removeOnActivate","CoverWall","pipe","initiatedBy","messages","saved","damageModifer","providesCover","Bandit","flammability","explosivity","Array","FireSpread","timeToSpread","spreadCount","fire","structure","position","enflame","explode","RangedBandit","getProjectile","pathToCheck","inPath","throwDirection","sign","projectile","createPath","targetInPath","movePath","Player","presentingUI","cursorIsActive","cursorPositions","setCursorPositions","setCursorIsActive","resetAnimations","removeAnimations","getCursorPositions","newAnimation","addAnimation","addAnimations","distance","newPositons","draggedEntity","lastPos","moveSuccess","drag","charge","chargeMax","signHistory","itemName","slotName","find","foundSlot","cloneLimit","clones","clone","c","super__destroy","cloneArgs","cloneDeep","reinitializeKeymap","destroyClone","arg","attribute","upgrade_points","upgrade_tree","upgrade","newTree","currUpgrade","RangedWeapon","shapePattern","initialPosition","Ammo","setActorToPrevious","owner_id","isClone","cloneCount","clonePattern","offset","cloneDeepWith","referencePos","timeToSpreadMax","spreadCountMax","adjacentPositions","adjacentPos","kill","newTile","tileExists","Boolean","notBurnt","EmergenceHole","getSpawnedEntity","nextPos","getNextPos","Engine","statusEffects","currentActor","gainEnergy","hasEnoughEnergy","getAction","perform","acting","timePassed","getEnergyCost","canPayRequiredResources","payRequiredResources","processActionFX","shouldAutoRun","processStatusEffects","sortActorsByEnergy","processV2","setVisibleKeymap","updateMode","updateReact","visibleKeymap","sort","a","b","newEffect","allowDuplicates","effect","onStart","onStop","actorId","lifespan","timeToLive","timeSinceLastStep","stepInterval","onStep","removeDeadStatusEffects","actionSuccess","removeActorFromMap","removeDeadParticles","process","mode","addTileZone","origin","j","generate","unitCount","unitSize","data","floorPlan","createFloorPlan","unit","createRoomInFloorPlan","unitPosition","getUnitPosition","didCreate","createUnit","removeInnerWalls","addInnerWalls","newUnit","getNeighboringUnit","unitAlreadyExists","unitExists","pnt","pos_two","pos_one","getNeighboringPoints","existingUnits","floorPlanPos","mapOffsetX","mapOffsetY","eightWay","neighbors","size","border","unitCollidesWithEdge","newPosition","coordArray","count","corners","wallCount","corner","wallNeighbors","selectedWallPos","build","currentPosition","previousFloorPositions","prevPos","STAT_RENDERERS","Jacinto","level","highestLevel","turnCount","dataByLevel","enemies","createEmptyLevel","initializeMapTiles","setWaveData","MapHelper","generateBuilding","placePlayersInSafeZone","groundTiles","enemyName","posXY","coord","addCover","addEmerenceHole","getPlayers","player","currentBlips","maxBlips","arr","createOrUpdateInfoBlock","join","hasWon","toWin","hasLost","toLose","reset","initializeGameData","levelComplete","nextLevel","setLevel","nextLevelData","players","spawnPosition","banditStats","getBanditStats","entityClass","Item","box","banditLevels","infoBlocks","progressBars","merge","Game","entityMap","entityDictionary","mapInitialized","tileMap","cameraWidth","cameraHeight","getSelectedCharacter","spriteMode","Mode","Flume","MAP_WIDTH","MAP_HEIGHT","placed","randomlyPlaceActorOnMap","ac","digger","Arena","freeCells","create","randomlyPlaceAllActorsOnMap","tiles","hasImpassableEntity","fullMap","referencePosition","renderWidth","renderHeight","fullWidth","fullHeight","renderPaddingX","renderPaddingY","parts","finalX","finalY","callback","getRenderMap","getPlayerPosition","tileRenderer","nextFrame","animateTile","renderedEntities","animateEntity","processTileMap","createTile","getFirstPlayer","updateTile","getRenderer","getEntityRenderer","getTileRenderer","isPlaced","placeActorsOnMap","presserRef","show","focus","selectedCharacter","initializeMode","initializeUI","handleKeyPress","event","code","setAsNextAction","Instructions","infoHeader","props","className","onClick","setActiveScreen","toggleSpriteMode","data-target","React","Component","Button","Tooltip","title","ResourceBlock","superScript","style","borderColor","ActionBar","entries","reqs","refocus","req","numBlocks","Portrait","StatusEffect","StatusEffects","getStatusEffectsByActorId","NamePlate","ProgressBar","colorFilled","colorEmpty","attributePathMax","attributePath","valueMax","valueCurrent","blip","CharacterCard","PlayerInformation","EquipItemFromContainer","itemInSlot","getItemInSlot","addToContainer","unequip","equip","StatBlock","stat","getIcon","EquipmentCard","equipped","needsReload","equipable","stats","meleeDamage","reload","Equipment","Help","useLayoutEffect","elems","querySelectorAll","M","Modal","init","href","Level","ENGINE","selectedMode","class","state","activeTab","createRef","newGameState","setState","ref","onKeyDown","tabIndex","Title","backgroundImage","backgroundRepeat","backgroundPosition","backgroundPositionY","top","CharacterSelect","characters","setSelectedCharacter","Lose","Win","ModeSelect","modes","setSelectedMode","ChakraResource","GoToPreviousKeymap","goToPreviousKeymap","MoveRangedAttackCursor","initiatedFrom","isInRange","pathIsNotBlocked","rangedCursorCanOccupyPosition","moveCursorInDirection","MultiTargetRangedAttack","targetPositions","particlePath","particlePos","rangedAttack","attackSuccess","PrepareRangedAttack","passThroughEnergyCost","passThroughRequiredResources","pathAnimations","pathPos","chance","changeCursorColor","equippedWeapon","getPositionsInShape","deactivatePathAnimations","activateCursor","updateCursors","deactivateCursor","Escape","w","s","setKeymap","OpenInventory","visibleInventory","UnequipItemToTile","OpenEquipment","visibleEquipment","UpgradeResource","OpenUpgrades","PickupRandomItem","Reload","newX","newY","o","u","g","AmmoEntity","lancer","Lancer","Characters","Basic_Gear","Nystrum","characterKey","selected","Modes","activeScreen","characterScreen","Screen","titleScreen","loseScreen","winScreen","levelScreen","getActiveScreen","transitionName","transitionAppear","transitionEnter","transitionLeave","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","App","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.707cb693.chunk.js","sourcesContent":["export const SCREENS = {\n  TITLE: 'Title',\n  LEVEL: 'Level',\n  LOSE: 'Lose',\n  WIN: 'Win',\n  CHARACTER_SELECT: 'CharacterSelect',\n  MODE_SELECT: 'ModeSelect',\n}","import * as ROT from 'rot-js';\n\nexport const delay = (timeDelayed = 100) => {\n  // return;\n  if (timeDelayed <= 0) return;\n  return new Promise(resolve => setTimeout(resolve, timeDelayed));\n}\n\nexport const clamp = (value, min, max) => {\n  return Math.min(Math.max(value, min), max);\n};\n\nexport const getRandomInArray = (array) => {\n  return array[Math.floor(Math.random() * array.length)];\n}\n\nexport const getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nexport const getRandomIntInclusive = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport const coordsAreEqual = (pos_one, pos_two) => pos_one.x === pos_two.x && pos_one.y === pos_two.y\n\nexport const coordsToString = (coords) => `${coords.x},${coords.y}`\n\nconst isPassableDefault = (game) => (x, y) => {\n  const tile = game.map[x + \",\" + y];\n  if (tile) {\n    return (game.tileKey[tile.type].passable);\n  } else {\n    return false\n  }\n}\n\nexport const calculatePath = (game, targetPos, currentPos, topology = 4, isPassable = isPassableDefault) => {\n  let map = game.map\n  let isPassableCallback = isPassable(game);\n  let astar = new ROT.Path.AStar(targetPos.x, targetPos.y, isPassableCallback, { topology });\n  let path = [];\n  astar.compute(currentPos.x, currentPos.y, function (x, y) {\n    path.push({ x, y })\n  });\n\n  return path.slice(1);\n}\n\nconst diagonal_distance = (p0, p1) => {\n  let dx = p1.x - p0.x, dy = p1.y - p0.y;\n  return Math.max(Math.abs(dx), Math.abs(dy));\n}\n\nconst round_point = (p) => {\n  return {x: Math.round(p.x), y: Math.round(p.y)};\n}\n\nconst lerp_point = (p0, p1, t) => {\n  return {\n    x: lerp(p0.x, p1.x, t),\n    y: lerp(p0.y, p1.y, t)\n  };\n}\n\nconst lerp = (start, end, t) => {\n  return start + t * (end - start);\n}\n\nexport const calculateStraightPath = (p0, p1) => {\n  let points = [];\n  let N = diagonal_distance(p0, p1);\n  for (let step = 0; step < N; step++) {\n    let t = N === 0 ? 0.0 : step / N;\n    points.push(round_point(lerp_point(p0, p1, t)));\n  }\n  return points;\n}\n\nexport const getPositionInDirection = (pos, direction) => {\n  return {x: pos.x + direction[0], y: pos.y + direction[1]}\n}\n\nexport const calculatePathWithRange = (game, targetPos, currentPos, topology, range) => {\n  let path = calculatePath(game, targetPos, currentPos, topology);\n  return path.slice(0, range + 1);\n}\n\nexport const getRandomPos = (map) => {\n  let keys = Object.keys(map);\n  let key = getRandomInArray(keys).split(',');\n  let pos = { x: parseInt(key[0]), y: parseInt(key[1])}\n  return {coordinates: pos, text: key}\n}\n\nexport const getDestructableEntities = (entites) => {\n  return entites.filter((entity) => entity.hasOwnProperty('durability'));\n}\n\nexport const filterEntitiesByType = (entites, type) => {\n  return entites.filter((entity) => entity.entityTypes.includes(type));\n}\n\nconst getGranularity = (radius) => {\n  let result = (2 / 3) * (Math.pow(radius, 3) - (9 * Math.pow(radius, 2)) + (32 * radius) - 18)\n  return result\n}\n\nexport const getPointsOnCircumference = (centerX = 0, centerY = 0, r = 3) => {\n  const n = getGranularity(r);\n  let list = [];\n  for (let i = 0; i < n; i++) {\n    let x = Math.round(centerX + (Math.cos(2 * Math.PI / n * i) * r))\n    let y = Math.round(centerY + (Math.sin(2 * Math.PI / n * i) * r))\n    list.push({ x, y });\n  }\n  return list\n}\n\nexport const getPositionsFromStructure = (structure, initialPosition) => {\n  return structure.positions.map((slot) => {\n    let position = {\n      x: initialPosition.x + slot.x + structure.x_offset,\n      y: initialPosition.y + slot.y + structure.y_offset\n    }\n    return position\n  })\n}\n","import uuid from 'uuid/v1';\nexport class Entity {\n  constructor({ game = null, passable = false, name = 'nameless' }) {\n    let id = uuid();\n    this.entityTypes = ['Entity'];\n    this.id = id;\n    this.name = name;\n    this.game = game;\n    this.passable = passable;\n    this.active = true;\n  }\n}\n","import * as Helper from '../helper'\n\nexport const ENERGY_THRESHOLD = 100;\n\nexport const COLORS = {\n  black_1: '#424242',\n  gray_1: '#262d37',\n  gray_2: '#606b79',\n  gray_4: '#B7C3CD',\n  gray_5: '#CED5DD',\n  green_1: '#1d533c',\n  green_2: '#227743',\n  green_3: '#2d9c59',\n  red_4: '#D82D33',\n  red_5: '#E16264',\n  purple_3: '#c45ffd',\n}\n\nexport const THEMES = {\n  NARUTO: {\n    gaara: '#603030',\n    rock_lee: '#155859',\n  },\n  SOLARIZED: {\n    base03: '#002b36',\n    base02: '#073642',\n    base01: '#586e75',\n    base00: '#657b83',\n    base0: '#839496',\n    base1: '#93a1a1',\n    base2: '#eee8d5',\n    base3: '#fdf6e3',\n    yellow: '#b58900',\n    orange: '#cb4b16',\n    red: '#dc322f',\n    magenta: '#d33682',\n    violet: '#6c71c4',\n    blue: '#268bd2',\n    cyan: '#2aa198',\n    green: '#859900',\n  },\n  JACINTO: {\n    // base1: '#07111Dff',\n    base1: '#0B0B0Bff',\n    base2: '#5A7178ff',\n    base3: '#B6ACA3ff',\n    base4: '#EDF6F1ff',\n    cog1: '#2d5fc9',\n    cog2: '#18c0f8',\n    cog3: '#86C8E4ff',\n    // locust2: '#E19D3Fff',\n    locust1: '#96641Dff',\n    locust2: '#F89339ff',\n    locust3: '#E7C898ff',\n    flesh1: '#833139ff',\n    flesh2: '#CC7468ff',\n    flesh3: '#DDA78Fff',\n    gray: '#6D7886ff',\n    red: '#C7141Cff',\n    yellow: '#b58900',\n    green: '#859900',\n  },\n}\n\nexport const NPC_NAME = 'Helpless Citizen';\nexport const PLAYER_NAME = 'Fire Fighter';\n\nexport const TILE_KEY = {\n  'GROUND': {\n    background: THEMES.SOLARIZED.base03,\n    foreground: THEMES.SOLARIZED.base01,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'FLOOR': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base0,\n    character: '',\n    passable: true,\n  },\n  'SAFE_FLOOR': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base0,\n    character: '',\n    passable: true,\n  },\n  'BURNT': {\n    background: THEMES.SOLARIZED.base03,\n    foreground: THEMES.SOLARIZED.red,\n    character: 'X',\n    sprite: '',\n    passable: true,\n    animation: [\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'X', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'x', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'X', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.orange, character: 'x', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.orange, character: 'X', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.yellow, character: 'x', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'X', sprite: '', passable: true, },\n    ]\n  },\n  'WET': {\n    background: THEMES.SOLARIZED.base03,\n    foreground: THEMES.SOLARIZED.blue,\n    character: '=',\n    sprite: '',\n    passable: true,\n    animation: [\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '=', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '~', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '=', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.base0, character: '~', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.base1, character: '=', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.base1, character: '~', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '=', sprite: '', passable: true, },\n    ]\n  },\n  'WALL': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base2,\n    character: '#',\n    sprite: '',\n    passable: false,\n  },\n  'DOOR': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base0,\n    character: '+',\n    sprite: '',\n    passable: true,\n  },\n  'SAFE': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.green,\n    character: '+',\n    sprite: '',\n    passable: true,\n  },\n\n  'WATER': {\n    animation: [\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#8aa', character: '▒', passable: false, },\n      { background: '#424242', foreground: '#8aa', character: '▓', passable: false, },\n    ],\n    background: '#9dc3d3',\n    character: '░',\n    passable: false,\n  },\n}\n\nexport const HAND_SIGNS = {\n  Power: {\n    type: 'Power',\n    name: 'Rin',\n    description: 'Strength of mind, body, spirit',\n  },\n  Energy: {\n    type: 'Energy',\n    name: 'Pyo',\n    description: 'energy direction',\n  },\n  Harmony: {\n    type: 'Harmony',\n    name: 'To',\n    description: 'one- ness with the universe or self',\n  },\n  Healing: {\n    type: 'Healing',\n    name: 'Sha',\n    description: 'of self and others',\n  },\n  Intuition: {\n    type: 'Intuition',\n    name: 'Kai',\n    description: 'premonition of danger, feeling others intent',\n  },\n  Awareness: {\n    type: 'Awareness',\n    name: 'Jin',\n    description: 'feeling thoughts of others, perhaps hiding your own',\n  },\n  Dimension: {\n    type: 'Dimension',\n    name: 'Retsu',\n    description: 'control of time and space',\n  },\n  Creation: {\n    type: 'Creation',\n    name: 'Zai',\n    description: 'understanding nature',\n  },\n  Absolute: {\n    type: 'Absolute',\n    name: 'Zen',\n    description: 'enlightenment',\n  }, \n}\n\nexport const DIRECTIONS = {\n  N: [0, -1],\n  NE: [1, -1],\n  W: [-1, 0],\n  NW: [-1, -1],\n  SW: [-1, 1],\n  S: [0, 1],\n  SE: [1, 1],\n  E: [1, 0],\n  NONE: [0, 0],\n}\n\nexport const getDirectionKey = (direction) => {\n  let directionString = `${direction}`;\n  let keys = Object.keys(DIRECTIONS);\n  let result = false\n  keys.forEach((key) => {\n    if (`${DIRECTIONS[key]}` === directionString) {\n      result = key\n    }\n  })\n  return result\n}\n\nexport const EQUIPMENT_TYPES = {\n  HEAD: 'HEAD',\n  TORSO: 'TORSO',\n  BACK: 'BACK',\n  HAND: 'HAND',\n  FEET: 'FEET',\n  GENERIC: 'GENERIC',\n}\n\nexport const EQUIPMENT_LAYOUTS = {\n  human: () => {\n    return [\n      {type: EQUIPMENT_TYPES.HEAD, name: 'head', item: null},\n      {type: EQUIPMENT_TYPES.TORSO, name: 'torso', item: null},\n      {type: EQUIPMENT_TYPES.BACK, name: 'back', item: null},\n      {type: EQUIPMENT_TYPES.HAND, name: 'left_hand', item: null},\n      {type: EQUIPMENT_TYPES.HAND, name: 'right_hand', item: null},\n      {type: EQUIPMENT_TYPES.FEET, name: 'feet', item: null},\n    ]\n  },\n  limited: () => {\n    return [\n      {type: EQUIPMENT_TYPES.GENERIC, name: 'slot_1', item: null},\n      {type: EQUIPMENT_TYPES.GENERIC, name: 'slot_2', item: null},\n    ]\n  },\n  gear: () => {\n    return [\n      { type: EQUIPMENT_TYPES.HAND, name: 'weapon', item: null },\n      // { type: EQUIPMENT_TYPES.TORSO, name: 'ammo', item: null },\n    ]\n  }\n}\n\nexport const CLONE_PATTERNS = {\n  point: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n    ]\n  },\n  verticalLine: {\n    x_offset: 1,\n    y_offset: 1,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n    ]\n  },\n  smallSquare: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n    ]\n  },\n  square: {\n    x_offset: 2,\n    y_offset: 2,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 1, y: -1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: -1, y: -1, taken: false, },\n      { x: -1, y: 0, taken: false, },\n      { x: -1, y: 1, taken: false, },\n    ]\n  },\n  bigSquare: {\n    x_offset: 2,\n    y_offset: 2,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 1, y: -1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: -1, y: -1, taken: false, },\n      { x: -1, y: 0, taken: false, },\n      { x: -1, y: 1, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 2, y: 2, taken: false, },\n      { x: 2, y: 0, taken: false, },\n      { x: 2, y: -2, taken: false, },\n      { x: 0, y: -2, taken: false, },\n      { x: -2, y: -2, taken: false, },\n      { x: -2, y: 0, taken: false, },\n      { x: -2, y: 2, taken: false, },\n    ],\n  },\n  circle: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      ...Helper.getPointsOnCircumference(0, 0, 2),\n      ...Helper.getPointsOnCircumference(0, 0, 3)\n    ]\n  },\n}\n\nexport const PARTICLE_TEMPLATES = {\n  default: {\n    renderer: {\n      character: '*',\n      color: 'black',\n      background: 'white',\n    }\n  },\n  fail: {\n    renderer: {\n      character: 'x',\n      color: 'black',\n      background: 'red',\n    }\n  },\n  succede: {\n    renderer: {\n      character: 'x',\n      color: THEMES.SOLARIZED.base3,\n      background: THEMES.SOLARIZED.green,\n    }\n  },\n  damage: {\n    renderer: {\n      character: '*',\n      color: 'darkred',\n      background: 'red',\n    }\n  },\n  leaf: {\n    renderer: {\n      character: '✤',\n      color: '#36635b',\n      background: '#F0D8C0',\n    }\n  },\n  water: {\n    renderer: {\n      character: '~',\n      color: THEMES.SOLARIZED.base3,\n      background: THEMES.SOLARIZED.blue,\n    }\n  },\n}\n\nexport const PARTICLE_TYPE = {\n  directional: 0,\n  path: 1,\n}\n\nexport const ALPHABET = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];","export class ActionResource {\n  constructor({\n    name = 'Resource',\n    getResourceCost = () => null,\n    actorResourcePath = null,\n    actorResourceGetter = null,\n    actorResourceSetter = null,\n    renderer = {background: 'transparent', color: 'black', character: '*'}\n  }) {\n    this.name = name;\n    this.getResourceCost = getResourceCost;\n    this.actorResourcePath = actorResourcePath;\n    this.actorResourceGetter = actorResourceGetter;\n    this.actorResourceSetter = actorResourceSetter;\n    this.renderer = renderer;\n  }\n}\n","import {ActionResource} from './ActionResource';\n\nexport class EnergyResource extends ActionResource {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.name = 'Energy';\n    this.actorResourcePath = 'energy';\n    this.renderer = { color: 'black', background: '#ff9926', character: '8', sprite: '' }\n  }\n}","import * as _ from 'lodash';\nimport { Particle } from '../Entities/index';\nimport * as Constant from '../constants';\nimport {EnergyResource} from './ActionResources/EnergyResource';\n\nexport class Base {\n  constructor({ \n    game,\n    actor,\n    label = 'action label',\n    hidden = false,\n    energyCost = Constant.ENERGY_THRESHOLD, \n    processDelay = 50, \n    particles = [], \n    renderer = null, \n    particleTemplate = Constant.PARTICLE_TEMPLATES.default, \n    onBefore = () => null, \n    onAfter = () => null, \n    onSuccess = () => null, \n    onFailure = () => null, \n    interrupt = false, \n    requiredResources = [],\n  }) {\n    this.actor = actor;\n    this.game = game;\n    this.label = label;\n    this.hidden = hidden;\n    this.energyCost = energyCost;\n    this.processDelay = processDelay;\n    this.particles = particles;\n    this.renderer = renderer;\n    this.particleTemplate = particleTemplate;\n    this.onBefore = onBefore;\n    this.onAfter = onAfter;\n    this.onSuccess = onSuccess;\n    this.onFailure = onFailure;\n    this.interrupt = interrupt;\n    this.requiredResources = [new EnergyResource({ getResourceCost: () => this.energyCost }), ...requiredResources];\n  }\n\n  addParticle(\n    life, \n    pos, \n    direction, \n    renderer = { ...this.particleTemplate.renderer }, \n    type = Constant.PARTICLE_TYPE.directional, \n    path = null\n  ) {\n    let particle = new Particle({\n      game: this.game,\n      name: 'particle',\n      passable: true,\n      life,\n      pos,\n      direction,\n      energy: 100,\n      renderer,\n      type,\n      path,\n    });\n    this.particles.push(particle);\n  }\n\n  removeDeadParticles() {\n    this.particles = this.particles.filter((particle) => particle.life > 0);\n  }\n\n  setAsNextAction() {\n    this.actor.setNextAction(this);\n  }\n\n  getEnergyCost() {\n    return _.find(this.requiredResources, {name: 'Energy'}).getResourceCost();\n  }\n\n  getRequiredResourceName() {\n    return _.map(this.requiredResources, 'name');\n  }\n\n  listPayableResources() {\n    return _.map(this.requiredResources, (resource) => {\n      const getResourceCost = resource.getResourceCost; \n      const actorResourcePath = resource.actorResourcePath; \n      const actorResourceGetter = resource.actorResourceGetter;\n\n      const actorVariable = _.get(this.actor, actorResourcePath, null);\n      \n      let canPay = false;\n      // if the actor has provided a setter for this variable, use that \n      if (_.get(this.actor, actorResourceGetter, null) !== null) {\n        canPay = this.actor[actorResourceGetter]() >= getResourceCost();\n      } else if (actorVariable !== null) {\n        // else if the actor has a path to the appropriate variable, get that value and set it manually\n        canPay = actorVariable >= getResourceCost();\n      }\n\n      return {\n        canPay,\n        ...resource\n      }\n    })\n  }\n\n  canPayRequiredResources() {\n    return !_.find(this.listPayableResources(), {'canPay': false});\n  }\n\n  payRequiredResources() {\n    _.each(this.requiredResources, (resource) => {\n      const getResourceCost = resource.getResourceCost;\n      const actorResourcePath = resource.actorResourcePath;\n      const actorResourceSetter = resource.actorResourceSetter;\n      \n      const actorVariable = _.get(this.actor, actorResourcePath, null);\n      const resourceCost = getResourceCost();\n      // if the actor has provided a setter for this variable, use that \n      if (_.get(this.actor, actorResourceSetter, null)) {\n        this.actor[actorResourceSetter](actorVariable - resourceCost)\n        return true;\n      }\n\n      // else if the actor has a path to the appropriate variable, get that value and set it manually\n      if (actorVariable) {\n        this.actor[actorResourcePath] -= resourceCost;\n        return true;\n        // return _.set(this.actor, actorResourcePath, actorVariable - getResourceCost());\n      }\n      return false;\n    })\n  }\n  \n  perform() {\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n\n}","import { Base } from './Base';\nexport class DestroySelf extends Base {\n  constructor({ processDelay = 0, ...args }) {\n    super({ ...args });\n    this.processDelay = processDelay;\n  }\n  perform() {\n    // console.log(`${this.actor.name} is self-destructing`);\n    this.actor.energy -= this.energyCost;\n    this.actor.destroy();\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { DestroySelf } from './DestroySelf';\nimport * as Constant from '../constants';\n\nexport class EngineCrank extends Base {\n  constructor({ engine, ...args }) {\n    super({ ...args });\n    this.engine = engine;\n  }\n  async perform() {\n    let success = true;\n    let alternative = null;\n    console.log(`${this.actor.name} is cranking its engine.`);\n    try {\n      await this.engine.start();\n      this.actor.energy -= this.energyCost;\n    }\n    catch (error) {\n      console.log('EngineCrank');\n      console.log(error);\n      alternative = new DestroySelf({\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { CrankEngine } from '../Engine/engine';\nimport { EngineCrank } from '../Actions/EngineCrank';\n\nexport const Parent = superclass => class extends superclass {\n  constructor({ children = [], engine = new CrankEngine({}), ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('PARENT');\n    this.children = children;\n    this.engine = engine;\n    this.isInitialized = false;\n  }\n  destroyChild(child) {\n    child.energy = 0;\n    let tile = this.game.map[Helper.coordsToString(child.pos)];\n    this.game.map[Helper.coordsToString(child.pos)].entities = tile.entities.filter((e) => e.id !== child.id);\n    this.engine.actors = this.engine.actors.filter((e) => e.id !== child.id);\n    this.game.draw();\n  }\n  canAttack(entity) {\n    const childIds = this.children.map((child) => child.id);\n    return !childIds.includes(entity.id);\n  }\n  initialize() {\n    this.isInitialized = true;\n    this.engine.game = this.game;\n    this.engine.actors = this.children;\n    this.engine.actors.forEach((actor) => {\n      actor.game = this.game;\n      actor.destroy = () => { this.destroyChild(actor); };\n      actor.canAttack = this.canAttack.bind(this);\n      // actor.canAttack = (entity) => {this.canAttack(entity)};\n      this.game.placeActorOnMap(actor);\n      this.engine.addActor(actor);\n      this.game.draw();\n    });\n  }\n  getAction(game) {\n    // crank engine one turn\n    if (!this.isInitialized) {\n      this.initialize();\n    }\n    let result = new EngineCrank({\n      game,\n      actor: this,\n      engine: this.engine,\n      energyCost: Constant.ENERGY_THRESHOLD,\n      processDelay: 10\n    });\n    return result;\n  }\n};\n","import Konva from 'konva';\nimport uuid from 'uuid/v1';\nimport * as Helper from '../../helper';\n\nexport const ANIMATION_TYPES = {\n  DEFAULT: 0,\n  BLINK_TILE: 1,\n  SOLID_TILE: 2,\n}\n\nclass Animation {\n  constructor({display}) {\n    const id = uuid();\n    this.id = id;\n    this.lifeTime = 0;\n    this.active = true;\n    this.display = display;\n    this.node = null;\n  }\n\n  getActive () {\n    return false;\n  }\n\n  initialize () {\n    return;\n  }\n\n  update (frame) {\n    this.lifeTime += frame.timeDiff;\n    this.active = this.getActive();\n    if (!this.active) {\n      this.display.removeAnimation(this.id);\n    }\n  }\n}\n\nclass ExampleAnimation extends Animation {\n  constructor({...args}) {\n    super({...args})\n  }\n\n  getActive () {\n    if (this.lifeTime > 500) {\n      return false;\n    }\n    return true;\n  }\n}\n\nclass BlinkTile extends Animation {\n  constructor({\n    x,\n    y,\n    lerpDirection = -1,\n    color = '#fff',\n    ...args\n  }) {\n    super({ ...args });\n    this.x = x;\n    this.y = y;\n    this.lerpDirection = lerpDirection;\n    this.color = color;\n  }\n\n  getActive () {\n    return this.active;\n  }\n\n  initialize () {\n    this.active = true;\n    let rect = new Konva.Rect({\n      name: 'rect',\n      x: (this.display.tileWidth * this.x) + (this.display.tileOffset + this.display.tileGutter),\n      y: (this.display.tileHeight * this.y) + (this.display.tileOffset + this.display.tileGutter),\n      offsetX: this.display.tileWidth / -4,\n      offsetY: this.display.tileHeight / -4,\n      width: this.display.tileWidth / 2,\n      height: this.display.tileHeight / 2,\n      fill: this.color,\n      strokeEnabled: false,\n      // for optimization\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n    });\n    this.display.animationLayer.add(rect);\n    this.node = rect;\n    super.initialize();\n  }\n\n  update (frame) {\n    let opacity = this.node.opacity();\n    if (opacity >= 1) this.lerpDirection = -1;\n    if (opacity <= 0) this.lerpDirection = 1;\n    opacity += (0.05 * this.lerpDirection)\n    this.node.opacity(Helper.clamp(opacity, 0, 1))\n    super.update(frame);\n  }\n  \n}\n\nexport class Display {\n  constructor({\n    containerId = null,\n    width = 100,\n    height = 100,\n    tileWidth = 10,\n    tileHeight = 10,\n    tileGutter = 0,\n    tileOffset = 10,\n    game = null,\n  }) {\n    this.containerId = containerId;\n    this.width = width;\n    this.height = height;\n    this.tileWidth = tileWidth;\n    this.tileHeight = tileHeight;\n    this.tileGutter = tileGutter;\n    this.tileOffset = tileOffset;\n    this.stage = null;\n    this.layer = null;\n    this.animationLayer = null;\n    this.animations = [];\n    this.animationLoop = null;\n    this.game = game;\n  }\n\n  initialize (document) {\n    let d = document.getElementById(this.containerId)\n    let displayContainer = document.createElement('div');\n    d.appendChild(displayContainer);\n\n    this.adjustContentToScreen(d);\n    \n    this.stage = new Konva.Stage({\n      container: 'display',   // id of container <div>\n      width: this.width,\n      height: this.height\n    });\n\n    \n    // setting up main tile map layer\n    this.layer = new Konva.Layer({\n      hitGraphEnabled: false,\n    });\n    \n    this.stage.add(this.layer);\n    \n    // setting up animation layer\n    this.animationLayer = new Konva.Layer({});\n    this.stage.add(this.animationLayer);\n    let animationLoop = new Konva.Animation((frame) => {\n      this.animations.forEach((animation) => animation.update(frame))\n      // Stop animation updates if no animations to process\n      if (this.animations.length <= 0) {\n        if (this.animationLoop) {\n          if (this.animationLoop.isRunning()) {\n            this.animationLoop.stop();\n          }\n        }\n      }\n    }, this.animationLayer);\n    this.animationLoop = animationLoop;\n    animationLoop.start();\n  }\n\n  adjustContentToScreen (display_element) {\n    const DEVICE_WIDTH = display_element.offsetWidth;\n    const value = (DEVICE_WIDTH - this.tileOffset) / this.game.mapWidth;\n    this.tileWidth = Math.ceil(value);\n    this.tileHeight = this.tileWidth;\n    this.width = ((this.game.mapWidth - 1) * this.tileWidth) + this.tileOffset;\n    this.height = (this.game.mapHeight * this.tileHeight) + this.tileOffset;\n  }\n\n  addAnimation (type, args) {\n    let animation;\n    switch (type) {\n      case ANIMATION_TYPES.SOLID_TILE:\n        animation = new ExampleAnimation({display: this, ...args})\n        break;\n      case ANIMATION_TYPES.BLINK_TILE:\n        animation = new BlinkTile({display: this, ...args})\n        break;\n      case ANIMATION_TYPES.DEFAULT:\n      default:\n        animation = new Animation({ display: this, ...args})\n        break;\n    }\n    animation.initialize();\n    this.animations.push(animation)\n    if (!this.animationLoop.isRunning()) this.animationLoop.start();\n    return animation\n  }\n\n  removeAnimation (id) {\n    this.animations = this.animations.filter((anim) => {\n      if (anim.id !== id) return true;\n      // if anim is being removed, remove associated nodes and shapes too\n      anim.node.destroy();\n      return false;\n    });\n  }\n\n  updateAnimation (id) {\n    this.animations = this.animations.map((anim) => {\n      if (anim.id === id) {\n        console.log(anim);\n      }\n      return anim;\n    });\n  }\n\n  updateTile(tile, character, foreground, background) {\n    // child[0] is the rectangle\n    // child[1] is the text\n    if (tile) {\n      tile.children[0].fill(background);\n      tile.children[1].fill(foreground);\n      tile.children[1].text(character);\n    }\n  }\n\n  createTile(x, y, character, foreground, background, layer = 'layer') {\n    const actual_x = (this.tileWidth * x) + (this.tileOffset + this.tileGutter);\n    const actual_y = (this.tileHeight * y) + (this.tileOffset + this.tileGutter);\n    let node = new Konva.Group({\n      id: `${x},${y}`,\n      x: (this.tileWidth * x) + (this.tileOffset + this.tileGutter),\n      y: (this.tileHeight * y) + (this.tileOffset + this.tileGutter),\n      width: this.tileWidth,\n      height: this.tileHeight,\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n    });\n\n    let rect = new Konva.Rect({\n      name: 'rect',\n      width: this.tileWidth,\n      height: this.tileHeight,\n      fill: background,\n      strokeEnabled: false,\n      // for optimization\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n    });\n\n    let text = new Konva.Text({\n      name: 'text',\n      text: character,\n      width: this.tileWidth,\n      height: this.tileHeight,\n      fontSize: this.tileWidth - 4,\n      fontFamily: 'scroll-o-script',\n      fill: foreground,\n      align: 'center',\n      verticalAlign: 'middle',\n      // for optimization\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n    });\n\n    const dis_layer = this.layer;\n    if (x === 1 && y === 1) {\n      Konva.Image.fromURL('/tile241.png', function (darthNode) {\n        darthNode.setAttrs({\n          x: actual_x,\n          y: actual_y,\n          scaleX: 1,\n          scaleY: 1,\n          fill: 'pink',\n          opacity: 0.5\n        });\n        dis_layer.add(darthNode);\n      });\n      // var imageObj = new Image();\n      // imageObj.onload = function () {\n      //   var yoda = new Konva.Image({\n      //     x: 50,\n      //     y: 50,\n      //     image: imageObj,\n      //     width: 106,\n      //     height: 118,\n      //   });\n\n      //   // add the shape to the layer\n      //   this.layer.add(yoda);\n      //   // layer.batchDraw();\n      // };\n      // imageObj.src = '/tile241.png';\n    }\n\n    node.add(rect);\n    node.add(text);\n    this.layer.add(node);\n    return node;\n  }\n\n  getAbsoultueX(x) {\n    return (this.tileWidth * x) + (this.tileOffset + this.tileGutter)\n  }\n\n  getAbsoultueY(y) {\n    return (this.tileWidth * y) + (this.tileOffset + this.tileGutter)\n  }\n\n  getTilesWide (width, tileOffset, tileWidth) {\n    return Math.floor((width - tileOffset) / tileWidth)\n  }\n  \n  getTilesHigh(height, tileOffset, tileHeight) {\n    return Math.floor((height - tileOffset) / tileHeight)\n  }\n\n  getTilesAcrossOnScreen () { return Math.floor(this.width / this.tileWidth)}\n  getTilesDownOnScreen () { return Math.floor(this.height / this.tileHeight)}\n\n  draw () {\n    this.layer.batchDraw();\n  }\n}","import { COLORS, THEMES } from './constants';\nimport uuid from 'uuid/v1';\n\nexport const MESSAGE_TYPE = {\n  INFORMATION: {\n    color: COLORS.gray_4,\n    backgroundColor: COLORS.black_1,\n  },\n  ACTION: {\n    color: COLORS.gray_2,\n    backgroundColor: COLORS.gray_5,\n  },\n  DANGER: {\n    color: COLORS.red_5,\n    backgroundColor: COLORS.black_1,\n  },\n  STATUS_EFFECT: {\n    color: THEMES.SOLARIZED.base3,\n    backgroundColor: THEMES.SOLARIZED.violet,\n  },\n  ERROR: {\n    color: THEMES.SOLARIZED.base3,\n    backgroundColor: THEMES.SOLARIZED.yellow,\n  },\n}\n\nexport class Message {\n  constructor({ text = '', type = MESSAGE_TYPE.INFORMATION }) {\n    let id = uuid();\n    this.id = id;\n    this.text = text;\n    this.type = type;\n  }\n}","import { MESSAGE_TYPE } from '../message';\nimport * as Helper from '../../helper';\n\nexport const Attacking = superclass => class extends superclass {\n  constructor({ attackDamage = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('ATTACKING');\n    this.attackDamage = attackDamage;\n  }\n  getAttackDamage(additional = 0) {\n\n    return this.attackDamage + additional;\n  }\n  canAttack(entity) {\n    return true;\n  }\n  attack(targetPos, additional = 0) {\n    let success = false;\n    let tile = this.game.map[Helper.coordsToString(targetPos)];\n    if (!tile) {\n      return success;\n    }\n    let targets = Helper.getDestructableEntities(tile.entities);\n    if (targets.length > 0) {\n      let target = targets[0];\n      if (this.canAttack(target)) {\n        let damage = this.getAttackDamage(additional);\n        if (this.entityTypes.includes('EQUIPING')) {\n          this.equipment.forEach((slot) => {\n            if (slot.item) {\n              if (slot.item.entityTypes.includes('ATTACKING')) {\n                damage += slot.item.getAttackDamage();\n              }\n            }\n          });\n        }\n        this.game.addMessage(`${this.name} does ${damage} to ${target.name}`, MESSAGE_TYPE.DANGER);\n        target.decreaseDurability(damage);\n        success = true;\n      }\n    }\n    return success;\n  }\n};\n","import { MESSAGE_TYPE } from '../message';\nimport * as Helper from '../../helper';\n\nexport const RangedAttacking = superclass => class extends superclass {\n  constructor({ attackRange = 0, baseRangedAccuracy = 0, baseRangedDamage = 0, magazineSize = 0, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('RANGED_ATTACKING');\n    this.attackRange = attackRange;\n    this.baseRangedAccuracy = baseRangedAccuracy;\n    this.baseRangedDamage = baseRangedDamage;\n    this.magazineSize = magazineSize;\n    this.magazine = 0;\n  }\n\n  getRangedAttackChance(targetPos = null) {\n    const weaponAccuracy = this.getRangedWeaponAccuracy();\n    const coverDebuff = targetPos ? this.getRangedAttackCoverDebuff(targetPos) : 0;\n    const distanceDebuff = targetPos ? this.getRangedAttackDistanceDebuff(targetPos) : 0;\n    const result = this.baseRangedAccuracy + weaponAccuracy + coverDebuff + distanceDebuff;\n    return result;\n  }\n\n  getRangedAttackCoverDebuff(targetPos) {\n    const path = Helper.calculateStraightPath(this.getPosition(), targetPos);\n    const coverAccuracyModifer = path.reduce((acc, curr) => {\n      let tile = this.game.map[Helper.coordsToString(curr)];\n      let entitiesProvidingCover = Helper.filterEntitiesByType(tile.entities, 'COVERING');\n      let coverModifer = 0;\n      if (entitiesProvidingCover.length > 0) coverModifer = entitiesProvidingCover[0].accuracyModifer;\n      return acc + coverModifer;\n    }, 0);\n    return coverAccuracyModifer;\n  }\n\n  getRangedAttackDistanceDebuff(targetPos) {\n    const distanceToTarget = Helper.calculatePath(this.game, targetPos, this.getPosition(), 8).length;\n    return -1 * (distanceToTarget / (this.getAttackRange() * 3))\n  }\n\n  getAttackRange() {\n    let range = this.attackRange;\n    if (this.entityTypes.includes('EQUIPING')) {\n      this.equipment.forEach((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('RANGED_ATTACKING')) {\n            range += slot.item.attackRange;\n          }\n        }\n      });\n    }\n    return range;\n  }\n\n  getRangedWeaponAccuracy() {\n    let accuracy = 0;\n    if (this.entityTypes.includes('EQUIPING')) {\n      this.equipment.forEach((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('RANGED_ATTACKING')) {\n            accuracy += slot.item.getRangedAttackChance();\n          }\n        }\n      });\n    }\n    return accuracy;\n  }\n\n  getRangedAttackDamage(additional = 0) {\n\n    return this.baseRangedDamage + this.getRangedWeaponDamage() + additional;\n  }\n\n  getRangedWeaponDamage() {\n    let damage = 0;\n    if (this.entityTypes.includes('EQUIPING')) {\n      this.equipment.forEach((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('RANGED_ATTACKING')) {\n            damage += slot.item.getRangedAttackDamage();\n          }\n        }\n      });\n    }\n    return damage;\n  }\n\n  canRangedAttack(entity) {\n    return true;\n  }\n\n  getEquipedWeapons() {\n    if (this.entityTypes.includes('EQUIPING')) {\n      return this.equipment.map((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('RANGED_ATTACKING')) {\n            return slot.item;\n          }\n        }\n      });\n    }\n    return [];\n  }\n\n  useAmmo() {\n    this.getEquipedWeapons().forEach((weapon) => weapon.magazine = Math.max(0, weapon.magazine - 1));\n  }\n\n  reload () {\n    let reloaded = false;\n    if (this.entityTypes.includes('CONTAINING')) {\n      this.getEquipedWeapons().forEach((weapon) => {\n        const amount = weapon.magazineSize - weapon.magazine;\n        for (let i = 0; i <= amount; i++) {\n          let ammo = this.contains('Ammo');\n          if (ammo) {\n            this.removeFromContainer(ammo);\n            weapon.magazine += 1;\n            reloaded = true;\n          }\n        }\n      });\n    }\n    return reloaded;\n  }\n\n  rangedAttack(targetPos, additionalDamage = 0, additionalAccuracy = 0) {\n    let success = false;\n    let hit = false;\n    let tile = this.game.map[Helper.coordsToString(targetPos)];\n    if (!tile) {\n      return [success, hit];\n    }\n    let targets = Helper.getDestructableEntities(tile.entities);\n    if (targets.length > 0) {\n      const attackChance = this.getRangedAttackChance(targetPos);\n      const hitChance = attackChance + additionalAccuracy;\n      hit = Math.random() < hitChance;\n      // TODO: trigger hit and miss animations\n      if (!hit) {\n        success = true;\n        return [success, hit];\n      }\n      this.useAmmo();\n      let target = targets[0];\n      if (this.canRangedAttack(target)) {\n        let damage = this.getRangedAttackDamage(additionalDamage);\n        this.game.addMessage(`${this.name} does ${damage} to ${target.name}`, MESSAGE_TYPE.DANGER);\n        target.decreaseDurability(damage);\n        success = true;\n      }\n    }\n    return [success, hit];\n  }\n};\n","import * as Constant from '../constants';\n\nexport const Equipable = superclass => class extends superclass {\n  constructor({ name = 'nameless', equipmentType = Constant.EQUIPMENT_TYPES.HAND, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('EQUIPABLE');\n    this.name = name;\n    this.equipmentType = equipmentType;\n  }\n};\n","import * as Helper from '../../helper';\n\nexport const Acting = superclass => class extends superclass {\n  constructor({ actions = [], speed = 100, energy = 0, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('ACTING');\n    this.actions = actions;\n    this.speed = speed;\n    this.energy = speed;\n  }\n  getAction() {\n    let action = Helper.getRandomInArray(this.actions);\n    if (action) {\n      return action;\n    }\n  }\n  gainEnergy(value = this.speed) {\n    this.energy += value;\n  }\n  hasEnoughEnergy() {\n    return this.energy > 0;\n  }\n};\n","import * as Helper from '../../helper';\n\nexport const Rendering = superclass => class extends superclass {\n  constructor({ pos = { x: 0, y: 0 }, renderer, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('RENDERING');\n    this.pos = pos;\n    this.renderer = { ...renderer };\n    this.currentFrame = 0;\n  }\n\n  getRenderer() {\n    return this.renderer\n  }\n\n  getPosition() {\n    return this.pos;\n  }\n  move(targetPos) {\n    let success = false;\n    if (this.game.canOccupyPosition(targetPos, this)) {\n      let tile = this.game.map[Helper.coordsToString(this.pos)];\n      this.game.map[Helper.coordsToString(this.pos)] = { ...tile, entities: tile.entities.filter((e) => e.id !== this.id) };\n      this.pos = targetPos;\n      this.game.map[Helper.coordsToString(targetPos)].entities.push(this);\n      success = true;\n    }\n    return success;\n  }\n  shove(targetPos, direction) {\n    let success = false;\n    let targetTile = this.game.map[Helper.coordsToString(targetPos)];\n    if (targetTile) {\n      targetTile.entities.map((entity) => {\n        if (entity.entityTypes.includes('PUSHABLE')) {\n          if (!entity.passable && entity.pushable) {\n            let newX = entity.pos.x + direction[0];\n            let newY = entity.pos.y + direction[1];\n            let newPos = { x: newX, y: newY };\n            entity.move(newPos);\n          }\n        }\n      });\n    }\n    success = this.move(targetPos);\n    return success;\n  }\n};\n","export class ContainerSlot {\n  constructor({ itemType, items }) {\n    this.itemType = itemType;\n    this.items = items;\n  }\n}\n\nexport const Containing = superclass => class extends superclass {\n  constructor({ container = [], ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CONTAINING');\n    this.container = container;\n  }\n  createSlot(item) {\n    let slot = new ContainerSlot({\n      itemType: item.name,\n      items: [item],\n    });\n    this.container.push(slot);\n  }\n  contains(itemType) {\n    let container = this.container;\n    let slots = container.filter((slot) => slot.itemType === itemType);\n    return slots.length > 0 ? slots[0].items[0] : false;\n  }\n  addToContainer(item) {\n    const index = this.container.findIndex((slot) => slot.itemType === item.name);\n    if (index >= 0) {\n      this.container[index].items.push(item);\n    }\n    else {\n      this.createSlot(item);\n    }\n  }\n  removeFromContainer(item) {\n    this.container.forEach((slot, index) => {\n      slot.items = slot.items.filter((it) => it.id !== item.id);\n      if (!slot.items.length)\n        this.container.splice(index, 1);\n    });\n  }\n};\n","import { Howl, Howler } from 'howler';\n\nconsole.log(window.PUBLIC_URL);\n\n\nexport default {\n  fire_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/fire-00.mp3'],\n    volume: 0.5,\n    loop: true,\n  }),\n  fire_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/fire-01.mp3'],\n    volume: 0.05,\n    loop: true,\n  }),\n  scream_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/scream-00.wav']\n  }),\n  scream_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/scream-01.wav']\n  }),\n  scream_2: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/scream-02.wav']\n  }),\n  water_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/water-04.wav']\n  }),\n  water_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/water-05.wav']\n  }),\n  chop_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/chop-00.wav']\n  }),\n  chop_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/chop-01.wav']\n  }),\n  equip_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/equip-00.wav']\n  }),\n  equip_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/equip-01.wav']\n  }),\n  explosion_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/explosion-00.wav'],\n    volume: 0.2,\n  }),\n  save: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/save.wav'],\n  }),\n  lose: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/lose-00.wav'],\n  }),\n  grab_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/grab-00.wav'],\n  }),\n  release_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/grab-01.wav'],\n  }),\n}","export const Playing = superclass => class extends superclass {\n  constructor({ keymap = {}, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('PLAYING');\n    this.nextAction = null;\n    this.keymap = keymap;\n  }\n  setNextAction(action) {\n    this.nextAction = action;\n  }\n  getAction() {\n    let action = this.nextAction;\n    this.nextAction = null;\n    return action;\n  }\n};\n","import * as Helper from '../../helper';\n\nexport const destroyEntity = (entity) => {\n  entity.energy = 0;\n  if (entity.pos) {\n    let tile = entity.game.map[Helper.coordsToString(entity.pos)];\n    entity.game.map[Helper.coordsToString(entity.pos)].entities = tile.entities.filter((e) => e.id !== entity.id);\n  }\n  // entity.game.engine.actors = entity.game.engine.actors.filter((e) => e.id !== entity.id);\n  entity.game.engine.removeStatusEffectByActorId(entity.id);\n  entity.game.draw()\n  entity.active = false;\n}","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nexport class Say extends Base {\n  constructor({ message, messageType = MESSAGE_TYPE.INFORMATION, processDelay = 50, ...args }) {\n    super({ ...args });\n    this.message = message;\n    this.messageType = messageType;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    this.game.addMessage(`${this.actor.name} says \"${this.message}\"`, this.messageType);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import SOUNDS from '../sounds';\nimport { Base } from './Base';\nimport { Say } from './Say';\nimport * as Helper from '../../helper';\nimport * as Constant from '../constants';\n\nexport class Attack extends Base {\n  constructor({ targetPos, additionalDamage = 0, processDelay = 100, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.additionalDamage = additionalDamage;\n    this.processDelay = processDelay;\n    this.particleTemplate = Constant.PARTICLE_TEMPLATES.damage;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (!this.actor.entityTypes.includes('ATTACKING')) {\n      return {\n        success: true,\n        alternative: new Say({\n          message: `Ooh I don\\'t know how to attack`,\n          game: this.game,\n          actor: this.actor,\n          energyCost: 0,\n        }),\n      };\n    }\n    success = this.actor.attack(this.targetPos, this.additionalDamage);\n    if (success) {\n      const sound = Helper.getRandomInArray([SOUNDS.chop_0, SOUNDS.chop_1]);\n      sound.play();\n      this.addParticle(1, { ...this.targetPos }, { x: 0, y: 0 });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { Attack } from \"./Attack\";\n\nexport class Move extends Base {\n  constructor({ targetPos, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let moveSuccess = this.actor.move(this.targetPos);\n    if (moveSuccess) {\n      success = true;\n    } else {\n      success = true;\n      alternative = new Attack({\n        targetPos: this.targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: 0\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Move } from './Move';\nimport { DestroySelf } from './DestroySelf';\nimport * as Constant from '../constants';\n\nexport class ThrowProjectile extends Move {\n  constructor({ ...args }) {\n    super({ ...args });\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    this.actor.passable = false;\n    let move_result = super.perform();\n    if (move_result.success) {\n      this.actor.path.shift();\n      success = true;\n    }\n    if (this.actor.path.length === 0) {\n      success = true;\n      alternative = new DestroySelf({\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n      });\n    }\n    if (move_result.alternative) {\n      let attackSuccess = this.actor.attack(this.targetPos);\n      if (attackSuccess) {\n        alternative = new DestroySelf({\n          game: this.game,\n          actor: this.actor,\n          energyCost: Constant.ENERGY_THRESHOLD,\n          processDelay: 0,\n        });\n      }\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n","import { Attack } from './Attack';\nexport class SelfDestructiveAttack extends Attack {\n  constructor({ damageToSelf, ...args }) {\n    super({ ...args });\n    this.damageToSelf = damageToSelf;\n    this.onSuccess = () => {\n      console.log('Self destruct success');\n      this.actor.decreaseDurabilityWithoutDefense(damageToSelf);\n    };\n    this.onFailure = () => {\n      console.log('Self destruct fails');\n      this.actor.destroy();\n    };\n  }\n}\n","import { Base } from './Base';\nimport { SelfDestructiveAttack } from \"./SelfDestructiveAttack\";\nimport * as Constant from '../constants';\n\nexport class ProjectileMove extends Base {\n  constructor({ targetPos, damageToSelf = 1, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.processDelay = processDelay;\n    this.damageToSelf = damageToSelf;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let moveSuccess = this.actor.move(this.targetPos);\n    if (moveSuccess) {\n      this.actor.energy -= this.energyCost;\n      success = true;\n    }\n    else {\n      success = true;\n      alternative = new SelfDestructiveAttack({\n        targetPos: this.targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        damageToSelf: this.damageToSelf,\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { Attack } from \"./Attack\";\nimport * as Constant from '../constants';\n\nexport class Shove extends Base {\n  constructor({ targetPos, direction, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.direction = direction;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let moveSuccess = this.actor.shove(this.targetPos, this.direction);\n    if (moveSuccess) {\n      this.actor.energy -= this.energyCost;\n      success = true;\n    }\n    else {\n      success = true;\n      alternative = new Attack({\n        targetPos: this.targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Move } from './Move';\nimport { DestroySelf } from './DestroySelf';\nimport * as Constant from '../constants';\n\nexport class ThrowProjectileGas extends Move {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.processDelay = 0;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    this.actor.passable = false;\n    let move_result = super.perform();\n    if (move_result.success) {\n      this.actor.path.shift();\n      success = true;\n    }\n    if (this.actor.path.length === 0) {\n      success = true;\n      alternative = new DestroySelf({\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n      });\n    }\n    if (move_result.alternative) {\n      this.actor.attack(this.targetPos);\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { Move } from '../Actions/Move';\nimport { Say } from '../Actions/Say';\n\nexport const Chasing = superclass => class extends superclass {\n  constructor({ targetEntity = null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CHASING');\n    this.targetEntity = targetEntity;\n  }\n  getAction(game) {\n    if (this.targetEntity) {\n      let path = Helper.calculatePath(game, this.targetEntity.pos, this.pos);\n      let targetPos = path.length > 0 ? path[0] : this.pos;\n      return new Move({\n        targetPos,\n        game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    } else {\n      return new Say({\n        message: 'Where are they?',\n        game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n  }\n};\n","import { Base } from './Base';\nimport * as Helper from '../../helper';\n\nexport class PlaceActor extends Base {\n  constructor({ targetPos, entity, interrupt = true, forcePlacement = false, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.entity = entity;\n    this.interrupt = interrupt;\n    this.forcePlacement = forcePlacement;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    // let canPlace = true;\n    // if (!this.game.canOccupyPosition(this.targetPos, this.entity)) canPlace = false;\n    // if (this.entity.entityTypes.includes('PARENT')) {\n    //   this.entity.children.forEach((child) => {\n    //     console.log(child.pos);\n    //     if (!this.game.canOccupyPosition(child.pos, child)) canPlace = false;\n    //   })\n    // }\n    // if (canPlace) {\n    //   this.entity.pos = this.targetPos;\n    //   this.game.engine.addActorAsPrevious(this.entity);\n    //   this.game.engine.start(); // should this be used outside of engine?\n    //   success = true;      \n    // }\n    let canOccupyPosition = this.forcePlacement ? true : this.game.canOccupyPosition(this.targetPos, this.entity);\n    const tile = this.game.map[Helper.coordsToString(this.targetPos)];\n    if (canOccupyPosition && tile) {\n      this.entity.pos = this.targetPos;\n      tile.entities.push(this.entity);\n      // this.game.engine.addActorAsPrevious(this.entity);\n      // this.game.engine.addActor(this.entity);\n      this.game.engine.addActorAsNext(this.entity);\n      // this.interrupt = true;\n      // this.game.engine.start(); // BUGGED - should this be used outside of engine?\n      success = true;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","export const Draggable = superclass => class extends superclass {\n  constructor({ draggable = true, ...args }) {\n    super({ ...args });\n    this.draggable = draggable;\n    this.entityTypes = this.entityTypes.concat('DRAGGABLE');\n  }\n};\n","export const Pushable = superclass => class extends superclass {\n  constructor({ pushable = true, ...args }) {\n    super({ ...args });\n    this.pushable = pushable;\n    this.entityTypes = this.entityTypes.concat('PUSHABLE');\n  }\n};\n","import * as Constant from './constants';\nimport {\n  DestructiveCloudProjectileV2,\n  DestructiveProjectile,\n  DirectionalProjectile,\n  MovingWall,\n  DestructiveCloudProjectile,\n  Weapon,\n  Armor,\n} from './Entities/index';\n\nexport const TYPE = {\n  KUNAI: 'Kunai',\n  DIRECTIONAL_KUNAI: 'Directional Kunai',\n  SWORD: 'Sword',\n  AXE: 'Axe',\n  ARMOR: 'Armor',\n  WATER_GUN: 'Water Gun',\n  BARRIER: 'Barrier',\n}\n\nconst createProjectileCloud = ({ \n  engine, \n  actor, \n  targetPos, \n  throwDirection,\n  speed,\n  structureType,\n  createProjectile,\n}) => {\n  let structure = Constant.CLONE_PATTERNS[structureType];\n\n  let children = structure.positions.map((slot) => {\n    let position = {\n      x: actor.pos.x + slot.x + (throwDirection.x * structure.x_offset),\n      y: actor.pos.y + slot.y + (throwDirection.y * structure.y_offset)\n    }\n    \n    let targetPosition = {\n      x: targetPos.x + slot.x,\n      y: targetPos.y + slot.y,\n    }\n\n    return createProjectile(engine, position, targetPosition);\n  })\n\n  return new DestructiveCloudProjectileV2({\n    game: engine.game,\n    passable: true,\n    speed,\n    children,\n  })\n}\n\nconst createProjectileSingularity = ({ \n  engine, \n  actor, \n  targetPos, \n  speed,\n  structureType,\n  createProjectile,\n}) => {\n  let structure = Constant.CLONE_PATTERNS[structureType];\n\n  let children = structure.positions.map((slot) => {\n    let position = {\n      x: targetPos.x + slot.x + structure.x_offset,\n      y: targetPos.y + slot.y + structure.y_offset\n    }\n\n    let targetPosition = {\n      x: targetPos.x,\n      y: targetPos.y,\n    }\n\n    return createProjectile(engine, position, targetPosition);\n\n  })\n\n  return new DestructiveCloudProjectileV2({\n    game: engine.game,\n    passable: true,\n    speed,\n    children,\n  })\n}\n\nconst createProjectileBurst = ({ \n  engine, \n  actor, \n  targetPos, \n  speed,\n  structureType,\n  createProjectile,\n}) => {\n  let structure = Constant.CLONE_PATTERNS[structureType];\n\n  let children = structure.positions.map((slot) => {\n    let position = {\n      x: targetPos.x + structure.x_offset,\n      y: targetPos.y + structure.y_offset\n    }\n\n    let targetPosition = {\n      x: targetPos.x + slot.x,\n      y: targetPos.y + slot.y,\n    }\n\n    return createProjectile(engine, position, targetPosition);\n\n  })\n\n  return new DestructiveCloudProjectileV2({\n    game: engine.game,\n    passable: true,\n    speed,\n    children,\n  })\n}\n\nexport const sandTomb = ({\n  engine,\n  actor,\n  targetPos,\n}) => createProjectileSingularity({\n  engine,\n  actor,\n  targetPos,\n  speed: 100,\n  structureType: 'circle',\n  createProjectile: sandTombPart,\n})\n\nexport const sandBurst = ({\n  engine,\n  actor,\n  targetPos,\n}) => createProjectileBurst({\n  engine,\n  actor,\n  targetPos,\n  speed: 500,\n  structureType: 'circle',\n  createProjectile: sandTombPart,\n})\n\nexport const sandWallPulse = ({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n}) => createProjectileCloud({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n  speed: 500,\n  structureType: 'smallSquare',\n  createProjectile: movingSandWall,\n})\n\nexport const kunaiCloud = ({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n}) => createProjectileCloud({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n  speed: 500,\n  structureType: 'square',\n  createProjectile: kunai,\n})\n\nexport const fireballCloud = ({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n}) => createProjectileCloud({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n  speed: 500,\n  structureType: 'square',\n  createProjectile: fireball,\n})\n\nexport const kunai = (engine, pos, targetPos) => new DestructiveProjectile({\n  game: engine.game,\n  targetPos,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    character: '>',\n    color: 'white',\n    background: '',\n    animation: [\n      { background: '', color: 'white', character: '>', },\n      { background: '', color: 'white', character: 'v', },\n      { background: '', color: 'white', character: '<', },\n      { background: '', color: 'white', character: '^', },\n      { background: '', color: 'white', character: '>', },\n    ],\n  },\n  name: TYPE.KUNAI,\n  speed: 600,\n  energy: 0,\n  range: 30,\n})\n\nexport const directionalKunai = (engine, pos, direction, range) => new DirectionalProjectile({\n  game: engine.game,\n  direction,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    character: '>',\n    color: 'white',\n    background: '',\n    animation: [\n      { background: 'lightgrey', color: 'grey', character: '>', },\n      { background: 'lightgrey', color: 'grey', character: 'v', },\n      { background: 'lightgrey', color: 'grey', character: '<', },\n      { background: 'lightgrey', color: 'grey', character: '^', },\n      { background: 'lightgrey', color: 'grey', character: '>', },\n    ],\n  },\n  name: TYPE.DIRECTIONAL_KUNAI,\n  speed: 600,\n  energy: 0,\n  range,\n})\n\nexport const movingSandWall = (engine, pos, targetPos, range) => new MovingWall({\n  game: engine.game,\n  passable: false,\n  pos: { x: pos.x, y: pos.y },\n  targetPos,\n  renderer: {\n    // character: '>',\n    character: ']',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.KUNAI,\n  // name: TYPE.BARRIER,\n  durability: 3,\n  range,\n  speed: 300,\n})\n\nexport const sandShuriken = (engine, pos, direction, range) => new DirectionalProjectile({\n  game: engine.game,\n  direction,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '✦️',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.DIRECTIONAL_KUNAI,\n  speed: 600,\n  energy: 0,\n  range,\n})\n\nexport const sandTombPart = (engine, pos, targetPos) => new DestructiveProjectile({\n  game: engine.game,\n  targetPos,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '✦️',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.KUNAI,\n  speed: 600,\n  energy: 0,\n  range: 30,\n})\n\nexport const fireball = (engine, pos, targetPos) => new DestructiveProjectile({\n  game: engine.game,\n  targetPos,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '🔥',\n    color: 'wheat',\n    background: 'tomato',\n  },\n  name: TYPE.KUNAI,\n  speed: 100,\n  energy: 0,\n  range: 30,\n})\n\nexport const fireballGas = (engine, actor, targetPos) => {\n  return new DestructiveCloudProjectile({\n    game: engine.game,\n    owner_id: actor ? actor.id : null,\n    targetPos,\n    passable: true,\n    pos: actor ? { x: actor.pos.x, y: actor.pos.y } : null,\n    renderer: {\n      // character: '@',\n      character: '🔥',\n      color: 'wheat',\n      background: 'tomato',\n    },\n    name: TYPE.KUNAI,\n    speed: 100,\n    range: 10,\n    clonePattern: Constant.CLONE_PATTERNS.bigSquare,\n    // clonePattern: Constant.CLONE_PATTERNS.square,\n  })\n}\n\nexport const waterball = (engine, actor, targetPos) => new DestructiveCloudProjectile({\n  game: engine.game,\n  owner_id: actor ? actor.id : null,\n  targetPos,\n  passable: true,\n  pos: actor ? { x: actor.pos.x, y: actor.pos.y } : null,\n  renderer: {\n    // character: '~',\n    character: '🌊',\n    color: 'silver',\n    background: 'lightslategrey',\n  },\n  name: TYPE.KUNAI,\n  speed: 800,\n  range: 10,\n  clonePattern: Constant.CLONE_PATTERNS.bigSquare,\n  // clonePattern: Constant.CLONE_PATTERNS.square,\n})\n\nexport const sword = (engine) => new Weapon({\n  game: engine.game,\n  name: TYPE.SWORD,\n  passable: true,\n  attackDamage: 1,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    // character: '|',\n    character: '🗡️',\n    color: 'white',\n    background: '',\n  },\n})\n\nexport const axe = (engine) => new Weapon({\n  game: engine.game,\n  name: TYPE.AXE,\n  passable: true,\n  attackDamage: 5,\n  equipmentType: Constant.EQUIPMENT_TYPES.GENERIC,\n  renderer: {\n    character: 'a',\n    sprite: '',\n    color: 'white',\n    background: '',\n  },\n})\n\nexport const waterGun = (engine) => new Weapon({\n  game: engine.game,\n  name: TYPE.WATER_GUN,\n  passable: true,\n  attackDamage: 0,\n  equipmentType: Constant.EQUIPMENT_TYPES.GENERIC,\n  renderer: {\n    character: 'w',\n    sprite: '',\n    color: Constant.THEMES.SOLARIZED.blue,\n    background: '',\n  },\n})\n\nexport const fireJacket = (engine) => new Armor({\n  game: engine.game,\n  name: 'Fire Jacket',\n  passable: true,\n  defense: 1,\n  equipmentType: Constant.EQUIPMENT_TYPES.GENERIC,\n  renderer: {\n    character: 'J',\n    sprite: '',\n    color: Constant.THEMES.SOLARIZED.magenta,\n    background: '',\n  },\n})\n\nexport const test = (engine, pos) => new Weapon({\n  game: engine.game,\n  name: TYPE.SWORD,\n  passable: true,\n  attackDamage: 1,\n  pos,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    // character: '|',\n    character: '🗡️',\n    color: 'white',\n    background: 'lightsteelblue',\n  },\n})\n","import { destroyEntity } from './helper';\nexport const Destructable = superclass => class extends superclass {\n  constructor({ durability = 1, defense = 0, onDestroy = () => null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DESTRUCTABLE');\n    this.durability = durability;\n    this.defense = defense;\n    this.onDestroy = onDestroy;\n  }\n  getDefense() {\n    let defense = this.defense;\n    // add in reducer to get defense stats of all equpiment\n    if (this.entityTypes.includes('EQUIPING')) {\n      this.equipment.forEach((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('DESTRUCTABLE')) {\n            defense += slot.item.getDefense();\n          }\n        }\n      });\n    }\n    return defense;\n  }\n  decreaseDurabilityWithoutDefense(value) {\n    this.durability -= value;\n    if (this.durability <= 0) {\n      this.destroy();\n    }\n  }\n  decreaseDurability(value) {\n    const current = this.durability;\n    const newDurability = current - (value - this.getDefense());\n    this.durability = Math.min(current, newDurability);\n    this.renderer.sprite = this.durability;\n    this.renderer.character = this.durability;\n    this.game.draw();\n    if (this.durability <= 0) {\n      this.destroy();\n    }\n  }\n  increaseDurability(value) {\n    this.durability += value;\n  }\n  destroy() {\n    this.onDestroy();\n    destroyEntity(this);\n  }\n};\n","export const Burnable = superclass => class extends superclass {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('BURNABLE');\n    this.canBurn = true;\n    this.willResetCanBurn = false;\n  }\n  resetCanBurn() {\n    this.willResetCanBurn = false;\n    this.canBurn = true;\n  }\n  burn() {\n    if (this.canBurn) {\n      this.decreaseDurability(2);\n      return true;\n    }\n    return false;\n  }\n};\n","import * as _ from 'lodash';\n\nexport const HasKeymap = superclass => class extends superclass {\n  constructor({ initializeKeymap, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HAS_KEYMAP');\n    this.keymapStack = [];\n    this.initializeKeymap = initializeKeymap;\n    const keymap = initializeKeymap(this.game.engine, this);\n    this.addKeymap(keymap);\n  }\n\n  getKeymap () {\n    return _.get(this.keymapStack, '0', null);\n  }\n\n  addKeymap (newKeymap) {\n    this.keymapStack.unshift(newKeymap);\n  }\n\n  removeKeymap () {\n    this.keymapStack.shift();\n  }\n\n  reinitializeKeymap (ignoredKeys = []) {\n    this.keymapStack = [];\n    const keymap = this.initializeKeymap(this.game.engine, this);\n    ignoredKeys.forEach((key) => delete keymap[key])\n    this.addKeymap(keymap);\n  }\n\n  setKeymap (newKeymap) {\n    this.addKeymap(newKeymap);\n    return this.getKeymap;\n  }\n\n  goToPreviousKeymap () {\n    this.removeKeymap();\n    return this.getKeymap();\n  }\n};\n","export const Upgrade = ({\n  activate = (actor) => null,\n  canUpgrade = (actor) => true,\n  cost = 1,\n  name = 'upgrade',\n  removeOnActivate = false,\n}) => {\n  return {\n    activate,\n    canUpgrade,\n    cost,\n    name,\n    removeOnActivate,\n  }\n}\n\nexport const Upgradable = superclass => class extends superclass {\n  constructor({ upgrade_points = 0, upgrade_tree = [], ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('UPGRADABLE');\n    this.upgrade_points = upgrade_points;\n    this.upgrade_tree = upgrade_tree;\n  }\n\n  upgrade (upgrade) {\n    if (upgrade.canUpgrade(this)) {\n      upgrade.activate(this);\n      if (upgrade.removeOnActivate) {\n        const newTree = this.upgrade_tree.filter((currUpgrade) => currUpgrade.name !== upgrade.name);\n        this.upgrade_tree = newTree;\n      }\n      return true;\n    }\n    return false;\n  }\n};\n","import pipe from 'lodash/fp/pipe';\nimport { Entity } from './Entity';\nimport { Parent } from './Parent';\nimport { PresentingUI } from './PresentingUI';\nimport { HasInnerGates } from './HasInnerGates';\nimport { UI } from './UI';\nimport {HasTargetingCursor} from './HasTargetingCursor';\nimport {HasShapePattern} from './HasShapePattern';\nimport { Attacking } from './Attacking';\nimport { RangedAttacking } from './RangedAttacking';\nimport { Equipable } from './Equipable';\nimport { Acting } from './Acting';\nimport { Rendering } from './Rendering';\nimport { Containing } from './Containing';\nimport { Equiping } from './Equiping';\nimport { Charging } from './Charging';\nimport { Signing } from './Signing';\nimport { Playing } from './Playing';\nimport { Cloning } from './Cloning';\nimport { Covering } from './Covering';\nimport { DestructiveProjecting } from './DestructiveProjecting';\nimport { DirectionalProjecting } from './DirectionalProjecting';\nimport { DirectionalPushing } from './DirectionalPushing';\nimport { GaseousDestructiveProjecting } from './GaseousDestructiveProjecting';\nimport { Gaseous } from './Gaseous';\nimport { Chasing } from './Chasing';\nimport { RangedChasing } from './RangedChasing';\nimport { Dragging } from './Dragging';\nimport { Draggable } from './Draggable';\nimport { Pushable } from './Pushable';\nimport { Spreading } from './Spreading';\nimport { Spawning } from './Spawning';\nimport { Destructable } from './Destructable';\nimport { IsParticle } from './IsParticle';\nimport { Speaking } from './Speaking';\nimport { Burnable } from './Burnable';\nimport { Exploding } from './Exploding';\nimport { Helpless } from './Helpless';\nimport { HasKeymap } from './HasKeymap';\nimport { Upgradable } from './Upgradable';\n\nexport const UI_Actor = pipe(\n  Acting,\n  Rendering,\n  Playing,\n  HasKeymap,\n  UI\n)(Entity);\n\nexport const Actor = pipe(\n  Acting,\n  Rendering\n)(Entity);\n\nexport const Speaker = pipe(\n  Acting,\n  Rendering,\n  Destructable,\n  Speaking,\n  Draggable,\n  Pushable,\n  Burnable,\n  Helpless,\n)(Entity);\n\nexport const Wall = pipe(\n  Rendering,\n  Destructable,\n)(Entity);\n\nexport const CoverWall = pipe(\n  Rendering,\n  Covering,\n  Destructable,\n)(Entity);\n\nexport const Debris = pipe(\n  Rendering,\n  Containing,\n  Draggable,\n  Burnable,\n  Destructable,\n  Exploding,\n  Pushable,\n)(Entity);\n\nexport const MovingWall = pipe(\n  Acting,\n  Rendering,\n  // Pushing,\n  DirectionalPushing,\n  Destructable,\n)(Entity);\n\nexport const Chaser = pipe(\n  Acting,\n  Rendering,\n  Chasing,\n  Destructable\n)(Entity);\n\nexport const Bandit = pipe(\n  Acting,\n  Rendering,\n  Chasing,\n  Destructable,\n  Attacking,\n  Pushable,\n)(Entity);\n\nexport const RangedBandit = pipe(\n  Acting,\n  Rendering,\n  RangedChasing,\n  Destructable,\n  Attacking,\n  Pushable,\n)(Entity);\n\nexport const Player = pipe(\n  Acting,\n  Rendering,\n  PresentingUI,\n  HasTargetingCursor,\n  HasKeymap,\n  Dragging,\n  Charging,\n  Signing,\n  Containing,\n  Equiping,\n  Attacking,\n  RangedAttacking,\n  Destructable,\n  Cloning,\n  Playing,\n  Burnable,\n  Upgradable,\n)(Entity);\n\nexport const Weapon = pipe(\n  Rendering,\n  Equipable,\n  Attacking\n)(Entity);\n\nexport const RangedWeapon = pipe(\n  Rendering,\n  Equipable,\n  RangedAttacking,\n  HasShapePattern,\n)(Entity);\n\nexport const Armor = pipe(\n  Rendering,\n  Equipable,\n  Destructable,\n)(Entity);\n\nexport const Ammo = pipe(\n  Rendering,\n)(Entity);\n\nexport const DestructiveProjectile = pipe(\n  Acting,\n  Rendering,\n  Attacking,\n  DestructiveProjecting,\n  Destructable\n)(Entity);\n\nexport const DirectionalProjectile = pipe(\n  Acting,\n  Rendering,\n  Attacking,\n  DirectionalProjecting,\n  Destructable,\n)(Entity);\n\nexport const DestructiveCloudProjectile = pipe(\n  Acting,\n  Rendering,\n  Attacking,\n  GaseousDestructiveProjecting,\n  Destructable,\n  Gaseous\n)(Entity);\n\nexport const DestructiveCloudProjectileV2 = pipe(\n  Acting,\n  Destructable,\n  Parent,\n)(Entity);\n\nexport const FireSpread = pipe(\n  Acting,\n  Rendering,\n  Destructable,\n  Attacking,\n  Spreading,\n)(Entity);\n\nexport const EmergenceHole = pipe(\n  Acting,\n  Rendering,\n  Destructable,\n  Spawning,\n)(Entity);\n\nexport const Particle = pipe(\n  Acting,\n  Rendering,\n  IsParticle,\n)(Entity);\n\nexport const ParticleEmitter = pipe(\n  Acting,\n  Destructable,\n  Parent,\n)(Entity);","export const UI = superclass => class extends superclass {\n  constructor({ initiatedBy = null, range = null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('UI');\n    this.initiatedBy = initiatedBy;\n    this.active = true;\n    this.range = range;\n  }\n  hasEnoughEnergy() {\n    return this.active;\n  }\n};\n","import { Say } from '../Actions/Say';\n\nexport const Speaking = superclass => class extends superclass {\n  constructor({ messages = ['I have nothing to say.'], messageType, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SPEAKING');\n    this.messages = messages;\n    this.messageType = messageType;\n  }\n  getAction(game) {\n    const message = this.messages.shift();\n    this.messages.push(message);\n    return new Say({\n      actor: this,\n      game,\n      message: message,\n      messageType: this.messageType,\n      processDelay: 0,\n    });\n  }\n};\n","import SOUNDS from '../sounds';\nimport * as Helper from '../../helper';\n\nexport const Helpless = superclass => class extends superclass {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HELPLESS');\n    this.saved = false;\n  }\n  save() {\n    this.saved = true;\n    SOUNDS.save.play();\n  }\n  destroy() {\n    const sound = Helper.getRandomInArray([SOUNDS.scream_0, SOUNDS.scream_1, SOUNDS.scream_2]);\n    sound.play();\n    super.destroy();\n  }\n};\n","export const Covering = superclass => class extends superclass {\n  constructor({ accuracyModifer = 0, damageModifer = 0, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('COVERING');\n    this.providesCover = true;\n    this.accuracyModifer = accuracyModifer;\n    this.damageModifer = damageModifer;\n  }\n};\n","import SOUNDS from '../sounds';\nimport { FireSpread } from './index';\nimport * as Constant from '../constants';\nimport * as Helper from '../../helper';\n\nexport const Exploding = superclass => class extends superclass {\n  constructor({ flammability = 1, explosivity = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('EXPLODING');\n    this.flammability = flammability;\n    this.explosivity = explosivity;\n  }\n  enflame() {\n    // create num of fireSpreads\n    const fires = Array(this.flammability).fill('').map((item) => {\n      return new FireSpread({\n        name: 'Pyro',\n        pos: { ...this.pos },\n        game: this.game,\n        renderer: {\n          character: '*',\n          color: Constant.THEMES.SOLARIZED.base3,\n          background: Constant.THEMES.SOLARIZED.red,\n        },\n        timeToSpread: 1,\n        spreadCount: 1,\n        durability: 1,\n        attackDamage: 1,\n        speed: 100,\n      });\n    });\n    fires.forEach((fire) => {\n      // add them to map\n      this.game.placeActorOnMap(fire);\n      // add them to engine\n      this.game.engine.addActor(fire);\n    });\n  }\n  explode() {\n    let structure = {\n      x_offset: 0,\n      y_offset: 0,\n      positions: Array(this.explosivity).fill('').reduce((acc, curr, i) => {\n        return acc.concat(...Helper.getPointsOnCircumference(0, 0, i + 1));\n      }, [])\n    };\n    structure.positions.forEach((slot) => {\n      let position = {\n        x: this.pos.x + slot.x + structure.x_offset,\n        y: this.pos.y + slot.y + structure.y_offset\n      };\n      const tile = this.game.map[Helper.coordsToString(position)];\n      if (tile)\n        tile.type = 'BURNT';\n    });\n    if (this.explosivity > 0)\n      SOUNDS.explosion_0.play();\n    // this.game.draw(); //may not need draw here\n  }\n  destroy() {\n    this.enflame();\n    this.explode();\n    super.destroy();\n  }\n};\n","import * as Constant from '../constants';\nimport { Shove } from '../Actions/Shove';\nimport { DestroySelf } from '../Actions/DestroySelf';\n\nexport const DirectionalPushing = superclass => class extends superclass {\n  constructor({ path = false, direction = { x: 0, y: 0 }, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DIRECTIONAL_PUSHING');\n    this.path = path;\n    this.direction = direction;\n    this.range = range;\n  }\n  getAction(game) {\n    let result = null;\n    let newX = this.pos.x + this.direction[0];\n    let newY = this.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n    this.passable = false;\n    if (this.range > 0) {\n      result = new Shove({\n        targetPos: targetPos,\n        direction: this.direction,\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        onSuccess: () => this.range -= 1,\n      });\n    }\n    else {\n      result = new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: 0\n      });\n    }\n    return result;\n  }\n};\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper'; \nimport { PlaceActor } from '../Actions/PlaceActor';\nimport { Say } from '../Actions/Say';\nimport { Move } from '../Actions/Move';\n\nexport const RangedChasing = superclass => class extends superclass {\n  constructor({ targetEntity = null, getProjectile = () => null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('RANGED_CHASING');\n    this.targetEntity = targetEntity;\n    this.getProjectile = getProjectile;\n  }\n  targetInPath(pathToCheck, targetPos) {\n    let inPath = false;\n    pathToCheck.forEach((pos) => {\n      if (pos.x === targetPos.x && pos.y === targetPos.y) {\n        inPath = true;\n      }\n    });\n    return inPath;\n  }\n  getAction(game) {\n    if (!this.targetEntity) {\n      return new Say({\n        message: `Where are they?`,\n        game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n    let throwDirection = {\n      x: Math.sign(this.targetEntity.pos.x - this.pos.x),\n      y: Math.sign(this.targetEntity.pos.y - this.pos.y),\n    };\n    // projectile.initialize()\n    let projectile = this.getProjectile({\n      pos: {\n        x: this.pos.x,\n        y: this.pos.y,\n      },\n      targetPos: { ...this.targetEntity.pos },\n      direction: [throwDirection.x, throwDirection.y],\n      range: 10,\n    });\n    // projectile.getPath()\n    projectile.createPath(game);\n    // is target in path\n    const inPath = this.targetInPath(projectile.path, this.targetEntity.pos);\n    if (inPath) {\n      // throw\n      if (game.canOccupyPosition(projectile.pos, projectile)) {\n        return new PlaceActor({\n          targetPos: { ...projectile.pos },\n          entity: projectile,\n          game,\n          actor: this,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      }\n      return new Say({\n        message: `I'll get you with this kunai!`,\n        game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n    // if not, select target tile in range of enemy and move\n    let movePath = Helper.calculatePath(game, this.targetEntity.pos, this.pos);\n    let targetPos = movePath.length > 0 ? movePath[0] : this.pos;\n    return new Move({\n      targetPos,\n      game,\n      actor: this,\n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n  }\n};\n","export const PresentingUI = superclass => class extends superclass {\n  constructor({ presentingUI = false, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('PRESENTING_UI');\n    this.presentingUI = presentingUI;\n  }\n};\n","import * as Helper from '../../helper';\nimport { THEMES } from '../constants';\nimport { ANIMATION_TYPES } from '../Display/konvaCustom';\n\nexport const HasTargetingCursor = superclass => class extends superclass {\n  constructor({...args}) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HAS_TARGETING_CURSOR');\n    this.cursorIsActive = false;\n    this.cursorPositions = []; \n    this.animations = []; \n  }\n\n  setCursorIsActive (active = true) {\n    this.cursorIsActive = active;\n  }\n\n  activateCursor (positions) {\n    this.setCursorPositions(positions);\n    this.setCursorIsActive(true);\n    this.resetAnimations();\n  }\n\n  deactivateCursor () {\n    this.setCursorIsActive(false);\n    this.removeAnimations();\n  }\n\n  getCursorPositions () {\n    return this.cursorPositions;\n  }\n\n  setCursorPositions (positions) {\n    this.cursorPositions = positions;\n    return this.getCursorPositions();\n  }\n\n  addAnimations () {\n    const positions = this.getCursorPositions();\n    if (positions.length) {\n      positions.forEach((position) => {\n      const newAnimation = this.game.display.addAnimation(\n        ANIMATION_TYPES.BLINK_TILE, \n        {\n          x: position.x, \n          y: position.y, \n          color: THEMES.SOLARIZED.red \n        })\n        this.animations.push(newAnimation);\n      })\n    }\n  }\n\n  removeAnimations () {\n    if (this.animations.length) {\n      this.animations.forEach((animation) => this.game.display.removeAnimation(animation.id))\n    }\n    this.animations = [];\n  }\n\n  resetAnimations () {\n    this.removeAnimations();\n    this.addAnimations();\n  }\n\n  moveCursorInDirection (direction, distance = 1) {\n    const newPositons = this.getCursorPositions().map(\n      (pos) => ({\n        x: pos.x + (direction[0] * distance),\n        y: pos.y + (direction[1] * distance)\n      })\n    );\n    this.setCursorPositions(newPositons);\n    this.resetAnimations();\n    return newPositons;\n  }\n\n  changeCursorColor (index, color) {\n    const anim = this.animations[index];\n    anim.node.fill(color)\n  }\n};\n","import * as Helper from '../../helper'; \n\nexport const Dragging = superclass => class extends superclass {\n  constructor({ draggedEntity = null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DRAGGING');\n    this.draggedEntity = draggedEntity;\n  }\n  grab(pos) {\n    const tile = this.game.map[Helper.coordsToString(pos)];\n    if (!tile)\n      return false;\n    if (tile.entities.length > 0) {\n      const entity = tile.entities[0];\n      if (entity.entityTypes.includes('DRAGGABLE'))\n        if (!this.draggedEntity && entity.draggable === true) {\n          this.draggedEntity = entity;\n          return true;\n        }\n    }\n    return false;\n  }\n  release() {\n    if (!this.draggedEntity)\n      return false;\n    const draggedEntity = { ...this.draggedEntity };\n    this.draggedEntity = null;\n    return draggedEntity;\n  }\n  drag(lastPos) {\n    // update entity position\n    const pos = this.draggedEntity.pos;\n    // get tile of draged entity\n    let tile = this.game.map[Helper.coordsToString(pos)];\n    // remove dragged entity from that tile\n    this.game.map[Helper.coordsToString(pos)] = { ...tile, entities: tile.entities.filter((e) => e.id !== this.draggedEntity.id) };\n    // update dragged ent to player's position\n    this.draggedEntity.pos = lastPos;\n    // add dragged ent to new tile\n    this.game.map[Helper.coordsToString(lastPos)].entities.push(this.draggedEntity);\n  }\n  move(targetPos) {\n    const lastPos = { ...this.pos };\n    if (this.draggedEntity) {\n      const moveSuccess = super.move(targetPos);\n      if (moveSuccess) {\n        this.drag(lastPos);\n        return true;\n      }\n      return moveSuccess;\n    }\n    return super.move(targetPos);\n  }\n};\n","export const Charging = superclass => class extends superclass {\n  constructor({ charge = 2, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CHARGING');\n    this.charge = charge;\n    this.chargeMax = charge;\n  }\n  decreaseCharge(value) {\n    this.charge = Math.max(0, this.charge - value);\n  }\n  increaseCharge(value) {\n    this.charge = Math.min(this.chargeMax, this.charge + value);\n  }\n};\n","export const Signing = superclass => class extends superclass {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SIGNING');\n    this.signHistory = [];\n  }\n  addSign(sign) {\n    if (this.signHistory.length >= 4) {\n      this.signHistory.shift();\n    }\n    this.signHistory.push(sign);\n  }\n  clearSigns() {\n    this.signHistory = [];\n  }\n};\n","import SOUNDS from '../sounds';\nimport * as Constant from '../constants';\n\nexport const Equiping = superclass => class extends superclass {\n  constructor({ equipment = Constant.EQUIPMENT_LAYOUTS.human(), ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('EQUIPING');\n    this.equipment = equipment;\n  }\n  hasItemNameEquipped(itemName) {\n    const equipment = this.equipment.filter((slot) => {\n      if (slot.item) {\n        if (slot.item.name === itemName) {\n          return true;\n        }\n      }\n      return false;\n    });\n    return equipment.length > 0;\n  }\n  getItemInSlot(slotName) {\n    let openSlots = this.equipment.filter((slot) => {\n      return (slot.item === null && slot.type === slotName);\n    });\n    if (openSlots.length > 0) {\n      return false;\n    }\n    let slot = this.equipment.find((slot) => slot.type === slotName);\n    if (!slot) {\n      return false;\n    }\n    if (!slot.item) {\n      return false;\n    }\n    return slot.item;\n  }\n  equip(slotName, item) {\n    let foundSlot = false;\n    this.equipment = this.equipment.map((slot) => {\n      if (!foundSlot && slot.type === slotName && slot.item === null) {\n        slot.item = item;\n        foundSlot = true;\n        SOUNDS.equip_1.play();\n      }\n      return slot;\n    });\n    return foundSlot;\n  }\n  unequip(item) {\n    this.equipment = this.equipment.map((slot) => {\n      if (slot.item) {\n        if (slot.item.id === item.id) {\n          slot.item = null;\n          SOUNDS.equip_0.play();\n        }\n      }\n      return slot;\n    });\n  }\n};\n","import uuid from 'uuid/v1';\nimport { destroyEntity } from './helper';\nimport { cloneDeep, find } from 'lodash';\n\nexport const Cloning = superclass => class extends superclass {\n  constructor({ cloneLimit = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CLONING');\n    this.cloneLimit = cloneLimit;\n    this.clones = [];\n  }\n  // perhaps clones should have a status effect that leeches parent actor's energy or chakra\n  // status effects should be removed from engine when owner is removed.\n  destroy() {\n    // add function to override self destroy funtion \n    // if this actor dies, clones should be destroyed as well\n    if (this.clones) {\n      this.clones.map((clone) => {\n        destroyEntity(clone);\n      });\n    }\n    destroyEntity(this);\n  }\n  destroyClone(id) {\n    // overrides clone destroy function\n    // when clone is destroyed, clone count will change accordingly\n    const index = this.clones.findIndex((c) => c.id === id);\n    if (index >= 0) {\n      this.clones[index].super__destroy();\n      this.clones.splice(index, 1);\n    }\n  }\n  createClone(cloneArgs) {\n    if (this.clones.length < this.cloneLimit) {\n      let clone = cloneDeep(this);\n      clone.name = `Clone`;\n      clone.game = this.game;\n      clone.id = uuid();\n      if (clone.entityTypes.includes('HAS_KEYMAP')) {\n        const ignoredKeys = find(cloneArgs, { 'attribute': 'ignoredKeys' });\n        clone.reinitializeKeymap(ignoredKeys? ignoredKeys.value : []);\n      }\n      delete clone.clones;\n      clone['super__destroy'] = clone.destroy;\n      clone.destroy = () => { this.destroyClone(clone.id); };\n      cloneArgs.forEach((arg) => {\n        clone[arg.attribute] = arg.value;\n      });\n      if (this.game.placeActorOnMap(clone)) {\n        this.game.engine.addActorAsNext(clone);\n        this.game.draw();\n        this.clones.push(clone);\n        return true;\n      }\n      ;\n    }\n    return false;\n  }\n};\n","import {CLONE_PATTERNS} from '../constants';\nimport {getPositionsFromStructure} from '../../helper';\nexport const HasShapePattern = superclass => class extends superclass {\n  constructor({ shapePattern = CLONE_PATTERNS.point, ...args }) {\n    super({ ...args });\n    this.shapePattern = shapePattern;\n    this.entityTypes = this.entityTypes.concat('HAS_SHAPE_PATTERN');\n  }\n\n  getPositionsInShape (pos) {\n    return getPositionsFromStructure(this.shapePattern, pos);\n  }\n};\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { ThrowProjectile } from '../Actions/ThrowProjectile';\n\nexport const DestructiveProjecting = superclass => class extends superclass {\n  constructor({ path = false, targetPos = null, attackDamage = 1, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DESTRUCTIVE_PROJECTING');\n    this.path = path;\n    this.targetPos = targetPos;\n    this.attackDamage = attackDamage;\n    this.range = range;\n  }\n  createPath(game) {\n    let path = Helper.calculatePathWithRange(game, this.targetPos, this.pos, 8, this.range);\n    this.path = path;\n  }\n  getAction(game) {\n    if (!this.path) {\n      this.createPath(game);\n    }\n    let targetPos = this.path.length > 0 ? this.path[0] : this.pos;\n    let result = new ThrowProjectile({\n      targetPos,\n      game,\n      actor: this,\n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n    return result;\n  }\n};\n","import * as Constant from '../constants';\nimport { ProjectileMove } from '../Actions/ProjectileMove';\nimport { DestroySelf } from '../Actions/DestroySelf';\n\nexport const DirectionalProjecting = superclass => class extends superclass {\n  constructor({ path = false, direction = { x: 0, y: 0 }, attackDamage = 1, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DIRECTIONAL_PROJECTING');\n    this.path = path;\n    this.direction = direction;\n    this.attackDamage = attackDamage;\n    this.range = range;\n  }\n  createPath(game) {\n    let path = [];\n    for (let i = 1; i < this.range + 1; i++) {\n      path.push({\n        x: this.pos.x + (this.direction[0] * i),\n        y: this.pos.y + (this.direction[1] * i)\n      });\n    }\n    this.path = path;\n  }\n  getAction(game) {\n    let result = null;\n    let newX = this.pos.x + this.direction[0];\n    let newY = this.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n    this.passable = false;\n    if (this.range > 0) {\n      result = new ProjectileMove({\n        targetPos: targetPos,\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        damageToSelf: 1,\n        onSuccess: () => this.range -= 1,\n        onAfter: () => {\n          if (this.energy <= 100) {\n            game.engine.setActorToPrevious();\n          }\n        }\n      });\n    }\n    else {\n      result = new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: 0\n      });\n    }\n    return result;\n  }\n};\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { ThrowProjectileGas } from '../Actions/ThrowProjectileGas';\n\nexport const GaseousDestructiveProjecting = superclass => class extends superclass {\n  constructor({ owner_id = null, path = false, targetPos = null, attackDamage = 1, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('GASEOUS_DESTRUCTIVE_PROJECTING');\n    this.path = path;\n    this.targetPos = targetPos;\n    this.attackDamage = attackDamage;\n    this.range = range;\n    this.owner_id = owner_id;\n  }\n  canAttack(entity) {\n    let success = super.canAttack();\n    if (success) {\n      success = this.owner_id === null || (entity.owner_id !== this.owner_id);\n    }\n    return success;\n  }\n  createPath(game) {\n    let path = Helper.calculatePathWithRange(game, this.targetPos, this.pos, 8, this.range);\n    this.path = path;\n  }\n  getAction(game) {\n    if (!this.path) {\n      this.createPath(game);\n    }\n    let targetPos = this.path.length > 0 ? this.path[0] : this.pos;\n    let result = new ThrowProjectileGas({\n      targetPos,\n      game,\n      actor: this,\n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n    return result;\n  }\n};\n","import uuid from 'uuid/v1';\nimport { cloneDeep, cloneDeepWith } from 'lodash';\nimport * as Constant from '../constants';\n\nexport const Gaseous = superclass => class extends superclass {\n  constructor({ isClone = false, cloneCount = 0, clonePattern = Constant.CLONE_PATTERNS.square, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('GASEOUS');\n    this.isClone = isClone;\n    this.cloneCount = cloneCount;\n    this.clonePattern = cloneDeep(clonePattern);\n  }\n  getAction(game) {\n    let offset = this.clonePattern.positions.find((pos) => !pos.taken);\n    if (!this.isClone && offset) {\n      offset.taken = true;\n      let clone = cloneDeepWith(this, (value, key) => {\n        switch (key) {\n          case 'id':\n          case 'game':\n          case 'engine':\n          case 'clones':\n            return null;\n          default:\n            return undefined;\n        }\n      });\n      clone.game = game;\n      clone.id = uuid();\n      if (this.hasOwnProperty('pos')) {\n        let referencePos = this.pos;\n        clone.pos = {\n          x: referencePos.x + offset.x,\n          y: referencePos.y + offset.y\n        };\n      }\n      if (clone.hasOwnProperty('path')) {\n        clone.path = clone.path.map((pos) => {\n          return {\n            x: pos.x + offset.x,\n            y: pos.y + offset.y\n          };\n        });\n      }\n      clone.isClone = true;\n      this.cloneCount += 1;\n      game.placeActorOnMap(clone);\n      game.engine.addActor(clone);\n      game.draw();\n    }\n    let result = super.getAction(game);\n    return result;\n  }\n};\n","import { FireSpread } from './index';\nimport * as Constant from '../constants';\nimport * as Helper from '../../helper'; \nimport { Say } from '../Actions/Say';\nimport { DestroySelf } from '../Actions/DestroySelf';\nimport { PlaceActor } from '../Actions/PlaceActor';\n\nexport const Spreading = superclass => class extends superclass {\n  constructor({ timeToSpread = 5, spreadCount = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SPREADING');\n    this.timeToSpreadMax = timeToSpread;\n    this.timeToSpread = timeToSpread;\n    this.spreadCountMax = spreadCount;\n    this.spreadCount = spreadCount;\n  }\n  getAction(game) {\n    // if no more spreads, then destroy\n    if (this.spreadCount <= 0) {\n      return new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n        onAfter: () => {\n          game.map[Helper.coordsToString(this.pos)].type = 'BURNT';\n        },\n      });\n    }\n    // if its time to expand again, create a new fire spread and placeActor\n    if (this.timeToSpread <= 0) {\n      // find adjacent spot to spread to\n      let adjacentPositions = [\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + 1,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + -1,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + 1,\n        },\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + -1,\n        },\n      ];\n      let adjacentPos = null;\n      let kill = 100;\n      while (kill > 0) {\n        let newPos = Helper.getRandomInArray(adjacentPositions);\n        let newTile = this.game.map[Helper.coordsToString(newPos)];\n        let tileExists = Boolean(newTile);\n        let notBurnt = true;\n        let canBurn = false;\n        if (newTile) {\n          notBurnt = newTile.type !== 'BURNT';\n          canBurn = ['WALL', 'FLOOR', 'DOOR'].includes(newTile.type);\n        }\n        if (tileExists && notBurnt && canBurn) {\n          adjacentPos = newPos;\n          break;\n        }\n        kill -= 1;\n      }\n      if (adjacentPos) {\n        // create new fire actor and place\n        let fire = new FireSpread({\n          name: 'Pyro',\n          pos: { x: 0, y: 0 },\n          game,\n          renderer: {\n            character: '*',\n            sprite: '',\n            color: Constant.THEMES.SOLARIZED.base3,\n            background: Constant.THEMES.SOLARIZED.red,\n          },\n          timeToSpread: this.timeToSpreadMax,\n          spreadCount: this.spreadCountMax,\n          durability: this.durability,\n          attackDamage: this.attackDamage,\n          speed: this.speed,\n        });\n        this.timeToSpread = this.timeToSpreadMax;\n        this.spreadCount -= 1;\n        return new PlaceActor({\n          targetPos: adjacentPos,\n          entity: fire,\n          game,\n          actor: this,\n          interrupt: false,\n          energyCost: Constant.ENERGY_THRESHOLD,\n          processDelay: 0,\n          forcePlacement: true,\n        });\n      }\n      this.timeToSpread = this.timeToSpreadMax;\n      this.spreadCount -= 1;\n    }\n    this.timeToSpread -= 1;\n    return new Say({\n      message: 'burning',\n      game,\n      actor: this,\n      processDelay: 0,\n    });\n  }\n};\n","import { FireSpread } from './index';\nimport * as Constant from '../constants';\nimport * as Helper from '../../helper'; \nimport * as Item from '../items'; \nimport { Say } from '../Actions/Say';\nimport { DestroySelf } from '../Actions/DestroySelf';\nimport { PlaceActor } from '../Actions/PlaceActor';\n\nexport const Spawning = superclass => class extends superclass {\n  constructor({ getSpawnedEntity, timeToSpread = 5, spreadCount = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SPAWNING');\n    this.timeToSpreadMax = timeToSpread;\n    this.timeToSpread = timeToSpread;\n    this.spreadCountMax = spreadCount;\n    this.spreadCount = spreadCount;\n    this.getSpawnedEntity = getSpawnedEntity\n  }\n  getAction(game) {\n    // if no more spreads, then destroy\n    if (this.spreadCount <= 0) {\n      return new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n      });\n    }\n    // if its time to expand again, create a new fire spread and placeActor\n    if (this.timeToSpread <= 0) {\n      // find adjacent spot to spread to\n      let adjacentPositions = [\n        {\n          x: this.pos.x + 1,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + -1,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + 1,\n        },\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + -1,\n        },\n      ];\n      let adjacentPos = null;\n      let kill = 100;\n      while (kill > 0) {\n        let newPos = Helper.getRandomInArray(adjacentPositions);\n        let newTile = this.game.map[Helper.coordsToString(newPos)];\n        let tileExists = Boolean(newTile);\n        if (tileExists && game.canOccupyPosition(newPos)) {\n          adjacentPos = newPos;\n          break;\n        }\n        kill -= 1;\n      }\n      if (adjacentPos) {\n        this.timeToSpread = this.timeToSpreadMax;\n        this.spreadCount -= 1;\n        return new PlaceActor({\n          targetPos: adjacentPos,\n          entity: this.getSpawnedEntity(adjacentPos),\n          game,\n          actor: this,\n          interrupt: false,\n          energyCost: Constant.ENERGY_THRESHOLD,\n          processDelay: 0,\n          forcePlacement: true,\n        });\n      }\n      this.timeToSpread = this.timeToSpreadMax;\n      this.spreadCount -= 1;\n    }\n    this.timeToSpread -= 1;\n    return new Say({\n      message: 'boom boom',\n      game,\n      actor: this,\n      processDelay: 0,\n    });\n  }\n};\n","import * as Constant from '../constants'; \n\nexport const IsParticle = superclass => class extends superclass {\n  constructor({ pos = { x: 1, y: 1 }, direction = { x: 0, y: 0 }, life = 1, speed = 1, type = Constant.PARTICLE_TYPE.directional, path = null, ...args }) {\n    super({ ...args });\n    this.pos = pos;\n    this.direction = direction;\n    this.life = life;\n    this.speed = speed;\n    this.type = type;\n    this.path = path;\n    this.entityTypes = this.entityTypes.concat('PARTICLE');\n  }\n  getNextPos(step) {\n    switch (this.type) {\n      case Constant.PARTICLE_TYPE.directional:\n        return {\n          x: this.pos.x + (this.direction.x * this.speed) * step,\n          y: this.pos.y + (this.direction.y * this.speed) * step,\n        };\n      case Constant.PARTICLE_TYPE.path:\n        const nextPos = this.path.shift();\n        return nextPos ? { ...nextPos } : { ...this.pos };\n      default:\n        break;\n    }\n  }\n  update(step) {\n    this.life -= step;\n    if (this.life > 0) {\n      this.pos = this.getNextPos(step);\n    }\n  }\n};\n","import * as Helper from '../../helper';\nimport { Particle } from '../Entities/index';\nimport { PARTICLE_TEMPLATES } from '../constants';\n\nexport class Engine {\n  constructor({\n    statusEffects = [],\n    actors = [],\n    currentActor = 0,\n    isRunning = false,\n    game = null,\n  }) {\n    this.statusEffects = statusEffects;\n    this.actors = actors;\n    this.currentActor = currentActor;\n    this.isRunning = isRunning;\n    this.game = game;\n  }\n\n  async processV1 () { // a turn-based system using speed and round-robin\n    let actor = this.actors[this.currentActor]\n    actor.gainEnergy(actor.speed);\n    if (actor.hasEnoughEnergy()) {\n      let action = actor.getAction(this.game);\n      if (!action) { return false; } // if no action given, kick out to UI input\n      while (true) {\n        let result = action.perform();\n        this.game.draw();\n        await Helper.delay(action.processDelay);\n        if (!result.success) return false;\n        if (result.alternative === null) break;\n        action = result.alternative;\n      }\n    }\n    this.currentActor = (this.currentActor + 1) % this.actors.length;\n    return true\n  }\n\n  async processV2() { // a turn-based system using speed and Action Points\n    let actor = this.actors[this.currentActor]\n    let acting = true;\n    while (acting) {\n      if (!actor) return false;\n      // if (!actor.active) return false;\n      if (!actor.active) break;\n      let timePassed = 0;\n      \n      if (actor.hasEnoughEnergy()) {\n        // if (!actor.active) break;\n        let action = actor.getAction(this.game);\n        if (!action) { return false; } // if no action given, kick out to UI input\n        timePassed += action.getEnergyCost();\n        // console.log('timePassed ', timePassed);\n        \n        // timePassed += action.energyCost;\n        while (true) {\n          let result = {\n            success: false,\n            alternative: null,\n          };\n          // if (actor.energy >= action.energyCost) { // replace with checking for all required resources\n          if (action.canPayRequiredResources()) { // replace with checking for all required resources\n            \n            action.onBefore();\n            result = await action.perform();\n            if (result.success) {\n              action.onSuccess();\n              action.payRequiredResources();\n            } else {\n              action.onFailure();\n            }\n            action.onAfter();\n          }\n          if (!await this.processActionFX(action, result.success)) {\n            if (this.shouldAutoRun()) {\n              await Helper.delay(25);\n            } else {\n              await Helper.delay(action.processDelay);\n            }\n            this.game.draw();\n          }\n          if (!actor.active) break;\n          // if (!result.success) return false;\n          if (result.alternative === null) break;\n          action = result.alternative;\n        }\n        this.processStatusEffects(timePassed);\n        if (action.interrupt) {\n          acting = false;\n          break;\n        }\n      } else {\n        actor.gainEnergy(actor.speed);\n        acting = false;\n      }\n    }\n    this.actors = this.actors.filter((actor) => actor.active)\n    this.currentActor += 1;\n    if (this.currentActor >= this.actors.length) {\n      this.currentActor = 0;\n    }\n    return true\n  }\n\n  // a turn-based system using speed and Action Points\n  // it reorders all actors by energy after every round robin\n  async processV3() { \n    let actor = this.actors[this.currentActor]\n    if (!actor) return false;\n    let timePassed = 0;\n    if (actor.hasEnoughEnergy()) {\n      let action = actor.getAction(this.game);\n      if (!action) { return false; } // if no action given, kick out to UI input\n      timePassed += action.energyCost;\n      while (true) {\n        let result = await action.perform();\n        if (!await this.processActionFX(action, result.success)) {\n            await Helper.delay(action.processDelay);\n            this.game.draw();\n        }\n        if (!result.success) return false;\n        if (result.alternative === null) break;\n        action = result.alternative;\n      }\n      this.processStatusEffects(timePassed);\n    } else {\n      actor.gainEnergy(actor.speed);\n    }\n    this.currentActor = (this.currentActor + 1) % this.actors.length;\n    if (this.currentActor === 0) this.sortActorsByEnergy();\n    return true\n  }\n\n  // TODO process that reorders actors after every action\n\n  async start() {\n    this.isRunning = true;\n    while (this.isRunning) {\n      this.isRunning = await this.processV2();\n    }\n    let actor = this.actors[this.currentActor]\n    \n    if (!actor) {\n      // this.game.backToTitle();\n      return false;\n    }\n\n    this.setVisibleKeymap(actor);\n    \n    this.game.updateMode();\n    await this.game.updateReact(this.game);\n  }\n  \n  stop() {\n    this.isRunning = false;\n  }\n\n  setVisibleKeymap (actor) {\n    if (actor.entityTypes.includes('HAS_KEYMAP')) {\n      const keymap = actor.getKeymap()\n      if (keymap) {\n        this.game.visibleKeymap = keymap;\n      }\n    }\n  }\n\n  sortActorsByEnergy () {\n    this.actors = this.actors.sort((a, b) => b.energy - a.energy);\n  }\n\n  shouldAutoRun () {\n  // if there is no player, the engine will continue to run, we don't want it to run too fast\n    const hasPlayer = this.actors.filter((actor) => actor.entityTypes.includes('PLAYING')).length\n    if (hasPlayer) return false;\n    return true;\n  }\n\n  addStatusEffect(newEffect) {\n    if (!newEffect.allowDuplicates) {\n      if (this.statusEffects.filter((effect) => (\n        effect.actor.id === newEffect.actor.id &&\n        effect.name === newEffect.name\n      )).length > 0) {\n        console.log(`${newEffect.name} cannot be applied twice to ${newEffect.actor.name}`);\n        return false;\n      };\n    }\n    newEffect.onStart();\n    this.statusEffects.push(newEffect)\n    return true;\n  }\n\n  removeStatusEffectById (id) {\n    this.statusEffects = this.statusEffects.filter((effect) => {\n      if (effect.id !== id) return true;\n      effect.onStop();\n      return false;\n    });\n  }\n  \n  removeStatusEffectByActorId (actorId) {\n    this.statusEffects = this.statusEffects.filter((effect) => {\n      if (effect.actor.id !== actorId) return true;\n      effect.onStop();\n      return false;\n    });\n  }\n\n  removeDeadStatusEffects() {\n    this.statusEffects = this.statusEffects.filter((effect) =>{\n      if (effect.lifespan >= 0 && effect.timeToLive <= 0) {\n        effect.onStop();\n        return false;\n      }\n      return true;\n    });\n  }\n\n  getStatusEffectsByActorId(actorId) {\n    return this.statusEffects.filter((effect) => effect.actor.id === actorId);\n  }\n\n  processStatusEffects (timePassed) {\n    this.statusEffects.forEach((effect) => {\n      effect.timeSinceLastStep += timePassed;\n      effect.timeToLive -= timePassed;\n      if (effect.timeSinceLastStep >= effect.stepInterval) {\n        effect.onStep();\n        effect.timeSinceLastStep = 0;\n      } \n    });\n    this.removeDeadStatusEffects();\n  }\n\n  async processActionFX (action, actionSuccess) {\n    // EASE IN\n    // let time = .8\n    // let nextT = (t) => t *= t; \n    // EASE OUT\n    // let time = .03\n    // let nextT = (t) => t * (2 - t); \n    // EASE IN OUT QUAD\n    // let time = .4\n    // let nextT = (t) => t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t; \n    // EASE IN CUBIC\n    // let time = .8\n    // let nextT = (t) => t * t * t; \n    // EASE OUT CUBIC\n    // let time = .001\n    // let nextT = (t) => (--t) * t * t + 1; \n    if (!actionSuccess) { \n      // If action is not successful, instead of running action's normal particle animation\n      // we'll show a red X on the entity that initiated the action\n      const particle = new Particle({\n        game: this.game,\n        name: 'particle',\n        passable: true,\n        pos: {...action.actor.pos},\n        renderer: PARTICLE_TEMPLATES.fail.renderer,\n      })\n      this.game.placeActorOnMap(particle);\n      this.game.draw();\n      await Helper.delay(100);\n      this.game.removeActorFromMap(particle);\n      particle.update(1);\n      this.game.draw();\n      action.removeDeadParticles(); // is this needed?\n      return true;\n    }\n\n    if (action.particles.length) {\n      while (action.particles.length > 0) {\n        action.particles.forEach((particle) => {\n          this.game.placeActorOnMap(particle);\n        })\n        this.game.draw();\n        // await Helper.delay(time * 100);\n        // await Helper.delay(time * action.processDelay);\n        await Helper.delay(action.processDelay);\n        // await Helper.delay(0);\n        action.particles.forEach((particle) => {\n          this.game.removeActorFromMap(particle);\n          particle.update(1);\n\n        })\n        this.game.draw();\n        action.removeDeadParticles();\n        // time = nextT(time);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  addActor (entity) {\n    this.actors.push(entity);\n  }\n\n  addActorAsPrevious (entity) {\n    this.actors.splice(this.currentActor, 0, entity);\n  }\n\n  addActorAsNext (entity) {\n    this.actors.splice(this.currentActor + 1, 0, entity);\n  }\n\n  setActorToPrevious (entity) {\n    this.currentActor -= 1;\n    if (this.currentActor <= -1) this.currentActor = this.actors.length - 1;\n  }\n\n  setActorToNext (entity) {\n    this.currentActor = (this.currentActor + 1) % this.actors.length;\n  }\n\n}\n\n\nexport class CrankEngine extends Engine {\n  async process() { // a turn-based system using speed and Action Points\n    let actor = this.actors[this.currentActor]\n    let acting = true;\n    while (acting) {\n      if (actor.hasEnoughEnergy()) {\n        let action = actor.getAction(this.game);\n        if (!action) { return false; } // if no action given, kick out to UI input\n        while (true) {\n          this.game.draw();\n          let result = await action.perform();\n          await Helper.delay(action.processDelay);\n          if (!result.success) return false;\n          if (result.alternative === null) break;\n          action = result.alternative;\n        }\n      } else {\n        // actor.gainEnergy(actor.speed);\n        acting = false;\n      }\n    }\n    // this.currentActor = (this.currentActor + 1) % this.actors.length;\n    this.currentActor += 1;\n    if (this.currentActor + 1 >= this.actors.length) {\n      this.currentActor = 0;\n      this.actors.forEach((actor) => actor.gainEnergy(actor.speed));\n      return false;\n    }\n    return true\n  }\n\n  async start() {\n    this.isRunning = true;\n    while (this.isRunning) {\n      this.isRunning = await this.process();\n    }\n    let actor = this.actors[this.currentActor]\n    this.setVisibleKeymap(actor);\n    // this.game.updateMode();\n    this.game.mode.update();\n    await this.game.updateReact(this.game);\n  }\n}","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\n\nexport const addTileZone = (tileKey, origin = { x: 0, y: 0 }, height = 3, width = 3, type = 'GROUND', map, mapHeight, mapWidth) => {\n  for (let i = 0; i < mapHeight; i++) {\n    for (let j = 0; j < mapWidth; j++) {\n      if (i >= origin.y && i <= origin.y + (height - 1) && j >= origin.x && j <= origin.x + (width - 1)) {\n        const key = `${j},${i}`\n        let currentFrame = 0;\n\n        if (tileKey[type].animation) {\n          currentFrame = Helper.getRandomInt(0, tileKey[type].animation.length)\n        }\n\n        map[key] = {\n          type,\n          currentFrame,\n          entities: [],\n        };\n      }\n    }\n  }\n}","import * as Helper from '../../helper';\n\nexport const generate = (map, offsetX, offsetY, unitCount = 12, unitSize = 4, borderWidth = 1) => {\n  let data = {};\n  // const floorPlan = createFloorPlan(unitCount);\n  // let maxX = 0; \n  // let minX = 0; \n  // let maxY = 0; \n  // let minY = 0; \n  // floorPlan.forEach((pos) => {\n  //   if (pos.x > maxX) maxX = pos.x;\n  //   if (pos.x < minX) minX = pos.x;\n  //   if (pos.y > maxY) maxY = pos.y;\n  //   if (pos.y < minY) minY = pos.y;\n  // })\n  // const floorPlanWidth = Math.abs(maxX) + Math.abs(minX) + 1;\n  // const floorPlanHeight = Math.abs(maxY) + Math.abs(minY) + 1;\n  // console.log(floorPlanWidth);\n  // console.log(floorPlanHeight);\n  \n  let floorPlan = createFloorPlan();\n  let kill = 1000\n  while (floorPlan.length < unitCount + 1) {\n    \n    let unit = createRoomInFloorPlan(floorPlan);\n    if (unit) {\n      const unitPosition = getUnitPosition(unit, offsetX, offsetY, unitSize);\n      let didCreate = createUnit(map, unitPosition, unitSize, 0);\n      if (didCreate) floorPlan.push(unit);\n    }\n    \n    kill -= 1;\n    if (kill <= 0) break;\n  }\n  \n  removeInnerWalls(map)\n  addInnerWalls(map, floorPlan.length)\n  return data;\n}\n\nconst createFloorPlan = () => {\n  // create origin\n  let floorPlan = [{x: 0, y: 0}];\n  return floorPlan\n}\n\nconst createRoomInFloorPlan = (floorPlan) => {\n  // randomly choose previously created unit\n  // let origin = floorPlan[floorPlan.length - 1];\n  let origin = Helper.getRandomInArray(floorPlan);\n  // randomly choose neighboring point\n  let newUnit = getNeighboringUnit(origin);\n  let unitAlreadyExists = unitExists(newUnit, floorPlan)\n  let kill = 1000\n  while (unitAlreadyExists) {\n    origin = Helper.getRandomInArray(floorPlan.filter((pnt) => !Helper.coordsAreEqual(pnt, origin)));\n    newUnit = getNeighboringUnit(origin);\n    unitAlreadyExists = unitExists(newUnit, floorPlan)\n    kill -= 1;\n    if (kill <= 0) {\n      unitAlreadyExists = false;\n      newUnit = false;\n      break;\n    }\n  }\n  \n  return newUnit\n}\n\nconst getNeighboringUnit = (origin) => Helper.getRandomInArray(getNeighboringPoints(origin))\nconst unitExists = (newUnit, existingUnits) => existingUnits.filter((unit) => unit.x === newUnit.x && unit.y === newUnit.y).length > 0;\nconst getUnitPosition = (floorPlanPos, mapOffsetX, mapOffsetY, unitSize) => {\n  return {\n    x: floorPlanPos.x + mapOffsetX + (unitSize * floorPlanPos.x),\n    y: floorPlanPos.y + mapOffsetY + (unitSize * floorPlanPos.y),\n  }\n}\n\nconst getNeighboringPoints = (origin, eightWay = false) => {\n  let neighbors = [\n    {\n      x: origin.x,\n      y: origin.y + 1\n    },\n    {\n      x: origin.x + 1,\n      y: origin.y\n    },\n    {\n      x: origin.x,\n      y: origin.y - 1\n    },\n    {\n      x: origin.x - 1,\n      y: origin.y\n    },\n  ]\n\n  if (eightWay) {\n    neighbors = neighbors.concat([\n      {\n        x: origin.x + 1,\n        y: origin.y + 1\n      },\n      {\n        x: origin.x + 1,\n        y: origin.y - 1\n      },\n      {\n        x: origin.x - 1,\n        y: origin.y - 1\n      },\n      {\n        x: origin.x - 1,\n        y: origin.y + 1\n      },\n    ])\n  }\n  return neighbors;\n}\n\nconst createUnit = (map, position, size, border) => {\n  // const length = size; // this will leave a border\n  // const length = size + 1; // this will close the gap\n  const length = size + 1 - border; // this will calculate using border\n\n  // prevent units from hitting map edge\n  let unitCollidesWithEdge = false;\n  for (let i = 0; i < length; i++) {\n    for (let j = 0; j < length; j++) {\n      const newPosition = {\n        x: position.x + i,\n        y: position.y + j,\n      }\n      let tile = map[Helper.coordsToString(newPosition)];\n      if (!tile) unitCollidesWithEdge = true;\n    }\n  }\n\n  if (!unitCollidesWithEdge) {\n    for (let i = 0; i < length; i++) {\n      for (let j = 0; j < length; j++) {\n        const newPosition = {\n          x: position.x + i,\n          y: position.y + j,\n        }\n        let type = 'FLOOR';\n        if (i === 0 || i === (length - 1)) type = 'WALL';\n        if (j === 0 || j === (length - 1)) type = 'WALL';\n        let tile = map[Helper.coordsToString(newPosition)];\n        if (tile) tile.type = type;\n      }\n    }\n  }\n\n  return !unitCollidesWithEdge;\n}\n\nconst removeInnerWalls = (map) => {\n  let walls = Object.keys(map).filter((key) => {\n    return map[key].type === 'WALL';\n  })\n\n  let innerWalls = walls.filter((key) => {\n    const coordArray = key.split(',').map((i) => parseInt(i));\n    const coords = {\n      x: coordArray[0],\n      y: coordArray[1],\n    }\n    const neighbors = getNeighboringPoints(coords, true).filter((point) => {\n      let t = map[Helper.coordsToString(point)];\n      if (t) {\n        if (['WALL', 'FLOOR'].includes(t.type)) {\n          return true;\n        }\n      }\n      return false\n    });\n    \n    if (neighbors.length === 8) {\n      return true;\n    }\n    return false;\n  })\n\n  innerWalls.forEach((key) => {\n    map[key].type = 'FLOOR';\n  })\n}\n\nconst addInnerWalls = (map, count = 2) => {\n  // Finding corners\n  let corners = Object.keys(map).filter((key) => {\n    const tile = map[key];\n    if (tile.type !== 'WALL') return false;\n    const coordArray = key.split(',').map((i) => parseInt(i));\n    const coords = {\n      x: coordArray[0],\n      y: coordArray[1],\n    }\n    const neighbors = getNeighboringPoints(coords, false).filter((point) => {\n      let t = map[Helper.coordsToString(point)];\n      if (t) {\n        if (['GROUND'].includes(t.type)) {\n          return true;\n        }\n      }\n      return false\n    });\n    if (neighbors.length === 2) return true;\n    return false\n  })\n\n  // building walls\n  let wallCount = 0;\n  while (wallCount < count) {\n  // while (wallCount < corners.length) {\n  // for (let i = 0; i < count; i++) {\n    const corner = Helper.getRandomInArray(corners);\n    const coordArray = corner.split(',').map((i) => parseInt(i));\n    const coords = {\n      x: coordArray[0],\n      y: coordArray[1],\n    }\n    const wallNeighbors = getNeighboringPoints(coords, false).filter((point) => {\n      let t = map[Helper.coordsToString(point)];\n      if (t) {\n        if (['WALL'].includes(t.type)) {\n          return true;\n        }\n      }\n      return false\n    });\n    const selectedWallPos = Helper.getRandomInArray(wallNeighbors)\n    if (!selectedWallPos) continue;\n    const direction = {\n      x: Math.sign(selectedWallPos.x - coords.x),\n      y: Math.sign(selectedWallPos.y - coords.y)\n    };\n\n    let kill = 100;\n    let build = true;\n    let currentPosition = {...coords}\n    let previousFloorPositions = [];\n    while (build) {\n      currentPosition.x += direction.x;\n      currentPosition.y += direction.y;\n      let tile = map[Helper.coordsToString(currentPosition)];\n      if (!tile) break;\n      // if (tile.type === 'WALL') continue;\n      if (tile.type === 'FLOOR') {\n        tile.type = 'WALL';\n        previousFloorPositions.push({...currentPosition})\n        // console.log(previousFloorPositions.length);\n        \n      } else if (tile.type === 'GROUND' || (tile.type === 'WALL' && previousFloorPositions.length)) {\n        // go back two and make FLOOR\n        let prevPos = {\n          x: currentPosition.x - (direction.x * 2),\n          y: currentPosition.y - (direction.y * 2),\n        }\n        map[Helper.coordsToString(prevPos)].type = 'DOOR';\n        // map[Helper.coordsToString(prevPos)].type = 'FLOOR';\n        // go back one more and make FLOOR\n        prevPos = {\n          x: currentPosition.x - (direction.x * 3),\n          y: currentPosition.y - (direction.y * 3),\n        }\n        map[Helper.coordsToString(prevPos)].type = 'DOOR';\n        // map[Helper.coordsToString(prevPos)].type = 'FLOOR';\n        if (previousFloorPositions.length <= 0) {\n          //   // we need to create another wall, this one is bust\n          if (count <= 100) count += 1\n        }\n        break;\n      }\n      kill -= 1;\n      if (kill <= 0) build = false;\n    }\n    wallCount += 1;\n  }\n}","export const COLORS = {\n  base04: '#07111Dff',\n  base03: '#02252e',\n  // base03: '#002b36',\n  base02: '#073642',\n  base01: '#586e75',\n  base00: '#657b83',\n  // base0: '#96641Dff',\n  base0: '#839496',\n  base1: '#93a1a1',\n  // base2: '#E19D3Fff',\n  base2: '#eee8d5',\n  base3: '#fdf6e3',\n  yellow: '#b58900',\n  orange: '#cb4b16',\n  red: '#dc322f',\n  magenta: '#d33682',\n  violet: '#6c71c4',\n  blue: '#268bd2',\n  cyan: '#2aa198',\n  green: '#859900',\n  // // base1: '#07111Dff',\n  // base1: '#0B0B0Bff',\n  // base2: '#5A7178ff',\n  // base3: '#B6ACA3ff',\n  // base4: '#EDF6F1ff',\n  cog1: '#27295f',\n  cog2: '#3e7dc9',\n  cog3: '#18c0f8',\n  cog4: '#86C8E4ff',\n  locust0: '#423a18',\n  locust1: '#96641Dff',\n  locust2: '#E19D3Fff',\n  // locust2: '#F89339ff',\n  locust3: '#E7C898ff',\n  flesh1: '#833139ff',\n  flesh2: '#CC7468ff',\n  flesh3: '#DDA78Fff',\n  gray: '#6D7886ff',\n}\nexport const TILE_KEY = {\n  'GROUND': {\n    background: COLORS.base03,\n    foreground: COLORS.base01,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'EMERGENCE_DESTROYED': {\n    background: COLORS.base04,\n    foreground: COLORS.locust0,\n    character: '',\n    // sprite: '',\n    sprite: '',\n    passable: true,\n  },\n  'EMERGENCE_GROUND': {\n    background: COLORS.locust0,\n    foreground: COLORS.locust1,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'EMERGENCE_OUTER_GROUND': {\n    background: COLORS.locust0,\n    foreground: COLORS.locust2,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'FLOOR': {\n    background: COLORS.base02,\n    foreground: COLORS.locust1,\n    character: '',\n    passable: true,\n  },\n  'WALL': {\n    background: COLORS.locust0,\n    foreground: COLORS.locust2,\n    character: '#',\n    sprite: '',\n    passable: false,\n  },\n  'DOOR': {\n    background: COLORS.locust0,\n    foreground: COLORS.base1,\n    character: '+',\n    sprite: '',\n    passable: true,\n  },\n  'SAFE': {\n    background: COLORS.locust0,\n    foreground: COLORS.green,\n    character: '+',\n    sprite: '',\n    passable: true,\n  },\n}\n\nexport const STAT_RENDERERS = {\n  'amount': {\n    background: COLORS.base04,\n    foreground: COLORS.locust2,\n    character: '#',\n  },\n  'attackRange': {\n    background: COLORS.green,\n    foreground: COLORS.base3,\n    character: '==>',\n  },\n  'magazine': {\n    background: COLORS.gray,\n    foreground: COLORS.base3,\n    character: '!!',\n  },\n  'baseRangedAccuracy': {\n    background: COLORS.violet,\n    foreground: COLORS.base3,\n    character: '*',\n  },\n  'baseRangedDamage': {\n    background: COLORS.red,\n    foreground: COLORS.base3,\n    character: 'x',\n    sprite: '',\n  },\n  'meleeDamage': {\n    background: COLORS.red,\n    foreground: COLORS.base3,\n    character: 'x',\n    sprite: '',\n  },\n} \n\n// GiArcheryTarget / GiBullseye / GiCrosshair -- accuracy\n// GiBullets -- ammo\n// GiBackwardTime -- ammo / reload\n//  GiBarbedArrow - -range\n// GiBurningDot -- damage\n// GiCog\n\n/*\nSCROLL-O-Sprites\n\n\n\n\n\n\n\n \n*/","import { Jacinto } from './Jacinto/jacinto'\n\nexport default {\n  Jacinto,\n}","import * as Constant from '../../constants';\nimport * as Helper from '../../../helper';\nimport * as Item from '../../items';\nimport * as MapHelper from '../../Maps/helper';\nimport { generate as generateBuilding } from '../../Maps/generator';\nimport { CoverWall, Debris, Bandit, RangedBandit, EmergenceHole } from '../../Entities/index';\nimport { MESSAGE_TYPE } from '../../message';\nimport { Mode } from '../default';\nimport SOUNDS from '../../sounds';\nimport * as _ from 'lodash';\nimport {COLORS, TILE_KEY} from './theme';\n\nexport class Jacinto extends Mode {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.data = {\n      level: 1,\n      highestLevel: null,\n      turnCount: 0,\n    };\n    this.dataByLevel = [\n      {\n        enemies: Array(1).fill('Bandit'),\n        // enemies: Array(10).fill('Bandit'),\n      },\n      {\n        enemies: Array(10).fill('Bandit'),\n      },\n    ]\n  }\n\n  initialize () {\n    super.initialize();\n    this.game.tileKey = TILE_KEY\n    this.game.createEmptyLevel();\n    this.game.initializeMapTiles();\n    \n    this.setWaveData();\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      { x: 31, y: 9 },\n      4,\n      4,\n      'SAFE',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    generateBuilding(this.game.map, 10, 10, 2, 4);\n    generateBuilding(this.game.map, 20, 5, 6, 4);\n\n    this.placePlayersInSafeZone();\n    let groundTiles = Object.keys(this.game.map).filter((key) => this.game.map[key].type === 'GROUND')\n    this.data.enemies.forEach((enemyName) => {\n      let pos = Helper.getRandomInArray(groundTiles);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this[`add${enemyName}`]({ x: posXY[0], y: posXY[1] });\n    })\n\n    // let floorTiles = Object.keys(this.game.map).filter((key) => this.game.map[key].type === 'FLOOR')\n    for (let index = 0; index < 20; index++) {\n      let pos = Helper.getRandomInArray(groundTiles);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addCover({ x: posXY[0], y: posXY[1] });\n    }\n\n    for (let index = 0; index < 2; index++) {\n      let pos = Helper.getRandomInArray(groundTiles);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addEmerenceHole({ x: posXY[0], y: posXY[1] });\n    }\n  }\n\n  getPlayers () {\n    return this.game.engine.actors.filter((actor) => actor.entityTypes.includes('PLAYING'))\n  }\n\n  updateUI() {\n    _.each(this.getPlayers(), (player, index) => {\n      const currentBlips = Math.floor(player.energy / 100);\n      const maxBlips = Math.floor(player.speed / 100);\n      const arr = [\n        ...Array(currentBlips).fill(''),\n        ...Array(maxBlips - currentBlips).fill('_'),\n      ];\n      this.createOrUpdateInfoBlock(`playerSpeed${player.id}`, { text: `${player.name} | AP: ${arr.join(' ')}` })\n      // this.createOrUpdateInfoBlock(`playerSpeed`, { text: `AP: ${player.energy}/${player.speed}` })\n    })\n  }\n\n  update () {\n    super.update();\n    // this.updateUI();\n    if (this.hasWon()) {\n      this.game.toWin()\n    }\n    if (this.hasLost()) {\n      SOUNDS.lose.play();\n      this.game.toLose();\n      this.reset();\n      this.game.initializeGameData();\n    }\n    if (this.levelComplete()) {\n      this.nextLevel();\n      this.setWaveData();\n\n      // a hack to persist player data\n      // this would persist all existing actors however\n      this.initialize();\n      // this.game.initializeGameData();\n    }\n  }\n  \n  //Extras\n  setLevel (level) {\n    this.data.level = level;\n    this.data.turnCount = 0;\n  }\n\n  nextLevel () {\n    this.setLevel(this.data.level + 1);\n  }\n\n  reset () {\n    this.setLevel(1);\n    this.initialize();\n  }\n\n  setWaveData () {\n    const level = this.data.level - 1\n    const nextLevelData = _.get(this.dataByLevel, level, {});\n    this.data = {...this.data, ...nextLevelData}\n  }\n\n  levelComplete () {\n    return this.game.engine.actors.length === 1; \n  }\n\n  hasWon () {\n    return this.data.level > this.dataByLevel.length;\n  }\n\n  hasLost () {\n    let players = this.getPlayers()\n    if (!players.length) return true;\n    else if (players.length) {\n      if (players[0].durability <= 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  addEmerenceHole(pos) {\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      {x: pos.x - 1, y: pos.y - 1},\n      3,\n      3,\n      'EMERGENCE_GROUND',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    // create new fire actor and place\n    let entity = new EmergenceHole({\n      name: 'Hole',\n      pos,\n      game: this.game,\n      passable: true,\n      renderer: {\n        character: '',\n        sprite: '',\n        color: COLORS.locust1,\n        background: COLORS.base04,\n      },\n      timeToSpread: 1,\n      spreadCount: 3,\n      durability: 1,\n      speed: Constant.ENERGY_THRESHOLD,\n      getSpawnedEntity: (spawnPosition) => {\n        let players = this.getPlayers()\n        let targetEntity = players[0]\n        const banditStats = this.getBanditStats();\n        let entity = new banditStats.entityClass({\n          targetEntity,\n          pos: spawnPosition,\n          renderer: banditStats.renderer,\n          name: banditStats.name,\n          game: this.game,\n          actions: [],\n          attackDamage: banditStats.attackDamage,\n          durability: banditStats.durability,\n          speed: banditStats.speed,\n          // directional projectile destruction breaks engine\n          getProjectile: ({ pos, targetPos, direction, range }) => Item.directionalKunai(this.game.engine, { ...pos }, direction, range)\n          // getProjectile: ({ pos, targetPos, direction, range }) => Item.kunai(game.engine, { ...pos }, { ...targetPos })\n        });\n\n        return entity\n      },\n      onDestroy: () => this.game.map[Helper.coordsToString(pos)].type = 'EMERGENCE_DESTROYED',\n    });\n\n    if (this.game.placeActorOnMap(entity)) {\n      this.game.engine.addActor(entity);\n      this.game.draw();\n    };\n  }\n\n  addCover (\n    pos,\n    name = 'box',\n    character = '%',\n    durability = 5,\n    background = COLORS.locust0\n  ) {\n    let sprite = Helper.getRandomInArray(['', '', '', '', '', '']);\n    switch (character) {\n      case '%':\n        sprite = Helper.getRandomInArray(['', '']);\n        break;\n      case 'm':\n        sprite = Helper.getRandomInArray(['', '']);\n        break;\n      case 'H':\n        sprite = Helper.getRandomInArray(['', '']);\n        break;\n      case 'Xs':\n        sprite = ''\n        break;\n      case 'X':\n        sprite = ''\n        break;\n      case 'XL':\n        sprite = ''\n        break;\n      default:\n        sprite = '';\n        break;\n    }\n\n    let box = new CoverWall({\n      pos,\n      renderer: {\n        character,\n        sprite,\n        color: COLORS.locust2,\n        background,\n      },\n      name,\n      game: this.game,\n      durability,\n      accuracyModifer: -0.3,\n      damageModifer: 0,\n    })\n\n    this.game.placeActorOnMap(box)\n  }\n  \n  getBanditStats () {\n    let banditLevels = [\n      {\n        name: 'Grub',\n        renderer: {\n          character: Helper.getRandomInArray(['g']),\n          color: COLORS.flesh2,\n          background: COLORS.flesh1,\n          sprite: '',\n          // sprite: '',\n        },\n        durability: 3,\n        attackDamage: 1,\n        speed: 100,\n        entityClass: RangedBandit\n      },\n      {\n        name: 'Wretch',\n        renderer: {\n          character: Helper.getRandomInArray(['w']),\n          color: COLORS.flesh1,\n          background: COLORS.flesh3,\n          sprite: '',\n        },\n        durability: 1,\n        attackDamage: 1,\n        speed: 500,\n        entityClass: Bandit\n      },\n    ]\n    return Helper.getRandomInArray(banditLevels);\n  }\n\n  addBandit (pos) {\n    let players = this.getPlayers()\n    let targetEntity = players[0]\n    const banditStats = this.getBanditStats();\n    let entity = new banditStats.entityClass({\n      targetEntity,\n      pos,\n      renderer: banditStats.renderer,\n      name: banditStats.name,\n      game: this.game,\n      actions: [],\n      attackDamage: banditStats.attackDamage,\n      durability: banditStats.durability,\n      speed: banditStats.speed,\n      // directional projectile destruction breaks engine\n      getProjectile: ({ pos, targetPos, direction, range }) => Item.directionalKunai(this.game.engine, { ...pos }, direction, range)\n      // getProjectile: ({ pos, targetPos, direction, range }) => Item.kunai(game.engine, { ...pos }, { ...targetPos })\n    })\n    if (this.game.placeActorOnMap(entity)) {\n      this.game.engine.addActor(entity);\n      // this.game.draw();\n    };\n  }\n\n  placePlayersInSafeZone () {\n    let players = this.getPlayers()\n    const keys = Object.keys(this.game.map).filter((key) => this.game.map[key].type == 'SAFE');\n    players.forEach((player) => {\n      const key = keys.shift();\n      if (key) {\n        const position = {\n          x: parseInt(key.split(',')[0]),\n          y: parseInt(key.split(',')[1]),\n        }\n        player.pos = position;\n        let tile = this.game.map[key];\n        if (tile) {\n          tile.entities.push(player);\n        }\n      }\n    })\n  }\n\n}\n","import uuid from 'uuid/v1';\nimport {merge} from 'lodash';\n\nexport class Mode {\n  constructor({\n    game = null,\n    data = {},\n  }) {\n    let id = uuid();\n    this.id = id;\n    this.game = game;\n    this.data = data;\n    this.infoBlocks = {}\n    this.progressBars = {}\n  }\n\n  initialize() {}\n\n  update() {}\n\n  createOrUpdateInfoBlock(id, value) {\n    merge(this.infoBlocks, {[id]: value})\n  }\n}","import React from 'react';\nimport * as ROT from 'rot-js';\nimport * as Constant from './constants';\nimport * as Helper from '../helper';\nimport * as Message from './message';\nimport { Display } from './Display/konvaCustom';\nimport Mode from './Modes/index';\nimport * as _ from 'lodash';\n\n// const MAP_DATA = require('./Maps/castle.json');\n// const SOLANGE = require('./Data/solange.json');\n\nconst MAP_WIDTH = 60;\nconst MAP_HEIGHT = 25;\n\nconst TILE_OFFSET = 0;\n\nconst TILE_WIDTH = 30;\nconst TILE_HEIGHT = TILE_WIDTH;\n\nconst canvasWidth = (MAP_WIDTH * TILE_WIDTH) + TILE_OFFSET;\nconst canvasHeight = (MAP_HEIGHT * TILE_HEIGHT) + TILE_OFFSET;\n\nexport class Game {\n  constructor({\n    engine = null,\n    map = {},\n    entityMap = {},\n    entityDictionary = {},\n    mapInitialized = false,\n    tileMap = {},\n    mapWidth = MAP_WIDTH,\n    mapHeight = MAP_HEIGHT,\n    cameraWidth = MAP_WIDTH,\n    cameraHeight = MAP_HEIGHT,\n    tileWidth = TILE_WIDTH,\n    tileHeight = TILE_HEIGHT,\n    tileOffset = TILE_OFFSET,\n    getSelectedCharacter = () => false,\n    spriteMode = true,\n    tileKey = Constant.TILE_KEY,\n    mode = Mode.Flume,\n    messages = [],\n  }) {\n    this.engine = engine;\n    this.map = map;\n    this.entityMap = entityMap;\n    this.entityDictionary = entityDictionary;\n    this.mapInitialized = mapInitialized;\n    this.tileMap = tileMap;\n    this.mapWidth = mapWidth;\n    this.mapHeight = mapHeight;\n    this.cameraWidth = cameraWidth;\n    this.cameraHeight = cameraHeight;\n    this.tileWidth = tileWidth;\n    this.tileHeight = tileHeight;\n    this.tileOffset = tileOffset;\n    this.display = new Display({\n      containerId: 'display',\n      width: canvasWidth,\n      height: canvasHeight,\n      tileWidth: tileWidth,\n      tileHeight: tileHeight,\n      tileOffset: tileOffset,\n      game: this,\n    });\n    this.spriteMode = spriteMode;\n    this.tileKey = tileKey;\n    this.mode = new mode({game: this});\n    this.messages = messages;\n    this.getSelectedCharacter = getSelectedCharacter;\n  }\n\n  initializeMode () {\n    this.mode.initialize();\n  }\n  \n  updateMode () { // this is run every game turn\n    this.mode.update();\n  }\n\n  randomlyPlaceActorOnMap(actor) {\n    let kill = 0;\n    let placed = false;\n    while (!placed) {\n      let pos = Helper.getRandomPos(this.map).coordinates\n      if (this.canOccupyPosition(pos, actor)) {\n        let tile = this.map[Helper.coordsToString(pos)]\n        actor.pos = { ...pos }\n        tile.entities.push(actor);\n        placed = true;\n      }\n      kill += 1;\n      if (kill >= 100) {\n        placed = true;\n      }\n    }\n    return placed;\n  }\n\n  randomlyPlaceAllActorsOnMap() {\n    this.engine.actors.forEach((actor) => {\n      this.randomlyPlaceActorOnMap(actor);\n    })\n  }\n\n  placeActorsOnMap() {\n    this.engine.actors.forEach((actor) => {\n      let tile = this.map[Helper.coordsToString(actor.pos)]\n      if (tile) {\n        tile.entities.push(actor);\n      } else {\n        console.log(`could not place ${actor.id}: ${actor.name} on map`);\n      }\n    })\n  }\n\n  placeActorOnMap(actor) {\n    let tile = this.map[Helper.coordsToString(actor.pos)]\n    if (tile) {\n      tile.entities.push(actor);\n      return true\n    } else {\n      console.log(`could not place ${actor.id}: ${actor.name} on map`);\n      return false\n    }\n  }\n\n  removeActorFromMap (actor) {\n    let tile = this.map[Helper.coordsToString(actor.pos)]\n    if (!tile) return false;\n    this.map[Helper.coordsToString(actor.pos)].entities = tile.entities.filter((ac) => ac.id !== actor.id);\n    return true;\n  }\n\n  createLevel () {\n    let digger = new ROT.Map.Arena(this.mapWidth, this.mapHeight);\n    // let digger = new ROT.Map.Rogue();\n    // let digger = new ROT.Map.DividedMaze();\n    // let digger = new ROT.Map.EllerMaze();\n    // let digger = new ROT.Map.Cellular();\n    // let digger = new ROT.Map.Digger(this.mapWidth, this.mapHeight);\n    // let digger = new ROT.Map.IceyMaze();\n    // let digger = new ROT.Map.Uniform();\n    let freeCells = [];\n    let digCallback = function (x, y, value) {      \n      let key = x + \",\" + y;\n      let type = 'GROUND';\n      let currentFrame = 0;\n      if (value) { \n        type = 'WALL';\n        // type = 'WATER';\n      }\n\n      if (this.tileKey[type].animation) {\n        currentFrame = Helper.getRandomInt(0, this.tileKey[type].animation.length)\n      }\n\n      this.map[key] = {\n        type,\n        currentFrame,\n        entities: [],\n      };\n      freeCells.push(key);\n    }\n    digger.create(digCallback.bind(this));\n    this.randomlyPlaceAllActorsOnMap()\n  }\n\n  createEmptyLevel () {\n    for (let i = 0; i < this.mapHeight; i ++) {\n      for (let j = 0; j < this.mapWidth; j ++) {\n        const key = `${j},${i}`\n        let type = 'GROUND';\n        let currentFrame = 0;\n\n        if (this.tileKey[type].animation) {\n          currentFrame = Helper.getRandomInt(0, this.tileKey[type].animation.length)\n        }\n\n        this.map[key] = {\n          type,\n          currentFrame,\n          entities: [],\n        };\n      }\n    }\n  }\n\n  createCustomLevel (data) {\n    Object.keys(data.tiles).forEach((key, i) => {\n      const tile = data.tiles[key];\n      let type = tile.data.type;\n      let currentFrame = 0;\n      if (!type) {\n        type = 'GROUND';\n      }\n\n      if (this.tileKey[type].animation) {\n        currentFrame = Helper.getRandomInt(0, this.tileKey[type].animation.length)\n      }\n\n    \n      this.map[key] = {\n        type,\n        currentFrame,\n        entities: [],\n      };\n    })\n\n    // this.placeInitialEntities();\n  }\n\n  canOccupyPosition (pos, entity = {passable: false}) {\n    let result = false;\n    let targetTile = this.map[Helper.coordsToString(pos)];\n    if (targetTile) {\n      let hasImpassableEntity = targetTile.entities.filter((entity) => !entity.passable).length > 0;\n      if (!hasImpassableEntity || entity.passable) {\n        let tile = this.map[Helper.coordsToString(pos)];\n        if (this.tileKey[tile.type].passable) {\n          result = true;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  rangedCursorCanOccupyPosition (pos, entity = {passable: false}) {\n    let result = false;\n    let targetTile = this.map[Helper.coordsToString(pos)];\n    if (targetTile) {\n      let tile = this.map[Helper.coordsToString(pos)];\n      if (this.tileKey[tile.type].passable) {\n        result = true;\n      }\n    }\n\n    return result;\n  }\n\n  cursorCanOccupyPosition(pos) {\n    let result = false;\n    let targetTile = this.map[Helper.coordsToString(pos)];\n    if (targetTile) {\n      result = true;\n    }\n\n    return result;\n  }\n\n  show (document) {\n    this.display.initialize(document)\n  }\n\n  getRenderMap(fullMap, referencePosition, renderWidth, renderHeight, fullWidth, fullHeight) { \n    // create an object with only tile keys that should be rendered (around player)\n    // renderWidth/Height measured in tiles\n    // reference positon usually based on player pos\n    // position from fullMap key should be translated to 0,0 based on referencePos\n    \n    const renderPaddingX = Math.floor((renderWidth / 2));\n    const renderPaddingY = Math.floor((renderHeight / 2));\n    let offsetX = 0;\n    let offsetY = 0;\n    if (referencePosition) {\n      offsetX = referencePosition.x - renderPaddingX;\n      offsetY = referencePosition.y - renderPaddingY;\n    }\n    offsetX = Helper.clamp(offsetX, 0, fullWidth - renderWidth);\n    offsetY = Helper.clamp(offsetY, 0, fullHeight - renderHeight);\n    \n    let result = {}\n    for (let key in fullMap) {\n      let parts = key.split(\",\");\n      let x = parseInt(parts[0]);\n      let y = parseInt(parts[1]);\n      let finalX = x - offsetX;\n      let finalY = y - offsetY;\n      if (finalX >= 0 && finalX <= renderWidth) {\n        if (finalY >= 0 && finalY <= renderHeight) {\n          result[`${finalX},${finalY}`] = fullMap[key]\n        }\n      }\n    }\n    return result\n  }\n\n  processTileMap (callback) {\n    // const map = this.map;\n    // const map = this.getRenderMap(this.map, this.getPlayerPosition(), this.mapWidth, this.mapHeight);\n    // const map = this.getRenderMap(this.map, this.getPlayerPosition(), 50, 25, this.mapWidth, this.mapHeight);\n    const map = this.getRenderMap(this.map, this.getPlayerPosition(), this.cameraWidth, this.cameraHeight, this.mapWidth, this.mapHeight);\n    for (let key in map) {\n      let parts = key.split(\",\");\n      let x = parseInt(parts[0]);\n      let y = parseInt(parts[1]);\n      let tile = map[key];\n      // let { foreground, background } = this.tileKey[tile.type]\n      // Proto code to handle tile animations\n      let tileRenderer = this.tileKey[tile.type]\n      let nextFrame = this.animateTile(tile, tileRenderer);\n      let character = nextFrame.character;\n      let foreground = nextFrame.foreground;\n      let background = nextFrame.background;\n      \n      const renderedEntities = tile.entities.filter((entity) => entity.entityTypes.includes('RENDERING'))\n      if (renderedEntities.length > 0) {\n        let entity = renderedEntities[renderedEntities.length - 1]\n        nextFrame = this.animateEntity(entity);\n\n        character = nextFrame.character\n        foreground = nextFrame.foreground\n        if (nextFrame.background) {\n          background = nextFrame.background\n        }\n      }\n      callback(key, x, y, character, foreground, background);          \n    }\n  }\n\n  initializeMapTiles () {\n    if (this.mapInitialized) return false;\n    this.mapInitialized = true;\n    this.processTileMap((key, x, y, character, foreground, background) => {\n      let node = this.display.createTile(x, y, character, foreground, background);\n      this.tileMap[key] = node;\n    });\n  }\n\n  getPlayers () {\n    return this.engine.actors.filter((actor) => actor.entityTypes.includes('PLAYING'))\n  }\n\n  getFirstPlayer () {\n    const players = this.getPlayers();\n    if (players.length) return players[0]\n    return null\n  }\n\n  getPlayerPosition () {\n    return this.getFirstPlayer().pos;\n  }\n  \n  draw () {\n    this.processTileMap((key, x, y, character, foreground, background) => {\n      this.display.updateTile(this.tileMap[key], character, foreground, background);\n    });\n    this.display.draw();\n  }\n\n  getEntityRenderer (renderer) {\n    // if sprite mode is on and the renderer has a sprite defined, use that\n    if (this.spriteMode && renderer.hasOwnProperty('sprite')) {\n      return {...renderer, character: renderer.sprite, foreground: renderer.color}\n      // return {character: renderer.sprite, foreground: renderer.background, background: ''}\n    }\n    // else us the ascii character\n    return {...renderer, foreground: renderer.color}\n  }\n\n  getTileRenderer (renderer) {\n    // if sprite mode is on and the renderer has a sprite defined, use that\n    if (this.spriteMode && renderer.hasOwnProperty('sprite')) {\n      return {...renderer, character: renderer.sprite}\n    }\n    // else us the ascii character\n    return renderer\n  }\n  \n  animateEntity (entity) {\n    let renderer = entity.getRenderer();\n    let { character, foreground, background } = this.getEntityRenderer(renderer)\n    if (renderer.animation) {\n      let frame = this.getEntityRenderer(renderer.animation[entity.currentFrame]);\n      character = frame.character;\n      foreground = frame.foreground;\n      background = frame.background;\n      entity.currentFrame = (entity.currentFrame + 1) % renderer.animation.length;\n    }\n    return {character, foreground, background}\n  }\n\n  animateTile (tile, renderer) {\n    let {character, foreground, background} = this.getTileRenderer(renderer)\n    if (renderer.animation) {\n      let frame = this.getTileRenderer(renderer.animation[tile.currentFrame]);\n      character = frame.character\n      foreground = frame.foreground;\n      background = frame.background;\n      tile.currentFrame = (tile.currentFrame + 1) % renderer.animation.length;\n    }\n    return {character, foreground, background}\n  }\n\n  addActor (actor, engine = this.engine) {\n    let isPlaced = this.placeActorOnMap(actor); // replace with placeActorOnMap\n    if (!isPlaced) { return false }\n    engine.actors.push(actor);\n    this.draw();\n    return true\n  }\n\n  placeAndDrawActor (actor) {\n    this.placeActorsOnMap(); // replace with placeActorOnMap\n    this.draw();\n  }\n\n  removeActor (actor) {\n    this.engine.actors = this.engine.actors.filter((ac) => ac.id !== actor.id);\n    // this.engine.currentActor = this.engine.actors.length - 1; // should remove need for this line\n    // this.engine.currentActor = (this.engine.currentActor) % this.engine.actors.length;\n    // this.engine.currentActor = (this.engine.currentActor + 1) % this.engine.actors.length;\n    this.removeActorFromMap(actor);\n    this.draw();\n  }\n\n  initializeUI (presserRef, document) {\n    this.show(document);\n    presserRef.current.focus();\n  }\n\n  initializeGameData () {\n    this.engine.game = this;\n    const selectedCharacter = this.getSelectedCharacter();\n    this.engine.actors = [selectedCharacter];\n    this.engine.actors.forEach((actor) => {\n      actor.game = this;\n    });\n    // this.createEmptyLevel();\n    // this.initializeMapTiles();\n    this.initializeMode();\n    this.draw();\n  }\n\n  initialize (presserRef, document) {\n    this.initializeUI(presserRef, document);\n    this.initializeGameData();\n    // hack to register sprite mode\n    setTimeout(() => {\n      this.spriteMode = false;\n      this.draw()\n    }, 500)\n    setTimeout(() => {\n      this.spriteMode = true;\n      this.draw()\n    }, 500)\n    // end hack\n  }\n\n  addMessage (text, type) {\n    const message = new Message.Message({text, type})\n    this.messages.push(message);\n  }\n}\n\n\n/************************** UI ********************************/\nexport const handleKeyPress = (event, engine) => {\n  if (!engine.isRunning) {\n    let actor = engine.actors[engine.currentActor];\n    let keymap = null;\n    try {\n      keymap = actor.getKeymap();\n    } catch (e) {\n      console.log('keypress error');\n      console.log(e);\n    }\n    if (keymap) {\n      let code = event.key;\n      if (!(code in keymap)) { return; }\n      const getAction = keymap[code];\n      const action = getAction();\n      // const action = keymap[code];\n      action.setAsNextAction();\n      engine.start();\n    }\n  }\n  return;\n}\n\nexport const DisplayElement = (presserRef, handleKeyPress, engine) => {\n  return (\n    <div\n      id='display'\n      ref={presserRef}\n      onKeyDown={(event) => handleKeyPress(event, engine)}\n      // onKeyUp={(event) => handleKeyPress(event, engine)}\n      tabIndex='0'\n    />\n  )\n}\n/************************** UI ********************************/\n","import React from 'react';\nimport { SCREENS } from '../Screen/constants';\nimport * as _ from 'lodash';\n\nclass Instructions extends React.Component {\n  render() {\n    const infoHeader = _.get(this.props.game, 'mode.infoHeader', null);\n    const infoBlocks = _.get(this.props.game, 'mode.infoBlocks', {});\n\n    return (\n      <div className=\"Instructions UI\">\n        {infoHeader && (<p className='flow-text'>{infoHeader}</p>)}\n        <div className='flow-text'>\n          {\n            _.map(infoBlocks, (value, key) => {\n              return (\n                <div key={key} className='Instructions__block'>\n                  {value.text}\n                </div>\n              )\n            })\n          }\n          <div \n            className='Instructions__block'\n            onClick={() => this.props.setActiveScreen(SCREENS.TITLE)}\n          >\n            <button className='btn btn-main'>\n              Restart\n            </button>\n          </div>\n          <div \n            className='Instructions__block'\n            onClick={() => this.props.toggleSpriteMode()}\n          >\n            <button className='btn btn-main'>\n              {\n                this.props.spriteMode ? (\n                  'ASCII mode'\n                ) : (\n                  'Sprite mode'\n                )\n              }\n            </button>\n          </div>\n          <div\n            className='Instructions__block'\n          >\n            <button data-target=\"jacinto_help\" className='btn btn-main modal-trigger'>\n              Help\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Instructions;","import React from 'react';\n\nfunction Button(props) {\n  let color = props['color'];\n  if (!color) color = 'grey';\n  return (\n    <button\n      onClick={props.onClick}\n      className={`Button btn ${color}`}\n    >\n      {props.children}  \n    </button>\n  )\n}\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\n\nclass Information extends React.Component {\n  render() {\n    let data = [\n      {\n        label: 'Wave',\n        value: `Current: ${this.props.game.mode.data.level}, Highest: ${this.props.game.mode.data.highestLevel}`,\n      },\n    ];\n\n    data = data.concat(\n      [\n        ...this.props.game.engine.actors.map((actor, index) => {\n          let result = {\n            label: actor.name,\n            // value: index,\n            value: `HP: ${actor.durability}, En/Sp: ${actor.energy}/${actor.speed}`,\n          };\n          if (index === this.props.game.engine.currentActor) {\n            result['color'] = 'red';\n          }\n          return result;\n        })\n      ]\n    )\n\n    return (\n      <div className=\"Information UI\">\n        {\n          data && (\n            data.map((item, index) => {\n              return (\n                <Button key={index} color={item['color']} onClick={() => null}>\n                  {`${item.label}: ${item.value}`}\n                </Button>\n              )\n            })\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Information;","import React from 'react';\n\nfunction Tooltip ({title = 'Effect', text = '', children}) {\n  return (\n    <div className=\"Tooltip\">\n      {children}\n      <div className=\"top\">\n        <h3>{title}</h3>\n        <p>{text}</p>\n        <i></i>\n      </div>\n    </div>\n  )\n}\n\nexport default Tooltip;\n","import React from 'react';\nimport * as _ from 'lodash';\nimport Tooltip from './Tooltip';\n\nfunction ResourceBlock({ resource, superScript, canPay }) {\n  const character = resource.renderer.sprite ? resource.renderer.sprite : resource.renderer.character\n  return (\n    <div className=\"ResourceBlock\" style={{\n      backgroundColor: canPay ? resource.renderer.background : '#616161',\n      color: canPay ? resource.renderer.color : '#bdbdbd',\n      borderColor: canPay ? resource.renderer.color : '#bdbdbd',\n      fontFamily: 'scroll-o-script',\n      width: superScript ? 'auto' : 20,\n    }}>\n      {`${superScript ? superScript + ' ' : ''}${character}`}\n    </div>\n  )\n}\n\nclass ActionBar extends React.Component {\n  render() {\n    return (  \n      <div className=\"ActionBar\">\n        <div className=\"CharacterActions\">\n          {\n            \n            this.props.keymap && (\n              Object.entries(this.props.keymap).map(([key, getAction], index) => {\n                const action = getAction();\n                const hidden = _.get(action, 'hidden', false);\n                const renderer = _.get(action, 'renderer', null);\n                const reqs = action.listPayableResources();\n\n                if (!hidden) {\n                  return (\n                    <Tooltip\n                      key={`${index}-label`}\n                      title={action.label}\n                      text={action.label + ` ${action.actor.name}`}\n                    >\n                      <div \n                        className=\"CharacterActions__item\"\n                        onClick={() => {\n                          action.setAsNextAction();\n                          if (!this.props.game.engine.isRunning) this.props.game.engine.start();\n                          this.props.game.refocus();\n                        }}\n                      >\n                        <div className=\"CharacterActions__item__label\">\n                          {action.label}\n                        </div>\n                        <div className=\"CharacterActions__item__content\" style={renderer && {\n                          backgroundColor: renderer.background,\n                          color: renderer.color,\n                          borderColor: renderer.color,\n                        }}>\n                          {key}\n                        </div>\n                        <div className=\"CharacterActions__item__resources\">\n                          {\n                            reqs.map((req, i) => {\n                              const numBlocks = req.getResourceCost();\n                              return numBlocks > 0 && (\n                                <ResourceBlock\n                                  key={`${i}-${req.name}-resource-block`}\n                                  superScript={numBlocks}\n                                  resource={req}\n                                  canPay={req.canPay}\n                                />\n                              )\n                            })\n                          }\n                        </div>\n                      </div>\n                    </Tooltip>\n                  )\n                }\n              })\n            )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ActionBar;","import React from 'react';\nimport * as _ from 'lodash';\nimport Tooltip from '../Tooltip';\nimport ActionBar from '../ActionBar';\n\nfunction Portrait ({actor}) {\n  return (\n    <div className=\"Portrait\" style={{\n      backgroundColor: actor.renderer.background, \n      color: actor.renderer.color,\n      borderColor: actor.renderer.color,\n    }}>\n      {actor.renderer.sprite ? actor.renderer.sprite : actor.renderer.character}\n    </div>\n  )\n}\n\nfunction StatusEffect ({effect}) {\n  return (\n    <div className=\"StatusEffects__effect\" style={{\n      backgroundColor: effect.renderer.background, \n      color: effect.renderer.color,\n      borderColor: effect.renderer.color,\n    }}>\n      {effect.renderer.sprite ? effect.renderer.sprite : effect.renderer.character}\n    </div>\n  )\n}\n\nfunction StatusEffects ({actor}) {\n  return (\n    <div className=\"StatusEffects\">\n      {\n        actor.game.engine.getStatusEffectsByActorId(actor.id).map((effect, i) => {\n          return (\n            <Tooltip \n              key={i}\n              title={effect.name}\n              text={effect.name}\n            >\n              <StatusEffect effect={effect} />\n            </Tooltip>\n          )\n        })\n      }\n    </div>\n  )\n}\n\nfunction NamePlate ({actor}) {\n  return (\n    <div className=\"NamePlate\">\n      {actor.name}\n    </div>\n  )\n}\n\nfunction ProgressBar ({\n  actor, \n  label, \n  colorFilled = 'red',\n  colorEmpty = 'gray',\n  attributePathMax, \n  attributePath, \n  unit,\n}) {\n  const valueMax = _.get(actor, attributePathMax, 0) / unit;\n  const valueCurrent = _.get(actor, attributePath, 0) / unit;\n  return (\n    <div className=\"ProgressBar\">\n      <div>\n        <span className='ProgressBar__label'>{label}</span>\n      </div>\n      <div>\n        <div className='ProgressBar__blips'>\n          {\n            Array(valueMax).fill(true).map((blip, index) => {\n              return (\n                <span \n                  key={index}\n                  className='ProgressBar__blips__blip' \n                  style={{backgroundColor: valueCurrent > index ? colorFilled : colorEmpty }}\n                />\n              )\n            })\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction CharacterCard ({actor, game}) {\n  return (\n    <div className='CharacterCard'>\n      <Portrait actor={actor}/>\n      <div>\n        <NamePlate actor={actor}/>\n        <ProgressBar \n          label='Action Points'\n          attributePath='energy'\n          attributePathMax='speed'\n          colorFilled='#ff9926'\n          unit={100}\n          actor={actor} \n        />\n        <ProgressBar \n          label='Chakara Points'\n          attributePath='charge'\n          attributePathMax='chargeMax'\n          colorFilled='#13b8d7'\n          unit={1}\n          actor={actor} \n        />\n        <ProgressBar \n          label='Upgrade Points'\n          attributePath='upgrade_points'\n          attributePathMax='upgrade_points'\n          colorFilled='#3e7dc9'\n          unit={1}\n          actor={actor} \n        />\n        <StatusEffects actor={actor} />\n      </div>\n      <div>\n        {/* <ActionBar keymap={game.visibleKeymap} game={game} /> */}\n        <ActionBar keymap={actor.getKeymap()} game={game} />\n      </div>\n    </div>\n  )\n}\n\nexport default CharacterCard;\n","import React from 'react';\nimport CharacterCard from './CharacterCard';\nimport * as _ from 'lodash';\n\nconst PlayerInformation = ({game}) => {\n  const actors = game.engine.actors.filter((actor) => actor.entityTypes.includes('PRESENTING_UI')).filter((actor) => actor.presentingUI)\n  return (\n    <div className=\"PlayerInformation Information UI\">\n      <div className='CharacterCard_Container'>\n        {\n          actors.map((actor, index) => <CharacterCard key={index} actor={actor} game={game} />)\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default PlayerInformation;","import React from 'react';\nimport Button from './Button';\n\nclass Inventory extends React.Component {\n  render() {\n    return (\n      <div className=\"Inventory UI\">\n        {\n          this.props.inventory && (\n            <div>\n              <div className='flow-text'>Inventory</div>\n              <div>\n                {\n                  this.props.inventory.map((slot, index) => {\n                    return (\n                      <Button key={index} onClick={() => null}>\n                        {`${slot.itemType} | x ${slot.items.length}`}\n                      </Button>\n                    )\n                  })\n                }\n              </div>\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Inventory;","import React from 'react';\n\nfunction Message (props) {\n  return (\n    <div\n      className='Message'\n      style={{\n        color: props.color,\n        backgroundColor: props.backgroundColor,\n        borderColor: props.color,\n      }}\n    >\n      {props.children}\n    </div>\n  )\n}\n\nclass Messages extends React.Component {\n  render() {\n    return (\n      <div className=\"Messages UI\">\n        <div className='flow-text center'>Messages</div>\n        {\n          this.props.messages && (\n            this.props.messages.map((message, index) => {\n              return (\n                <Message \n                  key={index} \n                  color={message.type.color}\n                  backgroundColor={message.type.backgroundColor}\n                >\n                  {`${message.text}`}\n                </Message>\n              )\n            })\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Messages;","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nexport class EquipItemFromContainer extends Base {\n  // entities can only equip items from their container/inventory\n  constructor({ item, ...args }) {\n    super({ ...args });\n    this.item = item;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (this.item.equipmentType) {\n      let itemInSlot = this.actor.getItemInSlot(this.item.equipmentType);\n      if (itemInSlot) {\n        this.actor.addToContainer(itemInSlot);\n        this.actor.unequip(itemInSlot);\n      }\n      this.actor.removeFromContainer(this.item);\n      this.actor.equip(this.item.equipmentType, this.item);\n      this.game.addMessage(`${this.actor.name} equips ${this.item.name}.`, MESSAGE_TYPE.ACTION);\n      success = true;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import React from 'react';\nimport {\n  GiCrosshair,\n  GiBullets,\n  GiBackwardTime,\n  GiBarbedArrow,\n  GiBurningDot,\n} from \"react-icons/gi\";\nimport Button from '../Button';\nimport {EquipItemFromContainer} from '../../Actions/EquipItemFromContainer';\nimport {STAT_RENDERERS} from '../../Modes/Jacinto/theme';\n\nfunction StatBlock({stat}) {\n  const {getIcon, value, name} = stat;\n  const character = stat.renderer.sprite ? stat.renderer.sprite : stat.renderer.character\n  return (\n    <div \n      className=\"StatBlock\" \n      style={{\n        backgroundColor: stat.renderer.background,\n        color: stat.renderer.foreground,\n        borderColor: stat.renderer.foreground,\n        fontFamily: 'scroll-o-script',\n        width: stat.value !== null ? 'auto' : 20,\n      }}\n      title={name}\n    >\n      {\n        getIcon ? getIcon() : `${character}`\n      }\n      <span>&nbsp;{value}</span>\n    </div>\n  )\n}\n\nconst EquipmentCard = (props) => {\n  const {\n    game,\n    player,\n    data,\n  } = props;\n  const {\n    item,\n    equipped,\n    amount,\n    equipable,\n  } = data;\n\n  let needsReload = false;\n\n  let onClick = () => null;\n  if (equipable) {\n    const action = new EquipItemFromContainer({\n      item,\n      game,\n      energyCost: 0,\n      actor: player,\n      label: `Equip ${item.name}`,\n    });\n    onClick = () => {\n      game.refocus();\n      action.setAsNextAction();\n      game.engine.start();\n    }\n  }\n\n  let stats = [];\n  if (amount) {\n    stats.push({\n      name: 'amount left',\n      value: amount,\n      renderer: STAT_RENDERERS.amount,\n    })\n  }\n  if (item.hasOwnProperty('attackRange')) {\n    stats.push({\n      name: 'attack range',\n      value: item['attackRange'],\n      renderer: STAT_RENDERERS.attackRange,\n      getIcon: () => <GiBarbedArrow />,\n    })\n  }\n  if (item.hasOwnProperty('magazine')) {\n    stats.push({\n      name: 'shots before reload',\n      value: item.magazine,\n      renderer: STAT_RENDERERS.magazine,\n      getIcon: () => <GiBullets />,\n    })\n    if (item.magazine <= 0) {\n      needsReload = true;\n    }\n  }\n  if (item.hasOwnProperty('baseRangedAccuracy')) {\n    stats.push({\n      name: 'base accuracy',\n      value: item['baseRangedAccuracy'],\n      renderer: STAT_RENDERERS.baseRangedAccuracy,\n      getIcon: () => <GiCrosshair />,\n    })\n  }\n  if (item.hasOwnProperty('baseRangedDamage')) {\n    stats.push({\n      name: 'base damage',\n      value: item['baseRangedDamage'],\n      renderer: STAT_RENDERERS.baseRangedDamage,\n      getIcon: () => <GiBurningDot />,\n    })\n  }\n  if (item.hasOwnProperty('attackDamage')) {\n    stats.push({\n      name: 'base melee damage',\n      value: item['attackDamage'],\n      renderer: STAT_RENDERERS.meleeDamage,\n    })\n  }\n  \n  return (\n    <div \n      className={`EquipmentCard ${equipped ? 'EquipmentCard--selected' : ''}`} \n      onClick={() => game.refocus()}\n    >\n      {needsReload && (\n        <div className=\"EquipmentCard__reload_overlay\" onClick={() => player.reload()}>\n          <div className=\"EquipmentCard__reload_overlay__text\">Needs Reload</div>\n          <div className=\"EquipmentCard__reload_overlay__text\"><GiBackwardTime /></div>\n        </div>\n      )}\n      <div\n        className=\"EquipmentCard__item\"\n        onClick={onClick}\n      >\n        <div className=\"EquipmentCard__item__label\">\n          {item.name}\n        </div>\n        <div className=\"EquipmentCard__item__content\" style={item.renderer && {\n          backgroundColor: item.renderer.background,\n          color: item.renderer.color,\n          borderColor: item.renderer.color,\n        }}>\n          {item.renderer.sprite ? item.renderer.sprite : item.renderer.character}\n        </div>\n      </div>\n      <div className=\"EquipmentCard__item__stats\">\n        {\n          stats.map((stat, i) => {\n            return (\n              <StatBlock\n                key={`${i}-${stat.name}-resource-block`}\n                stat={stat}\n              />\n            )\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\nclass Equipment extends React.Component {\n  render() {\n    if (!this.props.player) return null;\n    const player = this.props.player;\n    const game = this.props.game;\n    let items = [];\n    player.equipment.forEach((slot) => {\n      if (slot.item) {\n        items.push({\n          item: slot.item,\n          equipped: true,\n        });\n      }\n    });\n    player.container.forEach((slot) => {\n      if (slot.items.length) {\n        const item = slot.items[0];\n        // disallow duplicates\n        if (items.filter((data) => data.item.name === item.name).length === 0) {\n          const equipable = item.entityTypes.includes('EQUIPABLE');\n          const amount = equipable ? null : slot.items.length;\n          items.push({\n            item,\n            amount,\n            equipable,\n            equipped: false,\n          })\n        }\n      }\n    });\n    return (\n      <div className=\"Equipment UI\">\n        {\n          <div>\n            <div className='flow-text'>Equipment</div>\n            <div>\n              {\n                items.map((item, index) => {\n                  return (\n                    <EquipmentCard \n                      key={index}\n                      game={game} \n                      player={player} \n                      data={item} \n                    />\n                  )\n                })\n              }\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default Equipment;","import React from 'react';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nfunction Help(props) {\n  React.useLayoutEffect(() => {\n    var elems = document.querySelectorAll(`#${props.id}`);\n    window.M.Modal.init(elems)\n  })\n  return (\n    <div id={props.id} className={`Jacinto_Help modal`}>\n      <div className=\"modal-content\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <div className=\"Jacinto_Help__section_header\">Goal</div>\n            <div className=\"Jacinto_Help__section_body\">\n              Defend Jacinto, the last human bastion on Sera. Move block by block and clear the city of \n              <span className=\"red-text\">&nbsp;Grubs</span> until you can locate and defeat their leader, \n              <span className=\"red-text\">&nbsp;Skorge</span>.\n            </div>\n          </div>\n          <div className=\"col s12 m6\">\n            <div className=\"Jacinto_Help__section_header\">Hints</div>\n            <div className=\"Jacinto_Help__section_body\">\n              <div>Stay in cover.</div>\n              <div>Destroy <span className=\"red-text\">Emergence Holes</span> ASAP.</div>\n              <div>Spend <span className=\"blue-text\">Upgrade Points</span></div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <div className=\"Jacinto_Help__section_header\">Controls</div>\n            <div className=\"Jacinto_Help__section_body\">\n              <div>Movement: WASD</div>\n              <div>Actions: click or key press</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"modal-footer\">\n        <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Close</a>\n      </div>\n    </div>\n  )\n}\n\nexport default Help;","import React from 'react';\nimport { SCREENS } from './constants';\nimport * as Engine from '../Engine/engine';\nimport * as Game from '../game';\nimport Instructions from '../UI/Instructions';\nimport Information from '../UI/Information';\nimport PlayerInformation from '../UI/Entity/PlayerInformation';\nimport Inventory from '../UI/Inventory';\n// import KeymapUI from '../UI/Keymap';\nimport KeymapUI from '../UI/ActionBar';\nimport Messages from '../UI/Messages';\nimport Equipment from '../UI/Jacinto/Equipment';\nimport Help from '../UI/Jacinto/Help';\n\nclass Level extends React.Component {\n  constructor(props) {\n    super(props);\n    let ENGINE = new Engine.Engine({});\n    let game = new Game.Game({ \n      engine: ENGINE, \n      getSelectedCharacter: () => this.props.selectedCharacter.initialize(ENGINE),\n      mode: this.props.selectedMode.class,\n    })\n    this.state = {\n      game: game,\n      activeTab: 0,\n      spriteMode: game.spriteMode,\n    };\n    this.presserRef = React.createRef();\n  }\n\n  async componentDidMount() {\n    this.state.game.initialize(this.presserRef, document)\n    this.state.game['backToTitle'] = () => this.props.setActiveScreen(SCREENS.TITLE);\n    this.state.game['toLose'] = () => this.props.setActiveScreen(SCREENS.LOSE);\n    this.state.game['toWin'] = () => this.props.setActiveScreen(SCREENS.WIN);\n    this.state.game['refocus'] = () => this.refocus();\n    this.state.game.updateReact = (newGameState) => { this.setState({game: newGameState}) }\n    this.state.game.engine.start()\n  }\n\n  refocus () {\n    if (this.presserRef) this.presserRef.current.focus();\n  }\n\n  toggleSpriteMode () {\n    this.state.game.spriteMode = !this.state.game.spriteMode;\n    this.state.game.draw();\n    this.refocus();\n    this.setState({ spriteMode: this.state.game.spriteMode})\n  }\n\n  render() {\n    return (\n      <div className=\"Level\">\n        <div className='row'>\n          <div className='col s10'>\n            <div className='game_display_container'>\n              {Game.DisplayElement(this.presserRef, Game.handleKeyPress, this.state.game.engine)}\n            </div>\n            <Help id=\"jacinto_help\" />\n            <PlayerInformation game={this.state.game} />\n            {/* <Information game={this.state.game} /> */}\n            <Instructions game={this.state.game} spriteMode={this.state.game.spriteMode} setActiveScreen={this.props.setActiveScreen} toggleSpriteMode={this.toggleSpriteMode.bind(this)} />\n          </div>\n          <div className='col s2'>\n            <Equipment game={this.state.game} player={this.state.game.getFirstPlayer()} />\n            {/* <Messages messages={this.state.game.messages.slice(-5).reverse()} /> */}\n            {/* <Inventory inventory={this.state.game.visibleInventory} /> */}\n          </div>\n          {/* <div className='col s2'> */}\n          {/* </div> */}\n          {/* <button className='btn' onClick={() => this.props.setActiveScreen(SCREENS.TITLE)}>Quit</button> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Level;\n","import React from 'react';\nimport { SCREENS } from './constants';\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          style={{\n\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: 'rgb(4, 49, 61)',\n            backgroundImage: `url(\"${window.PUBLIC_URL}/fire_man_blue.jpg\")`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundPositionY: '10px'\n\n          }}\n        >\n          <button\n            style={{\n              position: 'relative',\n              top: '280px'\n            }}\n            className={`CharacterSelect__button btn btn-main`}\n            onClick={() => {\n              this.props.setActiveScreen(SCREENS.CHARACTER_SELECT)\n            }}\n          >\n            Play\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;","import React from 'react';\nimport { SCREENS } from '../Screen/constants';\n\nconst CharacterSelect = (props) => {\n  return (\n    <div className='CharacterSelect'>\n      {\n        props.characters.map((character, index) => {\n          let color = '';\n          if (props.selectedCharacter) {\n            color = props.selectedCharacter.name === character.name ? 'red' : ''\n          }\n\n          return (\n            <button\n              key={index}\n              style={{\n                position: 'relative',\n                top: '280px'\n              }}\n              className={`CharacterSelect__button btn btn-main`}\n              onClick={() => {\n                props.setSelectedCharacter(character)\n                props.setActiveScreen(SCREENS.LEVEL)\n              }}\n            >\n              Play as {character.name}\n            </button>\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default CharacterSelect;","import React from 'react';\nimport CharacterSelect from '../UI/CharacterSelect';\n\n\nclass Lose extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          style={{\n\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: '#222',\n            // backgroundColor: 'rgb(4, 49, 61)',\n            backgroundImage: `url(\"${window.PUBLIC_URL}/fire_man_blue.jpg\")`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundPositionY: '10px'\n\n          }}\n        >\n          <CharacterSelect \n            characters={this.props.characters} \n            selectedCharacter={this.props.selectedCharacter} \n            setSelectedCharacter={this.props.setSelectedCharacter}\n            setActiveScreen={this.props.setActiveScreen}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Lose;","import React from 'react';\nimport CharacterSelect from '../UI/CharacterSelect';\n\nclass Win extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          style={{\n\n            width: '100vw',\n            height: '100vh',\n            // backgroundColor: '#eee',\n            backgroundColor: 'rgb(54,160,190)',\n            backgroundImage: `url(\"${window.PUBLIC_URL}/fire_man_blue.jpg\")`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundPositionY: '10px'\n\n          }}\n        >\n          <CharacterSelect \n            characters={this.props.characters} \n            selectedCharacter={this.props.selectedCharacter} \n            setSelectedCharacter={this.props.setSelectedCharacter}\n            setActiveScreen={this.props.setActiveScreen}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Win;","import React from 'react';\nimport { SCREENS } from './constants';\nimport CharacterSelect from '../UI/CharacterSelect';\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          style={{\n\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: 'rgb(4, 49, 61)',\n            backgroundImage: `url(\"${window.PUBLIC_URL}/fire_man_blue.jpg\")`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundPositionY: '10px'\n\n          }}\n        >\n          <CharacterSelect \n            characters={this.props.characters} \n            selectedCharacter={this.props.selectedCharacter} \n            setSelectedCharacter={this.props.setSelectedCharacter}\n            setActiveScreen={this.props.setActiveScreen}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;","import React from 'react';\nimport { SCREENS } from '../Screen/constants';\n\nconst ModeSelect = (props) => {\n  return (\n    <div className='CharacterSelect'>\n      {\n        props.modes.map((mode, index) => {\n          let color = '';\n          if (props.selectedMode) {\n            color = props.selectedMode.name === mode.name ? 'red' : ''\n          }\n\n          return (\n            <button\n              key={index}\n              style={{\n                position: 'relative',\n                top: '280px'\n              }}\n              className={`CharacterSelect__button btn btn-main`}\n              onClick={() => {\n                console.log(mode);\n                \n                props.setSelectedMode(mode)\n                props.setActiveScreen(SCREENS.CHARACTER_SELECT)\n              }}\n            >\n              {mode.name}\n            </button>\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default ModeSelect;","import Level from './Level';\nimport Title from './Title';\nimport Lose from './Lose';\nimport Win from './Win';\nimport CharacterSelect from './CharacterSelect';\nimport ModeSelect from './ModeSelect';\n\nexport default {\n  Level,\n  Title,\n  Win,\n  Lose,\n  CharacterSelect,\n  ModeSelect,\n}","import React from 'react';\nimport { SCREENS } from './constants';\nimport ModeSelect from '../UI/ModeSelect';\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          style={{\n\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: 'rgb(4, 49, 61)',\n            backgroundImage: `url(\"${window.PUBLIC_URL}/fire_man_blue.jpg\")`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundPositionY: '10px'\n\n          }}\n        >\n          <ModeSelect \n            modes={this.props.modes} \n            selectedMode={this.props.selectedMode} \n            setSelectedMode={this.props.setSelectedMode}\n            setActiveScreen={this.props.setActiveScreen}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;","import {ActionResource} from './ActionResource';\n\nexport class ChakraResource extends ActionResource {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.name = 'Chakra';\n    this.actorResourcePath = 'charge';\n    this.renderer = { color: '#224c92', background: '#13b8d7', character: '*', sprite: '' }\n  }\n}","import { Base } from './Base';\nexport class GoToPreviousKeymap extends Base {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.label = 'Close';\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    this.actor.goToPreviousKeymap();\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport * as Helper from '../../helper';\nimport {THEMES} from '../constants';\n\nexport class MoveRangedAttackCursor extends Base {\n  constructor({ direction, range, ...args }) {\n    super({ ...args });\n    this.direction = direction;\n    this.range = range;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    const initiatedFrom = this.actor.getPosition();\n    const targetPos = Helper.getPositionInDirection(this.actor.getCursorPositions()[0], this.direction);\n    const path = Helper.calculateStraightPath(initiatedFrom, targetPos);\n    const isInRange = this.range ? path.length <= this.range : true;\n    const pathIsNotBlocked = path.reduce((acc, curr) => acc && this.game.rangedCursorCanOccupyPosition(curr), true);\n    if (isInRange && pathIsNotBlocked && this.game.rangedCursorCanOccupyPosition(targetPos, this.actor)) {\n    // if (isInRange && this.game.rangedCursorCanOccupyPosition(targetPos, this.actor)) {\n    // if (isInRange) {\n      this.actor.moveCursorInDirection(this.direction);\n      success = true;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { Say } from './Say';\nimport * as Constant from '../constants';\nimport * as Helper from '../../helper';\n\nexport class MultiTargetRangedAttack extends Base {\n  constructor({ targetPositions, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPositions = targetPositions;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (!this.actor.entityTypes.includes('RANGED_ATTACKING')) {\n      return {\n        success: true,\n        alternative: new Say({\n          message: `Ooh I don\\'t know how to attack`,\n          game: this.game,\n          actor: this.actor,\n        }),\n      };\n    }\n    let particlePath = [];\n    let particlePos = { x: this.actor.pos.x, y: this.actor.pos.y };\n    let renderer = this.particleTemplate.renderer;\n    this.targetPositions.forEach((targetPos) => {\n      let [attackSuccess, hit] = this.actor.rangedAttack(targetPos);\n      particlePath.push(targetPos);\n      if (attackSuccess) {\n        success = true;\n        if (!hit) {\n          success = true;\n          this.addParticle(\n            1,\n            { ...targetPos },\n            { x: 0, y: 0 },\n            Constant.PARTICLE_TEMPLATES.fail.renderer,\n          );\n        } else {\n          this.addParticle(\n            particlePath.length + 1,\n            particlePos,\n            null,\n            renderer,\n            Constant.PARTICLE_TYPE.path,\n            particlePath\n          );\n        }\n      }\n    });\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { MoveRangedAttackCursor } from './MoveRangedAttackCursor';\nimport { MultiTargetRangedAttack } from './MultiTargetRangedAttack';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\nimport { DIRECTIONS, ENERGY_THRESHOLD, THEMES, EQUIPMENT_TYPES } from '../constants';\nimport * as Helper from '../../helper';\nimport {find} from 'lodash';\n\nexport class PrepareRangedAttack extends Base {\n  constructor({ \n    passThroughEnergyCost = ENERGY_THRESHOLD, \n    passThroughRequiredResources = [], \n    ...args \n  }) {\n    super({ ...args });\n    this.passThroughEnergyCost = passThroughEnergyCost;\n    this.passThroughRequiredResources = passThroughRequiredResources;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n\n  updateCursors(pathAnimations, initiatedFrom) {\n    const cursorPositions = this.actor.getCursorPositions();\n    const path = Helper.calculateStraightPath(initiatedFrom, this.actor.getCursorPositions()[0]);\n    // removing visible path from last action\n    pathAnimations.forEach((anim) => {\n      this.game.display.removeAnimation(anim.id);\n    })\n    \n    // adding visible path to new cursor position\n    path.slice(1).forEach((pathPos) => {\n      if (!find(cursorPositions, {x: pathPos.x, y: pathPos.y})) {\n        const animation = this.game.display.addAnimation(1, { x: pathPos.x, y: pathPos.y, color: THEMES.SOLARIZED.base3 })\n        pathAnimations.push(animation);\n      }\n    })\n\n    // modifying target curso color based on change to hit\n    cursorPositions.forEach((pos, i) => {\n      const chance = this.actor.getRangedAttackChance(pos);\n      if (chance <= 0) {\n        this.actor.changeCursorColor(i, 'transparent');\n      }\n      if (chance > 0 && chance <= 0.5) {\n        this.actor.changeCursorColor(i, THEMES.SOLARIZED.red);\n      }\n      if (chance > 0.5 && chance <= 0.7) {\n        this.actor.changeCursorColor(i, THEMES.SOLARIZED.yellow);\n      }\n      if (chance >= 0.7) {\n        this.actor.changeCursorColor(i, THEMES.SOLARIZED.green);\n      }\n    })\n  }\n\n  perform() {\n    const pos = this.actor.getPosition();\n    const range = this.actor.getAttackRange();\n    const equippedWeapon = this.actor.getItemInSlot(EQUIPMENT_TYPES.HAND)\n    let positions = [{ ...pos }];\n    if (equippedWeapon) positions = equippedWeapon.getPositionsInShape(pos);\n\n    const pathAnimations = [];\n    const deactivatePathAnimations = () => pathAnimations.forEach((anim) => {\n      this.game.display.removeAnimation(anim.id);\n    })\n\n    this.actor.activateCursor(positions);\n    this.updateCursors(pathAnimations, pos);\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n      onAfter: () => {\n        this.actor.deactivateCursor()\n        deactivatePathAnimations()\n      },\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n      \n      w: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move N',\n          direction: DIRECTIONS.N,\n          range,\n          onSuccess: () => {\n            this.updateCursors(pathAnimations, pos);\n          }\n        })\n      },\n      a: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move W',\n          direction: DIRECTIONS.W,\n          range,\n          onSuccess: () => {\n            this.updateCursors(pathAnimations, pos);\n          }\n        })\n      },\n      s: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move S',\n          direction: DIRECTIONS.S,\n          range,\n          onSuccess: () => {\n            this.updateCursors(pathAnimations, pos);\n          }\n        })\n      },\n      d: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move E',\n          direction: DIRECTIONS.E,\n          range,\n          onSuccess: () => {\n            this.updateCursors(pathAnimations, pos);\n          }\n        })\n      },\n      t: () => { \n        return new MultiTargetRangedAttack({\n          targetPositions:  [...this.actor.getCursorPositions()],\n          game: this.game,\n          actor: this.actor,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            deactivatePathAnimations();\n            this.actor.setNextAction(goToPreviousKeymap);\n          }\n        })\n      },\n    };\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import { Base } from './Base';\nimport { EquipItemFromContainer } from './EquipItemFromContainer';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\n\n\nexport class OpenInventory extends Base {\n  constructor({ \n    ...args \n  }) {\n    super({ ...args });\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    this.game.visibleInventory = this.actor.container;\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n    };\n\n    this.actor.container.forEach((slot, index) => {\n      const item = slot.items[0];\n      keymap[index] = () => new EquipItemFromContainer({\n        item,\n        game: this.game,\n        actor: this.actor,\n        label: `Equip ${item.name}`,\n        onSuccess: () => {\n          this.game.visibleInventory = null\n          this.actor.setNextAction(goToPreviousKeymap);\n        },\n      });\n    })\n\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nimport * as Helper from '../../helper';\n\nexport class UnequipItemToTile extends Base {\n  constructor({ item, ...args }) {\n    super({ ...args });\n    this.item = item;\n  }\n  perform() {\n    this.game.addMessage(`${this.actor.name} drops ${this.item.name}.`, MESSAGE_TYPE.ACTION);\n    this.actor.unequip(this.item);\n    this.game.map[Helper.coordsToString(this.actor.pos)].entities.splice(0, 0, this.item);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { UnequipItemToTile } from './UnequipItemToTile';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\n\n\nexport class OpenEquipment extends Base {\n  constructor({ \n    ...args \n  }) {\n    super({ ...args });\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    this.game.visibleEquipment = this.actor.equipment;\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n    };\n\n    this.actor.equipment.filter((slot) => slot.item).forEach((slot, index) => {\n      keymap[index] = () => new UnequipItemToTile({\n        item: slot.item,\n        game: this.game,\n        actor: this.actor,\n        label: `Unequip ${slot.item.name}`,\n        onSuccess: () => {\n          this.game.visibleEquipment = null\n          this.actor.setNextAction(goToPreviousKeymap);\n        },\n      });\n    })\n\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import * as Helper from '../../helper';\nimport { Base } from './Base';\n\nexport class Upgrade extends Base {\n  constructor({ upgrade, ...args }) {\n    super({ ...args });\n    this.upgrade = upgrade;\n    this.particleTemplate = {\n      renderer: {\n        sprite: '',\n        character: '^',\n        color: 'white',\n        background: '#3e7dc9',\n      }\n    };\n  }\n  perform() {\n    let success = false;\n    if (this.actor.upgrade(this.upgrade)) {\n      success = true;\n      let positions = Helper.getPointsOnCircumference(this.actor.pos.x, this.actor.pos.y, 5);\n      positions.forEach((pos) => {\n        this.addParticle(4, { ...pos }, {\n          x: -1 * Math.sign(pos.x - this.actor.pos.x),\n          y: -1 * Math.sign(pos.y - this.actor.pos.y)\n        });\n      });\n    }\n    return {\n      success,\n      alternative: null,\n    };\n  }\n}\n;\n","import {ActionResource} from './ActionResource';\n\nexport class UpgradeResource extends ActionResource {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.name = 'Upgrade Points';\n    this.actorResourcePath = 'upgrade_points';\n    this.renderer = { color: 'white', background: '#3e7dc9', character: '^', sprite: '' }\n  }\n}","import { Base } from './Base';\nimport { Say } from './Say';\nimport { Upgrade } from './Upgrade';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\nimport { UpgradeResource } from './ActionResources/UpgradeResource';\n\nexport class OpenUpgrades extends Base {\n  constructor({ \n    ...args \n  }) {\n    super({ ...args });\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n    };\n\n    this.actor.upgrade_tree.forEach((upgrade, index) => {\n      keymap[index] = () => new Upgrade({\n        // message: upgrade.name,\n        upgrade,\n        game: this.game,\n        actor: this.actor,\n        label: `${upgrade.name}`,\n        energyCost: 0,\n        requiredResources: [new UpgradeResource({getResourceCost: () => upgrade.cost })],\n        onSuccess: () => {\n          this.actor.setNextAction(goToPreviousKeymap);\n        },\n      });\n    })\n\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nimport * as Helper from '../../helper';\n\nexport class PickupRandomItem extends Base {\n  constructor({ ...args }) {\n    super({ ...args });\n  }\n  perform() {\n    let success = false;\n    const items = this.game.map[Helper.coordsToString(this.actor.pos)].entities.filter((e) => e.id !== this.actor.id);\n    if (items.length) {\n      const item = Helper.getRandomInArray(items);\n      this.game.addMessage(`${this.actor.name} picks up ${item.name}.`, MESSAGE_TYPE.ACTION);\n      this.actor.addToContainer(item);\n      let entities = this.game.map[Helper.coordsToString(this.actor.pos)].entities;\n      this.game.map[Helper.coordsToString(this.actor.pos)].entities = entities.filter((it) => it.id !== item.id);\n      success = true;\n    } \n    return {\n      success,\n      alternative: null,\n    };\n  }\n}\n;\n","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nexport class Reload extends Base {\n  constructor({ message, messageType = MESSAGE_TYPE.INFORMATION, ...args }) {\n    super({ ...args });\n    this.processDelay = 0;\n  }\n  perform() {\n    const success = this.actor.reload();\n    this.game.addMessage(`${this.actor.name} says \"RELOADING\"`, MESSAGE_TYPE.INFORMATION);\n    return {\n      success,\n      alternative: null,\n    };\n  }\n}\n;\n","// import deps\nimport * as Item from '../items';\nimport * as Constant from '../constants';\nimport { Player } from '../Entities/index';\nimport { ContainerSlot } from '../Entities/Containing';\nimport {ChakraResource} from '../Actions/ActionResources/ChakraResource';\nimport {Say} from '../Actions/Say';\nimport {Move} from '../Actions/Move';\nimport {PrepareSandWall} from '../Actions/SandWall';\nimport {PrepareDirectionalThrow} from '../Actions/PrepareDirectionalThrow';\nimport {PrepareRangedAttack} from '../Actions/PrepareRangedAttack';\nimport {SandPulse} from '../Actions/SandPulse';\nimport {AddSandSkinStatusEffect} from '../Actions/AddSandSkinStatusEffect';\nimport {OpenInventory} from '../Actions/OpenInventory';\nimport {OpenEquipment} from '../Actions/OpenEquipment';\nimport {OpenUpgrades} from '../Actions/OpenUpgrades';\nimport {Upgrade} from '../Entities/Upgradable';\nimport {PickupRandomItem} from '../Actions/PickupRandomItem';\nimport { Lancer } from '../Items/Weapons/Lancer';\nimport { Ammo } from '../Items/Pickups/Ammo';\nimport {COLORS} from '../Modes/Jacinto/theme';\nimport { Reload } from '../Actions/Reload';\n\nexport default function (engine) {\n  // define keymap\n  const keymap = (engine, actor) => {\n    return {\n      Escape: () => new Say({\n        label: 'Pass',\n        message: 'pass turn...',\n        game: engine.game,\n        actor,\n        interrupt: true,\n        energyCost: 0,\n      }),\n      w: () => {\n        const direction = Constant.DIRECTIONS.N;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      s: () => {\n        const direction = Constant.DIRECTIONS.S;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      a: () => {\n        const direction = Constant.DIRECTIONS.W;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      d: () => {\n        const direction = Constant.DIRECTIONS.E;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      p: () => new Say({\n        label: 'Stay',\n        message: 'standing still...',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      t: () => new PrepareRangedAttack({\n        label: 'Shoot',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n        passThroughRequiredResources: [new ChakraResource({ getResourceCost: () => 1 })]\n      }),\n      r: () => new Reload({\n        label: 'Reloading',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      i: () => new OpenInventory({\n        label: 'Inventory',\n        game: engine.game,\n        actor,\n      }),\n      o: () => new OpenEquipment({\n        label: 'Equipment',\n        game: engine.game,\n        actor,\n      }),\n      u: () => new OpenUpgrades({\n        label: 'Upgrade',\n        game: engine.game,\n        actor,\n      }),\n      g: () => new PickupRandomItem({\n        label: 'Pickup',\n        game: engine.game,\n        actor,\n      }),\n      // t: () => new PrepareDirectionalThrow({\n      //   label: 'Throw',\n      //   game: engine.game,\n      //   actor,\n      //   passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n      // })\n    };\n  }\n  // instantiate class\n  let actor = new Player({\n    pos: { x: 23, y: 7 },\n    renderer: {\n      sprite: '',\n      character: 'G',\n      color: COLORS.base3,\n      background: COLORS.cog2,\n    },\n    name: 'Gear',\n    actions: [],\n    speed: Constant.ENERGY_THRESHOLD * 4,\n    durability: 20,\n    baseRangedAccuracy: 0,\n    baseRangedDamage: 1,\n    charge: 10,\n    upgrade_points: 3,\n    upgrade_tree: [\n      Upgrade({\n        cost: 1,\n        name: '+5% Accuracy',\n        activate: (actor) => (actor.baseRangedAccuracy += 0.05),\n      }),\n      Upgrade({\n        cost: 2,\n        name: '+1 Actions',\n        activate: (actor) => {\n          actor.speed += Constant.ENERGY_THRESHOLD;\n          actor.energy += Constant.ENERGY_THRESHOLD;\n        },\n        removeOnActivate: true,\n      }),\n    ],\n    equipment: Constant.EQUIPMENT_LAYOUTS.gear(),\n    game: engine.game,\n    presentingUI: true,\n    initializeKeymap: keymap,\n  })\n\n  // add default items to container\n  const ammo = Array(100).fill('').map(() => Ammo(engine));\n  actor.container = [\n    new ContainerSlot({\n      itemType: ammo[0].name,\n      items: ammo,\n    })\n  ]\n\n  const lancer = Lancer(engine);\n  actor.equip(lancer.equipmentType, lancer);\n\n  return actor;\n}","import {Ammo as AmmoEntity} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Ammo = (engine) => new AmmoEntity({\n  game: engine.game,\n  name: 'Ammo',\n  passable: true,\n  renderer: {\n    character: '||',\n    sprite: '',\n    background: COLORS.gray,\n    color: COLORS.base3,\n  },\n});","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Lancer = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Lancer',\n  passable: true,\n  attackRange: 6,\n  magazineSize: 4,\n  baseRangedAccuracy: 1,\n  baseRangedDamage: 1,\n  pos,\n  // shapePattern: Constant.CLONE_PATTERNS.square,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'L',\n    color: COLORS.base3,\n    background: COLORS.gray,\n  },\n});\n","import Basic_Gear from './GearBasic';\n\nlet Characters = () => {\n  return {\n    Basic_Gear,\n  }\n}\n\nexport default Characters;","import React from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport { SCREENS } from './Screen/constants';\nimport Screens from './Screen/index';\nimport Characters from './Characters/index';\nimport Modes from './Modes/index';\nimport SOUNDS from './sounds';\n\nclass Nystrum extends React.Component {\n  constructor() {\n    super();\n    let characterKey = Characters();\n    let characters = Object.keys(characterKey).map((key, i) => {\n      return {\n        initialize: characterKey[key],\n        selected: false,\n        name: key.split('_').join(' '),\n      }\n    });\n\n    let modes = Object.keys(Modes).map((key, i) => {\n      return {\n        class: Modes[key],\n        selected: false,\n        name: key.split('_').join(' '),\n      }\n    });\n\n    this.state = {\n      activeScreen: SCREENS.TITLE,\n      characters,\n      modes,\n      selectedCharacter: null,\n      selectedMode: modes[0],\n    };\n  }\n\n  setActiveScreen (activeScreen) {\n    if (activeScreen === SCREENS.TITLE) {\n      Object.keys(SOUNDS).forEach(key => {\n        SOUNDS[key].stop();\n      });\n    }\n    this.setState({activeScreen})\n  }\n\n  setSelectedCharacter (character) {\n    this.setState({selectedCharacter: {...character}})\n  }\n\n  setSelectedMode (mode) {\n    this.setState({selectedMode: mode})\n  }\n\n  getActiveScreen () {\n    const characterScreen = <Screens.CharacterSelect \n      key={SCREENS.CHARACTER_SELECT} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n      />\n      const titleScreen = <Screens.Title \n      key={SCREENS.TITLE} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n    />\n    const loseScreen = <Screens.Lose \n      key={SCREENS.LOSE} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n    />\n    const winScreen = <Screens.Win \n      key={SCREENS.WIN} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n    />\n    const levelScreen = <Screens.Level \n      key={SCREENS.LEVEL} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      selectedMode={this.state.selectedMode}\n    />\n\n    switch (this.state.activeScreen) {\n      case SCREENS.CHARACTER_SELECT:\n        return characterScreen\n      case SCREENS.TITLE:\n        return titleScreen\n      case SCREENS.LOSE:\n        return loseScreen\n      case SCREENS.WIN:\n        return winScreen\n      case SCREENS.LEVEL:\n        return levelScreen\n      default:\n        return titleScreen\n    }\n  }\n\n  render() {\n    const activeScreen = this.getActiveScreen();\n    return (\n      <div className=\"Nystrum\">\n        <ReactCSSTransitionGroup\n          transitionName=\"fade\"\n          transitionAppear={true}\n          transitionEnter={true}\n          transitionLeave={true}\n          transitionAppearTimeout={500}\n          transitionEnterTimeout={500}\n          transitionLeaveTimeout={300}\n        >\n          { activeScreen }\n        </ReactCSSTransitionGroup>\n      </div>\n    );\n  }\n}\n\nexport default Nystrum;\n","import React from 'react';\nimport './App.css';\nimport Nystrum from './nystrum/Nystrum';\n\nfunction App() {\n  return (\n    <div className=\"App container-fluid\">\n      <Nystrum />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}