{"version":3,"sources":["nystrum/Screen/constants.js","helper.js","nystrum/Entities/Entity.js","nystrum/constants.js","nystrum/Actions/ActionResources/ActionResource.js","nystrum/Actions/ActionResources/EnergyResource.js","nystrum/Actions/Base.js","nystrum/Actions/DestroySelf.js","nystrum/Actions/EngineCrank.js","nystrum/Entities/Parent.js","nystrum/Display/konvaCustom.js","nystrum/Entities/HasTargetingCursor.js","nystrum/message.js","nystrum/Entities/Attacking.js","nystrum/Maps/helper.js","nystrum/Entities/RangedAttacking.js","nystrum/Entities/Equipable.js","nystrum/Entities/Acting.js","nystrum/Entities/Rendering.js","nystrum/Entities/Containing.js","nystrum/sounds.js","nystrum/Entities/Equiping.js","nystrum/Entities/Playing.js","nystrum/Entities/helper.js","nystrum/Actions/Say.js","nystrum/Actions/Attack.js","nystrum/Actions/MoveOrAttack.js","nystrum/Actions/ThrowProjectile.js","nystrum/Actions/SelfDestructiveAttack.js","nystrum/Actions/ProjectileMove.js","nystrum/Entities/DirectionalProjecting.js","nystrum/Actions/Shove.js","nystrum/Actions/ThrowProjectileGas.js","nystrum/Entities/Chasing.js","nystrum/Actions/PlaceActor.js","nystrum/Entities/Draggable.js","nystrum/Entities/Pushable.js","nystrum/items.js","nystrum/Entities/Destructable.js","nystrum/Entities/Burnable.js","nystrum/Entities/Exploding.js","nystrum/Entities/HasKeymap.js","nystrum/Entities/Upgradable.js","nystrum/Entities/HasFaction.js","nystrum/Entities/UsesCover.js","nystrum/Entities/AI/Behaviors/Behavior.js","nystrum/Entities/index.js","nystrum/Entities/UI.js","nystrum/Entities/Speaking.js","nystrum/Entities/Helpless.js","nystrum/Entities/Covering.js","nystrum/Entities/DirectionalPushing.js","nystrum/Entities/AI/CyclesBehaviors.js","nystrum/Entities/RangedChasing.js","nystrum/Entities/PresentingUI.js","nystrum/Entities/Dragging.js","nystrum/Entities/Charging.js","nystrum/Entities/Signing.js","nystrum/Entities/Cloning.js","nystrum/Entities/HasShapePattern.js","nystrum/Entities/DestructiveProjecting.js","nystrum/Entities/GaseousDestructiveProjecting.js","nystrum/Entities/Gaseous.js","nystrum/Entities/Spreading.js","nystrum/Entities/Spawning.js","nystrum/Entities/IsParticle.js","nystrum/Engine/engine.js","nystrum/Maps/generator.js","nystrum/Modes/Jacinto/theme.js","nystrum/Maps/coverGenerator.js","nystrum/Modes/default.js","nystrum/Items/Pickups/Ammo.js","nystrum/Items/Weapons/Grenade.js","nystrum/Actions/MultiTargetAttack.js","nystrum/Entities/AI/Behaviors/ExecuteAttack.js","nystrum/Actions/Reload.js","nystrum/Actions/MultiTargetRangedAttack.js","nystrum/Entities/AI/Behaviors/ExecuteRangedAttack.js","nystrum/Actions/AddStatusEffect.js","nystrum/Actions/AddStatusEffects.js","nystrum/Entities/AI/Behaviors/ExecuteStatusEffects.js","nystrum/Entities/AI/Behaviors/ExecuteStatusEffectOnAllies.js","nystrum/Actions/Move.js","nystrum/Entities/AI/Behaviors/MoveTowardsCover.js","nystrum/Entities/AI/Behaviors/MoveTowardsEnemy.js","nystrum/Entities/AI/Behaviors/Telegraph.js","nystrum/Entities/AI/Behaviors/TelegraphRangedAttack.js","nystrum/Entities/AI/Behaviors/TelegraphRangedAttackThroughCover.js","nystrum/Entities/AI/Behaviors/Wait.js","nystrum/Items/Weapons/Gnasher.js","nystrum/Items/Weapons/HammerBurst.js","nystrum/Items/Weapons/GrenadeThrower.js","nystrum/Items/Pickups/ExplodingAmmo.js","nystrum/StatusEffects/Base.js","nystrum/StatusEffects/MeleeDamage.js","nystrum/Modes/Jacinto/Actors/Grubs.js","nystrum/Modes/Jacinto/jacinto.js","nystrum/Modes/index.js","nystrum/game.js","nystrum/UI/Instructions.js","nystrum/UI/Button.js","nystrum/UI/Information.js","nystrum/UI/Tooltip.js","nystrum/UI/ActionBar.js","nystrum/UI/Entity/CharacterCard.js","nystrum/UI/Entity/PlayerInformation.js","nystrum/UI/Inventory.js","nystrum/UI/Messages.js","nystrum/UI/InfoBlocks.js","nystrum/Actions/EquipItemFromContainer.js","nystrum/UI/Jacinto/Equipment.js","nystrum/UI/Jacinto/HelpContent.js","nystrum/UI/Jacinto/Help.js","nystrum/Screen/Level.js","nystrum/Screen/Title.js","nystrum/Screen/Lose.js","nystrum/Screen/Win.js","nystrum/UI/CharacterSelect.js","nystrum/Screen/CharacterSelect.js","nystrum/UI/ModeSelect.js","nystrum/Screen/index.js","nystrum/Screen/ModeSelect.js","nystrum/Actions/GoToPreviousKeymap.js","nystrum/Actions/PrepareDirectionalThrow.js","nystrum/Actions/MoveRangedAttackCursor.js","nystrum/Actions/PrepareRangedAttack.js","nystrum/Actions/OpenInventory.js","nystrum/Actions/Upgrade.js","nystrum/Actions/ActionResources/UpgradeResource.js","nystrum/Actions/OpenUpgrades.js","nystrum/Actions/PickupAllItems.js","nystrum/Characters/GearLight.js","nystrum/Items/Weapons/Lancer.js","nystrum/Items/Weapons/Snub.js","nystrum/Actions/Tackle.js","nystrum/Actions/MoveMultiple.js","nystrum/Actions/PrepareTackle.js","nystrum/Characters/GearHeavy.js","nystrum/Items/Weapons/RetroLancer.js","nystrum/Characters/GearStranded.js","nystrum/Items/Weapons/Longshot.js","nystrum/Items/Weapons/Boltok.js","nystrum/Characters/index.js","nystrum/Nystrum.js","App.js","serviceWorker.js","index.js"],"names":["SCREENS","delay","timeDelayed","Promise","resolve","setTimeout","clamp","value","min","max","Math","getRandomInArray","array","floor","random","length","getRandomIntInclusive","ceil","coordsAreEqual","pos_one","pos_two","x","y","coordsToString","coords","isTilePassable","game","tile","map","tileKey","type","passable","isTileAndEntitiesPassable","sourceEntityPos","tileIsPassable","entities","entitiesArePassable","every","entity","calculatePath","targetPos","currentPos","topology","isPassable","isPassableCallback","astar","ROT","AStar","path","compute","push","slice","calculatePathAroundObstacles","gameObject","calculateStraightPath","p0","p1","points","N","diagonal_distance","step","t","round_point","lerp_point","dx","dy","abs","p","round","lerp","start","end","getPositionInDirection","pos","direction","calculatePathWithRange","range","getRandomPos","keys","Object","key","split","coordinates","parseInt","text","getDestructableEntities","entites","filter","hasOwnProperty","getGranularity","radius","pow","getPointsOnCircumference","centerX","centerY","r","n","list","i","cos","PI","sin","getPointsWithinRadius","position","positions","yspan","acos","getPositionsFromStructure","structure","initialPosition","slot","x_offset","y_offset","Entity","name","id","uuid","this","entityTypes","active","COLORS","THEMES","base03","base02","base01","base00","base0","base1","base2","base3","yellow","orange","red","magenta","violet","blue","cyan","green","TILE_KEY","background","foreground","character","sprite","animation","DIRECTIONS","NE","W","NW","SW","S","SE","E","NONE","EQUIPMENT_TYPES","EQUIPMENT_LAYOUTS","item","CLONE_PATTERNS","point","taken","triple_point","spread","verticalLine","smallSquare","square","clover","filledClover","bigSquare","donut","Helper","big_circle","PARTICLE_TEMPLATES","default","renderer","color","fail","succede","damage","leaf","water","PARTICLE_TYPE","ActionResource","getResourceCost","actorResourcePath","actorResourceGetter","actorResourceSetter","EnergyResource","args","Base","actor","label","hidden","energyCost","processDelay","particles","particleTemplate","Constant","onBefore","onAfter","onSuccess","onFailure","interrupt","requiredResources","life","particle","Particle","energy","setNextAction","_","resource","actorVariable","canPay","listPayableResources","resourceCost","success","alternative","DestroySelf","destroy","EngineCrank","engine","console","log","Parent","superclass","children","CrankEngine","concat","isInitialized","child","e","actors","draw","includes","forEach","destroyChild","canAttack","bind","placeActorOnMap","addActor","initialize","ANIMATION_TYPES","DEFAULT","BLINK_TILE","SOLID_TILE","BLINK_BOX","Animation","display","lifeTime","node","frame","timeDiff","getActive","removeAnimation","ExampleAnimation","BlinkTile","lerpDirection","rectAttributes","attrs","tileWidth","tileOffset","tileGutter","tileHeight","offsetX","offsetY","width","height","fill","transformsEnabled","perfectDrawEnabled","listening","shadowForStrokeEnabled","rect","Konva","Rect","animationLayer","add","opacity","BlinkBox","stroke","strokeWidth","Display","containerId","stage","layer","animations","animationLoop","animationTypes","document","d","getElementById","displayContainer","createElement","appendChild","Stage","container","Layer","hitGraphEnabled","update","isRunning","stop","display_element","offsetWidth","mapWidth","mapHeight","anim","Group","strokeEnabled","Text","fontSize","fontFamily","align","verticalAlign","batchDraw","HasTargetingCursor","cursorIsActive","cursorPositions","setCursorPositions","setCursorIsActive","resetAnimations","removeAnimations","getCursorPositions","newAnimation","addAnimation","addAnimations","currentPositions","xDelta","yDelta","newPositons","distance","index","arg","MESSAGE_TYPE","INFORMATION","backgroundColor","ACTION","DANGER","STATUS_EFFECT","ERROR","Message","Attacking","attackDamage","additional","targets","target","getAttackDamage","equipment","addMessage","decreaseDurability","addTileZone","origin","j","addTileToMap","tileType","numberOfAnimationFrames","tileData","currentFrame","tileHasTag","tag","getTileFromMap","RangedAttacking","attackRange","baseRangedAccuracy","baseRangedDamage","magazineSize","magazine","weaponAccuracy","getRangedWeaponAccuracy","coverDebuff","getRangedAttackCoverDebuff","distanceDebuff","getRangedAttackDistanceDebuff","result","getPosition","reduce","acc","curr","MapHelper","entitiesProvidingCover","coverModifer","getCoveredByIds","accuracyModifer","getAttackRange","accuracy","getRangedAttackChance","getRangedWeaponDamage","getRangedAttackDamage","getEquipedWeapons","weapon","decrementMagazine","ammo","contains","removeFromContainer","move","reloaded","amount","additionalDamage","additionalAccuracy","hit","attackChance","hitChance","useAmmo","canRangedAttack","Equipable","equipmentType","Acting","actions","speed","action","Rendering","canOccupyPosition","targetTile","pushable","newPos","ContainerSlot","itemType","items","Containing","slots","findIndex","createSlot","it","splice","fire_0","Howl","src","window","PUBLIC_URL","volume","loop","fire_1","scream_0","scream_1","scream_2","water_0","water_1","chop_0","chop_1","equip_0","equip_1","explosion_0","save","lose","grab_0","release_0","Equiping","itemName","slotName","find","foundSlot","SOUNDS","play","Playing","keymap","nextAction","destroyEntity","removeStatusEffectByActorId","Say","message","messageType","Attack","attack","addParticle","MoveOrAttack","ThrowProjectile","move_result","shift","SelfDestructiveAttack","damageToSelf","decreaseDurabilityWithoutDefense","ProjectileMove","DirectionalProjecting","setActorToPrevious","Shove","shove","ThrowProjectileGas","Chasing","targetEntity","PlaceActor","forcePlacement","addActorAsNext","Draggable","draggable","Pushable","TYPE","Destructable","durability","defense","onDestroy","durabilityMax","actorSprite","actorCharacter","getDefense","current","newDurability","updateActorRenderer","Burnable","canBurn","willResetCanBurn","Exploding","flammability","explosivity","Array","FireSpread","timeToSpread","spreadCount","fire","explode","enflame","HasKeymap","initializeKeymap","keymapStack","addKeymap","newKeymap","unshift","ignoredKeys","getKeymap","removeKeymap","Upgrade","activate","canUpgrade","cost","removeOnActivate","HasFaction","faction","enemyFactions","UsesCover","coverAnimations","showCoverAnimations","coveredBy","coverEntities","covers","tiles","newTile","Boolean","coverAnimated","isProvidingCover","removeCoverAnimations","removeCoveredBy","setCoverAnimations","Behavior","repeat","repeated","constructActionClassAndParams","actionClass","actionParams","getDefaultActionParams","CoverWall","pipe","initiatedBy","messages","saved","damageModifer","providesCover","JacintoAI","behaviors","behavior","activeBehaviorIndex","selectedBehavior","isValid","shouldRepeat","nexIndex","nextBehaviorIndex","setBehaviorIndex","setNextBehaviorIndex","killLoopAt","shouldCycleToNextBehavior","reset","selectNextBehavior","getAction","getDefaultAction","Player","getProjectile","pathToCheck","inPath","throwDirection","sign","projectile","createPath","targetInPath","movePath","presentingUI","draggedEntity","lastPos","moveSuccess","drag","charge","chargeMax","signHistory","cloneLimit","clones","clone","c","super__destroy","cloneArgs","cloneDeep","reinitializeKeymap","destroyClone","attribute","upgrade_points","upgrade_tree","upgrade","newTree","currUpgrade","RangedWeapon","shapePattern","Ammo","Grenade","owner_id","isClone","cloneCount","clonePattern","offset","cloneDeepWith","referencePos","timeToSpreadMax","spreadCountMax","adjacentPositions","adjacentPos","kill","tileExists","notBurnt","EmergenceHole","getSpawnedEntity","nextPos","getNextPos","Engine","statusEffects","currentActor","gainEnergy","hasEnoughEnergy","perform","getFirstPlayer","acting","timePassed","getEnergyCost","canPayRequiredResources","payRequiredResources","processActionFX","shouldAutoRun","processStatusEffects","sortActorsByEnergy","processV2","setVisibleKeymap","updateMode","updateReact","visibleKeymap","sort","a","b","newEffect","allowDuplicates","effect","onStart","onStop","actorId","lifespan","timeToLive","timeSinceLastStep","stepInterval","onStep","removeDeadStatusEffects","actionSuccess","removeActorFromMap","removeDeadParticles","process","mode","addCorridors","floorPlan","unitSize","relativeCornerCoords","currentUnit","currentUnitPosition","getUnitPosition","currentUnitRelativeCornerCoord","getNeighboringUnitsFromFloorPlan","neigbor","nextUnitPosition","nextUnitRelativeCornerCoord","digCorridor","neighbors","getNeighboringPoints","unit","corridorDirection","corridorPosition","hasDoor","tileIsWall","createFloorPlan","createRoomInFloorPlan","newUnit","getNeighboringUnit","unitAlreadyExists","unitExists","pnt","existingUnits","floorPlanPos","mapOffsetX","mapOffsetY","eightWay","createUnit","size","border","newPosition","tags","STAT_RENDERERS","SHAPES","horizontalLine","southEastVerticalL","southWestVerticalL","northWestVerticalL","northEastVerticalL","southEastHorizontalL","southWestHorizontalL","northEastHorizontalL","northWestHorizontalL","shapeChanceTable","generate","shape","box","generateCoverBlock","generateRandom","Mode","data","infoBlocks","progressBars","merge","AmmoEntity","GrenadeEntity","MultiTargetAttack","targetPositions","particlePath","particlePos","attackSuccess","ExecuteAttack","Reload","reload","MultiTargetRangedAttack","weapons","rangedAttack","ExecuteRangedAttack","AddStatusEffect","addStatusEffect","AddStatusEffects","effects","effectSuccess","addParticleAnimationAt","ExecuteStatusEffects","effectClass","effectDefaults","getTargetsOnTile","createEffects","ExecuteStatusEffectOnAllies","isAlly","Move","MoveTowardsCover","targetCover","isCovered","currentClosest","getCoverEntities","getDistanceToTarget","cover","moveToPosition","findClosestCover","MoveTowardsEnemy","currentClosestEnemy","getEnemies","enemy","findClosestEnemy","Telegraph","attackPattern","getTargetPosition","activateCursor","updateAllCursorNodes","TelegraphRangedAttack","accuracyToAttackThreshold","findClosestEnemyInRange","distanceToEnemy","equippedWeapon","getEquippedWeapon","targetPosition","getPositionsInShape","TelegraphRangedAttackThroughCover","Wait","Gnasher","HammerBurst","GrenadeThrower","ExplodingAmmo","MeleeDamage","buffValue","addWretch","addGrubToMapWithStats","GRUB_STATS","wretch","addDrone","drone","addDroneGrenadier","drone_grenadier","addHunter","hunter","addScion","scion","addSkorge","addRandomGrub","addEntityToMapWithStatsUsingCreator","createRandomBasicGrub","addRandomBasicGrubToMap","Behaviors","loadout","equipmentCreators","inventoryCreators","creator","skorge","createBaseGrubStats","chance","addAmmoLoot","addGrenadeLoot","createStats","createNewJacintoAIEntity","params","entityParams","createInventorySlot","equipmentPiece","equip","equipAndFillInventory","stats","createGrubWithStats","entityCreator","require","Jacinto","createVerticalRoadGoingNorthAndSouth","createVerticalRoad","createVerticalRoadGoingNorth","fromY","createVerticalRoadGoingSouth","level","highestLevel","turnCount","dataByLevel","enemies","emergenceHoles","ammoLoot","grenadeLoot","numberOfVerticalRoads","numberOfBuildings","mainRoadY","createHorizontalRoad","generateRoad","groundTiles","getEmptyGroundTileKeys","posXY","coord","unitCount","unitPosition","didCreate","generateBuilding","createEmptyLevel","initializeMapTiles","setWaveData","createCityBlockLevel","floorTiles","placePlayersInSafeZone","player","getEmptyTileKeys","addEmerenceHole","numberOfCoverStructures","coverEligibleTiles","CoverGenerator","enemyName","LocustActors","createOrUpdateInfoBlock","resetCoverAnimations","checkCoverAnimations","updateUI","hasWon","toWin","hasLost","toLose","initializeGameData","levelComplete","nextLevel","setLevel","nextLevelData","playerOnExit","playerIsOnExit","enemiesDefeated","activateExitTiles","players","getPlayers","spawnPosition","createAmmoStack","Game","entityMap","entityDictionary","mapInitialized","tileMap","cameraWidth","cameraHeight","getSelectedCharacter","spriteMode","Flume","MAP_WIDTH","MAP_HEIGHT","placed","randomlyPlaceActorOnMap","ac","digger","Arena","freeCells","create","hasImpassableEntity","fullMap","referencePosition","renderWidth","renderHeight","fullWidth","fullHeight","renderPaddingX","renderPaddingY","parts","finalX","finalY","callback","getRenderMap","getPlayerPosition","tileRenderer","nextFrame","animateTile","renderedEntities","animateEntity","processTileMap","createTile","updateTile","getRenderer","getEntityRenderer","getTileRenderer","isPlaced","placeActorsOnMap","presserRef","show","focus","selectedCharacter","initializeMode","initializeUI","handleKeyPress","event","code","setAsNextAction","Instructions","infoHeader","props","className","onClick","location","toggleSpriteMode","data-target","React","Component","Button","Tooltip","title","ResourceBlock","superScript","style","borderColor","ActionBar","entries","reqs","refocus","req","numBlocks","Portrait","StatusEffect","StatusEffects","getStatusEffectsByActorId","NamePlate","ProgressBar","colorFilled","colorEmpty","attributePathMax","attributePath","valueMax","valueCurrent","blip","CharacterCard","PlayerInformation","Messages","InfoBlocks","EquipItemFromContainer","itemInSlot","getItemInSlot","addToContainer","unequip","StatBlock","stat","getIcon","EquipmentCard","equipped","needsReload","equipable","meleeDamage","Equipment","HelpContent","Help","useLayoutEffect","elems","querySelectorAll","M","Modal","init","href","Level","ENGINE","selectedMode","class","state","activeTab","createRef","setActiveScreen","newGameState","setState","ref","onKeyDown","tabIndex","reverse","Title","margin","Lose","Win","CharacterSelect","characters","setSelectedCharacter","ModeSelect","modes","top","setSelectedMode","backgroundImage","backgroundRepeat","backgroundPosition","backgroundPositionY","GoToPreviousKeymap","goToPreviousKeymap","PrepareDirectionalThrow","passThroughEnergyCost","passThroughRequiredResources","projectileType","cursor_positions","none","endPosition","dir","circlePositions","deactivateCursor","Escape","w","s","setKeymap","MoveRangedAttackCursor","availablePositions","initiatedFrom","isInRange","moveCursorToPosition","PrepareRangedAttack","pathAnimations","pathPos","updateCursorNode","rangeAnims","deactivateAnimations","anims","positionsInRange","targetIndex","validTargets","newTarget","updateCursors","q","f","OpenInventory","visibleInventory","UpgradeResource","OpenUpgrades","PickupAllItems","lancer","Lancer","increaseDurability","newX","newY","u","g","grenades","snub","Snub","Tackle","stepCount","PrepareTackle","primary","RetroLancer","secondary","Longshot","Boltok","Characters","The_Scout","The_Veteran","The_Stranded","Nystrum","characterKey","selected","join","Modes","activeScreen","characterScreen","Screen","titleScreen","loseScreen","winScreen","levelScreen","getActiveScreen","transitionName","transitionAppear","transitionEnter","transitionLeave","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","App","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.79926c1e.chunk.js","sourcesContent":["export const SCREENS = {\n  TITLE: 'Title',\n  LEVEL: 'Level',\n  LOSE: 'Lose',\n  WIN: 'Win',\n  CHARACTER_SELECT: 'CharacterSelect',\n  MODE_SELECT: 'ModeSelect',\n}","import * as ROT from 'rot-js';\n\nexport const delay = (timeDelayed = 100) => {\n  // return;\n  if (timeDelayed <= 0) return;\n  return new Promise(resolve => setTimeout(resolve, timeDelayed));\n}\n\nexport const clamp = (value, min, max) => {\n  return Math.min(Math.max(value, min), max);\n};\n\nexport const getRandomInArray = (array) => {\n  return array[Math.floor(Math.random() * array.length)];\n}\n\nexport const getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nexport const getRandomIntInclusive = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport const coordsAreEqual = (pos_one, pos_two) => pos_one.x === pos_two.x && pos_one.y === pos_two.y\n\nexport const coordsToString = (coords) => `${coords.x},${coords.y}`\n\nconst isTilePassable = (game) => (x, y) => {\n  const tile = game.map[x + \",\" + y];\n  if (tile) {\n    return (game.tileKey[tile.type].passable);\n  } else {\n    return false\n  }\n}\n\nconst isTileAndEntitiesPassable = (game, sourceEntityPos) => (x, y) => {\n  const tile = game.map[x + \",\" + y];\n  if (tile) {\n    const tileIsPassable = game.tileKey[tile.type].passable\n    if (tile.entities.length && !coordsAreEqual(sourceEntityPos, {x, y})) {\n      const entitiesArePassable = tile.entities.every((entity) => entity.passable);\n      return tileIsPassable && entitiesArePassable;\n    }\n    return tileIsPassable;\n  } else {\n    return false\n  }\n}\n\nexport const calculatePath = (game, targetPos, currentPos, topology = 4, isPassable = isTilePassable) => {\n  let map = game.map\n  let isPassableCallback = isPassable(game);\n  let astar = new ROT.Path.AStar(targetPos.x, targetPos.y, isPassableCallback, { topology });\n  let path = [];\n  astar.compute(currentPos.x, currentPos.y, function (x, y) {\n    path.push({ x, y })\n  });\n\n  return path.slice(1);\n}\n\nexport const calculatePathAroundObstacles = (\n  game, \n  targetPos, \n  currentPos, \n  topology = 4\n) => calculatePath(\n  game,\n  targetPos,\n  currentPos,\n  topology,\n  (gameObject) => isTileAndEntitiesPassable(gameObject, currentPos)\n);\n\nexport const calculateStraightPath = (p0, p1) => {\n  let points = [];\n  let N = diagonal_distance(p0, p1);\n  for (let step = 0; step < N; step++) {\n    let t = N === 0 ? 0.0 : step / N;\n    points.push(round_point(lerp_point(p0, p1, t)));\n  }\n  return points;\n}\n\nconst diagonal_distance = (p0, p1) => {\n  let dx = p1.x - p0.x, dy = p1.y - p0.y;\n  return Math.max(Math.abs(dx), Math.abs(dy));\n}\n\nconst round_point = (p) => {\n  return {x: Math.round(p.x), y: Math.round(p.y)};\n}\n\nconst lerp_point = (p0, p1, t) => {\n  return {\n    x: lerp(p0.x, p1.x, t),\n    y: lerp(p0.y, p1.y, t)\n  };\n}\n\nconst lerp = (start, end, t) => {\n  return start + t * (end - start);\n}\n\nexport const getPositionInDirection = (pos, direction) => {\n  return {x: pos.x + direction[0], y: pos.y + direction[1]}\n}\n\nexport const calculatePathWithRange = (game, targetPos, currentPos, topology, range) => {\n  let path = calculatePath(game, targetPos, currentPos, topology);\n  return path.slice(0, range + 1);\n}\n\nexport const getRandomPos = (map) => {\n  let keys = Object.keys(map);\n  let key = getRandomInArray(keys).split(',');\n  let pos = { x: parseInt(key[0]), y: parseInt(key[1])}\n  return {coordinates: pos, text: key}\n}\n\nexport const getDestructableEntities = (entites) => {\n  return entites.filter((entity) => entity.hasOwnProperty('durability'));\n}\n\nexport const filterEntitiesByType = (entites, type) => {\n  return entites.filter((entity) => entity.entityTypes.includes(type));\n}\n\nconst getGranularity = (radius) => {\n  let result = (2 / 3) * (Math.pow(radius, 3) - (9 * Math.pow(radius, 2)) + (32 * radius) - 18)\n  return result\n}\n\nexport const getNeighboringTiles = (map, pos) => {\n  const neigborPositions = [\n    { x: 0, y: 1},\n    { x: 1, y: 1},\n    { x: 1, y: 0},\n    { x: 1, y: -1},\n    { x: 0, y: -1},\n    { x: -1, y: -1},\n    { x: -1, y: 0},\n    { x: -1, y: 1},\n  ];\n\n  return neigborPositions.map((point) => {\n    const newPos = { x: pos.x + point.x, y: pos.y + point.y};\n    let newTile = map[coordsToString(newPos)];\n    if (newTile) {\n      return newTile\n    }\n  }).filter((item) => Boolean(item));\n}\n\nexport const getPointsOnCircumference = (centerX = 0, centerY = 0, r = 3) => {\n  const n = getGranularity(r);\n  let list = [];\n  for (let i = 0; i < n; i++) {\n    let x = Math.round(centerX + (Math.cos(2 * Math.PI / n * i) * r))\n    let y = Math.round(centerY + (Math.sin(2 * Math.PI / n * i) * r))\n    list.push({ x, y });\n  }\n  return list\n}\n\nexport const getPointsWithinRadius = (position, radius) => {\n  let positions = [];\n  for (let x = position.x - radius; x < position.x + radius; x++) {\n    let yspan = Math.round(radius * Math.sin(Math.acos((position.x - x) / radius)));\n    for (let y = position.y - yspan; y < position.y + yspan; y++) {\n      positions.push({x, y})\n    }\n  }\n  return positions;\n}\n\nexport const getPositionsFromStructure = (structure, initialPosition) => {\n  return structure.positions.map((slot) => {\n    let position = {\n      x: initialPosition.x + slot.x + structure.x_offset,\n      y: initialPosition.y + slot.y + structure.y_offset\n    }\n    return position\n  })\n}\n","import uuid from 'uuid/v1';\nexport class Entity {\n  constructor({ game = null, passable = false, name = 'nameless' }) {\n    let id = uuid();\n    this.entityTypes = ['Entity'];\n    this.id = id;\n    this.name = name;\n    this.game = game;\n    this.passable = passable;\n    this.active = true;\n  }\n}\n","import * as Helper from '../helper'\n\nexport const ENERGY_THRESHOLD = 100;\n\nexport const COLORS = {\n  black_1: '#424242',\n  gray_1: '#262d37',\n  gray_2: '#606b79',\n  gray_4: '#B7C3CD',\n  gray_5: '#CED5DD',\n  green_1: '#1d533c',\n  green_2: '#227743',\n  green_3: '#2d9c59',\n  red_4: '#D82D33',\n  red_5: '#E16264',\n  purple_3: '#c45ffd',\n}\n\nexport const THEMES = {\n  NARUTO: {\n    gaara: '#603030',\n    rock_lee: '#155859',\n  },\n  SOLARIZED: {\n    base03: '#002b36',\n    base02: '#073642',\n    base01: '#586e75',\n    base00: '#657b83',\n    base0: '#839496',\n    base1: '#93a1a1',\n    base2: '#eee8d5',\n    base3: '#fdf6e3',\n    yellow: '#b58900',\n    orange: '#cb4b16',\n    red: '#dc322f',\n    magenta: '#d33682',\n    violet: '#6c71c4',\n    blue: '#268bd2',\n    cyan: '#2aa198',\n    green: '#859900',\n  },\n  JACINTO: {\n    // base1: '#07111Dff',\n    base1: '#0B0B0Bff',\n    base2: '#5A7178ff',\n    base3: '#B6ACA3ff',\n    base4: '#EDF6F1ff',\n    cog1: '#2d5fc9',\n    cog2: '#18c0f8',\n    cog3: '#86C8E4ff',\n    // locust2: '#E19D3Fff',\n    locust1: '#96641Dff',\n    locust2: '#F89339ff',\n    locust3: '#E7C898ff',\n    flesh1: '#833139ff',\n    flesh2: '#CC7468ff',\n    flesh3: '#DDA78Fff',\n    gray: '#6D7886ff',\n    red: '#C7141Cff',\n    yellow: '#b58900',\n    green: '#859900',\n  },\n}\n\nexport const NPC_NAME = 'Helpless Citizen';\nexport const PLAYER_NAME = 'Fire Fighter';\n\nexport const TILE_KEY = {\n  'GROUND': {\n    background: THEMES.SOLARIZED.base03,\n    foreground: THEMES.SOLARIZED.base01,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'FLOOR': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base0,\n    character: '',\n    passable: true,\n  },\n  'SAFE_FLOOR': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base0,\n    character: '',\n    passable: true,\n  },\n  'BURNT': {\n    background: THEMES.SOLARIZED.base03,\n    foreground: THEMES.SOLARIZED.red,\n    character: 'X',\n    sprite: '',\n    passable: true,\n    animation: [\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'X', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'x', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'X', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.orange, character: 'x', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.orange, character: 'X', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.yellow, character: 'x', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'X', sprite: '', passable: true, },\n    ]\n  },\n  'WET': {\n    background: THEMES.SOLARIZED.base03,\n    foreground: THEMES.SOLARIZED.blue,\n    character: '=',\n    sprite: '',\n    passable: true,\n    animation: [\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '=', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '~', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '=', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.base0, character: '~', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.base1, character: '=', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.base1, character: '~', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '=', sprite: '', passable: true, },\n    ]\n  },\n  'WALL': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base2,\n    character: '#',\n    sprite: '',\n    passable: false,\n  },\n  'DOOR': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base0,\n    character: '+',\n    sprite: '',\n    passable: true,\n  },\n  'SAFE': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.green,\n    character: '+',\n    sprite: '',\n    passable: true,\n  },\n\n  'WATER': {\n    animation: [\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#8aa', character: '▒', passable: false, },\n      { background: '#424242', foreground: '#8aa', character: '▓', passable: false, },\n    ],\n    background: '#9dc3d3',\n    character: '░',\n    passable: false,\n  },\n}\n\nexport const HAND_SIGNS = {\n  Power: {\n    type: 'Power',\n    name: 'Rin',\n    description: 'Strength of mind, body, spirit',\n  },\n  Energy: {\n    type: 'Energy',\n    name: 'Pyo',\n    description: 'energy direction',\n  },\n  Harmony: {\n    type: 'Harmony',\n    name: 'To',\n    description: 'one- ness with the universe or self',\n  },\n  Healing: {\n    type: 'Healing',\n    name: 'Sha',\n    description: 'of self and others',\n  },\n  Intuition: {\n    type: 'Intuition',\n    name: 'Kai',\n    description: 'premonition of danger, feeling others intent',\n  },\n  Awareness: {\n    type: 'Awareness',\n    name: 'Jin',\n    description: 'feeling thoughts of others, perhaps hiding your own',\n  },\n  Dimension: {\n    type: 'Dimension',\n    name: 'Retsu',\n    description: 'control of time and space',\n  },\n  Creation: {\n    type: 'Creation',\n    name: 'Zai',\n    description: 'understanding nature',\n  },\n  Absolute: {\n    type: 'Absolute',\n    name: 'Zen',\n    description: 'enlightenment',\n  }, \n}\n\nexport const DIRECTIONS = {\n  N: [0, -1],\n  NE: [1, -1],\n  W: [-1, 0],\n  NW: [-1, -1],\n  SW: [-1, 1],\n  S: [0, 1],\n  SE: [1, 1],\n  E: [1, 0],\n  NONE: [0, 0],\n}\n\nexport const getDirectionKey = (direction) => {\n  let directionString = `${direction}`;\n  let keys = Object.keys(DIRECTIONS);\n  let result = false\n  keys.forEach((key) => {\n    if (`${DIRECTIONS[key]}` === directionString) {\n      result = key\n    }\n  })\n  return result\n}\n\nexport const EQUIPMENT_TYPES = {\n  HEAD: 'HEAD',\n  TORSO: 'TORSO',\n  BACK: 'BACK',\n  HAND: 'HAND',\n  FEET: 'FEET',\n  GENERIC: 'GENERIC',\n}\n\nexport const EQUIPMENT_LAYOUTS = {\n  human: () => {\n    return [\n      {type: EQUIPMENT_TYPES.HEAD, name: 'head', item: null},\n      {type: EQUIPMENT_TYPES.TORSO, name: 'torso', item: null},\n      {type: EQUIPMENT_TYPES.BACK, name: 'back', item: null},\n      {type: EQUIPMENT_TYPES.HAND, name: 'left_hand', item: null},\n      {type: EQUIPMENT_TYPES.HAND, name: 'right_hand', item: null},\n      {type: EQUIPMENT_TYPES.FEET, name: 'feet', item: null},\n    ]\n  },\n  limited: () => {\n    return [\n      {type: EQUIPMENT_TYPES.GENERIC, name: 'slot_1', item: null},\n      {type: EQUIPMENT_TYPES.GENERIC, name: 'slot_2', item: null},\n    ]\n  },\n  gear: () => {\n    return [\n      { type: EQUIPMENT_TYPES.HAND, name: 'weapon', item: null },\n      // { type: EQUIPMENT_TYPES.TORSO, name: 'ammo', item: null },\n    ]\n  }\n}\n\nexport const CLONE_PATTERNS = {\n  point: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n    ]\n  },\n  triple_point: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 0, taken: false, },\n    ]\n  },\n  spread: {\n    x_offset: 1,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 1, y: 2, taken: false, },\n      { x: 1, y: -2, taken: false, },\n    ]\n  },\n  verticalLine: {\n    x_offset: 1,\n    y_offset: 1,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n    ]\n  },\n  smallSquare: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n    ]\n  },\n  square: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 1, y: -1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: -1, y: -1, taken: false, },\n      { x: -1, y: 0, taken: false, },\n      { x: -1, y: 1, taken: false, },\n    ]\n  },\n  clover: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: -1, y: 0, taken: false, },\n    ]\n  },\n  filledClover: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: -1, y: 0, taken: false, },\n    ]\n  },\n  bigSquare: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 1, y: -1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: -1, y: -1, taken: false, },\n      { x: -1, y: 0, taken: false, },\n      { x: -1, y: 1, taken: false, },\n      { x: 0, y: 2, taken: false, },\n      { x: 2, y: 2, taken: false, },\n      { x: 2, y: 0, taken: false, },\n      { x: 2, y: -2, taken: false, },\n      { x: 0, y: -2, taken: false, },\n      { x: -2, y: -2, taken: false, },\n      { x: -2, y: 0, taken: false, },\n      { x: -2, y: 2, taken: false, },\n    ],\n  },\n  donut: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      ...Helper.getPointsOnCircumference(0, 0, 2),\n      ...Helper.getPointsOnCircumference(0, 0, 3)\n    ]\n  },\n  big_circle: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      // { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 1, y: -1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: -1, y: -1, taken: false, },\n      { x: -1, y: 0, taken: false, },\n      { x: -1, y: 1, taken: false, },\n      ...Helper.getPointsOnCircumference(0, 0, 2),\n      ...Helper.getPointsOnCircumference(0, 0, 3),\n      ...Helper.getPointsOnCircumference(0, 0, 4)\n    ]\n  },\n}\n\nexport const PARTICLE_TEMPLATES = {\n  default: {\n    renderer: {\n      character: '*',\n      color: 'black',\n      background: 'white',\n    }\n  },\n  fail: {\n    renderer: {\n      character: 'x',\n      color: 'black',\n      background: 'red',\n    }\n  },\n  succede: {\n    renderer: {\n      character: 'x',\n      color: THEMES.SOLARIZED.base3,\n      background: THEMES.SOLARIZED.green,\n    }\n  },\n  damage: {\n    renderer: {\n      character: '*',\n      color: 'darkred',\n      background: 'red',\n    }\n  },\n  leaf: {\n    renderer: {\n      character: '✤',\n      color: '#36635b',\n      background: '#F0D8C0',\n    }\n  },\n  water: {\n    renderer: {\n      character: '~',\n      color: THEMES.SOLARIZED.base3,\n      background: THEMES.SOLARIZED.blue,\n    }\n  },\n}\n\nexport const PARTICLE_TYPE = {\n  directional: 0,\n  path: 1,\n}\n\nexport const ALPHABET = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];","export class ActionResource {\n  constructor({\n    name = 'Resource',\n    getResourceCost = () => null,\n    actorResourcePath = null,\n    actorResourceGetter = null,\n    actorResourceSetter = null,\n    renderer = {background: 'transparent', color: 'black', character: '*'}\n  }) {\n    this.name = name;\n    this.getResourceCost = getResourceCost;\n    this.actorResourcePath = actorResourcePath;\n    this.actorResourceGetter = actorResourceGetter;\n    this.actorResourceSetter = actorResourceSetter;\n    this.renderer = renderer;\n  }\n}\n","import {ActionResource} from './ActionResource';\n\nexport class EnergyResource extends ActionResource {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.name = 'Energy';\n    this.actorResourcePath = 'energy';\n    this.renderer = { color: 'black', background: '#ff9926', character: '8', sprite: '' }\n  }\n}","import * as _ from 'lodash';\nimport { Particle } from '../Entities/index';\nimport * as Constant from '../constants';\nimport {EnergyResource} from './ActionResources/EnergyResource';\n\nexport class Base {\n  constructor({ \n    game,\n    actor,\n    label = 'action label',\n    hidden = false,\n    energyCost = Constant.ENERGY_THRESHOLD, \n    processDelay = 50, \n    particles = [], \n    renderer = null, \n    particleTemplate = Constant.PARTICLE_TEMPLATES.default, \n    onBefore = () => null, \n    onAfter = () => null, \n    onSuccess = () => null, \n    onFailure = () => null, \n    interrupt = false, \n    requiredResources = [],\n  }) {\n    this.actor = actor;\n    this.game = game;\n    this.label = label;\n    this.hidden = hidden;\n    this.energyCost = energyCost;\n    this.processDelay = processDelay;\n    this.particles = particles;\n    this.renderer = renderer;\n    this.particleTemplate = particleTemplate;\n    this.onBefore = onBefore;\n    this.onAfter = onAfter;\n    this.onSuccess = onSuccess;\n    this.onFailure = onFailure;\n    this.interrupt = interrupt;\n    this.requiredResources = [new EnergyResource({ getResourceCost: () => this.energyCost }), ...requiredResources];\n  }\n\n  addParticle(\n    life, \n    pos, \n    direction, \n    renderer = { ...this.particleTemplate.renderer }, \n    type = Constant.PARTICLE_TYPE.directional, \n    path = null\n  ) {\n    let particle = new Particle({\n      game: this.game,\n      name: 'particle',\n      passable: true,\n      life,\n      pos,\n      direction,\n      energy: 100,\n      renderer,\n      type,\n      path,\n    });\n    this.particles.push(particle);\n  }\n\n  removeDeadParticles() {\n    this.particles = this.particles.filter((particle) => particle.life > 0);\n  }\n\n  setAsNextAction() {\n    this.actor.setNextAction(this);\n  }\n\n  getEnergyCost() {\n    return _.find(this.requiredResources, {name: 'Energy'}).getResourceCost();\n  }\n\n  getRequiredResourceName() {\n    return _.map(this.requiredResources, 'name');\n  }\n\n  listPayableResources() {\n    return _.map(this.requiredResources, (resource) => {\n      const getResourceCost = resource.getResourceCost; \n      const actorResourcePath = resource.actorResourcePath; \n      const actorResourceGetter = resource.actorResourceGetter;\n\n      const actorVariable = _.get(this.actor, actorResourcePath, null);\n      \n      let canPay = false;\n      // if the actor has provided a setter for this variable, use that \n      if (_.get(this.actor, actorResourceGetter, null) !== null) {\n        canPay = this.actor[actorResourceGetter]() >= getResourceCost();\n      } else if (actorVariable !== null) {\n        // else if the actor has a path to the appropriate variable, get that value and set it manually\n        canPay = actorVariable >= getResourceCost();\n      }\n\n      return {\n        canPay,\n        ...resource\n      }\n    })\n  }\n\n  canPayRequiredResources() {\n    return !_.find(this.listPayableResources(), {'canPay': false});\n  }\n\n  payRequiredResources() {\n    _.each(this.requiredResources, (resource) => {\n      const getResourceCost = resource.getResourceCost;\n      const actorResourcePath = resource.actorResourcePath;\n      const actorResourceSetter = resource.actorResourceSetter;\n      \n      const actorVariable = _.get(this.actor, actorResourcePath, null);\n      const resourceCost = getResourceCost();\n      // if the actor has provided a setter for this variable, use that \n      if (_.get(this.actor, actorResourceSetter, null)) {\n        this.actor[actorResourceSetter](actorVariable - resourceCost)\n        return true;\n      }\n\n      // else if the actor has a path to the appropriate variable, get that value and set it manually\n      if (actorVariable) {\n        this.actor[actorResourcePath] -= resourceCost;\n        return true;\n        // return _.set(this.actor, actorResourcePath, actorVariable - getResourceCost());\n      }\n      return false;\n    })\n  }\n  \n  perform() {\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n\n}","import { Base } from './Base';\nexport class DestroySelf extends Base {\n  constructor({ processDelay = 0, ...args }) {\n    super({ ...args });\n    this.processDelay = processDelay;\n  }\n  perform() {\n    // console.log(`${this.actor.name} is self-destructing`);\n    this.actor.energy -= this.energyCost;\n    this.actor.destroy();\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { DestroySelf } from './DestroySelf';\nimport * as Constant from '../constants';\n\nexport class EngineCrank extends Base {\n  constructor({ engine, ...args }) {\n    super({ ...args });\n    this.engine = engine;\n  }\n  async perform() {\n    let success = true;\n    let alternative = null;\n    console.log(`${this.actor.name} is cranking its engine.`);\n    try {\n      await this.engine.start();\n      this.actor.energy -= this.energyCost;\n    }\n    catch (error) {\n      console.log('EngineCrank');\n      console.log(error);\n      alternative = new DestroySelf({\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { CrankEngine } from '../Engine/engine';\nimport { EngineCrank } from '../Actions/EngineCrank';\n\nexport const Parent = superclass => class extends superclass {\n  constructor({ children = [], engine = new CrankEngine({}), ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('PARENT');\n    this.children = children;\n    this.engine = engine;\n    this.isInitialized = false;\n  }\n  destroyChild(child) {\n    child.energy = 0;\n    let tile = this.game.map[Helper.coordsToString(child.pos)];\n    this.game.map[Helper.coordsToString(child.pos)].entities = tile.entities.filter((e) => e.id !== child.id);\n    this.engine.actors = this.engine.actors.filter((e) => e.id !== child.id);\n    this.game.draw();\n  }\n  canAttack(entity) {\n    const childIds = this.children.map((child) => child.id);\n    return !childIds.includes(entity.id);\n  }\n  initialize() {\n    this.isInitialized = true;\n    this.engine.game = this.game;\n    this.engine.actors = this.children;\n    this.engine.actors.forEach((actor) => {\n      actor.game = this.game;\n      actor.destroy = () => { this.destroyChild(actor); };\n      actor.canAttack = this.canAttack.bind(this);\n      // actor.canAttack = (entity) => {this.canAttack(entity)};\n      this.game.placeActorOnMap(actor);\n      this.engine.addActor(actor);\n      this.game.draw();\n    });\n  }\n  getAction(game) {\n    // crank engine one turn\n    if (!this.isInitialized) {\n      this.initialize();\n    }\n    let result = new EngineCrank({\n      game,\n      actor: this,\n      engine: this.engine,\n      energyCost: Constant.ENERGY_THRESHOLD,\n      processDelay: 10\n    });\n    return result;\n  }\n};\n","import Konva from 'konva';\nimport uuid from 'uuid/v1';\nimport * as Helper from '../../helper';\n\nexport const ANIMATION_TYPES = {\n  DEFAULT: 0,\n  BLINK_TILE: 1,\n  SOLID_TILE: 2,\n  BLINK_BOX: 3,\n}\n\nclass Animation {\n  constructor({display}) {\n    const id = uuid();\n    this.id = id;\n    this.lifeTime = 0;\n    this.active = true;\n    this.display = display;\n    this.node = null;\n  }\n\n  getActive () {\n    return false;\n  }\n\n  initialize () {\n    return;\n  }\n\n  update (frame) {\n    this.lifeTime += frame.timeDiff;\n    this.active = this.getActive();\n    if (!this.active) {\n      this.display.removeAnimation(this.id);\n    }\n  }\n}\n\nclass ExampleAnimation extends Animation {\n  constructor({...args}) {\n    super({...args})\n  }\n\n  getActive () {\n    if (this.lifeTime > 500) {\n      return false;\n    }\n    return true;\n  }\n}\n\nclass BlinkTile extends Animation {\n  constructor({\n    x,\n    y,\n    lerpDirection = -1,\n    color = '#fff',\n    rectAttributes = {},\n    ...args\n  }) {\n    super({ ...args });\n    this.x = x;\n    this.y = y;\n    this.lerpDirection = lerpDirection;\n    this.color = color;\n    this.rectAttributes = rectAttributes\n  }\n\n  getActive () {\n    return this.active;\n  }\n\n  initialize () {\n    this.active = true;\n    const attrs = {\n      name: 'rect',\n      x: (this.display.tileWidth * this.x) + (this.display.tileOffset + this.display.tileGutter),\n      y: (this.display.tileHeight * this.y) + (this.display.tileOffset + this.display.tileGutter),\n      offsetX: this.display.tileWidth / -4,\n      offsetY: this.display.tileHeight / -4,\n      width: this.display.tileWidth / 2,\n      height: this.display.tileHeight / 2,\n      fill: this.color,\n      // strokeEnabled: false,\n      // for optimization\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n      ...this.rectAttributes,\n    };\n    let rect = new Konva.Rect(attrs);\n    this.display.animationLayer.add(rect);\n    this.node = rect;\n    super.initialize();\n  }\n\n  update (frame) {\n    let opacity = this.node.opacity();\n    if (opacity >= 1) this.lerpDirection = -1;\n    if (opacity <= 0) this.lerpDirection = 1;\n    opacity += (0.030 * this.lerpDirection)\n    this.node.opacity(Helper.clamp(opacity, 0, 1))\n    super.update(frame);\n  }\n  \n}\n\nexport class BlinkBox extends BlinkTile {\n  constructor({...args}) {\n    super({ ...args });\n    this.rectAttributes = {\n      fill: 'transparent',\n      stroke: args.color,\n      strokeWidth: 5,\n      offsetX: 0,\n      offsetY: 0,\n      width: this.display.tileWidth,\n      height: this.display.tileHeight,\n    }\n  }\n}\n\nexport class Display {\n  constructor({\n    containerId = null,\n    width = 100,\n    height = 100,\n    tileWidth = 10,\n    tileHeight = 10,\n    tileGutter = 0,\n    tileOffset = 10,\n    game = null,\n  }) {\n    this.containerId = containerId;\n    this.width = width;\n    this.height = height;\n    this.tileWidth = tileWidth;\n    this.tileHeight = tileHeight;\n    this.tileGutter = tileGutter;\n    this.tileOffset = tileOffset;\n    this.stage = null;\n    this.layer = null;\n    this.animationLayer = null;\n    this.animations = [];\n    this.animationLoop = null;\n    this.game = game;\n    this.animationTypes = ANIMATION_TYPES;\n  }\n\n  initialize (document) {\n    let d = document.getElementById(this.containerId)\n    let displayContainer = document.createElement('div');\n    d.appendChild(displayContainer);\n\n    // this.adjustContentToScreen(d);\n    \n    this.stage = new Konva.Stage({\n      container: 'display',   // id of container <div>\n      width: this.width,\n      height: this.height\n    });\n\n    \n    // setting up main tile map layer\n    this.layer = new Konva.Layer({\n      hitGraphEnabled: false,\n    });\n    \n    this.stage.add(this.layer);\n    \n    // setting up animation layer\n    this.animationLayer = new Konva.Layer({});\n    this.stage.add(this.animationLayer);\n    let animationLoop = new Konva.Animation((frame) => {\n      this.animations.forEach((animation) => animation.update(frame))\n      // Stop animation updates if no animations to process\n      if (this.animations.length <= 0) {\n        if (this.animationLoop) {\n          if (this.animationLoop.isRunning()) {\n            this.animationLoop.stop();\n          }\n        }\n      }\n    }, this.animationLayer);\n    this.animationLoop = animationLoop;\n    animationLoop.start();\n  }\n\n  adjustContentToScreen (display_element) {\n    const DEVICE_WIDTH = display_element.offsetWidth;\n    const value = (DEVICE_WIDTH - this.tileOffset) / this.game.mapWidth;\n    this.tileWidth = Math.floor(value);\n    this.tileHeight = this.tileWidth;\n    this.width = ((this.game.mapWidth - 1) * this.tileWidth) + this.tileOffset;\n    this.height = (this.game.mapHeight * this.tileHeight) + this.tileOffset;\n  }\n\n  addAnimation (type, args) {\n    let animation;\n    switch (type) {\n      case ANIMATION_TYPES.SOLID_TILE:\n        animation = new ExampleAnimation({display: this, ...args})\n        break;\n      case ANIMATION_TYPES.BLINK_TILE:\n        animation = new BlinkTile({display: this, ...args})\n        break;\n      case ANIMATION_TYPES.BLINK_BOX:\n        animation = new BlinkBox({display: this, ...args})\n        break;\n      case ANIMATION_TYPES.DEFAULT:\n      default:\n        animation = new Animation({ display: this, ...args})\n        break;\n    }\n    animation.initialize();\n    this.animations.push(animation)\n    if (!this.animationLoop.isRunning()) this.animationLoop.start();\n    return animation\n  }\n\n  removeAnimation (id) {\n    this.animations = this.animations.filter((anim) => {\n      if (anim.id !== id) return true;\n      // if anim is being removed, remove associated nodes and shapes too\n      anim.node.destroy();\n      return false;\n    });\n  }\n\n  updateAnimation (id) {\n    this.animations = this.animations.map((anim) => {\n      if (anim.id === id) {\n        console.log(anim);\n      }\n      return anim;\n    });\n  }\n\n  updateTile(tile, character, foreground, background) {\n    // child[0] is the rectangle\n    // child[1] is the text\n    if (tile) {\n      tile.children[0].fill(background);\n      tile.children[1].fill(foreground);\n      tile.children[1].text(character);\n    }\n  }\n\n  createTile(x, y, character, foreground, background, layer = 'layer') {\n    const actual_x = (this.tileWidth * x) + (this.tileOffset + this.tileGutter);\n    const actual_y = (this.tileHeight * y) + (this.tileOffset + this.tileGutter);\n    let node = new Konva.Group({\n      id: `${x},${y}`,\n      x: (this.tileWidth * x) + (this.tileOffset + this.tileGutter),\n      y: (this.tileHeight * y) + (this.tileOffset + this.tileGutter),\n      width: this.tileWidth,\n      height: this.tileHeight,\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n    });\n\n    let rect = new Konva.Rect({\n      name: 'rect',\n      width: this.tileWidth,\n      height: this.tileHeight,\n      fill: background,\n      strokeEnabled: false,\n      // for optimization\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n    });\n\n    let text = new Konva.Text({\n      name: 'text',\n      text: character,\n      width: this.tileWidth,\n      height: this.tileHeight,\n      fontSize: this.tileWidth - 2,\n      fontFamily: 'scroll-o-script',\n      fill: foreground,\n      align: 'center',\n      verticalAlign: 'middle',\n      // for optimization\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n    });\n\n    node.add(rect);\n    node.add(text);\n    this.layer.add(node);\n    return node;\n  }\n\n  getAbsoultueX(x) {\n    return (this.tileWidth * x) + (this.tileOffset + this.tileGutter)\n  }\n\n  getAbsoultueY(y) {\n    return (this.tileWidth * y) + (this.tileOffset + this.tileGutter)\n  }\n\n  getTilesWide (width, tileOffset, tileWidth) {\n    return Math.floor((width - tileOffset) / tileWidth)\n  }\n  \n  getTilesHigh(height, tileOffset, tileHeight) {\n    return Math.floor((height - tileOffset) / tileHeight)\n  }\n\n  getTilesAcrossOnScreen () { return Math.floor(this.width / this.tileWidth)}\n  getTilesDownOnScreen () { return Math.floor(this.height / this.tileHeight)}\n\n  draw () {\n    this.layer.batchDraw();\n  }\n}","import { THEMES } from '../constants';\nimport { ANIMATION_TYPES } from '../Display/konvaCustom';\n\nexport const HasTargetingCursor = superclass => class extends superclass {\n  constructor({...args}) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HAS_TARGETING_CURSOR');\n    this.cursorIsActive = false;\n    this.cursorPositions = []; \n    this.animations = []; \n  }\n\n  setCursorIsActive (active = true) {\n    this.cursorIsActive = active;\n  }\n\n  activateCursor (positions) {\n    this.setCursorPositions(positions);\n    this.setCursorIsActive(true);\n    this.resetAnimations();\n  }\n\n  deactivateCursor () {\n    this.setCursorIsActive(false);\n    this.removeAnimations();\n  }\n\n  getCursorPositions () {\n    return this.cursorPositions;\n  }\n\n  setCursorPositions (positions) {\n    this.cursorPositions = positions;\n    return this.getCursorPositions();\n  }\n\n  addAnimations () {\n    const positions = this.getCursorPositions();\n    if (positions.length) {\n      // hack for visual separation\n      let lastPos = {x: null, y: null}\n      let nudge = 0;\n      // const nudgeInc = 0.2\n      positions.forEach((position) => {\n        // if (position.x == lastPos.x && position.y == lastPos.y) nudge += nudgeInc;\n        // lastPos = {...position};\n        const newAnimation = this.game.display.addAnimation(\n          ANIMATION_TYPES.BLINK_BOX, \n          {\n            x: position.x, \n            y: position.y + nudge, \n            color: THEMES.SOLARIZED.base3 \n          }\n        );\n        this.animations.push(newAnimation);\n      })\n    }\n  }\n\n  removeAnimations () {\n    if (this.animations.length) {\n      this.animations.forEach((animation) => this.game.display.removeAnimation(animation.id))\n    }\n    this.animations = [];\n  }\n\n  resetAnimations () {\n    this.removeAnimations();\n    this.addAnimations();\n  }\n\n  moveCursorToPosition (position) {\n    const currentPositions = this.getCursorPositions()\n    const xDelta = position.x - currentPositions[0].x;\n    const yDelta = position.y - currentPositions[0].y;\n    const newPositons = currentPositions.map(\n      (pos) => ({\n        x: pos.x + xDelta,\n        y: pos.y + yDelta\n      })\n    );\n    this.setCursorPositions(newPositons);\n    this.resetAnimations();\n    return newPositons;\n  }\n\n  moveCursorInDirection (direction, distance = 1) {\n    const newPositons = this.getCursorPositions().map(\n      (pos) => ({\n        x: pos.x + (direction[0] * distance),\n        y: pos.y + (direction[1] * distance)\n      })\n    );\n    this.setCursorPositions(newPositons);\n    this.resetAnimations();\n    return newPositons;\n  }\n\n  updateCursorNode (index, args) {\n    const anim = this.animations[index];\n    args.forEach((arg) => {\n      anim.node[arg.key](arg.value)\n    })\n  }\n\n  updateAllCursorNodes (args) {\n    this.getCursorPositions().forEach((pos, index) => {\n      const anim = this.animations[index];\n      args.forEach((arg) => {\n        anim.node[arg.key](arg.value)\n      })\n    })\n  }\n\n  destroy() {\n    this.removeAnimations();\n    super.destroy();\n  }\n};\n","import { COLORS, THEMES } from './constants';\nimport uuid from 'uuid/v1';\n\nexport const MESSAGE_TYPE = {\n  INFORMATION: {\n    color: COLORS.gray_4,\n    backgroundColor: COLORS.black_1,\n  },\n  ACTION: {\n    color: COLORS.gray_2,\n    backgroundColor: COLORS.gray_5,\n  },\n  DANGER: {\n    color: COLORS.red_5,\n    backgroundColor: COLORS.black_1,\n  },\n  STATUS_EFFECT: {\n    color: THEMES.SOLARIZED.base3,\n    backgroundColor: THEMES.SOLARIZED.violet,\n  },\n  ERROR: {\n    color: THEMES.SOLARIZED.base3,\n    backgroundColor: THEMES.SOLARIZED.yellow,\n  },\n}\n\nexport class Message {\n  constructor({ text = '', type = MESSAGE_TYPE.INFORMATION }) {\n    let id = uuid();\n    this.id = id;\n    this.text = text;\n    this.type = type;\n  }\n}","import { MESSAGE_TYPE } from '../message';\nimport * as Helper from '../../helper';\n\nexport const Attacking = superclass => class extends superclass {\n  constructor({ attackDamage = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('ATTACKING');\n    this.attackDamage = attackDamage;\n  }\n  getAttackDamage(additional = 0) {\n\n    return this.attackDamage + additional;\n  }\n  canAttack(entity) {\n    return true;\n  }\n  attack(targetPos, additional = 0) {\n    let success = false;\n    let tile = this.game.map[Helper.coordsToString(targetPos)];\n    if (!tile) {\n      return success;\n    }\n    let targets = Helper.getDestructableEntities(tile.entities);\n    if (targets.length > 0) {\n      let target = targets[0];\n      if (this.canAttack(target)) {\n        let damage = this.getAttackDamage(additional);\n        if (this.entityTypes.includes('EQUIPING')) {\n          this.equipment.forEach((slot) => {\n            if (slot.item) {\n              if (slot.item.entityTypes.includes('ATTACKING')) {\n                damage += slot.item.getAttackDamage();\n              }\n            }\n          });\n        }\n        this.game.addMessage(`${this.name} does ${damage} to ${target.name}`, MESSAGE_TYPE.DANGER);\n        target.decreaseDurability(damage);\n        success = true;\n      }\n    }\n    return success;\n  }\n};\n","import * as _ from 'lodash';\nimport * as Helper from '../../helper';\n\nexport const addTileZone = (tileKey, origin = { x: 0, y: 0 }, height = 3, width = 3, type = 'GROUND', map, mapHeight, mapWidth) => {\n  for (let i = 0; i < mapHeight; i++) {\n    for (let j = 0; j < mapWidth; j++) {\n      if (i >= origin.y && i <= origin.y + (height - 1) && j >= origin.x && j <= origin.x + (width - 1)) {\n        const key = `${j},${i}`\n        addTileToMap({map, key, tileKey, tileType: type})\n      }\n    }\n  }\n}\n\nexport const addTileToMap = ({map, key, tileKey, tileType, entities = []}) => {\n  const numberOfAnimationFrames = _.get(tileKey[tileType], 'animation.length', 0);\n  const currentFrame = Helper.getRandomInt(0, numberOfAnimationFrames);\n  const tileData = {\n    type: tileType,\n    currentFrame,\n    entities,\n    tileKey,\n  };\n  map[key] = tileData;\n\n  return tileData;\n}\n\nexport const tileHasTag = ({tile, tag}) => {\n  const tags = _.get(tile.tileKey[tile.type], 'tags', []);\n  return tags.includes(tag);\n}\n\nexport const tileHasAnyTags = ({tile, tags}) => {\n  const tileTags = _.get(tile.tileKey[tile.type], 'tags', []);\n  return tags.some((tag) => tileTags.includes(tag))\n}\n\nexport const getTileFromMap = ({map, position}) => map[Helper.coordsToString(position)];","import { MESSAGE_TYPE } from '../message';\nimport * as Helper from '../../helper';\nimport * as MapHelper from '../Maps/helper';\n\nexport const RangedAttacking = superclass => class extends superclass {\n  constructor({ attackRange = 0, baseRangedAccuracy = 0, baseRangedDamage = 0, magazineSize = 0, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('RANGED_ATTACKING');\n    this.attackRange = attackRange;\n    this.baseRangedAccuracy = baseRangedAccuracy;\n    this.baseRangedDamage = baseRangedDamage;\n    this.magazineSize = magazineSize;\n    this.magazine = magazineSize;\n  }\n\n  getRangedAttackChance(targetPos = null) {\n    const weaponAccuracy = this.getRangedWeaponAccuracy();\n    const coverDebuff = targetPos ? this.getRangedAttackCoverDebuff(targetPos) : 0;\n    const distanceDebuff = targetPos ? this.getRangedAttackDistanceDebuff(targetPos) : 0;\n    const result = this.baseRangedAccuracy + weaponAccuracy + coverDebuff + distanceDebuff;\n    return Math.max(result, 0);\n  }\n\n  getRangedAttackCoverDebuff(targetPos) {\n    const path = Helper.calculateStraightPath(this.getPosition(), targetPos);\n    const coverAccuracyModifer = path.reduce((acc, curr) => {\n      let tile = this.game.map[Helper.coordsToString(curr)];\n      // if targeting throuh a wall, the shot is modified by -100%\n      if (MapHelper.tileHasTag({tile, tag: 'WALL'})) return acc - 1;\n      let entitiesProvidingCover = Helper.filterEntitiesByType(tile.entities, 'COVERING');\n      let coverModifer = 0;\n      // only counts the first entity cover modifer in a tile\n      if (entitiesProvidingCover.length > 0) {\n        // if covering entity is in use by this actor, ignore it's modifer\n        if (this.entityTypes.includes('USES_COVER')) {\n          if (this.getCoveredByIds().includes(entitiesProvidingCover[0].id)) {\n            return acc;\n          }\n        }\n        coverModifer = entitiesProvidingCover[0].accuracyModifer;\n      }\n      return acc + coverModifer;\n    }, 0);\n    return coverAccuracyModifer;\n  }\n\n  getRangedAttackDistanceDebuff(targetPos) {\n    const distanceToTarget = Helper.calculatePath(this.game, targetPos, this.getPosition(), 8).length;\n    return -1 * (distanceToTarget / (this.getAttackRange() * 3))\n  }\n\n  getAttackRange() {\n    let range = this.attackRange;\n    if (this.entityTypes.includes('EQUIPING')) {\n      this.equipment.forEach((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('RANGED_ATTACKING')) {\n            range += slot.item.attackRange;\n          }\n        }\n      });\n    }\n    return range;\n  }\n\n  getRangedWeaponAccuracy() {\n    let accuracy = 0;\n    if (this.entityTypes.includes('EQUIPING')) {\n      this.equipment.forEach((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('RANGED_ATTACKING')) {\n            accuracy += slot.item.getRangedAttackChance();\n          }\n        }\n      });\n    }\n    return accuracy;\n  }\n\n  getRangedAttackDamage(additional = 0) {\n\n    return this.baseRangedDamage + this.getRangedWeaponDamage() + additional;\n  }\n\n  getRangedWeaponDamage() {\n    let damage = 0;\n    if (this.entityTypes.includes('EQUIPING')) {\n      this.equipment.forEach((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('RANGED_ATTACKING')) {\n            damage += slot.item.getRangedAttackDamage();\n          }\n        }\n      });\n    }\n    return damage;\n  }\n\n  canRangedAttack(entity) {\n    return true;\n  }\n\n  getEquipedWeapons() {\n    if (this.entityTypes.includes('EQUIPING')) {\n      const equipmentSlots = this.equipment.map((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('RANGED_ATTACKING')) {\n            return slot.item;\n          }\n        }\n      });\n      const filledSlots = equipmentSlots.filter((slot) => slot)\n      return filledSlots;\n    }\n    return [];\n  }\n\n  decrementMagazine() {\n    this.magazine = Math.max(0, this.magazine - 1)\n  }\n\n  useAmmo(position) {\n    this.getEquipedWeapons().forEach(\n      (weapon) => {\n        weapon.decrementMagazine();\n        let ammo = this.contains('Ammo');\n        if (ammo) {\n          this.removeFromContainer(ammo);\n          ammo.move(position)\n          ammo.destroy();\n        }\n      }\n    );\n  }\n\n  reload () {\n    let reloaded = false;\n    if (this.entityTypes.includes('CONTAINING')) {\n      this.getEquipedWeapons().forEach((weapon) => {\n        const amount = weapon.magazineSize - weapon.magazine;\n        for (let i = 0; i < amount; i++) {\n          let ammo = this.contains('Ammo');\n          if (ammo) {\n            weapon.magazine += 1;\n            reloaded = true;\n          }\n        }\n      });\n    }\n    return reloaded;\n  }\n\n  rangedAttack(targetPos, additionalDamage = 0, additionalAccuracy = 0) {\n    let success = false;\n    let hit = false;\n    let tile = this.game.map[Helper.coordsToString(targetPos)];\n    if (!tile) {\n      return [success, hit];\n    }\n    let targets = Helper.getDestructableEntities(tile.entities);\n    if (targets.length > 0) {\n      const attackChance = this.getRangedAttackChance(targetPos);\n      const hitChance = attackChance + additionalAccuracy;\n      hit = Math.random() < hitChance;\n      // TODO: trigger hit and miss animations\n      let target = targets[0];\n      this.useAmmo(target.getPosition());\n      if (!hit) {\n        success = true;\n        return [success, hit];\n      }\n      if (this.canRangedAttack(target)) {\n        let damage = this.getRangedAttackDamage(additionalDamage);\n        this.game.addMessage(`${this.name} does ${damage} to ${target.name}`, MESSAGE_TYPE.DANGER);\n        target.decreaseDurability(damage);\n        success = true;\n      }\n    }\n    return [success, hit];\n  }\n};\n","import * as Constant from '../constants';\n\nexport const Equipable = superclass => class extends superclass {\n  constructor({ name = 'nameless', equipmentType = Constant.EQUIPMENT_TYPES.HAND, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('EQUIPABLE');\n    this.name = name;\n    this.equipmentType = equipmentType;\n  }\n};\n","import * as Helper from '../../helper';\n\nexport const Acting = superclass => class extends superclass {\n  constructor({ actions = [], speed = 100, energy = 0, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('ACTING');\n    this.actions = actions;\n    this.speed = speed;\n    this.energy = speed;\n  }\n  getAction() {\n    let action = Helper.getRandomInArray(this.actions);\n    if (action) {\n      return action;\n    }\n  }\n  gainEnergy(value = this.speed) {\n    this.energy += value;\n  }\n  hasEnoughEnergy() {\n    return this.energy > 0;\n  }\n};\n","import * as Helper from '../../helper';\n\nexport const Rendering = superclass => class extends superclass {\n  constructor({ pos = { x: 0, y: 0 }, renderer, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('RENDERING');\n    this.pos = pos;\n    this.renderer = { ...renderer };\n    this.currentFrame = 0;\n  }\n\n  getRenderer() {\n    return this.renderer\n  }\n\n  getPosition() {\n    return this.pos;\n  }\n  move(targetPos) {\n    let success = false;\n    if (this.game.canOccupyPosition(targetPos, this)) {\n      let tile = this.game.map[Helper.coordsToString(this.pos)];\n      this.game.map[Helper.coordsToString(this.pos)] = { ...tile, entities: tile.entities.filter((e) => e.id !== this.id) };\n      this.pos = targetPos;\n      this.game.map[Helper.coordsToString(targetPos)].entities.push(this);\n      success = true;\n    }\n    return success;\n  }\n\n  shove(targetPos, direction) {\n    let success = false;\n    let targetTile = this.game.map[Helper.coordsToString(targetPos)];\n    if (targetTile) {\n      targetTile.entities.map((entity) => {\n        if (entity.entityTypes.includes('PUSHABLE')) {\n          if (!entity.passable && entity.pushable) {\n            let newX = entity.pos.x + direction[0];\n            let newY = entity.pos.y + direction[1];\n            let newPos = { x: newX, y: newY };\n            entity.move(newPos);\n          }\n        }\n      });\n    }\n    success = this.move(targetPos);\n    return success;\n  }\n};\n","export class ContainerSlot {\n  constructor({ itemType, items }) {\n    this.itemType = itemType;\n    this.items = items;\n  }\n}\n\nexport const Containing = superclass => class extends superclass {\n  constructor({ container = [], ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CONTAINING');\n    this.container = container;\n  }\n  createSlot(item) {\n    let slot = new ContainerSlot({\n      itemType: item.name,\n      items: [item],\n    });\n    this.container.push(slot);\n  }\n  contains(itemType) {\n    let container = this.container;\n    let slots = container.filter((slot) => slot.itemType === itemType);\n    return slots.length > 0 ? slots[0].items[0] : false;\n  }\n  addToContainer(item) {\n    const index = this.container.findIndex((slot) => slot.itemType === item.name);\n    if (index >= 0) {\n      this.container[index].items.push(item);\n    }\n    else {\n      this.createSlot(item);\n    }\n  }\n  removeFromContainer(item) {\n    this.container.forEach((slot, index) => {\n      slot.items = slot.items.filter((it) => it.id !== item.id);\n      if (!slot.items.length)\n        this.container.splice(index, 1);\n    });\n  }\n};\n","import { Howl, Howler } from 'howler';\n\nexport default {\n  fire_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/fire-00.mp3'],\n    volume: 0.5,\n    loop: true,\n  }),\n  fire_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/fire-01.mp3'],\n    volume: 0.05,\n    loop: true,\n  }),\n  scream_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/scream-00.wav']\n  }),\n  scream_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/scream-01.wav']\n  }),\n  scream_2: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/scream-02.wav']\n  }),\n  water_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/water-04.wav']\n  }),\n  water_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/water-05.wav']\n  }),\n  chop_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/chop-00.wav']\n  }),\n  chop_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/chop-01.wav']\n  }),\n  equip_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/equip-00.wav']\n  }),\n  equip_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/equip-01.wav']\n  }),\n  explosion_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/explosion-00.wav'],\n    volume: 0.2,\n  }),\n  save: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/save.wav'],\n  }),\n  lose: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/lose-00.wav'],\n  }),\n  grab_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/grab-00.wav'],\n  }),\n  release_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/grab-01.wav'],\n  }),\n}","import SOUNDS from '../sounds';\nimport * as Constant from '../constants';\n\nexport const Equiping = superclass => class extends superclass {\n  constructor({ equipment = Constant.EQUIPMENT_LAYOUTS.human(), ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('EQUIPING');\n    this.equipment = equipment;\n  }\n  hasItemNameEquipped(itemName) {\n    const equipment = this.equipment.filter((slot) => {\n      if (slot.item) {\n        if (slot.item.name === itemName) {\n          return true;\n        }\n      }\n      return false;\n    });\n    return equipment.length > 0;\n  }\n  getItemInSlot(slotName) {\n    let openSlots = this.equipment.filter((slot) => {\n      return (slot.item === null && slot.type === slotName);\n    });\n    if (openSlots.length > 0) {\n      return false;\n    }\n    let slot = this.equipment.find((slot) => slot.type === slotName);\n    if (!slot) {\n      return false;\n    }\n    if (!slot.item) {\n      return false;\n    }\n    return slot.item;\n  }\n  equip(slotName, item) {\n    let foundSlot = false;\n    this.equipment = this.equipment.map((slot) => {\n      if (!foundSlot && slot.type === slotName && slot.item === null) {\n        slot.item = item;\n        foundSlot = true;\n        SOUNDS.equip_1.play();\n      }\n      return slot;\n    });\n    return foundSlot;\n  }\n  unequip(item) {\n    this.equipment = this.equipment.map((slot) => {\n      if (slot.item) {\n        if (slot.item.id === item.id) {\n          slot.item = null;\n          SOUNDS.equip_0.play();\n        }\n      }\n      return slot;\n    });\n  }\n};\n","export const Playing = superclass => class extends superclass {\n  constructor({ keymap = {}, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('PLAYING');\n    this.nextAction = null;\n    this.keymap = keymap;\n  }\n  setNextAction(action) {\n    this.nextAction = action;\n  }\n  getAction() {\n    let action = this.nextAction;\n    this.nextAction = null;\n    return action;\n  }\n};\n","import * as Helper from '../../helper';\n\nexport const destroyEntity = (entity) => {\n  entity.energy = 0;\n  if (entity.pos) {\n    let tile = entity.game.map[Helper.coordsToString(entity.pos)];\n    entity.game.map[Helper.coordsToString(entity.pos)].entities = tile.entities.filter((e) => e.id !== entity.id);\n  }\n  // entity.game.engine.actors = entity.game.engine.actors.filter((e) => e.id !== entity.id);\n  entity.game.engine.removeStatusEffectByActorId(entity.id);\n  entity.game.draw()\n  entity.active = false;\n}","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nexport class Say extends Base {\n  constructor({ message, messageType = MESSAGE_TYPE.INFORMATION, processDelay = 50, ...args }) {\n    super({ ...args });\n    this.message = message;\n    this.messageType = messageType;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    this.game.addMessage(`${this.actor.name} says \"${this.message}\"`, this.messageType);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import SOUNDS from '../sounds';\nimport { Base } from './Base';\nimport { Say } from './Say';\nimport * as Helper from '../../helper';\nimport * as Constant from '../constants';\n\nexport class Attack extends Base {\n  constructor({ targetPos, additionalDamage = 0, processDelay = 100, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.additionalDamage = additionalDamage;\n    this.processDelay = processDelay;\n    this.particleTemplate = Constant.PARTICLE_TEMPLATES.damage;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (!this.actor.entityTypes.includes('ATTACKING')) {\n      return {\n        success: true,\n        alternative: new Say({\n          message: `Ooh I don\\'t know how to attack`,\n          game: this.game,\n          actor: this.actor,\n          energyCost: 0,\n        }),\n      };\n    }\n    success = this.actor.attack(this.targetPos, this.additionalDamage);\n    if (success) {\n      const sound = Helper.getRandomInArray([SOUNDS.chop_0, SOUNDS.chop_1]);\n      sound.play();\n      this.addParticle(1, { ...this.targetPos }, { x: 0, y: 0 });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { Attack } from \"./Attack\";\n\nexport class MoveOrAttack extends Base {\n  constructor({ targetPos, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let moveSuccess = this.actor.move(this.targetPos);\n    if (moveSuccess) {\n      success = true;\n    } else {\n      success = true;\n      alternative = new Attack({\n        targetPos: this.targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: 0\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { MoveOrAttack } from './MoveOrAttack';\nimport { DestroySelf } from './DestroySelf';\nimport * as Constant from '../constants';\n\nexport class ThrowProjectile extends MoveOrAttack {\n  constructor({ ...args }) {\n    super({ ...args });\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    this.actor.passable = false;\n    let move_result = super.perform();\n    if (move_result.success) {\n      this.actor.path.shift();\n      success = true;\n    }\n    if (this.actor.path.length === 0) {\n      success = true;\n      alternative = new DestroySelf({\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n      });\n    }\n    if (move_result.alternative) {\n      let attackSuccess = this.actor.attack(this.targetPos);\n      if (attackSuccess) {\n        alternative = new DestroySelf({\n          game: this.game,\n          actor: this.actor,\n          energyCost: Constant.ENERGY_THRESHOLD,\n          processDelay: 0,\n        });\n      }\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n","import { Attack } from './Attack';\nexport class SelfDestructiveAttack extends Attack {\n  constructor({ damageToSelf, ...args }) {\n    super({ ...args });\n    this.damageToSelf = damageToSelf;\n    this.onSuccess = () => {\n      console.log('Self destruct success');\n      this.actor.decreaseDurabilityWithoutDefense(damageToSelf);\n    };\n    this.onFailure = () => {\n      console.log('Self destruct fails');\n      this.actor.destroy();\n    };\n  }\n}\n","import { Base } from './Base';\nimport { SelfDestructiveAttack } from \"./SelfDestructiveAttack\";\nimport * as Constant from '../constants';\n\nexport class ProjectileMove extends Base {\n  constructor({ targetPos, damageToSelf = 1, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.processDelay = processDelay;\n    this.damageToSelf = damageToSelf;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let moveSuccess = this.actor.move(this.targetPos);\n    if (moveSuccess) {\n      this.actor.energy -= this.energyCost;\n      success = true;\n    }\n    else {\n      success = true;\n      alternative = new SelfDestructiveAttack({\n        targetPos: this.targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        damageToSelf: this.damageToSelf,\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import * as Constant from '../constants';\nimport { ProjectileMove } from '../Actions/ProjectileMove';\nimport { DestroySelf } from '../Actions/DestroySelf';\n\nexport const DirectionalProjecting = superclass => class extends superclass {\n  constructor({ path = false, direction = { x: 0, y: 0 }, attackDamage = 1, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DIRECTIONAL_PROJECTING');\n    this.path = path;\n    this.direction = direction;\n    this.attackDamage = attackDamage;\n    this.range = range;\n  }\n  createPath(game) {\n    let path = [];\n    for (let i = 1; i < this.range + 1; i++) {\n      path.push({\n        x: this.pos.x + (this.direction[0] * i),\n        y: this.pos.y + (this.direction[1] * i)\n      });\n    }\n    this.path = path;\n  }\n  getAction(game) {\n    let result = null;\n    let newX = this.pos.x + this.direction[0];\n    let newY = this.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n    this.passable = false;\n    if (this.range > 0) {\n      result = new ProjectileMove({\n        targetPos: targetPos,\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        damageToSelf: 1,\n        onSuccess: () => this.range -= 1,\n        onAfter: () => {\n          if (this.energy <= 100) {\n            game.engine.setActorToPrevious();\n          }\n        }\n      });\n    }\n    else {\n      result = new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: 0\n      });\n    }\n    return result;\n  }\n};\n","import { Base } from './Base';\nimport { Attack } from \"./Attack\";\nimport * as Constant from '../constants';\n\nexport class Shove extends Base {\n  constructor({ targetPos, direction, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.direction = direction;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let moveSuccess = this.actor.shove(this.targetPos, this.direction);\n    if (moveSuccess) {\n      this.actor.energy -= this.energyCost;\n      success = true;\n    }\n    else {\n      success = true;\n      alternative = new Attack({\n        targetPos: this.targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { MoveOrAttack } from './MoveOrAttack';\nimport { DestroySelf } from './DestroySelf';\nimport * as Constant from '../constants';\n\nexport class ThrowProjectileGas extends MoveOrAttack {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.processDelay = 0;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    this.actor.passable = false;\n    let move_result = super.perform();\n    if (move_result.success) {\n      this.actor.path.shift();\n      success = true;\n    }\n    if (this.actor.path.length === 0) {\n      success = true;\n      alternative = new DestroySelf({\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n      });\n    }\n    if (move_result.alternative) {\n      this.actor.attack(this.targetPos);\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { MoveOrAttack } from '../Actions/MoveOrAttack';\nimport { Say } from '../Actions/Say';\n\nexport const Chasing = superclass => class extends superclass {\n  constructor({ targetEntity = null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CHASING');\n    this.targetEntity = targetEntity;\n  }\n  getAction(game) {\n    if (this.targetEntity) {\n      let path = Helper.calculatePath(game, this.targetEntity.pos, this.pos);\n      let targetPos = path.length > 0 ? path[0] : this.pos;\n      return new MoveOrAttack({\n        targetPos,\n        game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    } else {\n      return new Say({\n        message: 'Where are they?',\n        game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n  }\n};\n","import { Base } from './Base';\nimport * as Helper from '../../helper';\n\nexport class PlaceActor extends Base {\n  constructor({ targetPos, entity, interrupt = true, forcePlacement = false, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.entity = entity;\n    this.interrupt = interrupt;\n    this.forcePlacement = forcePlacement;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    // let canPlace = true;\n    // if (!this.game.canOccupyPosition(this.targetPos, this.entity)) canPlace = false;\n    // if (this.entity.entityTypes.includes('PARENT')) {\n    //   this.entity.children.forEach((child) => {\n    //     console.log(child.pos);\n    //     if (!this.game.canOccupyPosition(child.pos, child)) canPlace = false;\n    //   })\n    // }\n    // if (canPlace) {\n    //   this.entity.pos = this.targetPos;\n    //   this.game.engine.addActorAsPrevious(this.entity);\n    //   this.game.engine.start(); // should this be used outside of engine?\n    //   success = true;      \n    // }\n    let canOccupyPosition = this.forcePlacement ? true : this.game.canOccupyPosition(this.targetPos, this.entity);\n    const tile = this.game.map[Helper.coordsToString(this.targetPos)];\n    if (canOccupyPosition && tile) {\n      this.entity.pos = this.targetPos;\n      tile.entities.push(this.entity);\n      // this.game.engine.addActorAsPrevious(this.entity);\n      // this.game.engine.addActor(this.entity);\n      this.game.engine.addActorAsNext(this.entity);\n      // this.interrupt = true;\n      // this.game.engine.start(); // BUGGED - should this be used outside of engine?\n      success = true;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","export const Draggable = superclass => class extends superclass {\n  constructor({ draggable = true, ...args }) {\n    super({ ...args });\n    this.draggable = draggable;\n    this.entityTypes = this.entityTypes.concat('DRAGGABLE');\n  }\n};\n","export const Pushable = superclass => class extends superclass {\n  constructor({ pushable = true, ...args }) {\n    super({ ...args });\n    this.pushable = pushable;\n    this.entityTypes = this.entityTypes.concat('PUSHABLE');\n  }\n};\n","import * as Constant from './constants';\nimport {\n  DestructiveCloudProjectileV2,\n  DestructiveProjectile,\n  DirectionalProjectile,\n  MovingWall,\n  DestructiveCloudProjectile,\n  Weapon,\n  Armor,\n} from './Entities/index';\n\nexport const TYPE = {\n  KUNAI: 'Kunai',\n  DIRECTIONAL_KUNAI: 'Directional Kunai',\n  SWORD: 'Sword',\n  AXE: 'Axe',\n  ARMOR: 'Armor',\n  WATER_GUN: 'Water Gun',\n  BARRIER: 'Barrier',\n}\n\nconst createProjectileCloud = ({ \n  engine, \n  actor, \n  targetPos, \n  throwDirection,\n  speed,\n  structureType,\n  createProjectile,\n}) => {\n  let structure = Constant.CLONE_PATTERNS[structureType];\n\n  let children = structure.positions.map((slot) => {\n    let position = {\n      x: actor.pos.x + slot.x + (throwDirection.x * structure.x_offset),\n      y: actor.pos.y + slot.y + (throwDirection.y * structure.y_offset)\n    }\n    \n    let targetPosition = {\n      x: targetPos.x + slot.x,\n      y: targetPos.y + slot.y,\n    }\n\n    return createProjectile(engine, position, targetPosition);\n  })\n\n  return new DestructiveCloudProjectileV2({\n    game: engine.game,\n    passable: true,\n    speed,\n    children,\n  })\n}\n\nconst createProjectileSingularity = ({ \n  engine, \n  actor, \n  targetPos, \n  speed,\n  structureType,\n  createProjectile,\n}) => {\n  let structure = Constant.CLONE_PATTERNS[structureType];\n\n  let children = structure.positions.map((slot) => {\n    let position = {\n      x: targetPos.x + slot.x + structure.x_offset,\n      y: targetPos.y + slot.y + structure.y_offset\n    }\n\n    let targetPosition = {\n      x: targetPos.x,\n      y: targetPos.y,\n    }\n\n    return createProjectile(engine, position, targetPosition);\n\n  })\n\n  return new DestructiveCloudProjectileV2({\n    game: engine.game,\n    passable: true,\n    speed,\n    children,\n  })\n}\n\nconst createProjectileBurst = ({ \n  engine, \n  actor, \n  targetPos, \n  speed,\n  structureType,\n  createProjectile,\n}) => {\n  let structure = Constant.CLONE_PATTERNS[structureType];\n\n  let children = structure.positions.map((slot) => {\n    let position = {\n      x: targetPos.x + structure.x_offset,\n      y: targetPos.y + structure.y_offset\n    }\n\n    let targetPosition = {\n      x: targetPos.x + slot.x,\n      y: targetPos.y + slot.y,\n    }\n\n    return createProjectile(engine, position, targetPosition);\n\n  })\n\n  return new DestructiveCloudProjectileV2({\n    game: engine.game,\n    passable: true,\n    speed,\n    children,\n  })\n}\n\nexport const sandTomb = ({\n  engine,\n  actor,\n  targetPos,\n}) => createProjectileSingularity({\n  engine,\n  actor,\n  targetPos,\n  speed: 100,\n  structureType: 'donut',\n  createProjectile: sandTombPart,\n})\n\nexport const sandBurst = ({\n  engine,\n  actor,\n  targetPos,\n}) => createProjectileBurst({\n  engine,\n  actor,\n  targetPos,\n  speed: 500,\n  structureType: 'donut',\n  createProjectile: sandTombPart,\n})\n\nexport const sandWallPulse = ({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n}) => createProjectileCloud({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n  speed: 500,\n  structureType: 'smallSquare',\n  createProjectile: movingSandWall,\n})\n\nexport const kunaiCloud = ({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n}) => createProjectileCloud({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n  speed: 500,\n  structureType: 'square',\n  createProjectile: kunai,\n})\n\nexport const fireballCloud = ({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n}) => createProjectileCloud({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n  speed: 500,\n  structureType: 'square',\n  createProjectile: fireball,\n})\n\nexport const kunai = (engine, pos, targetPos) => new DestructiveProjectile({\n  game: engine.game,\n  targetPos,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    character: '>',\n    color: 'white',\n    background: '',\n    animation: [\n      { background: '', color: 'white', character: '>', },\n      { background: '', color: 'white', character: 'v', },\n      { background: '', color: 'white', character: '<', },\n      { background: '', color: 'white', character: '^', },\n      { background: '', color: 'white', character: '>', },\n    ],\n  },\n  name: TYPE.KUNAI,\n  speed: 600,\n  energy: 0,\n  range: 30,\n})\n\nexport const directionalKunai = (engine, pos, direction, range) => new DirectionalProjectile({\n  game: engine.game,\n  direction,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    character: '>',\n    color: 'white',\n    background: '',\n    animation: [\n      { background: 'lightgrey', color: 'grey', character: '>', },\n      { background: 'lightgrey', color: 'grey', character: 'v', },\n      { background: 'lightgrey', color: 'grey', character: '<', },\n      { background: 'lightgrey', color: 'grey', character: '^', },\n      { background: 'lightgrey', color: 'grey', character: '>', },\n    ],\n  },\n  name: TYPE.DIRECTIONAL_KUNAI,\n  speed: 600,\n  energy: 0,\n  range,\n})\n\nexport const movingSandWall = (engine, pos, targetPos, range) => new MovingWall({\n  game: engine.game,\n  passable: false,\n  pos: { x: pos.x, y: pos.y },\n  targetPos,\n  renderer: {\n    // character: '>',\n    character: ']',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.KUNAI,\n  // name: TYPE.BARRIER,\n  durability: 3,\n  range,\n  speed: 300,\n})\n\nexport const sandShuriken = (engine, pos, direction, range) => new DirectionalProjectile({\n  game: engine.game,\n  direction,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '✦️',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.DIRECTIONAL_KUNAI,\n  speed: 600,\n  energy: 0,\n  range,\n})\n\nexport const sandTombPart = (engine, pos, targetPos) => new DestructiveProjectile({\n  game: engine.game,\n  targetPos,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '✦️',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.KUNAI,\n  speed: 600,\n  energy: 0,\n  range: 30,\n})\n\nexport const fireball = (engine, pos, targetPos) => new DestructiveProjectile({\n  game: engine.game,\n  targetPos,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '🔥',\n    color: 'wheat',\n    background: 'tomato',\n  },\n  name: TYPE.KUNAI,\n  speed: 100,\n  energy: 0,\n  range: 30,\n})\n\nexport const fireballGas = (engine, actor, targetPos) => {\n  return new DestructiveCloudProjectile({\n    game: engine.game,\n    owner_id: actor ? actor.id : null,\n    targetPos,\n    passable: true,\n    pos: actor ? { x: actor.pos.x, y: actor.pos.y } : null,\n    renderer: {\n      // character: '@',\n      character: '🔥',\n      color: 'wheat',\n      background: 'tomato',\n    },\n    name: TYPE.KUNAI,\n    speed: 100,\n    range: 10,\n    clonePattern: Constant.CLONE_PATTERNS.bigSquare,\n    // clonePattern: Constant.CLONE_PATTERNS.square,\n  })\n}\n\nexport const waterball = (engine, actor, targetPos) => new DestructiveCloudProjectile({\n  game: engine.game,\n  owner_id: actor ? actor.id : null,\n  targetPos,\n  passable: true,\n  pos: actor ? { x: actor.pos.x, y: actor.pos.y } : null,\n  renderer: {\n    // character: '~',\n    character: '🌊',\n    color: 'silver',\n    background: 'lightslategrey',\n  },\n  name: TYPE.KUNAI,\n  speed: 800,\n  range: 10,\n  clonePattern: Constant.CLONE_PATTERNS.bigSquare,\n  // clonePattern: Constant.CLONE_PATTERNS.square,\n})\n\nexport const sword = (engine) => new Weapon({\n  game: engine.game,\n  name: TYPE.SWORD,\n  passable: true,\n  attackDamage: 1,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    // character: '|',\n    character: '🗡️',\n    color: 'white',\n    background: '',\n  },\n})\n\nexport const axe = (engine) => new Weapon({\n  game: engine.game,\n  name: TYPE.AXE,\n  passable: true,\n  attackDamage: 5,\n  equipmentType: Constant.EQUIPMENT_TYPES.GENERIC,\n  renderer: {\n    character: 'a',\n    sprite: '',\n    color: 'white',\n    background: '',\n  },\n})\n\nexport const waterGun = (engine) => new Weapon({\n  game: engine.game,\n  name: TYPE.WATER_GUN,\n  passable: true,\n  attackDamage: 0,\n  equipmentType: Constant.EQUIPMENT_TYPES.GENERIC,\n  renderer: {\n    character: 'w',\n    sprite: '',\n    color: Constant.THEMES.SOLARIZED.blue,\n    background: '',\n  },\n})\n\nexport const fireJacket = (engine) => new Armor({\n  game: engine.game,\n  name: 'Fire Jacket',\n  passable: true,\n  defense: 1,\n  equipmentType: Constant.EQUIPMENT_TYPES.GENERIC,\n  renderer: {\n    character: 'J',\n    sprite: '',\n    color: Constant.THEMES.SOLARIZED.magenta,\n    background: '',\n  },\n})\n\nexport const test = (engine, pos) => new Weapon({\n  game: engine.game,\n  name: TYPE.SWORD,\n  passable: true,\n  attackDamage: 1,\n  pos,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    // character: '|',\n    character: '🗡️',\n    color: 'white',\n    background: 'lightsteelblue',\n  },\n})\n","import { destroyEntity } from './helper';\nexport const Destructable = superclass => class extends superclass {\n  constructor({ durability = 1, defense = 0, onDestroy = () => null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DESTRUCTABLE');\n    this.durability = durability;\n    this.durabilityMax = durability;\n    this.defense = defense;\n    this.onDestroy = onDestroy;\n    this.actorSprite = this.renderer.sprite\n    this.actorCharacter = this.renderer.character\n  }\n  getDefense() {\n    let defense = this.defense;\n    // add in reducer to get defense stats of all equpiment\n    if (this.entityTypes.includes('EQUIPING')) {\n      this.equipment.forEach((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('DESTRUCTABLE')) {\n            defense += slot.item.getDefense();\n          }\n        }\n      });\n    }\n    return defense;\n  }\n  decreaseDurabilityWithoutDefense(value) {\n    this.durability -= value;\n    if (this.durability <= 0) {\n      this.onDestroy(this);\n      this.destroy();\n    }\n  }\n  decreaseDurability(value) {\n    const current = this.durability;\n    const newDurability = current - (value - this.getDefense());\n    this.durability = Math.min(current, newDurability);\n    this.updateActorRenderer();\n    if (this.durability <= 0) {\n      this.onDestroy(this);\n      this.destroy();\n    }\n  }\n  increaseDurability(value) {\n    this.durability += value;\n    this.updateActorRenderer();\n  }\n  updateActorRenderer() {\n    if (this.durability === this.durabilityMax) {\n      this.renderer.sprite = this.actorSprite;\n      this.renderer.character = this.actorCharacter;\n    } else {\n      this.renderer.sprite = this.durability;\n      this.renderer.character = this.durability;\n    }\n    this.game.draw();\n  }\n  destroy() {\n    destroyEntity(this);\n  }\n};\n","export const Burnable = superclass => class extends superclass {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('BURNABLE');\n    this.canBurn = true;\n    this.willResetCanBurn = false;\n  }\n  resetCanBurn() {\n    this.willResetCanBurn = false;\n    this.canBurn = true;\n  }\n  burn() {\n    if (this.canBurn) {\n      this.decreaseDurability(2);\n      return true;\n    }\n    return false;\n  }\n};\n","import SOUNDS from '../sounds';\nimport { FireSpread } from './index';\nimport * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport {MESSAGE_TYPE} from '../message';\n\nexport const Exploding = superclass => class extends superclass {\n  constructor({ flammability = 1, explosivity = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('EXPLODING');\n    this.flammability = flammability;\n    this.explosivity = explosivity;\n  }\n  enflame() {\n    // create num of fireSpreads\n    const fires = Array(this.flammability).fill('').map((item) => {\n      return new FireSpread({\n        name: 'Pyro',\n        pos: { ...this.pos },\n        game: this.game,\n        renderer: {\n          character: '*',\n          color: Constant.THEMES.SOLARIZED.base3,\n          background: Constant.THEMES.SOLARIZED.red,\n        },\n        timeToSpread: 1,\n        spreadCount: 1,\n        durability: 1,\n        attackDamage: 1,\n        speed: 100,\n      });\n    });\n    fires.forEach((fire) => {\n      // add them to map\n      this.game.placeActorOnMap(fire);\n      // add them to engine\n      this.game.engine.addActor(fire);\n    });\n  }\n  explode() {\n    const positions = Helper.getPointsWithinRadius({ x: 0, y: 0 }, this.explosivity)\n    let structure = {\n      x_offset: 0,\n      y_offset: 0,\n      positions\n    };\n    structure.positions.forEach((slot) => {\n      let position = {\n        x: this.pos.x + slot.x + structure.x_offset,\n        y: this.pos.y + slot.y + structure.y_offset\n      };\n      const tile = this.game.map[Helper.coordsToString(position)];\n      if (tile) {\n        tile.type = 'BURNT';\n        let targets = Helper.getDestructableEntities(tile.entities.filter(\n          (entity) => entity.id !== this.id\n        ));\n        if (targets.length > 0) {\n          // let target = targets[0];\n          targets.forEach((target) => {\n            let damage = this['attackDamage'] ? this.attackDamage : this.explosivity;\n            this.game.addMessage(`${this.name} does ${damage} to ${target.name}`, MESSAGE_TYPE.DANGER);\n            target.decreaseDurability(damage);\n          })\n        }\n      }\n    });\n    if (this.explosivity > 0)\n      SOUNDS.explosion_0.play();\n    // this.game.draw(); //may not need draw here\n  }\n  destroy() {\n    this.explode();\n    this.enflame();\n    super.destroy();\n  }\n};\n","import * as _ from 'lodash';\n\nexport const HasKeymap = superclass => class extends superclass {\n  constructor({ initializeKeymap, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HAS_KEYMAP');\n    this.keymapStack = [];\n    this.initializeKeymap = initializeKeymap;\n    const keymap = initializeKeymap(this.game.engine, this);\n    this.addKeymap(keymap);\n  }\n\n  getKeymap () {\n    return _.get(this.keymapStack, '0', null);\n  }\n\n  addKeymap (newKeymap) {\n    this.keymapStack.unshift(newKeymap);\n  }\n\n  removeKeymap () {\n    this.keymapStack.shift();\n  }\n\n  reinitializeKeymap (ignoredKeys = []) {\n    this.keymapStack = [];\n    const keymap = this.initializeKeymap(this.game.engine, this);\n    ignoredKeys.forEach((key) => delete keymap[key])\n    this.addKeymap(keymap);\n  }\n\n  setKeymap (newKeymap) {\n    this.addKeymap(newKeymap);\n    return this.getKeymap;\n  }\n\n  goToPreviousKeymap () {\n    this.removeKeymap();\n    return this.getKeymap();\n  }\n};\n","export const Upgrade = ({\n  activate = (actor) => null,\n  canUpgrade = (actor) => true,\n  cost = 1,\n  name = 'upgrade',\n  removeOnActivate = false,\n}) => {\n  return {\n    activate,\n    canUpgrade,\n    cost,\n    name,\n    removeOnActivate,\n  }\n}\n\nexport const Upgradable = superclass => class extends superclass {\n  constructor({ upgrade_points = 0, upgrade_tree = [], ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('UPGRADABLE');\n    this.upgrade_points = upgrade_points;\n    this.upgrade_tree = upgrade_tree;\n  }\n\n  upgrade (upgrade) {\n    if (upgrade.canUpgrade(this)) {\n      upgrade.activate(this);\n      if (upgrade.removeOnActivate) {\n        const newTree = this.upgrade_tree.filter((currUpgrade) => currUpgrade.name !== upgrade.name);\n        this.upgrade_tree = newTree;\n      }\n      return true;\n    }\n    return false;\n  }\n};\n","export const HasFaction = superclass => class extends superclass {\n  constructor({ faction = null, enemyFactions = [], ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HAS_FACTION');\n    this.faction = faction;\n    this.enemyFactions = enemyFactions;\n  }\n\n  getEnemies () {\n    return this.game.engine.actors\n      .filter((actor) => this.enemyFactions.includes( actor['faction']))\n  }\n\n  isEnemy (actor) {\n    return this.enemyFactions.includes( actor['faction'])\n  }\n\n  isAlly (actor) {\n    return actor['faction'] === this.faction;\n  }\n};\n","import { ANIMATION_TYPES } from '../Display/konvaCustom';\nimport * as Helper from '../../helper';\nexport const UsesCover = superclass => class extends superclass {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('USES_COVER');\n    this.coverAnimations = [];\n    this.showCoverAnimations = true;\n    this.coveredBy = [];\n  }\n\n  isCovered () {\n    return this.coveredBy.length;\n  }\n\n  getCoverEntities () {\n    const keys = Object.keys(this.game.map);\n    let coverEntities = []\n    keys.forEach((key) => {\n      const tile = this.game.map[key]\n      const covers = tile.entities.filter((entity) => {\n        const hasCovers = entity.entityTypes.includes('COVERING')\n        return hasCovers;\n      })\n      coverEntities = [...coverEntities, ...covers];\n    })\n    return coverEntities;\n  }\n\n  getCoveredByIds () {\n    return this.coveredBy.map((entity) => entity.id);\n  }\n\n  setCoverAnimations () {\n    // check neigbors\n    if (!this.showCoverAnimations) return;\n    const tiles = Helper.getNeighboringTiles(this.game.map, this.getPosition());\n    let coverAnimated = false;\n    tiles.forEach((tile) => {\n      if (tile.entities.length) {\n        const entity = tile.entities[0];\n        if (entity.entityTypes.includes('COVERING')) {\n          if (entity.isProvidingCover()) {\n            const position = entity.getPosition();\n            const newAnimation = this.game.display.addAnimation(\n              ANIMATION_TYPES.BLINK_BOX,\n              {\n                x: position.x,\n                y: position.y,\n                color: '#3e7dc9'\n              }\n            );\n            this.coverAnimations.push(newAnimation);\n            coverAnimated = true;\n            this.coveredBy.push(entity);\n          }\n        }\n      }\n    });\n    if (coverAnimated) {\n      //animate covered actor\n      const position = this.getPosition();\n      const newAnimation = this.game.display.addAnimation(\n        ANIMATION_TYPES.BLINK_BOX,\n        {\n          x: position.x,\n          y: position.y,\n          color: '#3e7dc9'\n        }\n      );\n      this.coverAnimations.push(newAnimation);\n    }\n  }\n\n  removeCoverAnimations () {\n    if (this.coverAnimations.length) {\n      this.coverAnimations.forEach((animation) => {\n        this.game.display.removeAnimation(animation.id);\n      })\n      this.coverAnimations = [];\n    }\n  }\n\n  removeCoveredBy () {\n    this.coveredBy = [];\n  }\n\n  resetCoverAnimations() {\n    this.removeCoverAnimations();\n    this.removeCoveredBy();\n    this.setCoverAnimations();\n  }\n\n  destroy() {\n    this.showCoverAnimations = false;\n    this.removeCoverAnimations();\n    this.removeCoveredBy();\n    super.destroy();\n  }\n\n};\n","import { Say } from '../../../Actions/Say';\n\nexport default class Behavior {\n  constructor({ actor = null, repeat = 1 }) {\n    this.actor = actor;\n    this.repeat = repeat;\n    this.repeated = 0;\n  }\n\n  isValid () {\n    return true;\n  }\n\n  reset () {\n    this.repeated = 0;\n  }\n\n  shouldRepeat () {\n    return this.repeated < this.repeat\n  }\n\n  getDefaultActionParams() {\n    return {\n      game: this.actor.game,\n      actor: this.actor,\n      interrupt: this.repeated >= this.repeat,\n      energyCost: 0,\n    }\n  }\n\n  constructActionClassAndParams () {\n    let actionClass = Say;\n    let actionParams = {message: 'I am behaving'};\n    return [actionClass, actionParams];\n  }\n\n  getAction() {\n    const [actionClass, actionParams] = this.constructActionClassAndParams();\n    if (!actionClass || !actionParams) return null;\n    \n    return new actionClass({\n      ...this.getDefaultActionParams(),\n      ...actionParams,\n    });\n  }\n}\n","import pipe from 'lodash/fp/pipe';\nimport { Entity } from './Entity';\nimport { Parent } from './Parent';\nimport { PresentingUI } from './PresentingUI';\nimport { HasInnerGates } from './HasInnerGates';\nimport { UI } from './UI';\nimport {HasTargetingCursor} from './HasTargetingCursor';\nimport {HasShapePattern} from './HasShapePattern';\nimport { Attacking } from './Attacking';\nimport { RangedAttacking } from './RangedAttacking';\nimport { Equipable } from './Equipable';\nimport { Acting } from './Acting';\nimport { Rendering } from './Rendering';\nimport { Containing } from './Containing';\nimport { Equiping } from './Equiping';\nimport { Charging } from './Charging';\nimport { Signing } from './Signing';\nimport { Playing } from './Playing';\nimport { Cloning } from './Cloning';\nimport { Covering } from './Covering';\nimport { DestructiveProjecting } from './DestructiveProjecting';\nimport { DirectionalProjecting } from './DirectionalProjecting';\nimport { DirectionalPushing } from './DirectionalPushing';\nimport { GaseousDestructiveProjecting } from './GaseousDestructiveProjecting';\nimport { Gaseous } from './Gaseous';\nimport { Chasing } from './Chasing';\nimport { RangedChasing } from './RangedChasing';\nimport { Dragging } from './Dragging';\nimport { Draggable } from './Draggable';\nimport { Pushable } from './Pushable';\nimport { Spreading } from './Spreading';\nimport { Spawning } from './Spawning';\nimport { Destructable } from './Destructable';\nimport { IsParticle } from './IsParticle';\nimport { Speaking } from './Speaking';\nimport { Burnable } from './Burnable';\nimport { Exploding } from './Exploding';\nimport { Helpless } from './Helpless';\nimport { HasKeymap } from './HasKeymap';\nimport { Upgradable } from './Upgradable';\nimport { HasFaction } from './HasFaction';\nimport { UsesCover } from './UsesCover';\nimport { CyclesBehaviors } from './AI/CyclesBehaviors';\n\nexport const UI_Actor = pipe(\n  Acting,\n  Rendering,\n  Playing,\n  HasKeymap,\n  UI\n)(Entity);\n\nexport const Actor = pipe(\n  Acting,\n  Rendering\n)(Entity);\n\nexport const Speaker = pipe(\n  Acting,\n  Rendering,\n  Destructable,\n  Speaking,\n  Draggable,\n  Pushable,\n  Burnable,\n  Helpless,\n)(Entity);\n\nexport const Wall = pipe(\n  Rendering,\n  Destructable,\n)(Entity);\n\nexport const CoverWall = pipe(\n  Rendering,\n  Covering,\n  Destructable,\n)(Entity);\n\nexport const Debris = pipe(\n  Rendering,\n  Containing,\n  Draggable,\n  Burnable,\n  Destructable,\n  Exploding,\n  Pushable,\n)(Entity);\n\nexport const MovingWall = pipe(\n  Acting,\n  Rendering,\n  // Pushing,\n  DirectionalPushing,\n  Destructable,\n)(Entity);\n\nexport const Chaser = pipe(\n  Acting,\n  Rendering,\n  Chasing,\n  Destructable\n)(Entity);\n\nexport const JacintoAI = pipe(\n  Acting,\n  Rendering,\n  Destructable,\n  Attacking,\n  Pushable,\n  Equiping,\n  Containing,\n  RangedAttacking,\n  HasFaction,\n  UsesCover,\n  HasTargetingCursor,\n  CyclesBehaviors,\n)(Entity);\n\nexport const Bandit = pipe(\n  Acting,\n  Rendering,\n  Chasing,\n  Destructable,\n  Attacking,\n  Pushable,\n  HasFaction,\n  UsesCover,\n)(Entity);\n\nexport const RangedBandit = pipe(\n  Acting,\n  Rendering,\n  RangedChasing,\n  Destructable,\n  Attacking,\n  Pushable,\n  HasFaction,\n  UsesCover,\n)(Entity);\n\nexport const Player = pipe(\n  Acting,\n  Rendering,\n  PresentingUI,\n  HasTargetingCursor,\n  HasKeymap,\n  Dragging,\n  Charging,\n  Signing,\n  Containing,\n  Equiping,\n  Attacking,\n  RangedAttacking,\n  Destructable,\n  Cloning,\n  Playing,\n  Burnable,\n  Upgradable,\n  HasFaction,\n  UsesCover,\n)(Entity);\n\nexport const Weapon = pipe(\n  Rendering,\n  Equipable,\n  Attacking\n)(Entity);\n\nexport const RangedWeapon = pipe(\n  Rendering,\n  Equipable,\n  RangedAttacking,\n  Attacking,\n  HasShapePattern,\n)(Entity);\n\nexport const Armor = pipe(\n  Rendering,\n  Equipable,\n  Destructable,\n)(Entity);\n\nexport const Ammo = pipe(\n  Rendering,\n  Destructable,\n  Exploding,\n)(Entity);\n\nexport const DestructiveProjectile = pipe(\n  Acting,\n  Rendering,\n  Attacking,\n  DestructiveProjecting,\n  Destructable\n)(Entity);\n\nexport const DirectionalProjectile = pipe(\n  Acting,\n  Rendering,\n  Attacking,\n  DirectionalProjecting,\n  Destructable,\n)(Entity);\n\nexport const Grenade = pipe(\n  Acting,\n  Rendering,\n  Attacking,\n  DirectionalProjecting,\n  Destructable,\n  Exploding,\n)(Entity);\n\nexport const DestructiveCloudProjectile = pipe(\n  Acting,\n  Rendering,\n  Attacking,\n  GaseousDestructiveProjecting,\n  Destructable,\n  Gaseous\n)(Entity);\n\nexport const DestructiveCloudProjectileV2 = pipe(\n  Acting,\n  Destructable,\n  Parent,\n)(Entity);\n\nexport const FireSpread = pipe(\n  Acting,\n  Rendering,\n  Destructable,\n  Attacking,\n  Spreading,\n)(Entity);\n\nexport const EmergenceHole = pipe(\n  Acting,\n  Rendering,\n  Destructable,\n  Spawning,\n  HasFaction,\n)(Entity);\n\nexport const Particle = pipe(\n  Acting,\n  Rendering,\n  IsParticle,\n)(Entity);\n\nexport const ParticleEmitter = pipe(\n  Acting,\n  Destructable,\n  Parent,\n)(Entity);","export const UI = superclass => class extends superclass {\n  constructor({ initiatedBy = null, range = null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('UI');\n    this.initiatedBy = initiatedBy;\n    this.active = true;\n    this.range = range;\n  }\n  hasEnoughEnergy() {\n    return this.active;\n  }\n};\n","import { Say } from '../Actions/Say';\n\nexport const Speaking = superclass => class extends superclass {\n  constructor({ messages = ['I have nothing to say.'], messageType, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SPEAKING');\n    this.messages = messages;\n    this.messageType = messageType;\n  }\n  getAction(game) {\n    const message = this.messages.shift();\n    this.messages.push(message);\n    return new Say({\n      actor: this,\n      game,\n      message: message,\n      messageType: this.messageType,\n      processDelay: 0,\n    });\n  }\n};\n","import SOUNDS from '../sounds';\nimport * as Helper from '../../helper';\n\nexport const Helpless = superclass => class extends superclass {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HELPLESS');\n    this.saved = false;\n  }\n  save() {\n    this.saved = true;\n    SOUNDS.save.play();\n  }\n  destroy() {\n    const sound = Helper.getRandomInArray([SOUNDS.scream_0, SOUNDS.scream_1, SOUNDS.scream_2]);\n    sound.play();\n    super.destroy();\n  }\n};\n","import { ANIMATION_TYPES } from '../Display/konvaCustom';\n\nexport const Covering = superclass => class extends superclass {\n  constructor({ accuracyModifer = 0, damageModifer = 0, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('COVERING');\n    this.providesCover = true;\n    this.accuracyModifer = accuracyModifer;\n    this.damageModifer = damageModifer;\n  }\n\n  isProvidingCover () {\n    return this.providesCover && (this.accuracyModifer < 0 || this.damageModifer < 0);\n  }\n\n};\n","import * as Constant from '../constants';\nimport { Shove } from '../Actions/Shove';\nimport { DestroySelf } from '../Actions/DestroySelf';\n\nexport const DirectionalPushing = superclass => class extends superclass {\n  constructor({ path = false, direction = { x: 0, y: 0 }, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DIRECTIONAL_PUSHING');\n    this.path = path;\n    this.direction = direction;\n    this.range = range;\n  }\n  getAction(game) {\n    let result = null;\n    let newX = this.pos.x + this.direction[0];\n    let newY = this.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n    this.passable = false;\n    if (this.range > 0) {\n      result = new Shove({\n        targetPos: targetPos,\n        direction: this.direction,\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        onSuccess: () => this.range -= 1,\n      });\n    }\n    else {\n      result = new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: 0\n      });\n    }\n    return result;\n  }\n};\n","import Behavior from './Behaviors/Behavior';\nimport { Say } from '../../Actions/Say';\n\n\nexport const CyclesBehaviors = superclass => class extends superclass {\n  constructor({ \n    behaviors = [new Behavior()],\n    ...args \n  }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CYCLES_BEHAVIORS');\n    this.behaviors = behaviors.map((behavior) => {\n      behavior['actor'] = this;\n      return behavior;\n    });\n    this.activeBehaviorIndex = 0;\n  }\n\n  getActiveBehavior() {\n    return this.selectedBehavior();\n  }\n\n  selectedBehavior (){\n    return this.behaviors[this.activeBehaviorIndex]\n  }\n\n  shouldCycleToNextBehavior(behavior) {\n    return !behavior.isValid() || !behavior.shouldRepeat();\n  }\n\n  getDefaultAction() {\n    return new Say({\n      message: '*whistles*',\n      game: this.game,\n      actor: this,\n      interrupt: true,\n      energyCost: 0\n    });\n  }\n\n  setBehaviorIndex(nexIndex) {\n    this.activeBehaviorIndex = nexIndex;\n  }\n\n  setNextBehaviorIndex() {\n    const nextBehaviorIndex = (this.activeBehaviorIndex + 1) % this.behaviors.length;\n    this.setBehaviorIndex(nextBehaviorIndex);\n  }\n\n  selectNextBehavior() {\n    this.setNextBehaviorIndex();\n    return this.selectedBehavior();\n  }\n\n  getAction() {\n    let action = null;\n    let behavior = this.selectedBehavior();\n    let killLoopAt = this.behaviors.length;\n\n    while (this.shouldCycleToNextBehavior(behavior)) {\n      behavior.reset();\n      behavior = this.selectNextBehavior();\n    }\n\n    while (action === null) {\n      behavior.repeated += 1;\n      action = behavior.getAction();\n      killLoopAt -= 1;\n      if (killLoopAt >= 0) break;\n    }\n\n    if (!action) action = this.getDefaultAction();\n    return action;\n  }\n};\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper'; \nimport { PlaceActor } from '../Actions/PlaceActor';\nimport { Say } from '../Actions/Say';\nimport { MoveOrAttack } from '../Actions/MoveOrAttack';\n\nexport const RangedChasing = superclass => class extends superclass {\n  constructor({ targetEntity = null, getProjectile = () => null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('RANGED_CHASING');\n    this.targetEntity = targetEntity;\n    this.getProjectile = getProjectile;\n  }\n  targetInPath(pathToCheck, targetPos) {\n    let inPath = false;\n    pathToCheck.forEach((pos) => {\n      if (pos.x === targetPos.x && pos.y === targetPos.y) {\n        inPath = true;\n      }\n    });\n    return inPath;\n  }\n  getAction(game) {\n    if (!this.targetEntity) {\n      return new Say({\n        message: `Where are they?`,\n        game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n    let throwDirection = {\n      x: Math.sign(this.targetEntity.pos.x - this.pos.x),\n      y: Math.sign(this.targetEntity.pos.y - this.pos.y),\n    };\n    // projectile.initialize()\n    let projectile = this.getProjectile({\n      pos: {\n        x: this.pos.x,\n        y: this.pos.y,\n      },\n      targetPos: { ...this.targetEntity.pos },\n      direction: [throwDirection.x, throwDirection.y],\n      range: 10,\n    });\n    // projectile.getPath()\n    projectile.createPath(game);\n    // is target in path\n    const inPath = this.targetInPath(projectile.path, this.targetEntity.pos);\n    if (inPath) {\n      // throw\n      if (game.canOccupyPosition(projectile.pos, projectile)) {\n        return new PlaceActor({\n          targetPos: { ...projectile.pos },\n          entity: projectile,\n          game,\n          actor: this,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      }\n      return new Say({\n        message: `I'll get you with this kunai!`,\n        game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n    // if not, select target tile in range of enemy and move\n    let movePath = Helper.calculatePath(game, this.targetEntity.pos, this.pos);\n    let targetPos = movePath.length > 0 ? movePath[0] : this.pos;\n    return new MoveOrAttack({\n      targetPos,\n      game,\n      actor: this,\n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n  }\n};\n","export const PresentingUI = superclass => class extends superclass {\n  constructor({ presentingUI = false, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('PRESENTING_UI');\n    this.presentingUI = presentingUI;\n  }\n};\n","import * as Helper from '../../helper'; \n\nexport const Dragging = superclass => class extends superclass {\n  constructor({ draggedEntity = null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DRAGGING');\n    this.draggedEntity = draggedEntity;\n  }\n  grab(pos) {\n    const tile = this.game.map[Helper.coordsToString(pos)];\n    if (!tile)\n      return false;\n    if (tile.entities.length > 0) {\n      const entity = tile.entities[0];\n      if (entity.entityTypes.includes('DRAGGABLE'))\n        if (!this.draggedEntity && entity.draggable === true) {\n          this.draggedEntity = entity;\n          return true;\n        }\n    }\n    return false;\n  }\n  release() {\n    if (!this.draggedEntity)\n      return false;\n    const draggedEntity = { ...this.draggedEntity };\n    this.draggedEntity = null;\n    return draggedEntity;\n  }\n  drag(lastPos) {\n    // update entity position\n    const pos = this.draggedEntity.pos;\n    // get tile of draged entity\n    let tile = this.game.map[Helper.coordsToString(pos)];\n    // remove dragged entity from that tile\n    this.game.map[Helper.coordsToString(pos)] = { ...tile, entities: tile.entities.filter((e) => e.id !== this.draggedEntity.id) };\n    // update dragged ent to player's position\n    this.draggedEntity.pos = lastPos;\n    // add dragged ent to new tile\n    this.game.map[Helper.coordsToString(lastPos)].entities.push(this.draggedEntity);\n  }\n  move(targetPos) {\n    const lastPos = { ...this.pos };\n    if (this.draggedEntity) {\n      const moveSuccess = super.move(targetPos);\n      if (moveSuccess) {\n        this.drag(lastPos);\n        return true;\n      }\n      return moveSuccess;\n    }\n    return super.move(targetPos);\n  }\n};\n","export const Charging = superclass => class extends superclass {\n  constructor({ charge = 2, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CHARGING');\n    this.charge = charge;\n    this.chargeMax = charge;\n  }\n  decreaseCharge(value) {\n    this.charge = Math.max(0, this.charge - value);\n  }\n  increaseCharge(value) {\n    this.charge = Math.min(this.chargeMax, this.charge + value);\n  }\n};\n","export const Signing = superclass => class extends superclass {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SIGNING');\n    this.signHistory = [];\n  }\n  addSign(sign) {\n    if (this.signHistory.length >= 4) {\n      this.signHistory.shift();\n    }\n    this.signHistory.push(sign);\n  }\n  clearSigns() {\n    this.signHistory = [];\n  }\n};\n","import uuid from 'uuid/v1';\nimport { destroyEntity } from './helper';\nimport { cloneDeep, find } from 'lodash';\n\nexport const Cloning = superclass => class extends superclass {\n  constructor({ cloneLimit = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CLONING');\n    this.cloneLimit = cloneLimit;\n    this.clones = [];\n  }\n  // perhaps clones should have a status effect that leeches parent actor's energy or chakra\n  // status effects should be removed from engine when owner is removed.\n  destroy() {\n    // add function to override self destroy funtion \n    // if this actor dies, clones should be destroyed as well\n    if (this.clones) {\n      this.clones.map((clone) => {\n        destroyEntity(clone);\n      });\n    }\n    destroyEntity(this);\n  }\n  destroyClone(id) {\n    // overrides clone destroy function\n    // when clone is destroyed, clone count will change accordingly\n    const index = this.clones.findIndex((c) => c.id === id);\n    if (index >= 0) {\n      this.clones[index].super__destroy();\n      this.clones.splice(index, 1);\n    }\n  }\n  createClone(cloneArgs) {\n    if (this.clones.length < this.cloneLimit) {\n      let clone = cloneDeep(this);\n      clone.name = `Clone`;\n      clone.game = this.game;\n      clone.id = uuid();\n      if (clone.entityTypes.includes('HAS_KEYMAP')) {\n        const ignoredKeys = find(cloneArgs, { 'attribute': 'ignoredKeys' });\n        clone.reinitializeKeymap(ignoredKeys? ignoredKeys.value : []);\n      }\n      delete clone.clones;\n      clone['super__destroy'] = clone.destroy;\n      clone.destroy = () => { this.destroyClone(clone.id); };\n      cloneArgs.forEach((arg) => {\n        clone[arg.attribute] = arg.value;\n      });\n      if (this.game.placeActorOnMap(clone)) {\n        this.game.engine.addActorAsNext(clone);\n        this.game.draw();\n        this.clones.push(clone);\n        return true;\n      }\n      ;\n    }\n    return false;\n  }\n};\n","import {CLONE_PATTERNS} from '../constants';\nimport {getPositionsFromStructure} from '../../helper';\nexport const HasShapePattern = superclass => class extends superclass {\n  constructor({ shapePattern = CLONE_PATTERNS.point, ...args }) {\n    super({ ...args });\n    this.shapePattern = shapePattern;\n    this.entityTypes = this.entityTypes.concat('HAS_SHAPE_PATTERN');\n  }\n\n  getPositionsInShape (pos) {\n    return getPositionsFromStructure(this.shapePattern, pos);\n  }\n};\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { ThrowProjectile } from '../Actions/ThrowProjectile';\n\nexport const DestructiveProjecting = superclass => class extends superclass {\n  constructor({ path = false, targetPos = null, attackDamage = 1, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DESTRUCTIVE_PROJECTING');\n    this.path = path;\n    this.targetPos = targetPos;\n    this.attackDamage = attackDamage;\n    this.range = range;\n  }\n  createPath(game) {\n    let path = Helper.calculatePathWithRange(game, this.targetPos, this.pos, 8, this.range);\n    this.path = path;\n  }\n  getAction(game) {\n    if (!this.path) {\n      this.createPath(game);\n    }\n    let targetPos = this.path.length > 0 ? this.path[0] : this.pos;\n    let result = new ThrowProjectile({\n      targetPos,\n      game,\n      actor: this,\n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n    return result;\n  }\n};\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { ThrowProjectileGas } from '../Actions/ThrowProjectileGas';\n\nexport const GaseousDestructiveProjecting = superclass => class extends superclass {\n  constructor({ owner_id = null, path = false, targetPos = null, attackDamage = 1, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('GASEOUS_DESTRUCTIVE_PROJECTING');\n    this.path = path;\n    this.targetPos = targetPos;\n    this.attackDamage = attackDamage;\n    this.range = range;\n    this.owner_id = owner_id;\n  }\n  canAttack(entity) {\n    let success = super.canAttack();\n    if (success) {\n      success = this.owner_id === null || (entity.owner_id !== this.owner_id);\n    }\n    return success;\n  }\n  createPath(game) {\n    let path = Helper.calculatePathWithRange(game, this.targetPos, this.pos, 8, this.range);\n    this.path = path;\n  }\n  getAction(game) {\n    if (!this.path) {\n      this.createPath(game);\n    }\n    let targetPos = this.path.length > 0 ? this.path[0] : this.pos;\n    let result = new ThrowProjectileGas({\n      targetPos,\n      game,\n      actor: this,\n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n    return result;\n  }\n};\n","import uuid from 'uuid/v1';\nimport { cloneDeep, cloneDeepWith } from 'lodash';\nimport * as Constant from '../constants';\n\nexport const Gaseous = superclass => class extends superclass {\n  constructor({ isClone = false, cloneCount = 0, clonePattern = Constant.CLONE_PATTERNS.square, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('GASEOUS');\n    this.isClone = isClone;\n    this.cloneCount = cloneCount;\n    this.clonePattern = cloneDeep(clonePattern);\n  }\n  getAction(game) {\n    let offset = this.clonePattern.positions.find((pos) => !pos.taken);\n    if (!this.isClone && offset) {\n      offset.taken = true;\n      let clone = cloneDeepWith(this, (value, key) => {\n        switch (key) {\n          case 'id':\n          case 'game':\n          case 'engine':\n          case 'clones':\n            return null;\n          default:\n            return undefined;\n        }\n      });\n      clone.game = game;\n      clone.id = uuid();\n      if (this.hasOwnProperty('pos')) {\n        let referencePos = this.pos;\n        clone.pos = {\n          x: referencePos.x + offset.x,\n          y: referencePos.y + offset.y\n        };\n      }\n      if (clone.hasOwnProperty('path')) {\n        clone.path = clone.path.map((pos) => {\n          return {\n            x: pos.x + offset.x,\n            y: pos.y + offset.y\n          };\n        });\n      }\n      clone.isClone = true;\n      this.cloneCount += 1;\n      game.placeActorOnMap(clone);\n      game.engine.addActor(clone);\n      game.draw();\n    }\n    let result = super.getAction(game);\n    return result;\n  }\n};\n","import { FireSpread } from './index';\nimport * as Constant from '../constants';\nimport * as Helper from '../../helper'; \nimport * as MapHelper from '../Maps/helper'; \nimport { Say } from '../Actions/Say';\nimport { DestroySelf } from '../Actions/DestroySelf';\nimport { PlaceActor } from '../Actions/PlaceActor';\n\nexport const Spreading = superclass => class extends superclass {\n  constructor({ timeToSpread = 5, spreadCount = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SPREADING');\n    this.timeToSpreadMax = timeToSpread;\n    this.timeToSpread = timeToSpread;\n    this.spreadCountMax = spreadCount;\n    this.spreadCount = spreadCount;\n  }\n  getAction(game) {\n    // if no more spreads, then destroy\n    if (this.spreadCount <= 0) {\n      return new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n        onAfter: () => {\n          game.map[Helper.coordsToString(this.pos)].type = 'BURNT';\n        },\n      });\n    }\n    // if its time to expand again, create a new fire spread and placeActor\n    if (this.timeToSpread <= 0) {\n      // find adjacent spot to spread to\n      let adjacentPositions = [\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + 1,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + -1,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + 1,\n        },\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + -1,\n        },\n      ];\n      let adjacentPos = null;\n      let kill = 100;\n      while (kill > 0) {\n        let newPos = Helper.getRandomInArray(adjacentPositions);\n        let newTile = MapHelper.getTileFromMap({map: this.game.map, position: newPos});\n        let tileExists = Boolean(newTile);\n        let notBurnt = true;\n        let canBurn = false;\n        if (newTile) {\n          notBurnt = newTile.type !== 'BURNT';\n          canBurn = MapHelper.tileHasTag({tile: newTile, tag: 'BURNABLE'});\n        }\n        if (tileExists && notBurnt && canBurn) {\n          adjacentPos = newPos;\n          break;\n        }\n        kill -= 1;\n      }\n      if (adjacentPos) {\n        // create new fire actor and place\n        let fire = new FireSpread({\n          name: 'Pyro',\n          pos: { x: 0, y: 0 },\n          game,\n          renderer: {\n            character: '*',\n            sprite: '',\n            color: Constant.THEMES.SOLARIZED.base3,\n            background: Constant.THEMES.SOLARIZED.red,\n          },\n          timeToSpread: this.timeToSpreadMax,\n          spreadCount: this.spreadCountMax,\n          durability: this.durability,\n          attackDamage: this.attackDamage,\n          speed: this.speed,\n        });\n        this.timeToSpread = this.timeToSpreadMax;\n        this.spreadCount -= 1;\n        return new PlaceActor({\n          targetPos: adjacentPos,\n          entity: fire,\n          game,\n          actor: this,\n          interrupt: false,\n          energyCost: Constant.ENERGY_THRESHOLD,\n          processDelay: 0,\n          forcePlacement: true,\n        });\n      }\n      this.timeToSpread = this.timeToSpreadMax;\n      this.spreadCount -= 1;\n    }\n    this.timeToSpread -= 1;\n    return new Say({\n      message: 'burning',\n      game,\n      actor: this,\n      processDelay: 0,\n    });\n  }\n};\n","import { FireSpread } from './index';\nimport * as Constant from '../constants';\nimport * as Helper from '../../helper'; \nimport * as Item from '../items'; \nimport { Say } from '../Actions/Say';\nimport { DestroySelf } from '../Actions/DestroySelf';\nimport { PlaceActor } from '../Actions/PlaceActor';\n\nexport const Spawning = superclass => class extends superclass {\n  constructor({ getSpawnedEntity, timeToSpread = 5, spreadCount = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SPAWNING');\n    this.timeToSpreadMax = timeToSpread;\n    this.timeToSpread = timeToSpread;\n    this.spreadCountMax = spreadCount;\n    this.spreadCount = spreadCount;\n    this.getSpawnedEntity = getSpawnedEntity\n  }\n  getAction(game) {\n    // if no more spreads, then destroy\n    if (this.spreadCount <= 0) {\n      return new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n      });\n    }\n    // if its time to expand again, create a new fire spread and placeActor\n    if (this.timeToSpread <= 0) {\n      // find adjacent spot to spread to\n      let adjacentPositions = [\n        {\n          x: this.pos.x + 1,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + -1,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + 1,\n        },\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + -1,\n        },\n      ];\n      let adjacentPos = null;\n      let kill = 100;\n      while (kill > 0) {\n        let newPos = Helper.getRandomInArray(adjacentPositions);\n        let newTile = this.game.map[Helper.coordsToString(newPos)];\n        let tileExists = Boolean(newTile);\n        if (tileExists && game.canOccupyPosition(newPos)) {\n          adjacentPos = newPos;\n          break;\n        }\n        kill -= 1;\n      }\n      if (adjacentPos) {\n        this.timeToSpread = this.timeToSpreadMax;\n        this.spreadCount -= 1;\n        return new PlaceActor({\n          targetPos: adjacentPos,\n          entity: this.getSpawnedEntity(adjacentPos),\n          game,\n          actor: this,\n          interrupt: false,\n          energyCost: Constant.ENERGY_THRESHOLD,\n          processDelay: 0,\n          forcePlacement: true,\n        });\n      }\n      this.timeToSpread = this.timeToSpreadMax;\n      this.spreadCount -= 1;\n    }\n    this.timeToSpread -= 1;\n    return new Say({\n      message: 'boom boom',\n      game,\n      actor: this,\n      processDelay: 0,\n    });\n  }\n};\n","import * as Constant from '../constants'; \n\nexport const IsParticle = superclass => class extends superclass {\n  constructor({ pos = { x: 1, y: 1 }, direction = { x: 0, y: 0 }, life = 1, speed = 1, type = Constant.PARTICLE_TYPE.directional, path = null, ...args }) {\n    super({ ...args });\n    this.pos = pos;\n    this.direction = direction;\n    this.life = life;\n    this.speed = speed;\n    this.type = type;\n    this.path = path;\n    this.entityTypes = this.entityTypes.concat('PARTICLE');\n  }\n  getNextPos(step) {\n    switch (this.type) {\n      case Constant.PARTICLE_TYPE.directional:\n        return {\n          x: this.pos.x + (this.direction.x * this.speed) * step,\n          y: this.pos.y + (this.direction.y * this.speed) * step,\n        };\n      case Constant.PARTICLE_TYPE.path:\n        const nextPos = this.path.shift();\n        return nextPos ? { ...nextPos } : { ...this.pos };\n      default:\n        break;\n    }\n  }\n  update(step) {\n    this.life -= step;\n    if (this.life > 0) {\n      this.pos = this.getNextPos(step);\n    }\n  }\n};\n","import * as Helper from '../../helper';\nimport { Particle } from '../Entities/index';\nimport { PARTICLE_TEMPLATES } from '../constants';\n\nexport class Engine {\n  constructor({\n    statusEffects = [],\n    actors = [],\n    currentActor = 0,\n    isRunning = false,\n    game = null,\n  }) {\n    this.statusEffects = statusEffects;\n    this.actors = actors;\n    this.currentActor = currentActor;\n    this.isRunning = isRunning;\n    this.game = game;\n  }\n\n  async processV1 () { // a turn-based system using speed and round-robin\n    let actor = this.actors[this.currentActor]\n    actor.gainEnergy(actor.speed);\n    if (actor.hasEnoughEnergy()) {\n      let action = actor.getAction(this.game);\n      if (!action) { return false; } // if no action given, kick out to UI input\n      while (true) {\n        let result = action.perform();\n        this.game.draw();\n        await Helper.delay(action.processDelay);\n        if (!result.success) return false;\n        if (result.alternative === null) break;\n        action = result.alternative;\n      }\n    }\n    this.currentActor = (this.currentActor + 1) % this.actors.length;\n    return true\n  }\n\n  async processV2() { // a turn-based system using speed and Action Points\n    let actor = this.actors[this.currentActor]\n    if (this.game.getFirstPlayer() === null) return false\n    let acting = true;\n    while (acting) {\n      if (!actor) return false;\n      // if (!actor.active) return false;\n      if (!actor.active) break;\n      let timePassed = 0;\n      \n      if (actor.hasEnoughEnergy()) {\n        // if (!actor.active) break;\n        let action = actor.getAction(this.game);\n        if (!action) { return false; } // if no action given, kick out to UI input\n        timePassed += action.getEnergyCost();\n        // console.log('timePassed ', timePassed);\n        \n        // timePassed += action.energyCost;\n        while (true) {\n          let result = {\n            success: false,\n            alternative: null,\n          };\n          // if (actor.energy >= action.energyCost) { // replace with checking for all required resources\n          if (action.canPayRequiredResources()) { // replace with checking for all required resources\n            \n            action.onBefore();\n            result = await action.perform();\n            if (result.success) {\n              action.onSuccess();\n              action.payRequiredResources();\n            } else {\n              action.onFailure();\n            }\n            action.onAfter();\n          }\n          if (!await this.processActionFX(action, result.success)) {\n            if (this.shouldAutoRun()) {\n              await Helper.delay(25);\n            } else {\n              await Helper.delay(action.processDelay);\n            }\n            this.game.draw();\n          }\n          if (!actor.active) break;\n          // if (!result.success) return false;\n          if (result.alternative === null) break;\n          action = result.alternative;\n        }\n        this.processStatusEffects(timePassed);\n        if (action.interrupt) {\n          acting = false;\n          break;\n        }\n      } else {\n        actor.gainEnergy(actor.speed);\n        acting = false;\n      }\n    }\n    this.actors = this.actors.filter((actor) => actor.active)\n    this.currentActor += 1;\n    if (this.currentActor >= this.actors.length) {\n      this.currentActor = 0;\n    }\n    return true\n  }\n\n  // a turn-based system using speed and Action Points\n  // it reorders all actors by energy after every round robin\n  async processV3() { \n    let actor = this.actors[this.currentActor]\n    if (!actor) return false;\n    let timePassed = 0;\n    if (actor.hasEnoughEnergy()) {\n      let action = actor.getAction(this.game);\n      if (!action) { return false; } // if no action given, kick out to UI input\n      timePassed += action.energyCost;\n      while (true) {\n        let result = await action.perform();\n        if (!await this.processActionFX(action, result.success)) {\n            await Helper.delay(action.processDelay);\n            this.game.draw();\n        }\n        if (!result.success) return false;\n        if (result.alternative === null) break;\n        action = result.alternative;\n      }\n      this.processStatusEffects(timePassed);\n    } else {\n      actor.gainEnergy(actor.speed);\n    }\n    this.currentActor = (this.currentActor + 1) % this.actors.length;\n    if (this.currentActor === 0) this.sortActorsByEnergy();\n    return true\n  }\n\n  // TODO process that reorders actors after every action\n\n  async start() {\n    this.isRunning = true;\n    while (this.isRunning) {\n      this.isRunning = await this.processV2();\n    }\n    let actor = this.actors[this.currentActor]\n    \n    if (!actor) {\n      // this.game.backToTitle();\n      return false;\n    }\n\n    this.setVisibleKeymap(actor);\n    \n    this.game.updateMode();\n    await this.game.updateReact(this.game);\n  }\n  \n  stop() {\n    this.isRunning = false;\n  }\n\n  setVisibleKeymap (actor) {\n    if (actor.entityTypes.includes('HAS_KEYMAP')) {\n      const keymap = actor.getKeymap()\n      if (keymap) {\n        this.game.visibleKeymap = keymap;\n      }\n    }\n  }\n\n  sortActorsByEnergy () {\n    this.actors = this.actors.sort((a, b) => b.energy - a.energy);\n  }\n\n  shouldAutoRun () {\n  // if there is no player, the engine will continue to run, we don't want it to run too fast\n    const hasPlayer = this.actors.filter((actor) => actor.entityTypes.includes('PLAYING')).length\n    if (hasPlayer) return false;\n    return true;\n  }\n\n  addStatusEffect(newEffect) {\n    if (!newEffect.allowDuplicates) {\n      if (this.statusEffects.filter((effect) => (\n        effect.actor.id === newEffect.actor.id &&\n        effect.name === newEffect.name\n      )).length > 0) {\n        console.log(`${newEffect.name} cannot be applied twice to ${newEffect.actor.name}`);\n        return false;\n      };\n    }\n    newEffect.onStart();\n    this.statusEffects.push(newEffect)\n    return true;\n  }\n\n  removeStatusEffectById (id) {\n    this.statusEffects = this.statusEffects.filter((effect) => {\n      if (effect.id !== id) return true;\n      effect.onStop();\n      return false;\n    });\n  }\n  \n  removeStatusEffectByActorId (actorId) {\n    this.statusEffects = this.statusEffects.filter((effect) => {\n      if (effect.actor.id !== actorId) return true;\n      effect.onStop();\n      return false;\n    });\n  }\n\n  removeDeadStatusEffects() {\n    this.statusEffects = this.statusEffects.filter((effect) =>{\n      if (effect.lifespan >= 0 && effect.timeToLive <= 0) {\n        effect.onStop();\n        return false;\n      }\n      return true;\n    });\n  }\n\n  getStatusEffectsByActorId(actorId) {\n    return this.statusEffects.filter((effect) => effect.actor.id === actorId);\n  }\n\n  processStatusEffects (timePassed) {\n    this.statusEffects.forEach((effect) => {\n      effect.timeSinceLastStep += timePassed;\n      effect.timeToLive -= timePassed;\n      if (effect.timeSinceLastStep >= effect.stepInterval) {\n        effect.onStep();\n        effect.timeSinceLastStep = 0;\n      } \n    });\n    this.removeDeadStatusEffects();\n  }\n\n  async processActionFX (action, actionSuccess) {\n    // EASE IN\n    // let time = .8\n    // let nextT = (t) => t *= t; \n    // EASE OUT\n    // let time = .03\n    // let nextT = (t) => t * (2 - t); \n    // EASE IN OUT QUAD\n    // let time = .4\n    // let nextT = (t) => t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t; \n    // EASE IN CUBIC\n    // let time = .8\n    // let nextT = (t) => t * t * t; \n    // EASE OUT CUBIC\n    // let time = .001\n    // let nextT = (t) => (--t) * t * t + 1; \n    if (!actionSuccess) { \n      // If action is not successful, instead of running action's normal particle animation\n      // we'll show a red X on the entity that initiated the action\n      const particle = new Particle({\n        game: this.game,\n        name: 'particle',\n        passable: true,\n        pos: {...action.actor.pos},\n        renderer: PARTICLE_TEMPLATES.fail.renderer,\n      })\n      this.game.placeActorOnMap(particle);\n      this.game.draw();\n      await Helper.delay(100);\n      this.game.removeActorFromMap(particle);\n      particle.update(1);\n      this.game.draw();\n      action.removeDeadParticles(); // is this needed?\n      return true;\n    }\n\n    if (action.particles.length) {\n      while (action.particles.length > 0) {\n        action.particles.forEach((particle) => {\n          this.game.placeActorOnMap(particle);\n        })\n        this.game.draw();\n        // await Helper.delay(time * 100);\n        // await Helper.delay(time * action.processDelay);\n        await Helper.delay(action.processDelay);\n        // await Helper.delay(0);\n        action.particles.forEach((particle) => {\n          this.game.removeActorFromMap(particle);\n          particle.update(1);\n\n        })\n        this.game.draw();\n        action.removeDeadParticles();\n        // time = nextT(time);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  addActor (entity) {\n    this.actors.push(entity);\n  }\n\n  addActorAsPrevious (entity) {\n    this.actors.splice(this.currentActor, 0, entity);\n  }\n\n  addActorAsNext (entity) {\n    this.actors.splice(this.currentActor + 1, 0, entity);\n  }\n\n  setActorToPrevious (entity) {\n    this.currentActor -= 1;\n    if (this.currentActor <= -1) this.currentActor = this.actors.length - 1;\n  }\n\n  setActorToNext (entity) {\n    this.currentActor = (this.currentActor + 1) % this.actors.length;\n  }\n\n}\n\n\nexport class CrankEngine extends Engine {\n  async process() { // a turn-based system using speed and Action Points\n    let actor = this.actors[this.currentActor]\n    let acting = true;\n    while (acting) {\n      if (actor.hasEnoughEnergy()) {\n        let action = actor.getAction(this.game);\n        if (!action) { return false; } // if no action given, kick out to UI input\n        while (true) {\n          this.game.draw();\n          let result = await action.perform();\n          await Helper.delay(action.processDelay);\n          if (!result.success) return false;\n          if (result.alternative === null) break;\n          action = result.alternative;\n        }\n      } else {\n        // actor.gainEnergy(actor.speed);\n        acting = false;\n      }\n    }\n    // this.currentActor = (this.currentActor + 1) % this.actors.length;\n    this.currentActor += 1;\n    if (this.currentActor + 1 >= this.actors.length) {\n      this.currentActor = 0;\n      this.actors.forEach((actor) => actor.gainEnergy(actor.speed));\n      return false;\n    }\n    return true\n  }\n\n  async start() {\n    this.isRunning = true;\n    while (this.isRunning) {\n      this.isRunning = await this.process();\n    }\n    let actor = this.actors[this.currentActor]\n    this.setVisibleKeymap(actor);\n    // this.game.updateMode();\n    this.game.mode.update();\n    await this.game.updateReact(this.game);\n  }\n}","import * as Helper from '../../helper';\nimport * as MapHelper from './helper';\n\nexport const generate = (map, offsetX, offsetY, unitCount = 12, unitSize = 4, borderWidth = 1) => {\n  let data = {};\n  // const floorPlan = createFloorPlan(unitCount);\n  // let maxX = 0; \n  // let minX = 0; \n  // let maxY = 0; \n  // let minY = 0; \n  // floorPlan.forEach((pos) => {\n  //   if (pos.x > maxX) maxX = pos.x;\n  //   if (pos.x < minX) minX = pos.x;\n  //   if (pos.y > maxY) maxY = pos.y;\n  //   if (pos.y < minY) minY = pos.y;\n  // })\n  // const floorPlanWidth = Math.abs(maxX) + Math.abs(minX) + 1;\n  // const floorPlanHeight = Math.abs(maxY) + Math.abs(minY) + 1;\n  // console.log(floorPlanWidth);\n  // console.log(floorPlanHeight);\n  \n  let floorPlan = createFloorPlan();\n  let kill = 1000\n  while (floorPlan.length < unitCount + 1) {\n    \n    let unit = createRoomInFloorPlan(floorPlan);\n    if (unit) {\n      const unitPosition = getUnitPosition(unit, offsetX, offsetY, unitSize);\n      let didCreate = createUnit(map, unitPosition, unitSize, 0);\n      if (didCreate) floorPlan.push(unit);\n    }\n    \n    kill -= 1;\n    if (kill <= 0) break;\n  }\n\n  // removeInnerWalls(map)\n  // addDoorToOuterWalls(map)\n  // addInnerWalls(map, floorPlan.length)\n  addCorridors(map, floorPlan, offsetX, offsetY, unitSize)\n  return data;\n}\n\nconst addCorridors = (map, floorPlan, offsetX, offsetY, unitSize) => {\n  const relativeCornerCoords = [\n    {x: 1, y: 1},\n    {x: unitSize - 1, y: unitSize - 1},\n    {x: 1, y: unitSize - 1},\n    {x: unitSize - 1, y: 1},\n  ]\n  for (let i = 0; i < (floorPlan.length - 1); i++) {\n    const currentUnit = floorPlan[i];\n    let currentUnitPosition = getUnitPosition(currentUnit, offsetX, offsetY, unitSize);\n    const currentUnitRelativeCornerCoord = Helper.getRandomInArray(relativeCornerCoords)\n    currentUnitPosition.x += currentUnitRelativeCornerCoord.x;\n    currentUnitPosition.y += currentUnitRelativeCornerCoord.y;\n    \n    const neigbors = getNeighboringUnitsFromFloorPlan(floorPlan, currentUnit);\n    neigbors.forEach((neigbor) => {\n      let nextUnitPosition = getUnitPosition(neigbor, offsetX, offsetY, unitSize);\n      const nextUnitRelativeCornerCoord = currentUnitRelativeCornerCoord\n      nextUnitPosition.x += nextUnitRelativeCornerCoord.x;\n      nextUnitPosition.y += nextUnitRelativeCornerCoord.y;\n      \n      digCorridor(map, currentUnitPosition, nextUnitPosition);\n    });\n  }\n}\n\nconst getNeighboringUnitsFromFloorPlan = (floorPlan, currentUnit) => {\n  const neighbors = getNeighboringPoints(currentUnit);\n  return floorPlan.filter((unit) => {\n    return neighbors.find((coords) => coords.x === unit.x && coords.y === unit.y);\n  })\n}\n\nconst digCorridor = (map, currentUnitPosition, nextUnitPosition) => {\n    const corridorDirection = [\n      Math.sign(nextUnitPosition.x - currentUnitPosition.x),\n      Math.sign(nextUnitPosition.y - currentUnitPosition.y)\n    ]\n    let kill = 1000;\n    let corridorPosition = Helper.getPositionInDirection(currentUnitPosition, corridorDirection); \n    let hasDoor = false\n    while (!Helper.coordsAreEqual(corridorPosition, nextUnitPosition)) {\n      let tile = map[Helper.coordsToString(corridorPosition)];\n      if (tile) {\n        if (tileIsWall(tile)) {\n          if (!hasDoor) {\n            tile.type = 'DOOR'\n            hasDoor = true;\n          } else {\n            tile.type = 'FLOOR'\n          }\n        }\n      }\n      corridorPosition = Helper.getPositionInDirection(corridorPosition, corridorDirection); \n      kill -= 1;\n      if (kill <= 0) break;\n    }\n}\n\nconst createFloorPlan = () => {\n  // create origin\n  let floorPlan = [{x: 0, y: 0}];\n  return floorPlan\n}\n\nconst createRoomInFloorPlan = (floorPlan) => {\n  // randomly choose previously created unit\n  // let origin = floorPlan[floorPlan.length - 1];\n  let origin = Helper.getRandomInArray(floorPlan);\n  // randomly choose neighboring point\n  let newUnit = getNeighboringUnit(origin);\n  let unitAlreadyExists = unitExists(newUnit, floorPlan)\n  let kill = 1000\n  while (unitAlreadyExists) {\n    origin = Helper.getRandomInArray(floorPlan.filter((pnt) => !Helper.coordsAreEqual(pnt, origin)));\n    newUnit = getNeighboringUnit(origin);\n    unitAlreadyExists = unitExists(newUnit, floorPlan)\n    kill -= 1;\n    if (kill <= 0) {\n      unitAlreadyExists = false;\n      newUnit = false;\n      break;\n    }\n  }\n  \n  return newUnit\n}\n\nconst getNeighboringUnit = (origin) => Helper.getRandomInArray(getNeighboringPoints(origin))\nconst unitExists = (newUnit, existingUnits) => existingUnits.filter((unit) => unit.x === newUnit.x && unit.y === newUnit.y).length > 0;\nconst getUnitPosition = (floorPlanPos, mapOffsetX, mapOffsetY, unitSize) => {\n  return {\n    x: floorPlanPos.x + mapOffsetX + (unitSize * floorPlanPos.x),\n    y: floorPlanPos.y + mapOffsetY + (unitSize * floorPlanPos.y),\n  }\n}\n\nconst getNeighboringPoints = (origin, eightWay = false) => {\n  let neighbors = [\n    {\n      x: origin.x,\n      y: origin.y + 1\n    },\n    {\n      x: origin.x + 1,\n      y: origin.y\n    },\n    {\n      x: origin.x,\n      y: origin.y - 1\n    },\n    {\n      x: origin.x - 1,\n      y: origin.y\n    },\n  ]\n\n  if (eightWay) {\n    neighbors = neighbors.concat([\n      {\n        x: origin.x + 1,\n        y: origin.y + 1\n      },\n      {\n        x: origin.x + 1,\n        y: origin.y - 1\n      },\n      {\n        x: origin.x - 1,\n        y: origin.y - 1\n      },\n      {\n        x: origin.x - 1,\n        y: origin.y + 1\n      },\n    ])\n  }\n  return neighbors;\n}\n\nconst isCorner = (x, y, roomSize) => {\n  if (x === 0 && y === 0) return true\n  if (x === roomSize && y === roomSize) return true\n  if (x === roomSize && y === 0) return true\n  if (x === 0 && y === roomSize) return true\n  return false;\n};\n\nconst createUnit = (map, position, size, border) => {\n  // const length = size; // this will leave a border\n  // const length = size + 1; // this will close the gap\n  const length = size + 1 - border; // this will calculate using border\n\n  // prevent units from hitting map edge\n  for (let i = 0; i < length; i++) {\n    for (let j = 0; j < length; j++) {\n      const newPosition = {\n        x: position.x + i,\n        y: position.y + j,\n      }\n      let tile = map[Helper.coordsToString(newPosition)];\n      if (!tile) return false;\n      if (tile.type === 'ROAD_EDGE') return false;\n      if (tileIsWall(tile)) return false;\n      if (tile.type === 'FLOOR') return false;\n    }\n  }\n\n  for (let i = 0; i < length; i++) {\n    for (let j = 0; j < length; j++) {\n      const newPosition = {\n        x: position.x + i,\n        y: position.y + j,\n      }\n      let type = 'FLOOR';\n      if (i === 0 || i === (length - 1)) type = 'WALL_VERTICAL';\n      if (j === 0 || j === (length - 1)) type = 'WALL_HORIZONTAL';\n      if (i === 0 && j === 0) type = 'WALL_CORNER_NW';\n      if (i === 0 && j === (length - 1)) type = 'WALL_CORNER_SW';\n      if (i === (length - 1) && j === 0) type = 'WALL_CORNER_NE';\n      if (i === (length - 1) && j === (length - 1)) type = 'WALL_CORNER_SE';\n      let tile = map[Helper.coordsToString(newPosition)];\n      if (tile) tile.type = type;\n    }\n  }\n\n  return true;\n}\n\nconst tileIsWall = (tile) => MapHelper.tileHasTag({tile, tag: 'WALL'})\n\nconst getInnerWalls = (map, tiles) => {\n  return tiles.filter((key) => {\n    const coordArray = key.split(',').map((i) => parseInt(i));\n    const coords = {\n      x: coordArray[0],\n      y: coordArray[1],\n    }\n    const neighbors = getNeighboringPoints(coords, true).filter((point) => {\n      let t = map[Helper.coordsToString(point)];\n      if (t) {\n        if (['FLOOR', 'DOOR'].includes(t.type) || tileIsWall(t)) {\n          return true;\n        }\n      }\n      return false\n    });\n    \n    if (neighbors.length === 8) {\n      return true;\n    }\n    return false;\n  })\n}\n\nconst getOuterWalls = (map, tiles) => {\n  return tiles.filter((key) => {\n    const coordArray = key.split(',').map((i) => parseInt(i));\n    const coords = {\n      x: coordArray[0],\n      y: coordArray[1],\n    }\n    const neighbors = getNeighboringPoints(coords, true).filter((point) => {\n      let t = map[Helper.coordsToString(point)];\n      if (t) {\n        if (['FLOOR'].includes(t.type) || tileIsWall(t)) {\n          return false;\n        }\n      }\n      return true\n    });\n    \n    if (neighbors.length === 8) {\n      return false;\n    }\n    return true;\n  })\n}\n\nconst removeInnerWalls = (map) => {\n  let walls = Object.keys(map).filter((key) => {\n    return tileIsWall(map[key]);\n  })\n\n  let innerWalls = getInnerWalls(map, walls);\n\n  innerWalls.forEach((key) => {\n    map[key].type = 'FLOOR';\n  })\n}\n\nconst addDoorToOuterWalls = (map) => {\n  let walls = Object.keys(map).filter((key) => {\n    return tileIsWall(map[key]);\n  });\n\n  let outerWalls = getOuterWalls(map, walls);\n  let key = Helper.getRandomInArray(outerWalls);\n  map[key].type = 'DOOR'\n}\n\nconst addInnerWalls = (map, count = 2) => {\n  // Finding corners\n  let corners = Object.keys(map).filter((key) => {\n    const tile = map[key];\n    if (!tileIsWall(tile)) return false;\n    const coordArray = key.split(',').map((i) => parseInt(i));\n    const coords = {\n      x: coordArray[0],\n      y: coordArray[1],\n    }\n    const neighbors = getNeighboringPoints(coords, false).filter((point) => {\n      let t = map[Helper.coordsToString(point)];\n      if (t) {\n        if (['GROUND', 'GROUND_ALT', 'ROAD', 'ROAD_EDGE'].includes(t.type)) {\n          return true;\n        }\n      }\n      return false\n    });\n    if (neighbors.length === 2) return true;\n    return false\n  })\n\n  if (!corners.length) return;\n\n  // building walls\n  let wallCount = 0;\n  while (wallCount < count) {\n  // while (wallCount < corners.length) {\n  // for (let i = 0; i < count; i++) {\n    const corner = Helper.getRandomInArray(corners);\n    const coordArray = corner.split(',').map((i) => parseInt(i));\n    const coords = {\n      x: coordArray[0],\n      y: coordArray[1],\n    }\n    const wallNeighbors = getNeighboringPoints(coords, false).filter((point) => {\n      let t = map[Helper.coordsToString(point)];\n      if (t) {\n        if (tileIsWall(t)) {\n          return true;\n        }\n      }\n      return false\n    });\n    const selectedWallPos = Helper.getRandomInArray(wallNeighbors)\n    if (!selectedWallPos) continue;\n    const direction = {\n      x: Math.sign(selectedWallPos.x - coords.x),\n      y: Math.sign(selectedWallPos.y - coords.y)\n    };\n\n    let kill = 100;\n    let build = true;\n    let currentPosition = {...coords}\n    let previousFloorPositions = [];\n    while (build) {\n      currentPosition.x += direction.x;\n      currentPosition.y += direction.y;\n      let tile = map[Helper.coordsToString(currentPosition)];\n      if (!tile) break;\n      // if (tile.type === 'WALL') continue;\n      if (tile.type === 'FLOOR') {\n        tile.type = 'WALL';\n        previousFloorPositions.push({...currentPosition})\n        // console.log(previousFloorPositions.length);\n      }\n      // else if (['GROUND', 'GROUND_ALT', 'ROAD', 'ROAD_EDGE'].includes(tile.type) || (tile.type === 'WALL' && previousFloorPositions.length)) {\n      // else if (['GROUND', 'GROUND_ALT', 'ROAD', 'ROAD_EDGE'].includes(tile.type)) {\n      else if (['GROUND', 'GROUND_ALT', 'ROAD', 'ROAD_EDGE'].includes(tile.type) && previousFloorPositions.length) {\n        // go back two and make FLOOR\n        let prevPos = {\n          x: currentPosition.x - (direction.x * 2),\n          y: currentPosition.y - (direction.y * 2),\n        }\n        map[Helper.coordsToString(prevPos)].type = 'DOOR';\n        // map[Helper.coordsToString(prevPos)].type = 'FLOOR';\n        // go back one more and make FLOOR\n        prevPos = {\n          x: currentPosition.x - (direction.x * 3),\n          y: currentPosition.y - (direction.y * 3),\n        }\n        map[Helper.coordsToString(prevPos)].type = 'DOOR';\n        // map[Helper.coordsToString(prevPos)].type = 'FLOOR';\n        if (previousFloorPositions.length <= 0) {\n          //   // we need to create another wall, this one is bust\n          if (count <= 100) count += 1\n        }\n        break;\n      }\n      kill -= 1;\n      if (kill <= 0) build = false;\n    }\n    wallCount += 1;\n  }\n}","export const COLORS = {\n  base04: '#07111D',\n  base03: '#02252e',\n  // base03: '#002b36',\n  base02: '#073642',\n  base01: '#586e75',\n  base00: '#657b83',\n  // base0: '#96641D',\n  base0: '#839496',\n  base1: '#93a1a1',\n  // base2: '#E19D3F',\n  base2: '#eee8d5',\n  base3: '#fdf6e3',\n  yellow: '#b58900',\n  orange: '#cb4b16',\n  red: '#dc322f',\n  magenta: '#d33682',\n  violet: '#6c71c4',\n  blue: '#268bd2',\n  cyan: '#2aa198',\n  green: '#859900',\n  // // base1: '#07111D',\n  // base1: '#0B0B0B',\n  // base2: '#5A7178',\n  // base3: '#B6ACA3',\n  // base4: '#EDF6F1',\n  cog1: '#27295f',\n  cog2: '#3e7dc9',\n  cog3: '#18c0f8',\n  cog4: '#86C8E4',\n  locust0: '#423a18',\n  locust1: '#96641D',\n  locust2: '#E19D3F',\n  // locust2: '#F89339',\n  locust3: '#E7C898',\n  flesh1: '#833139',\n  flesh2: '#CC7468',\n  flesh3: '#DDA78F',\n  gray: '#6D7886',\n}\nexport const TILE_KEY = {\n  'GROUND': {\n    background: COLORS.base04,\n    foreground: COLORS.base02,\n    character: '.',\n    sprite: '',\n    passable: true,\n    tags: ['PROVIDING_COVER'],\n  },\n  'GROUND_ALT': {\n    background: COLORS.base04,\n    foreground: COLORS.base02,\n    character: '',\n    sprite: '',\n    passable: true,\n    tags: ['PROVIDING_COVER'],\n  },\n  'EMERGENCE_DESTROYED': {\n    background: COLORS.base04,\n    foreground: COLORS.locust0,\n    character: '',\n    // sprite: '',\n    sprite: '',\n    passable: true,\n  },\n  'EMERGENCE_GROUND': {\n    background: COLORS.locust0,\n    foreground: COLORS.locust1,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'EMERGENCE_OUTER_GROUND': {\n    background: COLORS.locust0,\n    foreground: COLORS.locust2,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'FLOOR': {\n    background: COLORS.base02,\n    foreground: COLORS.locust1,\n    character: '',\n    passable: true,\n    tags: ['BURNABLE'],\n  },\n  'WALL': {\n    background: COLORS.base02,\n    foreground: COLORS.locust2,\n    character: '#',\n    sprite: '',\n    passable: false,\n    tags: ['BURNABLE', 'WALL'],\n  },\n  'WALL_VERTICAL': {\n    background: COLORS.base02,\n    foreground: COLORS.locust2,\n    character: '||',\n    sprite: '',\n    passable: false,\n    tags: ['BURNABLE', 'WALL'],\n  },\n  'WALL_HORIZONTAL': {\n    background: COLORS.base02,\n    foreground: COLORS.locust2,\n    character: '=',\n    sprite: '',\n    passable: false,\n    tags: ['BURNABLE', 'WALL'],\n  },\n  'WALL_CORNER_NW': {\n    background: COLORS.base02,\n    foreground: COLORS.locust2,\n    character: '#',\n    sprite: '',\n    passable: false,\n    tags: ['BURNABLE', 'WALL'],\n  },\n  'WALL_CORNER_NE': {\n    background: COLORS.base02,\n    foreground: COLORS.locust2,\n    character: '#',\n    sprite: '',\n    passable: false,\n    tags: ['BURNABLE', 'WALL'],\n  },\n  'WALL_CORNER_SW': {\n    background: COLORS.base02,\n    foreground: COLORS.locust2,\n    character: '#',\n    sprite: '',\n    passable: false,\n    tags: ['BURNABLE', 'WALL'],\n  },\n  'WALL_CORNER_SE': {\n    background: COLORS.base02,\n    foreground: COLORS.locust2,\n    character: '#',\n    sprite: '',\n    passable: false,\n    tags: ['BURNABLE', 'WALL'],\n  },\n  'ROAD_EDGE': {\n    background: COLORS.base03,\n    foreground: COLORS.base02,\n    character: '',\n    sprite: '',\n    passable: true,\n    tags: ['ROAD', 'PROVIDING_COVER'],\n  },\n  'ROAD': {\n    background: COLORS.base03,\n    foreground: COLORS.base02,\n    character: '=',\n    sprite: '',\n    passable: true,\n    tags: ['ROAD', 'PROVIDING_COVER'],\n  },\n  'DOOR': {\n    background: COLORS.base02,\n    foreground: COLORS.base1,\n    character: '+',\n    sprite: '',\n    passable: true,\n    tags: ['BURNABLE'],\n  },\n  'SAFE': {\n    background: COLORS.base04,\n    foreground: COLORS.base02,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'LOCKED_EXIT': {\n    background: COLORS.base04,\n    foreground: COLORS.base02,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'EXIT': {\n    background: COLORS.base04,\n    foreground: COLORS.green,\n    character: '>',\n    sprite: '',\n    passable: true,\n  },\n  'BURNT': {\n    background: COLORS.base03,\n    foreground: COLORS.red,\n    character: 'X',\n    sprite: '',\n    passable: true,\n    tags: ['BURNABLE'],\n    animation: [\n      { background: COLORS.base03, foreground: COLORS.yellow, character: 'X', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.yellow, character: 'x', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.red, character: 'X', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.orange, character: 'x', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.orange, character: 'X', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.red, character: 'x', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.red, character: 'X', sprite: '', passable: true, },\n    ]\n  },\n}\n\nexport const STAT_RENDERERS = {\n  'amount': {\n    background: COLORS.base04,\n    foreground: COLORS.locust2,\n    character: '',\n  },\n  'attackRange': {\n    background: COLORS.green,\n    foreground: COLORS.base3,\n    character: '==>',\n  },\n  'magazine': {\n    background: COLORS.gray,\n    foreground: COLORS.base3,\n    character: '!!',\n  },\n  'baseRangedAccuracy': {\n    background: COLORS.violet,\n    foreground: COLORS.base3,\n    character: '*',\n  },\n  'baseRangedDamage': {\n    background: COLORS.red,\n    foreground: COLORS.base3,\n    character: 'x',\n    sprite: '',\n  },\n  'meleeDamage': {\n    background: COLORS.red,\n    foreground: COLORS.base3,\n    character: 'x',\n    sprite: '',\n  },\n} \n\n// GiArcheryTarget / GiBullseye / GiCrosshair -- accuracy\n// GiBullets -- ammo\n// GiBackwardTime -- ammo / reload\n//  GiBarbedArrow - -range\n// GiBurningDot -- damage\n// GiCog\n\n/*\nSCROLL-O-Sprites\n\n\n\n\n\n\n\n \n*/","import { keys } from 'lodash';\nimport * as Helper from '../../helper';\nimport * as MapHelper from '../Maps/helper';\nimport { CoverWall } from '../Entities/index';\nimport {COLORS} from '../Modes/Jacinto/theme';\nimport Map from 'rot-js/lib/map/map';\n\nexport const generateCoverBlock = (\n    pos,\n    game,\n    name = 'box',\n    character = '%',\n    durability = 5,\n    background = COLORS.base02,\n    color = COLORS.base01\n  ) => {\n    let sprite = Helper.getRandomInArray(['', '']);\n\n    let box = new CoverWall({\n      pos,\n      renderer: {\n        character,\n        sprite,\n        color,\n        background,\n      },\n      name,\n      game,\n      durability,\n      accuracyModifer: -0.3,\n      damageModifer: 0,\n    })\n\n    game.placeActorOnMap(box)\n  }\n\nconst SHAPES = {\n  point: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n    ]\n  },\n  verticalLine: {\n    x_offset: 1,\n    y_offset: 1,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n    ]\n  },\n  horizontalLine: {\n    x_offset: 1,\n    y_offset: 1,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 1, y: 0, taken: false, },\n    ]\n  },\n  smallSquare: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n    ]\n  },\n  southEastVerticalL: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 0, y: 2, taken: false, },\n      { x: 1, y: 2, taken: false, },\n    ]\n  },\n  southWestVerticalL: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 0, y: 2, taken: false, },\n      { x: -1, y: 2, taken: false, },\n    ]\n  },\n  northWestVerticalL: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: 0, y: -2, taken: false, },\n      { x: -1, y: -2, taken: false, },\n    ]\n  },\n  northEastVerticalL: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: 0, y: -2, taken: false, },\n      { x: 1, y: -2, taken: false, },\n    ]\n  },\n  southEastHorizontalL: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 2, y: 0, taken: false, },\n      { x: 2, y: 1, taken: false, },\n    ]\n  },\n  southWestHorizontalL: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: -1, y: 0, taken: false, },\n      { x: -2, y: 0, taken: false, },\n      { x: -2, y: 1, taken: false, },\n    ]\n  },\n  northEastHorizontalL: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 2, y: 0, taken: false, },\n      { x: 2, y: -1, taken: false, },\n    ]\n  },\n  northWestHorizontalL: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: -1, y: 0, taken: false, },\n      { x: -2, y: 0, taken: false, },\n      { x: -2, y: -1, taken: false, },\n    ]\n  },\n}\n\nconst shapeChanceTable = [\n  ...Array(1).fill('point'),\n  ...Array(4).fill('verticalLine'),\n  ...Array(3).fill('horizontalLine'),\n  ...Array(2).fill('smallSquare'),\n  ...Array(2).fill('southEastVerticalL'),\n  ...Array(2).fill('southWestVerticalL'),\n  ...Array(2).fill('northWestVerticalL'),\n  ...Array(2).fill('northEastVerticalL'),\n  ...Array(1).fill('southEastHorizontalL'),\n  ...Array(1).fill('southWestHorizontalL'),\n  ...Array(1).fill('northWestHorizontalL'),\n  ...Array(1).fill('northEastHorizontalL'),\n];\n\nexport const generate = (pos, game, shape) => {\n  const positions = Helper.getPositionsFromStructure(shape, pos);\n  positions.forEach((position) => {\n    let tile = game.map[Helper.coordsToString(position)];\n    if (!tile) return;\n    if (MapHelper.tileHasTag({tile, tag: 'PROVIDING_COVER'})) {\n      generateCoverBlock(position, game);\n    }\n  });\n}\n\nexport const generateSingle = (pos, game) => generate(pos, game, SHAPES.point);\nexport const generateTwoVertically = (pos, game) => generate(pos, game, SHAPES.verticalLine);\nexport const generateTwoHorizontally = (pos, game) => generate(pos, game, SHAPES.horizontalLine);\nexport const generateSquare = (pos, game) => generate(pos, game, SHAPES.smallSquare);\nexport const generateRandom = (pos, game) => {\n  const shape = SHAPES[Helper.getRandomInArray(shapeChanceTable)];\n  generate(pos, game, shape);\n};","import uuid from 'uuid/v1';\nimport {merge} from 'lodash';\n\nexport class Mode {\n  constructor({\n    game = null,\n    data = {},\n  }) {\n    let id = uuid();\n    this.id = id;\n    this.game = game;\n    this.data = data;\n    this.infoBlocks = {}\n    this.progressBars = {}\n  }\n\n  initialize() {}\n\n  update() {}\n\n  createOrUpdateInfoBlock(id, value) {\n    merge(this.infoBlocks, {[id]: value})\n  }\n}","import {Ammo as AmmoEntity} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Ammo = (engine) => new AmmoEntity({\n  game: engine.game,\n  name: 'Ammo',\n  passable: true,\n  renderer: {\n    character: '||',\n    sprite: '',\n    background: COLORS.gray,\n    color: COLORS.base3,\n  },\n  flammability: 0,\n  explosivity: 0,\n});","import * as Constant from '../../constants';\nimport {Grenade as GrenadeEntity} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Grenade = (engine, range) => new GrenadeEntity({\n  game: engine.game,\n  name: 'Grenade',\n  passable: true,\n  renderer: {\n    character: 'x',\n    sprite: '',\n    color: COLORS.red,\n    background: COLORS.base02,\n  },\n  flammability: 0,\n  explosivity: 3,\n  attackDamage: 10,\n  speed: Constant.ENERGY_THRESHOLD * range,\n  energy: 0,\n  range,\n})\n","import { Base } from './Base';\nimport { Say } from './Say';\nimport * as Constant from '../constants';\n\nexport class MultiTargetAttack extends Base {\n  constructor({ targetPositions, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPositions = targetPositions;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (!this.actor.entityTypes.includes('ATTACKING')) {\n      return {\n        success: true,\n        alternative: new Say({\n          message: `Ooh I don\\'t know how to attack`,\n          game: this.game,\n          actor: this.actor,\n        }),\n      };\n    }\n    let particlePath = [];\n    let particlePos = { x: this.actor.pos.x, y: this.actor.pos.y };\n    let renderer = this.particleTemplate.renderer;\n    this.targetPositions.forEach((targetPos) => {\n      let attackSuccess = this.actor.attack(targetPos);\n      particlePath.push(targetPos);\n      if (attackSuccess)\n        success = true;\n    });\n    this.addParticle(particlePath.length + 1, particlePos, null, renderer, Constant.PARTICLE_TYPE.path, particlePath);\n    if (success) {\n      this.actor.energy -= this.energyCost;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Say } from '../../../Actions/Say';\nimport { MultiTargetAttack } from '../../../Actions/MultiTargetAttack';\nimport Behavior from './Behavior';\n\nexport default class ExecuteAttack extends Behavior {\n  constructor({ ...args }) {\n    super({ ...args });\n  }\n\n  isValid () {\n    return this.actor.getCursorPositions().length\n  }\n\n  constructActionClassAndParams () {\n    return [\n      MultiTargetAttack,\n      {\n        targetPositions: this.actor.getCursorPositions(),\n        onAfter: () => this.actor.removeAnimations()\n      }\n    ]\n  }\n}\n","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nexport class Reload extends Base {\n  constructor({ message, messageType = MESSAGE_TYPE.INFORMATION, ...args }) {\n    super({ ...args });\n    this.processDelay = 0;\n  }\n  perform() {\n    const success = this.actor.reload();\n    this.game.addMessage(`${this.actor.name} says \"RELOADING\"`, MESSAGE_TYPE.INFORMATION);\n    return {\n      success,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { Say } from './Say';\nimport { Reload } from './Reload';\nimport SOUNDS from '../sounds';\nimport * as Constant from '../constants';\nimport * as Helper from '../../helper';\n\nexport class MultiTargetRangedAttack extends Base {\n  constructor({ targetPositions, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPositions = targetPositions;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (!this.actor.entityTypes.includes('RANGED_ATTACKING')) {\n      return {\n        success: true,\n        alternative: new Say({\n          message: `Ooh I don\\'t know how to attack`,\n          game: this.game,\n          actor: this.actor,\n        }),\n      };\n    }\n    const weapons = this.actor.getEquipedWeapons();\n    if (weapons.length > 0) {\n      if (weapons[0].magazine <= 0) {\n        return {\n          success: true,\n          alternative: new Reload({\n            game: this.game,\n            actor: this.actor,\n            energyCost: Constant.ENERGY_THRESHOLD,\n          }),\n        };\n      }\n    }\n    let particlePath = [];\n    let particlePos = { x: this.actor.pos.x, y: this.actor.pos.y };\n    let renderer = this.particleTemplate.renderer;\n    this.targetPositions.forEach((targetPos) => {\n      let [attackSuccess, hit] = this.actor.rangedAttack(targetPos);\n      particlePath.push(targetPos);\n      if (attackSuccess) {\n        success = true;\n        if (!hit) {\n          SOUNDS.release_0.play();\n          success = true;\n          this.addParticle(\n            1,\n            { ...targetPos },\n            { x: 0, y: 0 },\n            Constant.PARTICLE_TEMPLATES.fail.renderer,\n          );\n        } else {\n          const sound = Helper.getRandomInArray([SOUNDS.chop_0, SOUNDS.chop_1]);\n          sound.play();\n          this.addParticle(\n            particlePath.length + 1,\n            particlePos,\n            null,\n            renderer,\n            Constant.PARTICLE_TYPE.path,\n            particlePath\n          );\n        }\n      }\n    });\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { MultiTargetRangedAttack } from '../../../Actions/MultiTargetRangedAttack';\nimport Behavior from './Behavior';\n\nexport default class ExecuteRangedAttack extends Behavior {\n  constructor({ ...args }) {\n    super({ ...args });\n  }\n\n  isValid () {\n    return this.actor.getCursorPositions().length\n  }\n\n  constructActionClassAndParams () {\n    return [\n      MultiTargetRangedAttack,\n      {\n        targetPositions: this.actor.getCursorPositions(),\n        onAfter: () => this.actor.removeAnimations()\n      }\n    ]\n  }\n}\n","import { Base } from './Base';\nimport * as Helper from '../../helper'\n\nexport class AddStatusEffect extends Base {\n  constructor({ effect, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.effect = effect;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = this.game.engine.addStatusEffect(this.effect);\n    let positions = Helper.getPointsOnCircumference(this.actor.pos.x, this.actor.pos.y, 4);\n    positions.forEach((pos) => {\n      this.addParticle(3, { ...pos }, {\n        x: -1 * Math.sign(pos.x - this.actor.pos.x),\n        y: -1 * Math.sign(pos.y - this.actor.pos.y)\n      });\n    });\n    return {\n      success,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport * as Helper from '../../helper'\n\nexport class AddStatusEffects extends Base {\n  constructor({ effects, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.effects = effects;\n    this.processDelay = processDelay;\n  }\n\n  addParticleAnimationAt({pos}) {\n    let positions = Helper.getPointsOnCircumference(pos.x, pos.y, 4);\n    positions.forEach((pos) => {\n      this.addParticle(3, { ...pos }, {\n        x: -1 * Math.sign(pos.x - pos.x),\n        y: -1 * Math.sign(pos.y - pos.y)\n      });\n    });\n  }\n\n  perform() {\n    let success = false;\n    this.effects.forEach((effect) => {\n      const effectSuccess = this.game.engine.addStatusEffect(effect);\n      console.log(effectSuccess);\n      success = effectSuccess || success;\n      if (effectSuccess) this.addParticleAnimationAt({pos: effect.actor.getPosition()});\n    });\n\n    return {\n      success,\n      alternative: null,\n    };\n  }\n}\n;\n","import { AddStatusEffect } from '../../../Actions/AddStatusEffect';\nimport Behavior from './Behavior';\nimport { AddStatusEffects } from '../../../Actions/AddStatusEffects';\nimport * as Helper from '../../../../helper';\n\nexport default class ExecuteStatusEffects extends Behavior {\n  constructor({ effectClass, effectDefaults = {}, ...args }) {\n    super({ ...args });\n    this.effectClass = effectClass;\n    this.effectDefaults = effectDefaults;\n  }\n\n  isValid () {\n    return this.actor.getCursorPositions().length\n  }\n\n  getTargetsOnTile(tile) {\n    return Helper.getDestructableEntities(tile.entities);\n  }\n\n  createEffects() {\n    let effects = [];\n    const targetPositions = this.actor.getCursorPositions();\n\n    targetPositions.forEach((pos) => {\n      let tile = this.actor.game.map[Helper.coordsToString(pos)];\n      if (!!tile) {\n        let targets = this.getTargetsOnTile(tile)\n        // TODO: create alternat version that targets only allies/only enemies\n        targets.forEach((target) => {\n          const newEffect = new this.effectClass({\n            ...this.effectDefaults,\n            actor: target,\n            game: this.actor.game,\n          });\n\n          effects.push(newEffect);\n        });\n      }\n    });\n\n    return effects;\n  }\n\n  constructActionClassAndParams () {\n    const effects = this.createEffects();\n\n    return [\n      AddStatusEffects,\n      {\n        effects,\n        onAfter: () => this.actor.removeAnimations()\n      }\n    ]\n  }\n}\n","import ExecuteStatusEffects from './ExecuteStatusEffects';\n\nexport default class ExecuteStatusEffectOnAllies extends ExecuteStatusEffects {\n  constructor({ ...args }) {\n    super({ ...args });\n  }\n\n  getTargetsOnTile(tile) {\n    return tile.entities.filter((entity) => this.actor.isAlly(entity));\n  }\n}\n","import { Base } from './Base';\n\nexport class Move extends Base {\n  constructor({ targetPos, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = this.actor.move(this.targetPos);\n    let alternative = null;\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n","import { Move } from '../../../Actions/Move';\nimport Behavior from './Behavior';\nimport { calculatePathAroundObstacles } from '../../../../helper'; \n\nexport default class MoveTowardsCover extends Behavior {\n  constructor({ ...args }) {\n    super({ ...args });\n\n    this.targetCover = null;\n  }\n\n  isValid() {\n    return !this.actor.isCovered();\n    // return true\n  }\n\n  getDistanceToTarget (target) {\n    return calculatePathAroundObstacles(this.actor.game, target.getPosition(), this.actor.getPosition(), 8).length;\n  }\n\n  findClosestCover() {\n    let currentClosest = null;\n    const cover = this.actor.getCoverEntities()\n    cover.forEach((entity) => {\n      if (!currentClosest) currentClosest = entity;\n      const distanceTo = this.getDistanceToTarget(entity);\n      const distanceToCurrentClosest = this.getDistanceToTarget(currentClosest);\n      if (distanceTo < distanceToCurrentClosest) {\n        currentClosest = entity;\n      }\n    });\n    return currentClosest;\n  }\n\n  constructActionClassAndParams () {\n    let actionClass = null;\n    let actionParams = null;\n\n    let cover = null;\n    let moveToPosition = this.actor.getPosition();\n\n    // find closest cover\n    if (!this.targetCover) {\n      cover = this.findClosestCover();\n    } else {\n      cover = this.targetCover\n    }\n\n    if (!cover) return [actionClass, actionParams]; \n\n    // get path to cover\n    let path = calculatePathAroundObstacles(this.actor.game, cover.getPosition(), this.actor.getPosition());\n    moveToPosition = path.length > 0 ? path[0] : null;\n\n    actionClass = Move; \n    actionParams = {\n      hidden: true,\n      targetPos: moveToPosition,\n    }\n\n    return [actionClass, actionParams];\n  }\n  // constructActionClassAndParams () {\n  //   let actionClass = Say;\n  //   let actionParams = {message: 'grrr'};\n\n  //   if (this.actor.isCovered()) return [actionClass, actionParams];\n\n  //   let cover = null;\n  //   let moveToPosition = this.actor.getPosition();\n\n  //   // find closest cover\n  //   if (!this.targetCover) {\n  //     cover = this.findClosestCover();\n  //   } else {\n  //     cover = this.targetCover\n  //   }\n\n  //   if (!cover) return [actionClass, actionParams]; \n\n  //   // get path to cover\n  //   let path = calculatePathAroundObstacles(this.actor.game, cover.getPosition(), this.actor.getPosition());\n  //   moveToPosition = path.length > 0 ? path[0] : null;\n\n  //   actionClass = Move; \n  //   actionParams = {\n  //     hidden: true,\n  //     targetPos: moveToPosition,\n  //   }\n\n  //   return [actionClass, actionParams];\n  // }\n}\n","import { Move } from '../../../Actions/Move';\nimport Behavior from './Behavior';\nimport { calculatePathAroundObstacles } from '../../../../helper'; \n\nexport default class MoveTowardsEnemy extends Behavior {\n  constructor({ ...args }) {\n    super({ ...args });\n  }\n\n  isValid () {\n    return true;\n  }\n\n  getDistanceToTarget (target) {\n    return calculatePathAroundObstacles(this.actor.game, target.getPosition(), this.actor.getPosition(), 8).length;\n  }\n\n  findClosestEnemy() {\n    let currentClosestEnemy = null;\n    this.actor.getEnemies().forEach((enemy) => {\n      if (!currentClosestEnemy) currentClosestEnemy = enemy;\n      const distanceToEnemy = this.getDistanceToTarget(enemy);\n      const distanceToCurrentClosestEnemy = this.getDistanceToTarget(currentClosestEnemy);\n      if (distanceToEnemy < distanceToCurrentClosestEnemy) {\n        currentClosestEnemy = enemy;\n      }\n    });\n    return currentClosestEnemy;\n  }\n\n  constructActionClassAndParams () {\n    let actionClass = null;\n    let actionParams = null;\n\n    // find closest enemy\n    const enemy = this.findClosestEnemy();\n    if (!enemy) return [null, null]; \n    // get path to enemy\n    let path = calculatePathAroundObstacles(this.actor.game, enemy.getPosition(), this.actor.getPosition());\n    let moveToPosition = path.length > 0 ? path[0] : null;\n    if (!moveToPosition) return [null, null]\n\n    actionClass = Move; \n    actionParams = {\n      hidden: true,\n      targetPos: moveToPosition,\n    }\n\n    return [actionClass, actionParams];\n  }\n}\n","import { Say } from '../../../Actions/Say';\nimport { getPositionsFromStructure } from '../../../../helper';\nimport {CLONE_PATTERNS} from '../../../constants';\nimport {COLORS} from '../../../Modes/Jacinto/theme';\nimport Behavior from './Behavior';\n\nexport default class Telegraph extends Behavior {\n  constructor({ attackPattern = CLONE_PATTERNS.point, color = COLORS.red, ...args }) {\n    super({ ...args });\n    this.attackPattern = attackPattern;\n    this.color = color;\n  }\n\n  getTargetPosition () {\n    return this.actor.getPosition();\n  }\n\n  constructActionClassAndParams () {\n    // pick one or more tiles to target with attack or action via attackPattern class (random, fixed)\n    const positions = getPositionsFromStructure(this.attackPattern, this.getTargetPosition());\n    // add blink animations or particle animation to targeted tiles\n    this.actor.activateCursor(positions);\n    this.actor.updateAllCursorNodes([\n      {key: 'fill', value: this.color}, \n      {key: 'stroke', value: 'transparent'}, \n    ]);\n    // (or add telegraph entities to map?)\n    // or produce and insert Execute behavior based on attack pattern?\n    // return None action\n    return [\n      Say,\n      {message: 'I am telegraphing my next attack'}\n    ]\n  }\n}\n","import * as Helper from '../../../../helper';\nimport { Say } from '../../../Actions/Say';\nimport {COLORS} from '../../../Modes/Jacinto/theme';\nimport MoveTowardsEnemy from './MoveTowardsEnemy';\n\nexport default class TelegraphRangedAttack extends MoveTowardsEnemy {\n  constructor({ accuracyToAttackThreshold = 0.1, ...args }) {\n    super({ ...args });\n    this.accuracyToAttackThreshold = accuracyToAttackThreshold;\n  }\n\n  isValid () {\n    const attackRange = this.actor.getAttackRange();\n    const enemy = this.findClosestEnemyInRange(attackRange) \n    if (!enemy) return false;\n    \n    const rangedAttackChance = this.actor.getRangedAttackChance(enemy.getPosition());\n    if (rangedAttackChance < this.accuracyToAttackThreshold) return false;\n    \n    return true;\n  }\n\n  findClosestEnemyInRange(range) {\n    let currentClosestEnemy = null;\n    this.actor.getEnemies()\n    .filter((enemy) => {\n      const distanceToEnemy = this.getDistanceToTarget(enemy);\n      return range >= distanceToEnemy;\n    })\n    .forEach((enemy) => {\n      if (!currentClosestEnemy) currentClosestEnemy = enemy;\n      const distanceToEnemy = this.getDistanceToTarget(enemy);\n      const distanceToCurrentClosestEnemy = this.getDistanceToTarget(currentClosestEnemy);\n      if (distanceToEnemy < distanceToCurrentClosestEnemy) {\n        currentClosestEnemy = enemy;\n      }\n    });\n    return currentClosestEnemy;\n  }\n\n  getDistanceToTarget(target) {\n    const targetPos = target.getPosition()\n    return Helper.calculatePath(this.actor.game, targetPos, this.actor.getPosition(), 8).length;\n  }\n\n  getTargetPosition () {\n    return this.findClosestEnemy().getPosition();\n  }\n\n  getEquippedWeapon() {\n    const equippedWeapons = this.actor.getEquipedWeapons();\n    return equippedWeapons[0];\n  }\n\n  constructActionClassAndParams () {\n    const equippedWeapon = this.getEquippedWeapon();\n    const targetPosition = this.getTargetPosition();\n    const positions = equippedWeapon.getPositionsInShape(targetPosition);\n    this.actor.activateCursor(positions);\n    this.actor.updateAllCursorNodes([\n      {key: 'fill', value: COLORS.red}, \n      {key: 'stroke', value: 'transparent'}, \n    ]);\n    return [\n      Say,\n      {message: 'I am telegraphing my next attack'}\n    ]\n  }\n}\n","import TelegraphRangedAttack from './TelegraphRangedAttack';\n\nexport default class TelegraphRangedAttackThroughCover extends TelegraphRangedAttack {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.accuracyToAttackThreshold = -1;\n  }\n}\n","import { Say } from '../../../Actions/Say';\nimport Behavior from './Behavior';\n\nexport default class Wait extends Behavior {\n  constructor({ ...args }) {\n    super({ ...args });\n  }\n\n  isValid () {\n    return true\n  }\n\n  constructActionClassAndParams () {\n    return [\n      Say,\n      {message: '*breathes*'}\n    ]\n  }\n}\n","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Gnasher = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Gnasher',\n  passable: true,\n  attackRange: 4,\n  magazineSize: 2,\n  baseRangedAccuracy: 0.9,\n  baseRangedDamage: 3,\n  attackDamage: 0,\n  pos,\n  shapePattern: Constant.CLONE_PATTERNS.square,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'G',\n    color: COLORS.base03,\n    background: COLORS.green,\n  },\n});\n","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const HammerBurst = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Hammer Burst',\n  passable: true,\n  attackRange: 12,\n  magazineSize: 4,\n  baseRangedAccuracy: 0.85,\n  baseRangedDamage: 2,\n  attackDamage: 2,\n  pos,\n  shapePattern: Constant.CLONE_PATTERNS.filledClover,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'Hb',\n    color: COLORS.base3,\n    background: COLORS.gray,\n  },\n});\n","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const GrenadeThrower = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Grenade Thrower',\n  passable: true,\n  attackRange: 12,\n  magazineSize: 2,\n  baseRangedAccuracy: 0.9,\n  baseRangedDamage: 0,\n  attackDamage: 0,\n  pos,\n  shapePattern: Constant.CLONE_PATTERNS.bigSquare,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'Gb',\n    color: COLORS.base03,\n    background: COLORS.green,\n  },\n});\n","import {Ammo as AmmoEntity} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const ExplodingAmmo = (engine) => new AmmoEntity({\n  game: engine.game,\n  name: 'Ammo',\n  passable: true,\n  renderer: {\n    character: '|b',\n    sprite: '',\n    background: COLORS.gray,\n    color: COLORS.red,\n  },\n  flammability: 0,\n  explosivity: 2,\n});","export class Base {\n  constructor({ \n    game, \n    actor, \n    name = 'Effect', \n    lifespan = 100,\n    stepInterval = 100,\n    allowDuplicates = true,\n    onStart = () => null,\n    onStep = () => null,\n    onStop = () => null,\n    renderer = {background: 'green', color: 'white', character: '*'}\n  }) {\n    this.game = game\n    this.actor = actor\n    this.name = name\n    this.lifespan = lifespan\n    this.timeToLive = lifespan\n    this.stepInterval = stepInterval\n    this.allowDuplicates = allowDuplicates\n    this.timeSinceLastStep = 0;\n    this.onStart = onStart\n    this.onStep = onStep\n    this.onStop = onStop\n    this.renderer = renderer\n  }\n}","import {Base} from './Base';\n\nexport class MeleeDamage extends Base {\n  constructor({buffValue = 1, ...args}) {\n    super({ ...args });\n    this.name = 'Melee Damage';\n    this.allowDuplicates = false\n    this['actor_background'] = this.actor.renderer.background;\n    this['actor_color'] = this.actor.renderer.color;\n    this['attackDamage'] = this.actor.attackDamage;\n    this.renderer = {\n      color: '#424242',\n      background: '#A89078',\n      character: ''\n    };\n    this.onStart = () => {\n      this.actor.attackDamage += buffValue;\n      this.actor.renderer.background = this['actor_color']\n      this.actor.renderer.color = this['actor_background']\n    }\n    this.onStop = () => {\n      this.actor.attackDamage = this['attackDamage'];\n      this.actor.renderer.color = this['actor_color']\n      this.actor.renderer.background = this['actor_background']\n    }\n  }\n}","import * as Behaviors from '../../../Entities/AI/Behaviors';\nimport { COLORS } from '../theme';\nimport * as Helper from '../../../../helper';\nimport * as Constant from '../../../constants';\nimport {JacintoAI} from '../../../Entities/index';\nimport { ContainerSlot } from '../../../Entities/Containing';\nimport { Gnasher } from '../../../Items/Weapons/Gnasher';\nimport { HammerBurst } from '../../../Items/Weapons/HammerBurst';\nimport { GrenadeThrower } from '../../../Items/Weapons/GrenadeThrower';\nimport { Ammo } from '../../../Items/Pickups/Ammo';\nimport { ExplodingAmmo } from '../../../Items/Pickups/ExplodingAmmo';\nimport { SandSkin } from '../../../StatusEffects/SandSkin';\nimport { MeleeDamage } from '../../../StatusEffects/MeleeDamage';\n\nexport function addWretch (mode, pos) {\n  addGrubToMapWithStats(mode, pos, GRUB_STATS.wretch())\n}\nexport function addDrone (mode, pos) {\n  addGrubToMapWithStats(mode, pos, GRUB_STATS.drone())\n}\nexport function addDroneGrenadier (mode, pos) {\n  addGrubToMapWithStats(mode, pos, GRUB_STATS.drone_grenadier())\n}\nexport function addHunter (mode, pos) {\n  addGrubToMapWithStats(mode, pos, GRUB_STATS.hunter())\n}\nexport function addScion (mode, pos) {\n  addGrubToMapWithStats(mode, pos, GRUB_STATS.scion())\n}\nexport function addSkorge (mode, pos) {\n  addGrubToMapWithStats(mode, pos, GRUB_STATS.scion())\n}\nexport function addRandomGrub (mode, pos) {\n  addRandomBasicGrubToMap(mode, pos)\n}\n\nconst GRUB_STATS = {\n  wretch: () => {\n    return {\n      name: 'Wretch',\n      renderer: {\n        character: Helper.getRandomInArray(['w']),\n        color: COLORS.flesh1,\n        background: COLORS.flesh3,\n        sprite: '',\n      },\n      durability: 1,\n      attackDamage: 1,\n      behaviors: [\n        new Behaviors.MoveTowardsEnemy({repeat: 5}),\n        new Behaviors.Telegraph({repeat: 1, attackPattern: Constant.CLONE_PATTERNS.clover}),\n        new Behaviors.ExecuteAttack({repeat: 1}),\n      ],\n    }\n  },\n  drone: () => {\n    return {\n      name: 'Drone',\n      renderer: {\n        character: 'd',\n        color: COLORS.flesh2,\n        background: COLORS.flesh1,\n        sprite: '',\n      },\n      durability: 3,\n      attackDamage: 1,\n      behaviors: [\n        new Behaviors.MoveTowardsEnemy({repeat: 5}),\n        new Behaviors.TelegraphRangedAttack({repeat: 1}),\n        new Behaviors.ExecuteAttack({repeat: 1}),\n      ],\n      loadout: {\n        equipmentCreators: [Gnasher],\n        inventoryCreators: [{amount: 100, creator: Ammo}]\n      },\n    }\n  },\n  drone_grenadier: () => {\n    return {\n      name: 'Grenadier',\n      renderer: {\n        character: 'db',\n        color: COLORS.flesh2,\n        background: COLORS.flesh1,\n        sprite: '',\n      },\n      durability: 3,\n      attackDamage: 1,\n      behaviors: [\n        new Behaviors.MoveTowardsEnemy({repeat: 1}),\n        new Behaviors.TelegraphRangedAttackThroughCover({repeat: 1}),\n        new Behaviors.ExecuteRangedAttack({repeat: 1}),\n      ],\n      loadout: {\n        equipmentCreators: [GrenadeThrower],\n        inventoryCreators: [{amount: 10, creator: ExplodingAmmo}]\n      },\n    }\n  },\n  hunter: () => {\n    return {\n      name: 'Hunter',\n      renderer: {\n        character: 'h',\n        color: COLORS.flesh2,\n        background: COLORS.flesh1,\n        sprite: '',\n      },\n      durability: 3,\n      attackDamage: 1,\n      behaviors: [\n        new Behaviors.MoveTowardsCover({repeat: 5}),\n        new Behaviors.Wait({repeat: 1}),\n        new Behaviors.TelegraphRangedAttack({repeat: 1}),\n        new Behaviors.ExecuteRangedAttack({repeat: 1}),\n        new Behaviors.TelegraphRangedAttack({repeat: 1}),\n        new Behaviors.ExecuteRangedAttack({repeat: 1}),\n      ],\n      loadout: {\n        equipmentCreators: [HammerBurst],\n        inventoryCreators: [{amount: 100, creator: Ammo}]\n      },\n    }\n  },\n  scion: () => {\n    return {\n      name: 'Scion',\n      renderer: {\n        character: 'S',\n        color: COLORS.flesh2,\n        background: COLORS.flesh1,\n        sprite: '',\n      },\n      durability: 10,\n      attackDamage: 4,\n      behaviors: [\n        new Behaviors.MoveTowardsEnemy({repeat: 5}),\n        new Behaviors.Telegraph({\n          repeat: 1,\n          attackPattern: Constant.CLONE_PATTERNS.big_circle,\n          color: COLORS.blue,\n        }),\n        new Behaviors.ExecuteStatusEffectOnAllies({\n          repeat: 1, \n          effectClass: MeleeDamage,\n          effectDefaults: {\n            buffValue: 5,\n            lifespan: Constant.ENERGY_THRESHOLD * 10,\n            stepInterval: Constant.ENERGY_THRESHOLD,\n            processDelay: 200\n          },\n        }),\n        new Behaviors.Telegraph({repeat: 1, attackPattern: Constant.CLONE_PATTERNS.clover}),\n        new Behaviors.ExecuteAttack({repeat: 1}),\n      ],\n    }\n  },\n  skorge: () => {\n    return {\n      renderer: {\n        sprite: '',\n        character: 'S',\n        color: COLORS.flesh1,\n        background: COLORS.base04,\n      },\n      name: 'Skorge',\n      durability: 40,\n      attackDamage: 8,\n      behaviors: [\n        new Behaviors.MoveTowardsEnemy({repeat: 5}),\n        new Behaviors.Telegraph({repeat: 1, attackPattern: Constant.CLONE_PATTERNS.clover}),\n        new Behaviors.ExecuteAttack({repeat: 1}),\n      ],\n    }\n  },\n};\n\nconst createBaseGrubStats = (mode, pos) => {\n  return {\n    pos,\n    game: mode.game,\n    faction: 'LOCUST',\n    enemyFactions: ['COG'],\n    equipment: Constant.EQUIPMENT_LAYOUTS.gear(),\n    onDestroy: (actor) => {\n      const chance = Math.random();\n      if (chance <= 0.05) {\n        mode.addAmmoLoot(actor.getPosition());\n      } else if (chance <= 0.1) {\n        mode.addGrenadeLoot(actor.getPosition());\n      }\n    },\n  }\n}\n\nexport function createRandomBasicGrub(mode, pos) {\n  const createStats = Helper.getRandomInArray(\n    Object\n    .keys(GRUB_STATS)\n    .filter((key) => key !== 'skorge')\n    .map((key) => GRUB_STATS[key])\n  )\n  return createNewJacintoAIEntity({\n    ...createBaseGrubStats(mode, pos),\n    ...createStats(),\n  });\n}\n\nfunction createGrubWithStats(mode, pos, stats) {\n  return createNewJacintoAIEntity({\n    ...createBaseGrubStats(mode, pos),\n    ...stats,\n  });\n}\n\nfunction createNewJacintoAIEntity(params) {\n  const {loadout, ...entityParams} = params;\n  const entity = new JacintoAI({...entityParams})\n\n  if (loadout) equipAndFillInventory(entity, loadout)\n  return entity;\n}\n\nfunction equipAndFillInventory(entity, loadout) {\n  const {equipmentCreators, inventoryCreators} = loadout;\n  const engine = entity.game.engine;\n  const container = inventoryCreators.map(({amount, creator}) => createInventorySlot(engine, amount, creator));\n  entity.container = container;\n\n  equipmentCreators.forEach((creator) => {\n    const equipmentPiece = creator(engine);\n    entity.equip(equipmentPiece.equipmentType, equipmentPiece);\n  })\n}\n\nfunction createInventorySlot (engine, amount, creator) {\n  const item = Array(amount).fill('').map(() => creator(engine));\n  return new ContainerSlot({\n    itemType: item[0].name,\n    items: item,\n  });\n} \n\nfunction addRandomBasicGrubToMap (mode, pos) {\n  const entityCreator = () => createRandomBasicGrub(mode, pos)\n  addEntityToMapWithStatsUsingCreator(mode, entityCreator)\n}\n\nfunction addGrubToMapWithStats (mode, pos, stats) {\n  const entityCreator = () => createGrubWithStats(mode, pos, stats)\n  addEntityToMapWithStatsUsingCreator(mode, entityCreator)\n}\n\nfunction addEntityToMapWithStatsUsingCreator (mode, entityCreator) {\n  const entity = entityCreator();\n  if (mode.game.placeActorOnMap(entity)) {\n    mode.game.engine.addActor(entity);\n  };\n}\n","import * as Constant from '../../constants';\nimport * as Helper from '../../../helper';\nimport * as Item from '../../items';\nimport * as MapHelper from '../../Maps/helper';\nimport { generate as generateBuilding } from '../../Maps/generator';\nimport * as CoverGenerator from '../../Maps/coverGenerator';\nimport { EmergenceHole } from '../../Entities/index';\nimport { Mode } from '../default';\nimport SOUNDS from '../../sounds';\nimport * as _ from 'lodash';\nimport {COLORS, TILE_KEY} from './theme';\nimport { Ammo } from '../../Items/Pickups/Ammo';\nimport { Grenade } from '../../Items/Weapons/Grenade';\nimport * as LocustActors from './Actors/Grubs';\nconst MAP_DATA = require('../../Maps/castle.json');\n\nexport class Jacinto extends Mode {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.data = {\n      level: 1,\n      highestLevel: null,\n      turnCount: 0,\n    };\n    this.dataByLevel = [\n      {\n        enemies: [\n          ...Array(1).fill('Scion'),\n          ...Array(2).fill('Wretch'),\n        ],\n        // enemies: Array(1).fill('DroneGrenadier'),\n        // enemies: Array(1).fill('Drone'),\n        // enemies: Array(3).fill('Wretch'),\n        emergenceHoles: 0,\n        ammoLoot: 2,\n        grenadeLoot: 1,\n      },\n      {\n        enemies: Array(6).fill('RandomGrub'),\n        emergenceHoles: 3,\n        ammoLoot: 1,\n        grenadeLoot: 0,\n      },\n      {\n        enemies: Array(12).fill('RandomGrub'),\n        emergenceHoles: 0,\n        ammoLoot: 3,\n        grenadeLoot: 1,\n      },\n      {\n        enemies: [],\n        emergenceHoles: 5,\n        ammoLoot: 2,\n        grenadeLoot: 0,\n      },\n      {\n        enemies: Array(10).fill('RandomGrub'),\n        emergenceHoles: 4,\n        ammoLoot: 1,\n        grenadeLoot: 0,\n      },\n      {\n        enemies: [],\n        emergenceHoles: 12,\n        ammoLoot: 20,\n        grenadeLoot: 5,\n      },\n      {\n        enemies: [...Array(4).fill('RandomGrub'), 'Skorge'],\n        emergenceHoles: 6,\n        ammoLoot: 20,\n        grenadeLoot: 2,\n      },\n    ]\n  }\n\n  createHorizontalRoad (y, length, x = 0) {\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      { x, y},\n      4,\n      length,\n      'ROAD_EDGE',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      { x, y: y + 1},\n      2,\n      length,\n      'ROAD',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n  }\n\n  createVerticalRoad (x, length, y = 0) {\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      { x, y },\n      length,\n      3,\n      'ROAD_EDGE',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      { x: x + 1, y },\n      length,\n      1,\n      'ROAD',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n  }\n\n  createVerticalRoadGoingNorthAndSouth = () => (x) => this.createVerticalRoad(x, this.game.mapHeight);\n  createVerticalRoadGoingNorth = (fromY) => (x) => this.createVerticalRoad(x, (fromY) + 1);\n  createVerticalRoadGoingSouth = (fromY) => (x) => this.createVerticalRoad(x, (this.game.mapHeight - fromY) - 1, (fromY) + 1);\n\n  createCityBlockLevel (numberOfVerticalRoads, numberOfBuildings) {\n    // Generates the main road\n    const mainRoadY = this.game.mapHeight / 4\n    this.createHorizontalRoad(mainRoadY, this.game.mapWidth)\n\n    // Generates roads to run the height of the map\n    Array(numberOfVerticalRoads).fill('').forEach(() => {\n      const x = Helper.getRandomIntInclusive(0, this.game.mapWidth);\n      const generateRoad = Helper.getRandomInArray([\n        this.createVerticalRoadGoingNorth(mainRoadY),\n        this.createVerticalRoadGoingSouth(mainRoadY),\n        this.createVerticalRoadGoingNorthAndSouth(mainRoadY),\n      ]);\n      generateRoad(x)\n    })\n\n    Array(numberOfBuildings).fill('').forEach(() => {\n      let groundTiles = this.getEmptyGroundTileKeys()\n      let pos = Helper.getRandomInArray(groundTiles);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      const unitCount = Helper.getRandomIntInclusive(1, 6);\n      // const unitCount = 4\n      const unitSize = Helper.getRandomInArray([3, 4, 6]);\n      generateBuilding(this.game.map, posXY[0], posXY[1], unitCount, unitSize);\n    })\n  }\n\n  initialize () {\n    super.initialize();\n    this.game.tileKey = TILE_KEY\n    this.game.createEmptyLevel();\n    this.game.initializeMapTiles();\n    // this.game.createCustomLevel(MAP_DATA);\n\n    this.setWaveData();\n\n    // Generates a safe zone on left-hand edge of map for player to start\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      { x: 0, y: 0 },\n      this.game.mapHeight,\n      1,\n      'SAFE',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n  \n    const numberOfVerticalRoads = Helper.getRandomIntInclusive(0, 5);\n    const numberOfBuildings = Helper.getRandomIntInclusive(0, 10);\n    this.createCityBlockLevel(numberOfVerticalRoads, numberOfBuildings);\n\n    let floorTiles = Object.keys(this.game.map).filter((key) => this.game.map[key].type === 'FLOOR')\n\n    this.placePlayersInSafeZone();\n    const player = this.game.getFirstPlayer();\n    if (player) player.upgrade_points += 1;\n\n    // adding emergence holes\n    for (let index = 0; index < this.data.emergenceHoles; index++) {\n      let pos = Helper.getRandomInArray(this.getEmptyTileKeys());\n      if (!pos) break;\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addEmerenceHole({ x: posXY[0], y: posXY[1] });\n    }\n\n    // adding cover blocks\n    const numberOfCoverStructures = 5 + this.data.enemies.length;\n    \n    let coverEligibleTiles = Object.keys(this.game.map).filter((key) =>  ['ROAD', 'DOOR', 'EMERGENCE_GROUND'].includes(this.game.map[key].type))\n    for (let index = 0; index < numberOfCoverStructures; index++) {\n      let pos = Helper.getRandomInArray(coverEligibleTiles);\n      if (!pos) break;\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      const position = { x: posXY[0], y: posXY[1] };\n      CoverGenerator.generateRandom(position, this.game);\n    }\n\n    // adding  ammo loot\n    for (let index = 0; index < this.data.ammoLoot; index++) {\n      let pos = Helper.getRandomInArray(floorTiles);\n      if (!pos) break;\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addAmmoLoot({ x: posXY[0], y: posXY[1] });\n    }\n\n    // adding  grenade loot\n    for (let index = 0; index < this.data.grenadeLoot; index++) {\n      let pos = Helper.getRandomInArray(floorTiles);\n      if (!pos) break;\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addGrenadeLoot({ x: posXY[0], y: posXY[1] });\n    }\n\n      // adding enemies\n    this.data.enemies.forEach((enemyName) => {\n      let pos = Helper.getRandomInArray(this.getEmptyGroundTileKeys());\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      LocustActors[`add${enemyName}`](this, { x: posXY[0], y: posXY[1] });\n    })\n  }\n\n  // TODO curry these funcs\n  getEmptyTileKeys (keys = Object.keys(this.game.map)) {\n    return keys.filter((key) => !!!this.game.map[key].entities.length)\n  }\n\n  getEmptyGroundTileKeys (keys = Object.keys(this.game.map)) {\n    return this.getEmptyTileKeys(keys).filter((key) => this.game.map[key].type === 'GROUND')\n  }\n\n  getEmptyFloorTileKeys (keys = Object.keys(this.game.map)) {\n    return this.getEmptyTileKeys(keys).filter((key) => this.game.map[key].type === 'FLOOR')\n  }\n\n  getPlayers () {\n    return this.game.engine.actors.filter((actor) => actor.entityTypes.includes('PLAYING'))\n  }\n\n  updateUI() {\n    this.createOrUpdateInfoBlock(\n      'gameProgress',\n      { \n        text: `${this.data.level - 1} of  ${this.dataByLevel.length} city blocks cleared.` \n      }\n    );\n  }\n\n  checkCoverAnimations() {\n    this.game.engine.actors.forEach((actor) => {\n      if (actor.entityTypes.includes('USES_COVER')) {\n        if (actor.resetCoverAnimations());\n      }\n    })\n  }\n\n  update () {\n    super.update();\n    this.checkCoverAnimations();\n    this.updateUI();\n    if (this.hasWon()) {\n      this.game.toWin()\n    }\n    if (this.hasLost()) {\n      SOUNDS.lose.play();\n      this.game.toLose();\n      this.reset();\n      this.game.initializeGameData();\n    }\n    if (this.levelComplete()) {\n      this.nextLevel();\n      this.setWaveData();\n\n      // a hack to persist player data\n      // this would persist all existing actors however\n      this.initialize();\n      // this.game.initializeGameData();\n    }\n  }\n  \n  //Extras\n  setLevel (level) {\n    this.data.level = level;\n    this.data.turnCount = 0;\n  }\n\n  nextLevel () {\n    this.setLevel(this.data.level + 1);\n  }\n\n  reset () {\n    this.setLevel(1);\n    this.initialize();\n  }\n\n  setWaveData () {\n    const level = this.data.level - 1\n    const nextLevelData = _.get(this.dataByLevel, level, {});\n    this.data = {...this.data, ...nextLevelData}\n  }\n\n  levelComplete () {\n    const playerOnExit = this.playerIsOnExit();\n    const enemiesDefeated = this.enemiesDefeated();\n    if (enemiesDefeated) {\n      this.activateExitTiles();\n    }\n    return playerOnExit && enemiesDefeated; \n  }\n\n  enemiesDefeated () {\n    return this.game.engine.actors.filter((actor) => actor['faction'] === 'LOCUST').length <= 0\n  }\n\n  hasWon () {\n    return this.data.level > this.dataByLevel.length;\n  }\n\n  hasLost () {\n    let players = this.getPlayers()\n    if (!players.length) return true;\n    else if (players.length) {\n      if (players[0].durability <= 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  addEmerenceHole(pos) {\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      {x: pos.x - 1, y: pos.y - 1},\n      3,\n      3,\n      'EMERGENCE_GROUND',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    // create new fire actor and place\n    let entity = new EmergenceHole({\n      name: 'Hole',\n      pos,\n      game: this.game,\n      passable: true,\n      renderer: {\n        character: '',\n        sprite: '',\n        color: COLORS.locust1,\n        background: COLORS.base04,\n      },\n      timeToSpread: 1,\n      spreadCount: 3,\n      durability: 1,\n      faction: 'LOCUST',\n      enemyFactions: ['COG'],\n      speed: Constant.ENERGY_THRESHOLD,\n      getSpawnedEntity: (spawnPosition) => LocustActors.createRandomBasicGrub(this, spawnPosition),\n      onDestroy: () => this.game.map[Helper.coordsToString(pos)].type = 'EMERGENCE_DESTROYED',\n    });\n\n    if (this.game.placeActorOnMap(entity)) {\n      this.game.engine.addActor(entity);\n      this.game.draw();\n    };\n  }\n\n  createAmmoStack(amount, pos) {\n    return Array(amount).fill('').map((i) => {\n      const ammo = Ammo(this.game.engine);\n      ammo.pos = pos;\n      return ammo;\n    });\n  }\n\n  addAmmoLoot (pos) {\n    this.createAmmoStack(5, pos).forEach((entity) => {\n      this.game.placeActorOnMap(entity)\n    })\n  }\n\n  addGrenadeLoot (pos) {\n    const entity = Grenade(this.game.engine, 6);\n    entity.pos = pos;\n    this.game.placeActorOnMap(entity)\n  }\n\n  placePlayersInSafeZone () {\n    let players = this.getPlayers()\n    const keys = Object.keys(this.game.map).filter((key) => this.game.map[key].type == 'SAFE');\n    players.forEach((player) => {\n      const key = keys.shift();\n      if (key) {\n        const position = {\n          x: parseInt(key.split(',')[0]),\n          y: parseInt(key.split(',')[1]),\n        }\n        player.pos = {x: position.x, y: player.pos.y};\n        this.game.placeActorOnMap(player)\n      }\n    })\n  }\n\n  playerIsOnExit() {\n    const player = this.game.getFirstPlayer();\n    if (player) {\n      const tile = this.game.map[Helper.coordsToString(player.pos)];\n      if (tile.type === 'EXIT') {\n        return true;\n      }\n    }\n    return false\n  }\n\n  activateExitTiles() {\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      { x: this.game.mapWidth - 3, y: 0 },\n      this.game.mapHeight,\n      3,\n      'EXIT',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n  }\n\n}\n","import { Jacinto } from './Jacinto/jacinto'\n\nexport default {\n  Jacinto,\n}","import React from 'react';\nimport * as ROT from 'rot-js';\nimport * as _ from 'lodash';\nimport * as Constant from './constants';\nimport * as Helper from '../helper';\nimport * as Message from './message';\nimport { Display } from './Display/konvaCustom';\nimport Mode from './Modes/index';\nimport * as MapHelper from './Maps/helper';\n\n// const MAP_DATA = require('./Maps/castle.json');\n// const SOLANGE = require('./Data/solange.json');\n\nconst MAP_WIDTH = 50;\nconst MAP_HEIGHT = 25;\n\nconst TILE_OFFSET = 0;\n\nconst TILE_WIDTH = 26;\nconst TILE_HEIGHT = TILE_WIDTH;\n\nconst canvasWidth = (MAP_WIDTH * TILE_WIDTH) + TILE_OFFSET;\nconst canvasHeight = (MAP_HEIGHT * TILE_HEIGHT) + TILE_OFFSET;\n\nexport class Game {\n  constructor({\n    engine = null,\n    map = {},\n    entityMap = {},\n    entityDictionary = {},\n    mapInitialized = false,\n    tileMap = {},\n    mapWidth = MAP_WIDTH,\n    mapHeight = MAP_HEIGHT,\n    cameraWidth = MAP_WIDTH,\n    cameraHeight = MAP_HEIGHT,\n    tileWidth = TILE_WIDTH,\n    tileHeight = TILE_HEIGHT,\n    tileOffset = TILE_OFFSET,\n    getSelectedCharacter = () => false,\n    spriteMode = true,\n    tileKey = Constant.TILE_KEY,\n    mode = Mode.Flume,\n    messages = [],\n  }) {\n    this.engine = engine;\n    this.map = map;\n    this.entityMap = entityMap;\n    this.entityDictionary = entityDictionary;\n    this.mapInitialized = mapInitialized;\n    this.tileMap = tileMap;\n    this.mapWidth = mapWidth;\n    this.mapHeight = mapHeight;\n    this.cameraWidth = cameraWidth;\n    this.cameraHeight = cameraHeight;\n    this.tileWidth = tileWidth;\n    this.tileHeight = tileHeight;\n    this.tileOffset = tileOffset;\n    this.display = new Display({\n      containerId: 'display',\n      width: canvasWidth,\n      height: canvasHeight,\n      tileWidth: tileWidth,\n      tileHeight: tileHeight,\n      tileOffset: tileOffset,\n      game: this,\n    });\n    this.spriteMode = spriteMode;\n    this.tileKey = tileKey;\n    this.mode = new mode({game: this});\n    this.messages = messages;\n    this.getSelectedCharacter = getSelectedCharacter;\n  }\n\n  initializeMode () {\n    this.mode.initialize();\n  }\n  \n  updateMode () { // this is run every game turn\n    this.mode.update();\n  }\n\n  randomlyPlaceActorOnMap(actor) {\n    let kill = 0;\n    let placed = false;\n    while (!placed) {\n      let pos = Helper.getRandomPos(this.map).coordinates\n      if (this.canOccupyPosition(pos, actor)) {\n        let tile = this.map[Helper.coordsToString(pos)]\n        actor.pos = { ...pos }\n        tile.entities.push(actor);\n        placed = true;\n      }\n      kill += 1;\n      if (kill >= 100) {\n        placed = true;\n      }\n    }\n    return placed;\n  }\n\n  randomlyPlaceAllActorsOnMap() {\n    this.engine.actors.forEach((actor) => {\n      this.randomlyPlaceActorOnMap(actor);\n    })\n  }\n\n  placeActorsOnMap() {\n    this.engine.actors.forEach((actor) => {\n      let tile = this.map[Helper.coordsToString(actor.pos)]\n      if (tile) {\n        tile.entities.push(actor);\n      } else {\n        console.log(`could not place ${actor.id}: ${actor.name} on map`);\n      }\n    })\n  }\n\n  placeActorOnMap(actor) {\n    let tile = this.map[Helper.coordsToString(actor.pos)]\n    if (tile) {\n      tile.entities.push(actor);\n      return true\n    } else {\n      console.log(`could not place ${actor.id}: ${actor.name} on map`);\n      return false\n    }\n  }\n\n  removeActorFromMap (actor) {\n    let tile = this.map[Helper.coordsToString(actor.pos)]\n    if (!tile) return false;\n    this.map[Helper.coordsToString(actor.pos)].entities = tile.entities.filter((ac) => ac.id !== actor.id);\n    return true;\n  }\n\n  createLevel () {\n    let digger = new ROT.Map.Arena(this.mapWidth, this.mapHeight);\n    // let digger = new ROT.Map.Rogue();\n    // let digger = new ROT.Map.DividedMaze();\n    // let digger = new ROT.Map.EllerMaze();\n    // let digger = new ROT.Map.Cellular();\n    // let digger = new ROT.Map.Digger(this.mapWidth, this.mapHeight);\n    // let digger = new ROT.Map.IceyMaze();\n    // let digger = new ROT.Map.Uniform();\n    let freeCells = [];\n    let digCallback = function (x, y, value) {      \n      let key = x + \",\" + y;\n      let type = 'GROUND';\n      if (value) { \n        type = 'WALL';\n        // type = 'WATER';\n      }\n      MapHelper.addTileToMap({map: this.map, key, tileKey: this.tileKey, tileType: type})\n      freeCells.push(key);\n    }\n    digger.create(digCallback.bind(this));\n  }\n\n  createEmptyLevel () {\n    for (let i = 0; i < this.mapHeight; i ++) {\n      for (let j = 0; j < this.mapWidth; j ++) {\n        const key = `${j},${i}`\n        // let type = 'GROUND';\n        let type = Helper.getRandomInArray(['GROUND', 'GROUND_ALT', 'GROUND_ALT', 'GROUND_ALT']);\n        MapHelper.addTileToMap({map: this.map, key, tileKey: this.tileKey, tileType: type})\n      }\n    }\n  }\n\n  createCustomLevel (data) {\n    Object.keys(data.tiles).forEach((key, i) => {\n      const tile = data.tiles[key];\n      let type = tile.data.type;\n      if (!type) {\n        type = 'GROUND';\n      }\n      MapHelper.addTileToMap({map: this.map, key, tileKey: this.tileKey, tileType: type})\n    })\n  }\n\n  canOccupyPosition (pos, entity = {passable: false}) {\n    let result = false;\n    let targetTile = this.map[Helper.coordsToString(pos)];\n    if (targetTile) {\n      let hasImpassableEntity = targetTile.entities.filter((entity) => !entity.passable).length > 0;\n      if (!hasImpassableEntity || entity.passable) {\n        let tile = this.map[Helper.coordsToString(pos)];\n        if (this.tileKey[tile.type].passable) {\n          result = true;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  rangedCursorCanOccupyPosition (pos, entity = {passable: false}) {\n    let result = false;\n    let targetTile = this.map[Helper.coordsToString(pos)];\n    if (targetTile) {\n      let tile = this.map[Helper.coordsToString(pos)];\n      if (this.tileKey[tile.type].passable) {\n        result = true;\n      }\n    }\n\n    return result;\n  }\n\n  cursorCanOccupyPosition(pos) {\n    let result = false;\n    let targetTile = this.map[Helper.coordsToString(pos)];\n    if (targetTile) {\n      result = true;\n    }\n\n    return result;\n  }\n\n  show (document) {\n    this.display.initialize(document)\n  }\n\n  getRenderMap(fullMap, referencePosition, renderWidth, renderHeight, fullWidth, fullHeight) { \n    // create an object with only tile keys that should be rendered (around player)\n    // renderWidth/Height measured in tiles\n    // reference positon usually based on player pos\n    // position from fullMap key should be translated to 0,0 based on referencePos\n    \n    const renderPaddingX = Math.floor((renderWidth / 2));\n    const renderPaddingY = Math.floor((renderHeight / 2));\n    let offsetX = 0;\n    let offsetY = 0;\n    if (referencePosition) {\n      offsetX = referencePosition.x - renderPaddingX;\n      offsetY = referencePosition.y - renderPaddingY;\n    }\n    offsetX = Helper.clamp(offsetX, 0, fullWidth - renderWidth);\n    offsetY = Helper.clamp(offsetY, 0, fullHeight - renderHeight);\n    \n    let result = {}\n    for (let key in fullMap) {\n      let parts = key.split(\",\");\n      let x = parseInt(parts[0]);\n      let y = parseInt(parts[1]);\n      let finalX = x - offsetX;\n      let finalY = y - offsetY;\n      if (finalX >= 0 && finalX <= renderWidth) {\n        if (finalY >= 0 && finalY <= renderHeight) {\n          result[`${finalX},${finalY}`] = fullMap[key]\n        }\n      }\n    }\n    return result\n  }\n\n  processTileMap (callback) {\n    // const map = this.map;\n    // const map = this.getRenderMap(this.map, this.getPlayerPosition(), this.mapWidth, this.mapHeight);\n    // const map = this.getRenderMap(this.map, this.getPlayerPosition(), 50, 25, this.mapWidth, this.mapHeight);\n    const map = this.getRenderMap(this.map, this.getPlayerPosition(), this.cameraWidth, this.cameraHeight, this.mapWidth, this.mapHeight);\n    for (let key in map) {\n      let parts = key.split(\",\");\n      let x = parseInt(parts[0]);\n      let y = parseInt(parts[1]);\n      let tile = map[key];\n      // let { foreground, background } = this.tileKey[tile.type]\n      // Proto code to handle tile animations\n      let tileRenderer = this.tileKey[tile.type]\n      let nextFrame = this.animateTile(tile, tileRenderer);\n      let character = nextFrame.character;\n      let foreground = nextFrame.foreground;\n      let background = nextFrame.background;\n      \n      const renderedEntities = tile.entities.filter((entity) => entity.entityTypes.includes('RENDERING'))\n      if (renderedEntities.length > 0) {\n        let entity = renderedEntities[renderedEntities.length - 1]\n        nextFrame = this.animateEntity(entity);\n\n        character = nextFrame.character\n        foreground = nextFrame.foreground\n        if (nextFrame.background) {\n          background = nextFrame.background\n        }\n      }\n      callback(key, x, y, character, foreground, background);          \n    }\n  }\n\n  initializeMapTiles () {\n    if (this.mapInitialized) return false;\n    this.mapInitialized = true;\n    this.processTileMap((key, x, y, character, foreground, background) => {\n      let node = this.display.createTile(x, y, character, foreground, background);\n      this.tileMap[key] = node;\n    });\n  }\n\n  getPlayers () {\n    return this.engine.actors.filter((actor) => actor.entityTypes.includes('PLAYING'))\n  }\n\n  getFirstPlayer () {\n    const players = this.getPlayers();\n    if (players.length) return players[0]\n    return null\n  }\n\n  getPlayerPosition () {\n    const player = this.getFirstPlayer();\n    if (player) return player.getPosition();\n    return null\n  }\n  \n  draw () {\n    this.processTileMap((key, x, y, character, foreground, background) => {\n      this.display.updateTile(this.tileMap[key], character, foreground, background);\n    });\n    this.display.draw();\n  }\n\n  getEntityRenderer (renderer) {\n    // if sprite mode is on and the renderer has a sprite defined, use that\n    if (this.spriteMode && renderer.hasOwnProperty('sprite')) {\n      return {...renderer, character: renderer.sprite, foreground: renderer.color}\n      // return {character: renderer.sprite, foreground: renderer.background, background: ''}\n    }\n    // else us the ascii character\n    return {...renderer, foreground: renderer.color}\n  }\n\n  getTileRenderer (renderer) {\n    // if sprite mode is on and the renderer has a sprite defined, use that\n    if (this.spriteMode && renderer.hasOwnProperty('sprite')) {\n      return {...renderer, character: renderer.sprite}\n    }\n    // else us the ascii character\n    return renderer\n  }\n  \n  animateEntity (entity) {\n    let renderer = entity.getRenderer();\n    let { character, foreground, background } = this.getEntityRenderer(renderer)\n    if (renderer.animation) {\n      let frame = this.getEntityRenderer(renderer.animation[entity.currentFrame]);\n      character = frame.character;\n      foreground = frame.foreground;\n      background = frame.background;\n      entity.currentFrame = (entity.currentFrame + 1) % renderer.animation.length;\n    }\n    return {character, foreground, background}\n  }\n\n  animateTile (tile, renderer) {\n    let {character, foreground, background} = this.getTileRenderer(renderer)\n    if (renderer.animation) {\n      let frame = this.getTileRenderer(renderer.animation[tile.currentFrame]);\n      character = frame.character\n      foreground = frame.foreground;\n      background = frame.background;\n      tile.currentFrame = (tile.currentFrame + 1) % renderer.animation.length;\n    }\n    return {character, foreground, background}\n  }\n\n  addActor (actor, engine = this.engine) {\n    let isPlaced = this.placeActorOnMap(actor); // replace with placeActorOnMap\n    if (!isPlaced) { return false }\n    engine.actors.push(actor);\n    this.draw();\n    return true\n  }\n\n  placeAndDrawActor (actor) {\n    this.placeActorsOnMap(); // replace with placeActorOnMap\n    this.draw();\n  }\n\n  removeActor (actor) {\n    this.engine.actors = this.engine.actors.filter((ac) => ac.id !== actor.id);\n    // this.engine.currentActor = this.engine.actors.length - 1; // should remove need for this line\n    // this.engine.currentActor = (this.engine.currentActor) % this.engine.actors.length;\n    // this.engine.currentActor = (this.engine.currentActor + 1) % this.engine.actors.length;\n    this.removeActorFromMap(actor);\n    this.draw();\n  }\n\n  initializeUI (presserRef, document) {\n    this.show(document);\n    presserRef.current.focus();\n  }\n\n  initializeGameData () {\n    this.engine.game = this;\n    const selectedCharacter = this.getSelectedCharacter();\n    this.engine.actors = [selectedCharacter];\n    this.engine.actors.forEach((actor) => {\n      actor.game = this;\n    });\n    // this.createEmptyLevel();\n    // this.initializeMapTiles();\n    this.initializeMode();\n    this.draw();\n  }\n\n  initialize (presserRef, document) {\n    this.initializeUI(presserRef, document);\n    this.initializeGameData();\n    // hack to register sprite mode\n    if (this.spriteMode) {\n      setTimeout(() => {\n        this.spriteMode = false;\n        this.draw()\n      }, 500)\n      setTimeout(() => {\n        this.spriteMode = true;\n        this.draw()\n      }, 500)\n    }\n    // end hack\n  }\n\n  addMessage (text, type) {\n    const message = new Message.Message({text, type})\n    this.messages.push(message);\n  }\n}\n\n\n/************************** UI ********************************/\nexport const handleKeyPress = (event, engine) => {\n  if (!engine.isRunning) {\n    let actor = engine.actors[engine.currentActor];\n    let keymap = null;\n    try {\n      keymap = actor.getKeymap();\n    } catch (e) {\n      console.log('keypress error');\n      console.log(e);\n    }\n    if (keymap) {\n      let code = event.key;\n      if (!(code in keymap)) { return; }\n      const getAction = keymap[code];\n      const action = getAction();\n      // const action = keymap[code];\n      action.setAsNextAction();\n      engine.start();\n    }\n  }\n  return;\n}\n\nexport const DisplayElement = (presserRef, handleKeyPress, engine) => {\n  return (\n    <div\n      id='display'\n      ref={presserRef}\n      onKeyDown={(event) => handleKeyPress(event, engine)}\n      // onKeyUp={(event) => handleKeyPress(event, engine)}\n      tabIndex='0'\n    />\n  )\n}\n/************************** UI ********************************/\n","import React from 'react';\nimport { SCREENS } from '../Screen/constants';\nimport * as _ from 'lodash';\n\nclass Instructions extends React.Component {\n  render() {\n    const infoHeader = _.get(this.props.game, 'mode.infoHeader', null);\n    const infoBlocks = _.get(this.props.game, 'mode.infoBlocks', {});\n\n    return (\n      <div className=\"Instructions UI\">\n        {infoHeader && (<p className='flow-text'>{infoHeader}</p>)}\n        <div className='flow-text'>\n          <div \n            className='Instructions__block'\n            // onClick={() => this.props.setActiveScreen(SCREENS.TITLE)}\n            onClick={() => window.location.reload()}\n          >\n            <button className='btn btn-main'>\n              Restart\n            </button>\n          </div>\n          <div \n            className='Instructions__block'\n            onClick={() => this.props.toggleSpriteMode()}\n          >\n            <button className='btn btn-main'>\n              {\n                this.props.spriteMode ? (\n                  'ASCII mode'\n                ) : (\n                  'Sprite mode'\n                )\n              }\n            </button>\n          </div>\n          <div\n            className='Instructions__block'\n          >\n            <button data-target=\"jacinto_help\" className='btn btn-main modal-trigger'>\n              Help\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Instructions;","import React from 'react';\n\nfunction Button(props) {\n  let color = props['color'];\n  if (!color) color = 'grey';\n  return (\n    <button\n      onClick={props.onClick}\n      className={`Button btn ${color}`}\n    >\n      {props.children}  \n    </button>\n  )\n}\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\n\nclass Information extends React.Component {\n  render() {\n    let data = [\n      {\n        label: 'Wave',\n        value: `Current: ${this.props.game.mode.data.level}, Highest: ${this.props.game.mode.data.highestLevel}`,\n      },\n    ];\n\n    data = data.concat(\n      [\n        ...this.props.game.engine.actors.map((actor, index) => {\n          let result = {\n            label: actor.name,\n            // value: index,\n            value: `HP: ${actor.durability}, En/Sp: ${actor.energy}/${actor.speed}`,\n          };\n          if (index === this.props.game.engine.currentActor) {\n            result['color'] = 'red';\n          }\n          return result;\n        })\n      ]\n    )\n\n    return (\n      <div className=\"Information UI\">\n        {\n          data && (\n            data.map((item, index) => {\n              return (\n                <Button key={index} color={item['color']} onClick={() => null}>\n                  {`${item.label}: ${item.value}`}\n                </Button>\n              )\n            })\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Information;","import React from 'react';\n\nfunction Tooltip ({title = 'Effect', text = '', children}) {\n  return (\n    <div className=\"Tooltip\">\n      {children}\n      <div className=\"top\">\n        <h3>{title}</h3>\n        <p>{text}</p>\n        <i></i>\n      </div>\n    </div>\n  )\n}\n\nexport default Tooltip;\n","import React from 'react';\nimport * as _ from 'lodash';\nimport Tooltip from './Tooltip';\n\nfunction ResourceBlock({ resource, superScript, canPay }) {\n  const character = resource.renderer.sprite ? resource.renderer.sprite : resource.renderer.character\n  return (\n    <div className=\"ResourceBlock\" style={{\n      backgroundColor: canPay ? resource.renderer.background : '#616161',\n      color: canPay ? resource.renderer.color : '#bdbdbd',\n      borderColor: canPay ? resource.renderer.color : '#bdbdbd',\n      fontFamily: 'scroll-o-script',\n      width: superScript ? 'auto' : 20,\n    }}>\n      {`${superScript ? superScript + ' ' : ''}${character}`}\n    </div>\n  )\n}\n\nclass ActionBar extends React.Component {\n  render() {\n    return (  \n      <div className=\"ActionBar\">\n        <div className=\"CharacterActions\">\n          {\n            \n            this.props.keymap && (\n              Object.entries(this.props.keymap).map(([key, getAction], index) => {\n                const action = getAction();\n                const hidden = _.get(action, 'hidden', false);\n                const renderer = _.get(action, 'renderer', null);\n                const reqs = action.listPayableResources();\n\n                if (!hidden) {\n                  return (\n                    <Tooltip\n                      key={`${index}-label`}\n                      title={action.label}\n                      text={action.label + ` ${action.actor.name}`}\n                    >\n                      <div \n                        className=\"CharacterActions__item\"\n                        onClick={() => {\n                          action.setAsNextAction();\n                          if (!this.props.game.engine.isRunning) this.props.game.engine.start();\n                          this.props.game.refocus();\n                        }}\n                      >\n                        <div className=\"CharacterActions__item__label\">\n                          {key}\n                        </div>\n                        <div className=\"CharacterActions__item__content\" style={renderer && {\n                          backgroundColor: renderer.background,\n                          color: renderer.color,\n                          borderColor: renderer.color,\n                        }}>\n                          {action.label}\n                        </div>\n                        <div className=\"CharacterActions__item__resources\">\n                          {\n                            reqs.map((req, i) => {\n                              const numBlocks = req.getResourceCost();\n                              return numBlocks > 0 && (\n                                <ResourceBlock\n                                  key={`${i}-${req.name}-resource-block`}\n                                  superScript={numBlocks}\n                                  resource={req}\n                                  canPay={req.canPay}\n                                />\n                              )\n                            })\n                          }\n                        </div>\n                      </div>\n                    </Tooltip>\n                  )\n                }\n              })\n            )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ActionBar;","import React from 'react';\nimport * as _ from 'lodash';\nimport Tooltip from '../Tooltip';\nimport ActionBar from '../ActionBar';\n\nfunction Portrait ({actor}) {\n  return (\n    <div className=\"Portrait\" style={{\n      backgroundColor: actor.renderer.background, \n      color: actor.renderer.color,\n      borderColor: actor.renderer.color,\n    }}>\n      {actor.renderer.sprite ? actor.renderer.sprite : actor.renderer.character}\n    </div>\n  )\n}\n\nfunction StatusEffect ({effect}) {\n  return (\n    <div className=\"StatusEffects__effect\" style={{\n      backgroundColor: effect.renderer.background, \n      color: effect.renderer.color,\n      borderColor: effect.renderer.color,\n    }}>\n      {effect.renderer.sprite ? effect.renderer.sprite : effect.renderer.character}\n    </div>\n  )\n}\n\nfunction StatusEffects ({actor}) {\n  return (\n    <div className=\"StatusEffects\">\n      {\n        actor.game.engine.getStatusEffectsByActorId(actor.id).map((effect, i) => {\n          return (\n            <Tooltip \n              key={i}\n              title={effect.name}\n              text={effect.name}\n            >\n              <StatusEffect effect={effect} />\n            </Tooltip>\n          )\n        })\n      }\n    </div>\n  )\n}\n\nfunction NamePlate ({actor}) {\n  return (\n    <div className=\"NamePlate\">\n      {actor.name}\n    </div>\n  )\n}\n\nfunction ProgressBar ({\n  actor, \n  label, \n  colorFilled = 'red',\n  colorEmpty = 'gray',\n  attributePathMax, \n  attributePath, \n  unit,\n}) {\n  const valueMax = _.get(actor, attributePathMax, 0) / unit;\n  const valueCurrent = _.get(actor, attributePath, 0) / unit;\n  return (\n    <div className=\"ProgressBar\">\n      <div>\n        <span className='ProgressBar__label'>{label}</span>\n      </div>\n      <div>\n        <div className='ProgressBar__blips'>\n          {\n            Array(valueMax).fill(true).map((blip, index) => {\n              return (\n                <span \n                  key={index}\n                  className='ProgressBar__blips__blip' \n                  style={{backgroundColor: valueCurrent > index ? colorFilled : colorEmpty }}\n                />\n              )\n            })\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction CharacterCard ({actor, game}) {\n  return (\n    <div className='CharacterCard'>\n      <Portrait actor={actor}/>\n      <div>\n        <NamePlate actor={actor}/>\n        <ProgressBar \n          label='Action Points'\n          attributePath='energy'\n          attributePathMax='speed'\n          colorFilled='#ff9926'\n          unit={100}\n          actor={actor} \n        />\n        <ProgressBar \n          label='Health Points'\n          attributePath='durability'\n          attributePathMax='durabilityMax'\n          colorFilled='#dc322f'\n          unit={1}\n          actor={actor} \n        />\n        <ProgressBar \n          label='Upgrade Points'\n          attributePath='upgrade_points'\n          attributePathMax='upgrade_points'\n          colorFilled='#3e7dc9'\n          unit={1}\n          actor={actor} \n        />\n        <StatusEffects actor={actor} />\n      </div>\n      <div>\n        {/* <ActionBar keymap={game.visibleKeymap} game={game} /> */}\n        <ActionBar keymap={actor.getKeymap()} game={game} />\n      </div>\n    </div>\n  )\n}\n\nexport default CharacterCard;\n","import React from 'react';\nimport CharacterCard from './CharacterCard';\nimport * as _ from 'lodash';\n\nconst PlayerInformation = ({game}) => {\n  const actors = game.engine.actors.filter((actor) => actor.entityTypes.includes('PRESENTING_UI')).filter((actor) => actor.presentingUI)\n  return (\n    <div className=\"PlayerInformation Information UI\">\n      <div className='CharacterCard_Container'>\n        {\n          actors.map((actor, index) => <CharacterCard key={index} actor={actor} game={game} />)\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default PlayerInformation;","import React from 'react';\nimport Button from './Button';\n\nclass Inventory extends React.Component {\n  render() {\n    return (\n      <div className=\"Inventory UI\">\n        {\n          this.props.inventory && (\n            <div>\n              <div className='flow-text'>Inventory</div>\n              <div>\n                {\n                  this.props.inventory.map((slot, index) => {\n                    return (\n                      <Button key={index} onClick={() => null}>\n                        {`${slot.itemType} | x ${slot.items.length}`}\n                      </Button>\n                    )\n                  })\n                }\n              </div>\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Inventory;","import React from 'react';\n\nfunction Message (props) {\n  return (\n    <div\n      className='Message'\n      style={{\n        color: props.color,\n        backgroundColor: props.backgroundColor,\n        borderColor: props.color,\n      }}\n    >\n      {props.children}\n    </div>\n  )\n}\n\nclass Messages extends React.Component {\n  render() {\n    return (\n      <div className=\"Messages UI\">\n        <div className='flow-text center'>Messages</div>\n        {\n          this.props.messages && (\n            this.props.messages.map((message, index) => {\n              return (\n                <Message \n                  key={index} \n                  color={message.type.color}\n                  backgroundColor={message.type.backgroundColor}\n                >\n                  {`${message.text}`}\n                </Message>\n              )\n            })\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Messages;","import React from 'react';\nimport * as _ from 'lodash';\n\nfunction InfoBlocks(props) {\n  return (\n    <div>\n      {\n        _.map(_.get(props.game, 'mode.infoBlocks', {}), (value, key) => {\n          return (\n            <div key={key} className='Instructions__block Instructions__block--Jacinto'>\n              {value.text}\n            </div>\n          )\n        })\n      } \n    </div>\n  )\n}\n\nexport default InfoBlocks;\n","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nexport class EquipItemFromContainer extends Base {\n  // entities can only equip items from their container/inventory\n  constructor({ item, ...args }) {\n    super({ ...args });\n    this.item = item;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (this.item.equipmentType) {\n      let itemInSlot = this.actor.getItemInSlot(this.item.equipmentType);\n      if (itemInSlot) {\n        this.actor.addToContainer(itemInSlot);\n        this.actor.unequip(itemInSlot);\n      }\n      this.actor.removeFromContainer(this.item);\n      this.actor.equip(this.item.equipmentType, this.item);\n      this.game.addMessage(`${this.actor.name} equips ${this.item.name}.`, MESSAGE_TYPE.ACTION);\n      success = true;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import React from 'react';\nimport {\n  GiCrosshair,\n  GiBullets,\n  GiBackwardTime,\n  GiBarbedArrow,\n  GiBurningDot,\n} from \"react-icons/gi\";\nimport {EquipItemFromContainer} from '../../Actions/EquipItemFromContainer';\nimport {STAT_RENDERERS} from '../../Modes/Jacinto/theme';\n\nfunction StatBlock({stat}) {\n  const {getIcon, value, name} = stat;\n  const character = stat.renderer.sprite ? stat.renderer.sprite : stat.renderer.character\n  return (\n    <div \n      className=\"StatBlock\" \n      style={{\n        backgroundColor: stat.renderer.background,\n        color: stat.renderer.foreground,\n        borderColor: stat.renderer.foreground,\n        fontFamily: 'scroll-o-script',\n        width: stat.value !== null ? 'auto' : 20,\n      }}\n      title={name}\n    >\n      {\n        getIcon ? getIcon() : `${character}`\n      }\n      <span>&nbsp;{value}</span>\n    </div>\n  )\n}\n\nconst EquipmentCard = (props) => {\n  const {\n    game,\n    player,\n    data,\n  } = props;\n  const {\n    item,\n    equipped,\n    amount,\n    equipable,\n  } = data;\n\n  let needsReload = false;\n\n  let onClick = () => null;\n  if (equipable) {\n    const action = new EquipItemFromContainer({\n      item,\n      game,\n      energyCost: 0,\n      actor: player,\n      label: `Equip ${item.name}`,\n    });\n    onClick = () => {\n      game.refocus();\n      action.setAsNextAction();\n      game.engine.start();\n    }\n  }\n\n  let stats = [];\n  if (amount) {\n    stats.push({\n      name: 'amount left',\n      value: amount,\n      renderer: STAT_RENDERERS.amount,\n    })\n  }\n  if (item.hasOwnProperty('attackRange')) {\n    stats.push({\n      name: 'attack range',\n      value: item['attackRange'],\n      renderer: STAT_RENDERERS.attackRange,\n      getIcon: () => <GiBarbedArrow />,\n    })\n  }\n  if (item.hasOwnProperty('magazine')) {\n    stats.push({\n      name: 'shots before reload',\n      value: item.magazine,\n      renderer: STAT_RENDERERS.magazine,\n      getIcon: () => <GiBullets />,\n    })\n    if (item.magazine <= 0) {\n      needsReload = true;\n    }\n  }\n  if (item.hasOwnProperty('baseRangedAccuracy')) {\n    stats.push({\n      name: 'base accuracy',\n      value: `${Math.round(item['baseRangedAccuracy'] * 100)}%`,\n      renderer: STAT_RENDERERS.baseRangedAccuracy,\n      getIcon: () => <GiCrosshair />,\n    })\n  }\n  if (item.hasOwnProperty('baseRangedDamage')) {\n    stats.push({\n      name: 'base damage',\n      value: item['baseRangedDamage'],\n      renderer: STAT_RENDERERS.baseRangedDamage,\n      getIcon: () => <GiBurningDot />,\n    })\n  }\n  if (item.hasOwnProperty('attackDamage')) {\n    stats.push({\n      name: 'base melee damage',\n      value: item['attackDamage'],\n      renderer: STAT_RENDERERS.meleeDamage,\n    })\n  }\n  \n  return (\n    <div \n      className={`EquipmentCard ${equipped ? 'EquipmentCard--selected' : ''}`} \n      onClick={() => game.refocus()}\n    >\n      {needsReload && (\n        <div\n          className=\"EquipmentCard__reload_overlay\"\n          onClick={onClick}\n        >\n          <div className=\"EquipmentCard__reload_overlay__text\">Needs Reload</div>\n          <div className=\"EquipmentCard__reload_overlay__text\"><GiBackwardTime /></div>\n        </div>\n      )}\n      <div\n        className=\"EquipmentCard__item\"\n        onClick={onClick}\n      >\n        <div className=\"EquipmentCard__item__label\">\n          {item.name}\n        </div>\n        <div className=\"EquipmentCard__item__content\" style={item.renderer && {\n          backgroundColor: item.renderer.background,\n          color: item.renderer.color,\n          borderColor: item.renderer.color,\n        }}>\n          {item.renderer.sprite ? item.renderer.sprite : item.renderer.character}\n        </div>\n      </div>\n      <div className=\"EquipmentCard__item__stats\">\n        {\n          stats.map((stat, i) => {\n            return (\n              <StatBlock\n                key={`${i}-${stat.name}-resource-block`}\n                stat={stat}\n              />\n            )\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\nclass Equipment extends React.Component {\n  render() {\n    if (!this.props.player) return null;\n    const player = this.props.player;\n    const game = this.props.game;\n    let items = [];\n    player.equipment.forEach((slot) => {\n      if (slot.item) {\n        items.push({\n          item: slot.item,\n          equipped: true,\n        });\n      }\n    });\n    player.container.forEach((slot) => {\n      if (slot.items.length) {\n        const item = slot.items[0];\n        // disallow duplicates\n        if (items.filter((data) => data.item.name === item.name).length === 0) {\n          const equipable = item.entityTypes.includes('EQUIPABLE');\n          const amount = equipable ? null : slot.items.length;\n          items.push({\n            item,\n            amount,\n            equipable,\n            equipped: false,\n          })\n        }\n      }\n    });\n    return (\n      <div className=\"Equipment UI\">\n        {\n          <div>\n            <div className='flow-text'>Equipment</div>\n            <div>\n              {\n                items.map((item, index) => {\n                  return (\n                    <EquipmentCard \n                      key={index}\n                      game={game} \n                      player={player} \n                      data={item} \n                    />\n                  )\n                })\n              }\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default Equipment;","import React from 'react';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nfunction HelpContent() {\n  return (\n    <div className=\"Jacinto_Help\">\n      <div className=\"modal-content\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <div className=\"Jacinto_Help__section_header\">Goal</div>\n            <div className=\"Jacinto_Help__section_body\">\n              Defend Jacinto, the last human bastion on Sera. Move block by block and clear the city of \n              <span className=\"red-text\">&nbsp;Grubs</span> until you can locate and defeat their leader, \n              <span className=\"red-text\">&nbsp;Skorge</span>.\n            </div>\n          </div>\n          <div className=\"col s12 m6\">\n            <div className=\"Jacinto_Help__section_header\">Hints</div>\n            <div className=\"Jacinto_Help__section_body\">\n              <div>Destroy <span className=\"red-text\">Emergence Holes</span> ASAP.</div>\n              <div>Spend <span className=\"blue-text\">Upgrade Points</span>.</div>\n              <div>Weapon <span className=\"blue-text\">accuracy</span> decreases over distance.</div>\n              <div><span className=\"blue-text\">Grenades</span> can destroy walls as well as grubs, but be wary.</div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <div className=\"Jacinto_Help__section_header\">Controls</div>\n            <div className=\"Jacinto_Help__section_body\">\n              <div>Movement: WASD</div>\n              <div>Actions: click or key press</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default HelpContent;","import React from 'react';\nimport HelpContent from './HelpContent';\n\nfunction Help(props) {\n  React.useLayoutEffect(() => {\n    var elems = document.querySelectorAll(`#${props.id}`);\n    window.M.Modal.init(elems)\n  })\n  return (\n    <div id={props.id} className=\"modal\">\n      <HelpContent />\n      <div className=\"modal-footer\">\n        <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Close</a>\n      </div>\n    </div>\n  )\n}\n\nexport default Help;","import React from 'react';\nimport { SCREENS } from './constants';\nimport * as Engine from '../Engine/engine';\nimport * as Game from '../game';\nimport Instructions from '../UI/Instructions';\nimport Information from '../UI/Information';\nimport PlayerInformation from '../UI/Entity/PlayerInformation';\nimport Inventory from '../UI/Inventory';\n// import KeymapUI from '../UI/Keymap';\nimport KeymapUI from '../UI/ActionBar';\nimport Messages from '../UI/Messages';\nimport InfoBlocks from '../UI/InfoBlocks';\nimport Equipment from '../UI/Jacinto/Equipment';\nimport Help from '../UI/Jacinto/Help';\n\nclass Level extends React.Component {\n  constructor(props) {\n    super(props);\n    let ENGINE = new Engine.Engine({});\n    let game = new Game.Game({ \n      engine: ENGINE, \n      getSelectedCharacter: () => this.props.selectedCharacter.initialize(ENGINE),\n      mode: this.props.selectedMode.class,\n    })\n    this.state = {\n      game: game,\n      activeTab: 0,\n      spriteMode: game.spriteMode,\n    };\n    this.presserRef = React.createRef();\n  }\n\n  async componentDidMount() {\n    this.state.game.initialize(this.presserRef, document)\n    this.state.game['backToTitle'] = () => this.props.setActiveScreen(SCREENS.TITLE);\n    this.state.game['toLose'] = () => {\n      this.props.setActiveScreen(SCREENS.LOSE)\n    };\n    this.state.game['toWin'] = () => {\n      this.props.setActiveScreen(SCREENS.WIN)\n    };\n    this.state.game['refocus'] = () => this.refocus();\n    this.state.game.updateReact = (newGameState) => { this.setState({game: newGameState}) }\n    this.state.game.engine.start()\n  }\n\n  refocus () {\n    if (this.presserRef) this.presserRef.current.focus();\n  }\n\n  toggleSpriteMode () {\n    this.state.game.spriteMode = !this.state.game.spriteMode;\n    this.state.game.draw();\n    this.refocus();\n    this.setState({ spriteMode: this.state.game.spriteMode})\n  }\n\n  render() {\n    return (\n      <div className=\"Level\">\n        <div className='row'>\n          <div className='col s10'>\n            <div className='game_display_container'>\n              {Game.DisplayElement(this.presserRef, Game.handleKeyPress, this.state.game.engine)}\n            </div>\n            <Help id=\"jacinto_help\" />\n            <PlayerInformation game={this.state.game} />\n            {/* <Information game={this.state.game} /> */}\n            <Instructions game={this.state.game} spriteMode={this.state.game.spriteMode} setActiveScreen={this.props.setActiveScreen} toggleSpriteMode={this.toggleSpriteMode.bind(this)} />\n          </div>\n          <div className='col s2'>\n            <Equipment game={this.state.game} player={this.state.game.getFirstPlayer()} />\n            <InfoBlocks game={this.state.game} />\n            <Messages messages={this.state.game.messages.slice(-5).reverse()} />\n            {/* <Inventory inventory={this.state.game.visibleInventory} /> */}\n          </div>\n          {/* <div className='col s2'> */}\n          {/* </div> */}\n          {/* <button className='btn' onClick={() => this.props.setActiveScreen(SCREENS.TITLE)}>Quit</button> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Level;\n","import React from 'react';\nimport {\n  GiCog,\n  GiStarSkull,\n} from \"react-icons/gi\";\nimport { SCREENS } from './constants';\nimport HelpContent from '../UI/Jacinto/HelpContent';\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          className=\"Title__content\"\n          style={{\n\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: '#07111Dff',\n            // backgroundImage: `url(\"${window.PUBLIC_URL}/icons/512x512.png\")`,\n            // backgroundRepeat: 'no-repeat',\n            // backgroundPosition: 'center',\n            // backgroundPositionY: '10px'\n\n          }}\n        >\n          <HelpContent />\n          <h2 className=\"Title__header\"><GiCog/></h2>\n          <button\n            style={{\n              margin: 'initial',\n            }}\n            className={`CharacterSelect__button btn btn-main`}\n            onClick={() => {\n              this.props.setActiveScreen(SCREENS.CHARACTER_SELECT)\n            }}\n          >\n            Defend Jacinto\n          </button>\n          <h2 className=\"Title__header\"><GiStarSkull /></h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;","import React from 'react';\nimport {\n  GiStarSkull,\n} from \"react-icons/gi\";\nimport { SCREENS } from './constants';\n\n\nclass Lose extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          className=\"Title__content\"\n          style={{\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: '#222',\n          }}\n        >\n          <h2 className=\"Title__header\">\n            <GiStarSkull />\n            <GiStarSkull />\n            <GiStarSkull />\n          </h2>\n          <button\n            style={{\n              margin: 'initial',\n            }}\n            className={`CharacterSelect__button btn btn-main`}\n            onClick={() => window.location.reload()}\n          >\n            Restart\n          </button>\n          <h2 className=\"Title__header\">\n            <GiStarSkull />\n            <GiStarSkull />\n            <GiStarSkull />\n          </h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Lose;","import React from 'react';\nimport {\n  GiCog,\n} from \"react-icons/gi\";\n\nclass Win extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          className=\"Title__content\"\n          style={{\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: '#3e7dc9',\n          }}\n        >\n          <h2 className=\"Title__header\">\n            <GiCog />\n            <GiCog />\n            <GiCog />\n          </h2>\n          <button\n            style={{\n              margin: 'initial',\n            }}\n            className={`CharacterSelect__button btn btn-main`}\n            onClick={() => window.location.reload()}\n          >\n            Victory\n          </button>\n          <h2 className=\"Title__header\">\n            <GiCog />\n            <GiCog />\n            <GiCog />\n          </h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Win;","import React from 'react';\nimport { SCREENS } from '../Screen/constants';\n\nconst CharacterSelect = (props) => {\n  return (\n    <div className='CharacterSelect'>\n      {\n        props.characters.map((character, index) => {\n          let color = '';\n          if (props.selectedCharacter) {\n            color = props.selectedCharacter.name === character.name ? 'red' : ''\n          }\n\n          return (\n            <button\n              key={index}\n              className={`CharacterSelect__button btn btn-main`}\n              onClick={() => {\n                props.setSelectedCharacter(character)\n                props.setActiveScreen(SCREENS.LEVEL)\n              }}\n            >\n              Play as {character.name}\n            </button>\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default CharacterSelect;","import React from 'react';\nimport {\n  GiCog,\n  GiStarSkull,\n} from \"react-icons/gi\";\nimport { SCREENS } from './constants';\nimport CharacterSelect from '../UI/CharacterSelect';\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          className=\"Title__content\"\n          style={{\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: '#07111Dff',\n          }}\n        >\n          <h2 className=\"Title__header\"><GiCog/></h2>\n          <CharacterSelect \n            characters={this.props.characters} \n            selectedCharacter={this.props.selectedCharacter} \n            setSelectedCharacter={this.props.setSelectedCharacter}\n            setActiveScreen={this.props.setActiveScreen}\n          />\n          <h2 className=\"Title__header\"><GiStarSkull /></h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;","import React from 'react';\nimport { SCREENS } from '../Screen/constants';\n\nconst ModeSelect = (props) => {\n  return (\n    <div className='CharacterSelect'>\n      {\n        props.modes.map((mode, index) => {\n          let color = '';\n          if (props.selectedMode) {\n            color = props.selectedMode.name === mode.name ? 'red' : ''\n          }\n\n          return (\n            <button\n              key={index}\n              style={{\n                position: 'relative',\n                top: '280px'\n              }}\n              className={`CharacterSelect__button btn btn-main`}\n              onClick={() => {\n                console.log(mode);\n                \n                props.setSelectedMode(mode)\n                props.setActiveScreen(SCREENS.CHARACTER_SELECT)\n              }}\n            >\n              {mode.name}\n            </button>\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default ModeSelect;","import Level from './Level';\nimport Title from './Title';\nimport Lose from './Lose';\nimport Win from './Win';\nimport CharacterSelect from './CharacterSelect';\nimport ModeSelect from './ModeSelect';\n\nexport default {\n  Level,\n  Title,\n  Win,\n  Lose,\n  CharacterSelect,\n  ModeSelect,\n}","import React from 'react';\nimport { SCREENS } from './constants';\nimport ModeSelect from '../UI/ModeSelect';\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          style={{\n\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: 'rgb(4, 49, 61)',\n            backgroundImage: `url(\"${window.PUBLIC_URL}/fire_man_blue.jpg\")`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundPositionY: '10px'\n\n          }}\n        >\n          <ModeSelect \n            modes={this.props.modes} \n            selectedMode={this.props.selectedMode} \n            setSelectedMode={this.props.setSelectedMode}\n            setActiveScreen={this.props.setActiveScreen}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;","import { Base } from './Base';\nexport class GoToPreviousKeymap extends Base {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.label = 'Close';\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    this.actor.goToPreviousKeymap();\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { PlaceActor } from './PlaceActor';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\nimport { TYPE } from '../items';\nimport { DIRECTIONS, ENERGY_THRESHOLD } from '../constants';\nimport { getPositionInDirection, getPointsWithinRadius } from '../../helper';\n\nexport class PrepareDirectionalThrow extends Base {\n  constructor({ \n    passThroughEnergyCost = ENERGY_THRESHOLD, \n    passThroughRequiredResources = [],\n    projectileType = TYPE.DIRECTIONAL_KUNAI,\n    ...args \n  }) {\n    super({ ...args });\n    this.passThroughEnergyCost = passThroughEnergyCost;\n    this.passThroughRequiredResources = passThroughRequiredResources;\n    this.projectileType = projectileType;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n\n    let projectile = this.actor.contains(this.projectileType);\n    if (!projectile) return {\n      success: false,\n      alternative: null,\n    };\n\n    projectile.game = this.game;\n    projectile.pos = {\n      x: this.actor.pos.x,\n      y: this.actor.pos.y,\n    };\n\n    const pos = this.actor.getPosition();\n    // tackle in 4 directions a sfar as the actor has energy\n    let cursor_positions = [];\n    [\n      DIRECTIONS.N,\n      DIRECTIONS.S,\n      DIRECTIONS.E,\n      DIRECTIONS.W,\n    ].forEach((direction, i) => {\n      Array(projectile.range + 1).fill('').forEach((none, distance) => {\n        if (distance > 0) {\n          const endPosition = getPositionInDirection(pos, direction.map((dir) => dir * (distance)))\n          cursor_positions.push(endPosition)\n          if (distance === projectile.range) {\n            const circlePositions = getPointsWithinRadius(endPosition, 3)\n            cursor_positions = cursor_positions.concat(circlePositions)\n          }\n        }\n      })\n    });\n\n    this.actor.activateCursor(cursor_positions)\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n      onAfter: () => this.actor.deactivateCursor(),\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n      \n      w: () => { \n        return new PlaceActor({\n          targetPos: {...projectile.pos},\n          actor: this.actor,\n          game: this.game,\n          entity: projectile,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'throw N',\n          onBefore: () => {\n            projectile.direction = DIRECTIONS.N;\n          },\n          onSuccess: () => {\n            this.actor.deactivateCursor()\n            this.actor.removeFromContainer(projectile);\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      d: () => { \n        return new PlaceActor({\n          targetPos: {...projectile.pos},\n          actor: this.actor,\n          game: this.game,\n          entity: projectile,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'throw E',\n          onBefore: () => {\n            projectile.direction = DIRECTIONS.E;\n          },\n          onSuccess: () => {\n            this.actor.deactivateCursor()\n            this.actor.removeFromContainer(projectile);\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      s: () => { \n        return new PlaceActor({\n          targetPos: {...projectile.pos},\n          actor: this.actor,\n          game: this.game,\n          entity: projectile,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'throw S',\n          onBefore: () => {\n            projectile.direction = DIRECTIONS.S;\n          },\n          onSuccess: () => {\n            this.actor.deactivateCursor()\n            this.actor.removeFromContainer(projectile);\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      a: () => { \n        return new PlaceActor({\n          targetPos: {...projectile.pos},\n          actor: this.actor,\n          game: this.game,\n          entity: projectile,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'throw W',\n          onBefore: () => {\n            projectile.direction = DIRECTIONS.W;\n          },\n          onSuccess: () => {\n            this.actor.deactivateCursor()\n            this.actor.removeFromContainer(projectile);\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n    };\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import * as _ from 'lodash';\nimport { Base } from './Base';\nimport * as Helper from '../../helper';\nimport {THEMES} from '../constants';\n\nexport class MoveRangedAttackCursor extends Base {\n  constructor({ direction, range, targetPos = null, availablePositions = [], ...args }) {\n    super({ ...args });\n    this.direction = direction;\n    this.range = range;\n    this.targetPos = targetPos;\n    this.availablePositions = availablePositions;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n\n  isInRange (targetPos) {\n    return _.find(this.availablePositions, {x: targetPos.x, y: targetPos.y});\n  }\n\n  isInRangeV1 (targetPos) {\n    const initiatedFrom = this.actor.getPosition();\n    const path = Helper.calculateStraightPath(initiatedFrom, targetPos);\n    return this.range ? path.length <= this.range : true;\n  }\n\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (!this.targetPos && !this.direction) {\n      return {success, alternative}\n    }\n    let targetPos = this.targetPos;\n    if (!this.targetPos) {\n      targetPos = Helper.getPositionInDirection(this.actor.getCursorPositions()[0], this.direction);\n    }\n    // const pathIsNotBlocked = path.reduce((acc, curr) => acc && this.game.rangedCursorCanOccupyPosition(curr), true);\n    // if (this.isInRange(targetPos) && pathIsNotBlocked && this.game.rangedCursorCanOccupyPosition(targetPos, this.actor)) {\n    // if (this.isInRange(targetPos) && this.game.rangedCursorCanOccupyPosition(targetPos, this.actor)) {\n    if (this.isInRange(targetPos)) {\n      this.actor.moveCursorToPosition(targetPos);\n      success = true;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n","import { Base } from './Base';\nimport { MoveRangedAttackCursor } from './MoveRangedAttackCursor';\nimport { MultiTargetRangedAttack } from './MultiTargetRangedAttack';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\nimport { DIRECTIONS, ENERGY_THRESHOLD, THEMES, EQUIPMENT_TYPES } from '../constants';\nimport * as Helper from '../../helper';\nimport {find} from 'lodash';\n\nexport class PrepareRangedAttack extends Base {\n  constructor({ \n    passThroughEnergyCost = ENERGY_THRESHOLD, \n    passThroughRequiredResources = [], \n    ...args \n  }) {\n    super({ ...args });\n    this.passThroughEnergyCost = passThroughEnergyCost;\n    this.passThroughRequiredResources = passThroughRequiredResources;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n\n  updateCursors(pathAnimations, initiatedFrom) {\n    const cursorPositions = this.actor.getCursorPositions();\n    const path = Helper.calculateStraightPath(initiatedFrom, this.actor.getCursorPositions()[0]);\n    // removing visible path from last action\n    pathAnimations.forEach((anim) => {\n      this.game.display.removeAnimation(anim.id);\n    })\n    \n    // adding visible path to new cursor position\n    path.slice(1).forEach((pathPos) => {\n      if (!find(cursorPositions, {x: pathPos.x, y: pathPos.y})) {\n        const animation = this.game.display.addAnimation(this.game.display.animationTypes.BLINK_TILE, { x: pathPos.x, y: pathPos.y, color: THEMES.SOLARIZED.base3 })\n        pathAnimations.push(animation);\n      }\n    })\n\n    // modifying target curso color based on change to hit\n    cursorPositions.forEach((pos, i) => {\n      const chance = this.actor.getRangedAttackChance(pos);\n      if (chance <= 0) {\n        this.actor.updateCursorNode(i, [\n          {key: 'fill', value: 'transparent'}, \n          {key: 'stroke', value: 'white'}, \n        ]);\n      }\n      if (chance > 0 && chance <= 0.5) {\n        this.actor.updateCursorNode(i, [\n          {key: 'fill', value: THEMES.SOLARIZED.red}, \n          {key: 'stroke', value: 'transparent'}, \n        ]);\n      }\n      if (chance > 0.5 && chance <= 0.7) {\n        this.actor.updateCursorNode(i, [\n          {key: 'fill', value: THEMES.SOLARIZED.yellow}, \n          {key: 'stroke', value: 'transparent'}, \n        ]);\n      }\n      if (chance >= 0.7) {\n        this.actor.updateCursorNode(i, [\n          {key: 'fill', value: THEMES.SOLARIZED.green}, \n          {key: 'stroke', value: 'transparent'}, \n        ]);\n      }\n    })\n  }\n\n  perform() {\n    const pos = this.actor.getPosition();\n    const range = this.actor.getAttackRange();\n    const equippedWeapon = this.actor.getItemInSlot(EQUIPMENT_TYPES.HAND)\n\n    const pathAnimations = [];\n    const rangeAnims = []\n    const deactivateAnimations = (anims) => anims.forEach((anim) => {\n      this.game.display.removeAnimation(anim.id);\n    })\n\n    const positionsInRange = Helper.getPointsWithinRadius(pos, range);\n\n    let targets = [];\n    let targetIndex = 0;\n    positionsInRange.forEach((position) => {\n      // rangeAnims.push(this.game.display.addAnimation(1, {\n      //   x: position.x,\n      //   y: position.y,\n      //   color: THEMES.SOLARIZED.blue\n      // }))\n      let tile = this.game.map[Helper.coordsToString(position)];\n      if (tile) {\n        // const validTargets = Helper.getDestructableEntities(tile.entities);\n        const validTargets = tile.entities.filter((actor) => actor['faction'] === 'LOCUST');\n        let newTarget = validTargets.length ? validTargets[0] : null;\n        if (newTarget) {\n          targets.push(newTarget);\n        }\n      }\n    })\n\n    let positions = [];\n    if (targets.length) {\n      positions.push(targets[0].getPosition());\n      if (targets.length > 1) targetIndex = 1;\n    } else {\n      positions.push({...pos})\n    }\n\n    if (equippedWeapon) positions = equippedWeapon.getPositionsInShape(positions[0]);\n\n    this.actor.activateCursor(positions);\n    this.updateCursors(pathAnimations, pos);\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n      onAfter: () => {\n        this.actor.deactivateCursor()\n        deactivateAnimations(pathAnimations)\n        deactivateAnimations(rangeAnims)\n      },\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n      \n      e: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'Next Target',\n          targetPos: targets.length ? targets[targetIndex].getPosition() : null,\n          range,\n          availablePositions: positionsInRange,\n          onSuccess: () => {\n            targetIndex = (targetIndex + 1) % targets.length;\n            this.updateCursors(pathAnimations, pos);\n          },\n        })\n      },\n      q: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'Previous Target',\n          targetPos: targets.length ? targets[targetIndex].getPosition() : null,\n          range,\n          availablePositions: positionsInRange,\n          onSuccess: () => {\n            if (targetIndex === 0) {\n              targetIndex = targets.length - 1\n            } else {\n              targetIndex -= 1\n            }\n            this.updateCursors(pathAnimations, pos);\n          }\n        })\n      },\n      w: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move N',\n          direction: DIRECTIONS.N,\n          range,\n          availablePositions: positionsInRange,\n          onSuccess: () => {\n            this.updateCursors(pathAnimations, pos);\n          }\n        })\n      },\n      a: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move W',\n          direction: DIRECTIONS.W,\n          range,\n          availablePositions: positionsInRange,\n          onSuccess: () => {\n            this.updateCursors(pathAnimations, pos);\n          }\n        })\n      },\n      s: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move S',\n          direction: DIRECTIONS.S,\n          range,\n          availablePositions: positionsInRange,\n          onSuccess: () => {\n            this.updateCursors(pathAnimations, pos);\n          }\n        })\n      },\n      d: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move E',\n          direction: DIRECTIONS.E,\n          range,\n          availablePositions: positionsInRange,\n          onSuccess: () => {\n            this.updateCursors(pathAnimations, pos);\n          }\n        })\n      },\n      f: () => { \n        return new MultiTargetRangedAttack({\n          label: 'Fire',\n          targetPositions:  [...this.actor.getCursorPositions()],\n          game: this.game,\n          actor: this.actor,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            deactivateAnimations(pathAnimations);\n            deactivateAnimations(rangeAnims);\n            this.actor.setNextAction(goToPreviousKeymap);\n          }\n        })\n      },\n    };\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import { Base } from './Base';\nimport { EquipItemFromContainer } from './EquipItemFromContainer';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\n\n\nexport class OpenInventory extends Base {\n  constructor({ \n    ...args \n  }) {\n    super({ ...args });\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    this.game.visibleInventory = this.actor.container;\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n    };\n\n    this.actor.container.forEach((slot, index) => {\n      const item = slot.items[0];\n      keymap[index] = () => new EquipItemFromContainer({\n        item,\n        game: this.game,\n        actor: this.actor,\n        label: `Equip ${item.name}`,\n        energyCost: 0,\n        onSuccess: () => {\n          this.game.visibleInventory = null\n          this.actor.setNextAction(goToPreviousKeymap);\n        },\n      });\n    })\n\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import * as Helper from '../../helper';\nimport { Base } from './Base';\nimport SOUNDS from '../sounds';\n\nexport class Upgrade extends Base {\n  constructor({ upgrade, ...args }) {\n    super({ ...args });\n    this.upgrade = upgrade;\n    this.particleTemplate = {\n      renderer: {\n        sprite: '',\n        character: '^',\n        color: 'white',\n        background: '#3e7dc9',\n      }\n    };\n  }\n  perform() {\n    let success = false;\n    if (this.actor.upgrade(this.upgrade)) {\n      success = true;\n      let positions = Helper.getPointsOnCircumference(this.actor.pos.x, this.actor.pos.y, 5);\n      positions.forEach((pos) => {\n        this.addParticle(4, { ...pos }, {\n          x: -1 * Math.sign(pos.x - this.actor.pos.x),\n          y: -1 * Math.sign(pos.y - this.actor.pos.y)\n        });\n      });\n      SOUNDS.save.play();\n    }\n    return {\n      success,\n      alternative: null,\n    };\n  }\n}\n;\n","import {ActionResource} from './ActionResource';\n\nexport class UpgradeResource extends ActionResource {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.name = 'Upgrade Points';\n    this.actorResourcePath = 'upgrade_points';\n    this.renderer = { color: 'white', background: '#3e7dc9', character: '^', sprite: '' }\n  }\n}","import { Base } from './Base';\nimport { Say } from './Say';\nimport { Upgrade } from './Upgrade';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\nimport { UpgradeResource } from './ActionResources/UpgradeResource';\n\nexport class OpenUpgrades extends Base {\n  constructor({ \n    ...args \n  }) {\n    super({ ...args });\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n    };\n\n    this.actor.upgrade_tree.forEach((upgrade, index) => {\n      keymap[index] = () => new Upgrade({\n        // message: upgrade.name,\n        upgrade,\n        game: this.game,\n        actor: this.actor,\n        label: `${upgrade.name}`,\n        energyCost: 0,\n        requiredResources: [new UpgradeResource({getResourceCost: () => upgrade.cost })],\n        onSuccess: () => {\n          this.actor.setNextAction(goToPreviousKeymap);\n        },\n      });\n    })\n\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nimport * as Helper from '../../helper';\nimport SOUNDS from '../sounds';\n\nexport class PickupAllItems extends Base {\n  constructor({ ...args }) {\n    super({ ...args });\n  }\n  perform() {\n    let success = false;\n    const items = this.game.map[Helper.coordsToString(this.actor.pos)].entities.filter((e) => e.id !== this.actor.id);\n    if (items.length) {\n      // const item = Helper.getRandomInArray(items);\n      items.forEach((item) => {\n        this.game.addMessage(`${this.actor.name} picks up ${item.name}.`, MESSAGE_TYPE.ACTION);\n        this.actor.addToContainer(item);\n        let entities = this.game.map[Helper.coordsToString(this.actor.pos)].entities;\n        this.game.map[Helper.coordsToString(this.actor.pos)].entities = entities.filter((it) => it.id !== item.id);\n        success = true;\n      });\n      SOUNDS.grab_0.play();\n    }\n    return {\n      success,\n      alternative: null,\n    };\n  }\n}\n;\n","// import deps\nimport * as Constant from '../constants';\nimport { Player } from '../Entities/index';\nimport { ContainerSlot } from '../Entities/Containing';\nimport {Say} from '../Actions/Say';\nimport {MoveOrAttack} from '../Actions/MoveOrAttack';\nimport {PrepareDirectionalThrow} from '../Actions/PrepareDirectionalThrow';\nimport {PrepareRangedAttack} from '../Actions/PrepareRangedAttack';\nimport {OpenInventory} from '../Actions/OpenInventory';\nimport {OpenUpgrades} from '../Actions/OpenUpgrades';\nimport {Upgrade} from '../Entities/Upgradable';\nimport {PickupAllItems} from '../Actions/PickupAllItems';\nimport { Lancer } from '../Items/Weapons/Lancer';\nimport { Snub } from '../Items/Weapons/Snub';\nimport { Grenade } from '../Items/Weapons/Grenade';\nimport { Ammo } from '../Items/Pickups/Ammo';\nimport {COLORS} from '../Modes/Jacinto/theme';\nimport { Reload } from '../Actions/Reload';\nimport { AddStatusEffect } from '../Actions/AddStatusEffect';\nimport {MeleeDamage} from '../StatusEffects/MeleeDamage';\n\n\nexport default function (engine) {\n  const lancer = Lancer(engine);\n  // define keymap\n  const keymap = (engine, actor) => {\n    return {\n      Escape: () => new Say({\n        label: 'Pass',\n        message: 'pass turn...',\n        game: engine.game,\n        actor,\n        interrupt: true,\n        energyCost: 0,\n      }),\n      w: () => {\n        const direction = Constant.DIRECTIONS.N;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new MoveOrAttack({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      s: () => {\n        const direction = Constant.DIRECTIONS.S;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new MoveOrAttack({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      a: () => {\n        const direction = Constant.DIRECTIONS.W;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new MoveOrAttack({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      d: () => {\n        const direction = Constant.DIRECTIONS.E;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new MoveOrAttack({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      p: () => new Say({\n        label: 'Stay',\n        message: 'standing still...',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      f: () => new PrepareRangedAttack({\n        label: 'Fire Weapon',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n        passThroughRequiredResources: [],\n      }),\n      r: () => new Reload({\n        label: 'Reload',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      i: () => new OpenInventory({\n        label: 'Inventory',\n        game: engine.game,\n        actor,\n      }),\n      // o: () => new OpenEquipment({\n      //   label: 'Equipment',\n      //   game: engine.game,\n      //   actor,\n      // }),\n      u: () => new OpenUpgrades({\n        label: 'Upgrade',\n        game: engine.game,\n        actor,\n      }),\n      g: () => new PickupAllItems({\n        label: 'Pickup',\n        game: engine.game,\n        actor,\n      }),\n      t: () => new PrepareDirectionalThrow({\n        label: 'Grenade',\n        projectileType: 'Grenade',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      c: () => new AddStatusEffect({\n        label: 'Rev Lancer Chainsaw',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        effect: new MeleeDamage({\n          buffValue: 12,\n          game: engine.game,\n          actor: lancer, // should be weapon\n          lifespan: Constant.ENERGY_THRESHOLD * 3,\n          stepInterval: Constant.ENERGY_THRESHOLD,\n        }),\n        particleTemplate: {\n          renderer: {\n            color: '#424242',\n            background: '#e6e6e6',\n            character: ''\n          },\n        },\n      })\n    };\n  }\n  // instantiate class\n  \n  const durability = 10;\n  let actor = new Player({\n    pos: { x: 23, y: 7 },\n    renderer: {\n      sprite: '',\n      character: 'G',\n      color: COLORS.base3,\n      background: COLORS.cog2,\n    },\n    name: 'The Scout',\n    actions: [],\n    speed: Constant.ENERGY_THRESHOLD * 8,\n    durability,\n    attackDamage: 0,\n    baseRangedAccuracy: 0,\n    baseRangedDamage: 0,\n    upgrade_points: 0,\n    upgrade_tree: [\n      Upgrade({\n        cost: 1,\n        name: '+1 Health',\n        activate: (actor) => {\n          actor.durabilityMax += 1\n          actor.increaseDurability(1)\n        },\n      }),\n      Upgrade({\n        cost: 1,\n        name: '+10% Lancer Accuracy',\n        activate: (actor) => (lancer.baseRangedAccuracy += 0.1),\n      }),\n      Upgrade({\n        cost: 2,\n        name: '+1 Actions',\n        activate: (actor) => {\n          actor.speed += Constant.ENERGY_THRESHOLD;\n          actor.energy += Constant.ENERGY_THRESHOLD;\n        },\n        // removeOnActivate: true,\n      }),\n      Upgrade({\n        cost: 3,\n        name: 'Full Health',\n        canUpgrade: (actor) => actor.durability < actor.durabilityMax,\n        activate: (actor) => (actor.increaseDurability(actor.durabilityMax - actor.durability)),\n      }),\n    ],\n    equipment: Constant.EQUIPMENT_LAYOUTS.gear(),\n    game: engine.game,\n    presentingUI: true,\n    faction: 'COG',\n    enemyFactions: ['LOCUST'],\n    initializeKeymap: keymap,\n  })\n\n  // add default items to container\n  const ammo = Array(30).fill('').map(() => Ammo(engine));\n  const grenades = Array(4).fill('').map(() => Grenade(engine, 6));\n  const snub = Snub(engine);\n  actor.container = [\n    new ContainerSlot({\n      itemType: snub.name,\n      items: [snub],\n    }),\n    new ContainerSlot({\n      itemType: ammo[0].name,\n      items: ammo,\n    }),\n    new ContainerSlot({\n      itemType: grenades[0].name,\n      items: grenades,\n    }),\n  ]\n\n  actor.equip(lancer.equipmentType, lancer);\n\n  return actor;\n}","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Lancer = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Lancer',\n  passable: true,\n  attackRange: 12,\n  magazineSize: 4,\n  baseRangedAccuracy: 0.85,\n  baseRangedDamage: 2,\n  attackDamage: 2,\n  pos,\n  // shapePattern: Constant.CLONE_PATTERNS.triple_point,\n  // shapePattern: Constant.CLONE_PATTERNS.bigSquare,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'L',\n    color: COLORS.base3,\n    background: COLORS.gray,\n  },\n});\n","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Snub = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Snub',\n  passable: true,\n  attackRange: 6,\n  magazineSize: 10,\n  baseRangedAccuracy: 0.7,\n  baseRangedDamage: 1,\n  attackDamage: 1,\n  pos,\n  // shapePattern: Constant.CLONE_PATTERNS.square,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'S',\n    color: COLORS.base3,\n    background: COLORS.base01,\n  },\n});\n","import { MoveMultiple } from './MoveMultiple';\nimport { Attack } from './Attack';\nimport {ENERGY_THRESHOLD} from '../constants';\n\nexport class Tackle extends MoveMultiple {\n  constructor({ direction, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.direction = direction;\n    this.stepCount = 0;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let alternative = null;\n    let newX = this.actor.pos.x + this.direction[0];\n    let newY = this.actor.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n\n    alternative = new Attack({\n      targetPos,\n      additionalDamage: this.stepCount,\n      game: this.game,\n      actor: this.actor,\n      energyCost: 0,\n    });\n\n    if (this.actor.energy > ENERGY_THRESHOLD) {\n      const shoveSuccess = this.actor.shove(targetPos, this.direction);\n      if (shoveSuccess) {\n        this.stepCount += 1;\n        alternative = this\n        for (let i = 0; i < 3; i++) {\n          this.addParticle(1, {\n            x: this.actor.pos.x - (this.direction[0] * i),\n            y: this.actor.pos.y - (this.direction[1] * i),\n          }, { x: 0, y: 0 });\n        }\n      }\n    }\n\n    return {\n      success: true,\n      alternative,\n    };\n  }\n};\n","import { Base } from './Base';\nimport { Attack } from \"./Attack\";\nimport * as Constant from '../constants';\n\nexport class MoveMultiple extends Base {\n  constructor({ direction, stepCount, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.direction = direction;\n    this.stepCount = stepCount;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let newX = this.actor.pos.x + this.direction[0];\n    let newY = this.actor.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n    if (this.stepCount > 0 && this.actor.move(targetPos)) {\n      this.stepCount -= 1;\n      this.actor.setNextAction(this);\n      success = true;\n    }\n    else {\n      success = true;\n      alternative = new Attack({\n        targetPos: targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { Tackle } from './Tackle';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\nimport { DIRECTIONS, ENERGY_THRESHOLD, PARTICLE_TEMPLATES } from '../constants';\nimport { getPositionInDirection } from '../../helper';\n\nexport class PrepareTackle extends Base {\n  constructor({ \n    passThroughEnergyCost = ENERGY_THRESHOLD, \n    passThroughRequiredResources = [], \n    ...args \n  }) {\n    super({ ...args });\n    this.passThroughEnergyCost = passThroughEnergyCost;\n    this.passThroughRequiredResources = passThroughRequiredResources;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n\n    const pos = this.actor.getPosition();\n    // tackle in 4 directions a sfar as the actor has energy\n    const cursor_positions = [];\n    [\n      DIRECTIONS.N,\n      DIRECTIONS.S,\n      DIRECTIONS.E,\n      DIRECTIONS.W,\n    ].forEach((direction, i) => {\n      Array(this.actor.energy / ENERGY_THRESHOLD).fill('').forEach((none, distance) => {\n        if (distance > 0) {\n          cursor_positions.push(\n            getPositionInDirection(pos, direction.map((dir) => dir * (distance)))\n          )\n        }\n      })\n    });\n    this.actor.activateCursor(cursor_positions)\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n      onAfter: () => this.actor.deactivateCursor(),\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n      \n      w: () => { \n        return new Tackle({\n          actor: this.actor,\n          game: this.game,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'tackle N',\n          direction: DIRECTIONS.N,\n          particleTemplate: PARTICLE_TEMPLATES.leaf,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      d: () => { \n        return new Tackle({\n          actor: this.actor,\n          game: this.game,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'tackle E',\n          direction: DIRECTIONS.E,\n          particleTemplate: PARTICLE_TEMPLATES.leaf,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      s: () => { \n        return new Tackle({\n          actor: this.actor,\n          game: this.game,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'tackle S',\n          direction: DIRECTIONS.S,\n          particleTemplate: PARTICLE_TEMPLATES.leaf,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      a: () => { \n        return new Tackle({\n          actor: this.actor,\n          game: this.game,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'tackle W',\n          direction: DIRECTIONS.W,\n          particleTemplate: PARTICLE_TEMPLATES.leaf,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n    };\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","// import deps\nimport * as Constant from '../constants';\nimport { Player } from '../Entities/index';\nimport { ContainerSlot } from '../Entities/Containing';\nimport {Say} from '../Actions/Say';\nimport {MoveOrAttack} from '../Actions/MoveOrAttack';\nimport {PrepareDirectionalThrow} from '../Actions/PrepareDirectionalThrow';\nimport {PrepareRangedAttack} from '../Actions/PrepareRangedAttack';\nimport {OpenInventory} from '../Actions/OpenInventory';\nimport {OpenUpgrades} from '../Actions/OpenUpgrades';\nimport {Upgrade} from '../Entities/Upgradable';\nimport {PickupAllItems} from '../Actions/PickupAllItems';\nimport { PrepareTackle } from '../Actions/PrepareTackle';\nimport { RetroLancer } from '../Items/Weapons/RetroLancer';\nimport { Boltok } from '../Items/Weapons/Boltok';\nimport { Snub } from '../Items/Weapons/Snub';\nimport { Grenade } from '../Items/Weapons/Grenade';\nimport { Ammo } from '../Items/Pickups/Ammo';\nimport {COLORS} from '../Modes/Jacinto/theme';\nimport { Reload } from '../Actions/Reload';\nimport { Gnasher } from '../Items/Weapons/Gnasher';\n\nexport default function (engine) {\n  // define keymap\n  const keymap = (engine, actor) => {\n    return {\n      Escape: () => new Say({\n        label: 'Pass',\n        message: 'pass turn...',\n        game: engine.game,\n        actor,\n        interrupt: true,\n        energyCost: 0,\n      }),\n      w: () => {\n        const direction = Constant.DIRECTIONS.N;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new MoveOrAttack({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      s: () => {\n        const direction = Constant.DIRECTIONS.S;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new MoveOrAttack({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      a: () => {\n        const direction = Constant.DIRECTIONS.W;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new MoveOrAttack({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      d: () => {\n        const direction = Constant.DIRECTIONS.E;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new MoveOrAttack({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      p: () => new Say({\n        label: 'Stay',\n        message: 'standing still...',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      f: () => new PrepareRangedAttack({\n        label: 'Fire Weapon',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n        passThroughRequiredResources: [],\n      }),\n      r: () => new Reload({\n        label: 'Reload',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      i: () => new OpenInventory({\n        label: 'Inventory',\n        game: engine.game,\n        actor,\n      }),\n      // o: () => new OpenEquipment({\n      //   label: 'Equipment',\n      //   game: engine.game,\n      //   actor,\n      // }),\n      u: () => new OpenUpgrades({\n        label: 'Upgrade',\n        game: engine.game,\n        actor,\n      }),\n      g: () => new PickupAllItems({\n        label: 'Pickup',\n        game: engine.game,\n        actor,\n      }),\n      t: () => new PrepareDirectionalThrow({\n        label: 'Grenade',\n        projectileType: 'Grenade',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      c: () => new PrepareTackle({\n        label: 'Bayonet Charge',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n      }),\n    };\n  }\n  // instantiate class\n  const primary = RetroLancer(engine);\n  const durability = 20;\n  let actor = new Player({\n    pos: { x: 23, y: 7 },\n    renderer: {\n      sprite: '',\n      character: 'G',\n      color: COLORS.base3,\n      background: COLORS.cog2,\n    },\n    name: 'The Veteran',\n    speed: Constant.ENERGY_THRESHOLD * 4,\n    durability,\n    baseRangedAccuracy: 0,\n    baseRangedDamage: 0,\n    attackDamage: 0,\n    upgrade_points: 0,\n    upgrade_tree: [\n      Upgrade({\n        cost: 1,\n        name: '+1 Health',\n        activate: (actor) => {\n          actor.durabilityMax += 1\n          actor.increaseDurability(1)\n        },\n      }),\n      Upgrade({\n        cost: 1,\n        name: '+2 Melee Damage',\n        activate: (actor) => (primary.attackDamage += 2),\n      }),\n      Upgrade({\n        cost: 3,\n        name: 'Full Health',\n        canUpgrade: (actor) => actor.durability < actor.durabilityMax,\n        activate: (actor) => (actor.increaseDurability(actor.durabilityMax - actor.durability)),\n      }),\n    ],\n    equipment: Constant.EQUIPMENT_LAYOUTS.gear(),\n    game: engine.game,\n    presentingUI: true,\n    faction: 'COG',\n    enemyFactions: ['LOCUST'],\n    initializeKeymap: keymap,\n  })\n\n  // add default items to container\n  const ammo = Array(10).fill('').map(() => Ammo(engine));\n  const grenades = Array(2).fill('').map(() => Grenade(engine, 6));\n  const secondary = Gnasher(engine);\n  actor.container = [\n    new ContainerSlot({\n      itemType: secondary.name,\n      items: [secondary],\n    }),\n    new ContainerSlot({\n      itemType: ammo[0].name,\n      items: ammo,\n    }),\n    new ContainerSlot({\n      itemType: grenades[0].name,\n      items: grenades,\n    }),\n  ]\n\n  actor.equip(primary.equipmentType, primary);\n\n  return actor;\n}","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const RetroLancer = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Retro Lancer',\n  passable: true,\n  attackRange: 10,\n  magazineSize: 3,\n  baseRangedAccuracy: 0.7,\n  baseRangedDamage: 2,\n  attackDamage: 6,\n  pos,\n  // shapePattern: Constant.CLONE_PATTERNS.triple_point,\n  // shapePattern: Constant.CLONE_PATTERNS.bigSquare,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'R',\n    color: COLORS.base3,\n    background: COLORS.cog1,\n  },\n});\n","// import deps\nimport * as Constant from '../constants';\nimport { UpgradeResource } from '../Actions/ActionResources/UpgradeResource';\nimport { Player } from '../Entities/index';\nimport { ContainerSlot } from '../Entities/Containing';\nimport {Say} from '../Actions/Say';\nimport {MoveOrAttack} from '../Actions/MoveOrAttack';\nimport {PrepareDirectionalThrow} from '../Actions/PrepareDirectionalThrow';\nimport {PrepareRangedAttack} from '../Actions/PrepareRangedAttack';\nimport {OpenInventory} from '../Actions/OpenInventory';\nimport {OpenUpgrades} from '../Actions/OpenUpgrades';\nimport {Upgrade} from '../Entities/Upgradable';\nimport {PickupAllItems} from '../Actions/PickupAllItems';\nimport { Longshot } from '../Items/Weapons/Longshot';\nimport { Boltok } from '../Items/Weapons/Boltok';\nimport { Grenade } from '../Items/Weapons/Grenade';\nimport { Ammo } from '../Items/Pickups/Ammo';\nimport {COLORS} from '../Modes/Jacinto/theme';\nimport { Reload } from '../Actions/Reload';\nimport { AddSprintStatusEffect } from '../Actions/AddSprintStatusEffect';\n\nexport default function (engine) {\n  // define keymap\n  const keymap = (engine, actor) => {\n    return {\n      Escape: () => new Say({\n        label: 'Pass',\n        message: 'pass turn...',\n        game: engine.game,\n        actor,\n        interrupt: true,\n        energyCost: 0,\n      }),\n      w: () => {\n        const direction = Constant.DIRECTIONS.N;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new MoveOrAttack({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      s: () => {\n        const direction = Constant.DIRECTIONS.S;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new MoveOrAttack({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      a: () => {\n        const direction = Constant.DIRECTIONS.W;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new MoveOrAttack({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      d: () => {\n        const direction = Constant.DIRECTIONS.E;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new MoveOrAttack({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      p: () => new Say({\n        label: 'Stay',\n        message: 'standing still...',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      f: () => new PrepareRangedAttack({\n        label: 'Fire Weapon',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n        passThroughRequiredResources: [],\n      }),\n      r: () => new Reload({\n        label: 'Reload',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      i: () => new OpenInventory({\n        label: 'Inventory',\n        game: engine.game,\n        actor,\n      }),\n      u: () => new OpenUpgrades({\n        label: 'Upgrade',\n        game: engine.game,\n        actor,\n      }),\n      g: () => new PickupAllItems({\n        label: 'Pickup',\n        game: engine.game,\n        actor,\n      }),\n      t: () => new PrepareDirectionalThrow({\n        label: 'Grenade',\n        projectileType: 'Grenade',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      // c: () => new AddSprintStatusEffect({\n      //   label: 'Sprint',\n      //   game: engine.game,\n      //   actor,\n      //   speedBuff: Constant.ENERGY_THRESHOLD * 10,\n      //   requiredResources: [\n      //     new UpgradeResource({ getResourceCost: () => 1 }),\n      //   ],\n      // }),\n    };\n  }\n  // instantiate class\n  const primary = Longshot(engine);\n  const secondary = Boltok(engine);\n  const durability = 12;\n  let actor = new Player({\n    pos: { x: 23, y: 7 },\n    renderer: {\n      sprite: '',\n      character: 'G',\n      color: COLORS.base3,\n      background: COLORS.cog2,\n    },\n    name: 'The Stranded',\n    speed: Constant.ENERGY_THRESHOLD * 6,\n    durability,\n    baseRangedAccuracy: 0,\n    baseRangedDamage: 0,\n    attackDamage: 0,\n    upgrade_points: 0,\n    upgrade_tree: [\n      Upgrade({\n        cost: 1,\n        name: '+1 Health',\n        activate: (actor) => {\n          actor.durabilityMax += 1\n          actor.increaseDurability(1)\n        },\n      }),\n      Upgrade({\n        cost: 1,\n        name: '+5% Longshot Accuracy',\n        activate: (actor) => (primary.baseRangedAccuracy += 0.05),\n      }),\n      Upgrade({\n        cost: 1,\n        name: '+5% Boltok Accuracy',\n        activate: (actor) => (secondary.baseRangedAccuracy += 0.05),\n      }),\n      Upgrade({\n        cost: 1,\n        name: 'Craft 3 Grenades',\n        activate: (actor) => {\n          Array(3).fill('').map(() => actor.addToContainer(Grenade(engine, 6)));\n        },\n      }),\n      Upgrade({\n        cost: 3,\n        name: 'Full Health',\n        canUpgrade: (actor) => actor.durability < actor.durabilityMax,\n        activate: (actor) => (actor.increaseDurability(actor.durabilityMax - actor.durability)),\n      }),\n    ],\n    equipment: Constant.EQUIPMENT_LAYOUTS.gear(),\n    game: engine.game,\n    presentingUI: true,\n    faction: 'COG',\n    enemyFactions: ['LOCUST'],\n    initializeKeymap: keymap,\n  })\n\n  // add default items to container\n  const ammo = Array(20).fill('').map(() => Ammo(engine));\n  const grenades = Array(2).fill('').map(() => Grenade(engine, 6));\n  actor.container = [\n    new ContainerSlot({\n      itemType: secondary.name,\n      items: [secondary],\n    }),\n    new ContainerSlot({\n      itemType: ammo[0].name,\n      items: ammo,\n    }),\n    new ContainerSlot({\n      itemType: grenades[0].name,\n      items: grenades,\n    }),\n  ]\n\n  actor.equip(primary.equipmentType, primary);\n\n  return actor;\n}","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Longshot = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Longshot',\n  passable: true,\n  attackRange: 20,\n  magazineSize: 1,\n  baseRangedAccuracy: 1,\n  baseRangedDamage: 10,\n  attackDamage: 0,\n  pos,\n  // shapePattern: Constant.CLONE_PATTERNS.triple_point,\n  // shapePattern: Constant.CLONE_PATTERNS.bigSquare,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'L',\n    color: COLORS.base1,\n    background: COLORS.base04,\n  },\n});\n","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Boltok = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Boltok',\n  passable: true,\n  attackRange: 4,\n  magazineSize: 2,\n  baseRangedAccuracy: 0.8,\n  baseRangedDamage: 3,\n  attackDamage: 1,\n  pos,\n  // shapePattern: Constant.CLONE_PATTERNS.square,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'B',\n    color: COLORS.base3,\n    background: COLORS.locust0,\n  },\n});\n","import The_Scout from './GearLight';\nimport The_Veteran from './GearHeavy';\nimport The_Stranded from './GearStranded';\n\nlet Characters = () => {\n  return {\n    The_Scout,\n    The_Veteran,\n    The_Stranded,\n  }\n}\n\nexport default Characters;","import React from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport { SCREENS } from './Screen/constants';\nimport Screens from './Screen/index';\nimport Characters from './Characters/index';\nimport Modes from './Modes/index';\nimport SOUNDS from './sounds';\n\nclass Nystrum extends React.Component {\n  constructor() {\n    super();\n    let characterKey = Characters();\n    let characters = Object.keys(characterKey).map((key, i) => {\n      return {\n        initialize: characterKey[key],\n        selected: false,\n        name: key.split('_').join(' '),\n      }\n    });\n\n    let modes = Object.keys(Modes).map((key, i) => {\n      return {\n        class: Modes[key],\n        selected: false,\n        name: key.split('_').join(' '),\n      }\n    });\n\n    this.state = {\n      activeScreen: SCREENS.TITLE,\n      characters,\n      modes,\n      selectedCharacter: null,\n      selectedMode: modes[0],\n    };\n  }\n\n  setActiveScreen (activeScreen) {\n    if (activeScreen === SCREENS.TITLE) {\n      Object.keys(SOUNDS).forEach(key => {\n        SOUNDS[key].stop();\n      });\n    }\n    this.setState({activeScreen})\n  }\n\n  setSelectedCharacter (character) {\n    this.setState({selectedCharacter: {...character}})\n  }\n\n  setSelectedMode (mode) {\n    this.setState({selectedMode: mode})\n  }\n\n  getActiveScreen () {\n    const characterScreen = <Screens.CharacterSelect \n      key={SCREENS.CHARACTER_SELECT} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n      />\n      const titleScreen = <Screens.Title \n      key={SCREENS.TITLE} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n    />\n    const loseScreen = <Screens.Lose \n      key={SCREENS.LOSE} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n    />\n    const winScreen = <Screens.Win \n      key={SCREENS.WIN} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n    />\n    const levelScreen = <Screens.Level \n      key={SCREENS.LEVEL} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      selectedMode={this.state.selectedMode}\n    />\n\n    switch (this.state.activeScreen) {\n      case SCREENS.CHARACTER_SELECT:\n        return characterScreen\n      case SCREENS.TITLE:\n        return titleScreen\n      case SCREENS.LOSE:\n        return loseScreen\n      case SCREENS.WIN:\n        return winScreen\n      case SCREENS.LEVEL:\n        return levelScreen\n      default:\n        return titleScreen\n    }\n  }\n\n  render() {\n    const activeScreen = this.getActiveScreen();\n    return (\n      <div className=\"Nystrum\">\n        <ReactCSSTransitionGroup\n          transitionName=\"fade\"\n          transitionAppear={true}\n          transitionEnter={true}\n          transitionLeave={true}\n          transitionAppearTimeout={500}\n          transitionEnterTimeout={500}\n          transitionLeaveTimeout={300}\n        >\n          { activeScreen }\n        </ReactCSSTransitionGroup>\n      </div>\n    );\n  }\n}\n\nexport default Nystrum;\n","import React from 'react';\nimport './App.css';\nimport Nystrum from './nystrum/Nystrum';\n\nfunction App() {\n  return (\n    <div className=\"App container-fluid\">\n      <Nystrum />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}