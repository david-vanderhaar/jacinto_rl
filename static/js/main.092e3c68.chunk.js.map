{"version":3,"sources":["nystrum/Screen/constants.js","helper.js","nystrum/Entities/Entity.js","nystrum/constants.js","nystrum/Actions/ActionResources/ActionResource.js","nystrum/Actions/ActionResources/EnergyResource.js","nystrum/Actions/Base.js","nystrum/Actions/DestroySelf.js","nystrum/Actions/EngineCrank.js","nystrum/Entities/Parent.js","nystrum/Display/konvaCustom.js","nystrum/message.js","nystrum/Entities/Attacking.js","nystrum/Entities/RangedAttacking.js","nystrum/Entities/Equipable.js","nystrum/Entities/Acting.js","nystrum/Entities/Rendering.js","nystrum/Entities/Containing.js","nystrum/sounds.js","nystrum/Entities/Playing.js","nystrum/Entities/helper.js","nystrum/Actions/Say.js","nystrum/Actions/Attack.js","nystrum/Actions/Move.js","nystrum/Actions/ThrowProjectile.js","nystrum/Actions/SelfDestructiveAttack.js","nystrum/Actions/ProjectileMove.js","nystrum/Entities/DirectionalProjecting.js","nystrum/Actions/Shove.js","nystrum/Actions/ThrowProjectileGas.js","nystrum/Entities/Chasing.js","nystrum/Actions/PlaceActor.js","nystrum/Entities/Draggable.js","nystrum/Entities/Pushable.js","nystrum/items.js","nystrum/Entities/Destructable.js","nystrum/Entities/Burnable.js","nystrum/Entities/Exploding.js","nystrum/Entities/HasKeymap.js","nystrum/Entities/Upgradable.js","nystrum/Entities/HasFaction.js","nystrum/Entities/index.js","nystrum/Entities/UI.js","nystrum/Entities/Speaking.js","nystrum/Entities/Helpless.js","nystrum/Entities/Covering.js","nystrum/Entities/DirectionalPushing.js","nystrum/Entities/RangedChasing.js","nystrum/Entities/PresentingUI.js","nystrum/Entities/HasTargetingCursor.js","nystrum/Entities/Dragging.js","nystrum/Entities/Charging.js","nystrum/Entities/Signing.js","nystrum/Entities/Equiping.js","nystrum/Entities/Cloning.js","nystrum/Entities/HasShapePattern.js","nystrum/Entities/DestructiveProjecting.js","nystrum/Entities/GaseousDestructiveProjecting.js","nystrum/Entities/Gaseous.js","nystrum/Entities/Spreading.js","nystrum/Entities/Spawning.js","nystrum/Entities/IsParticle.js","nystrum/Engine/engine.js","nystrum/Maps/helper.js","nystrum/Maps/generator.js","nystrum/Modes/Jacinto/theme.js","nystrum/Items/Pickups/Ammo.js","nystrum/Items/Weapons/Grenade.js","nystrum/Modes/index.js","nystrum/Modes/Jacinto/jacinto.js","nystrum/Modes/default.js","nystrum/game.js","nystrum/UI/Instructions.js","nystrum/UI/Button.js","nystrum/UI/Information.js","nystrum/UI/Tooltip.js","nystrum/UI/ActionBar.js","nystrum/UI/Entity/CharacterCard.js","nystrum/UI/Entity/PlayerInformation.js","nystrum/UI/Inventory.js","nystrum/UI/Messages.js","nystrum/Actions/EquipItemFromContainer.js","nystrum/UI/Jacinto/Equipment.js","nystrum/UI/Jacinto/Help.js","nystrum/Screen/Level.js","nystrum/Screen/Title.js","nystrum/Screen/Lose.js","nystrum/Screen/Win.js","nystrum/UI/CharacterSelect.js","nystrum/Screen/CharacterSelect.js","nystrum/UI/ModeSelect.js","nystrum/Screen/index.js","nystrum/Screen/ModeSelect.js","nystrum/Actions/GoToPreviousKeymap.js","nystrum/Actions/PrepareDirectionalThrow.js","nystrum/Actions/MoveRangedAttackCursor.js","nystrum/Actions/MultiTargetRangedAttack.js","nystrum/Actions/PrepareRangedAttack.js","nystrum/Actions/OpenInventory.js","nystrum/Actions/Upgrade.js","nystrum/Actions/ActionResources/UpgradeResource.js","nystrum/Actions/OpenUpgrades.js","nystrum/Actions/PickupAllItems.js","nystrum/Actions/Reload.js","nystrum/Characters/GearLight.js","nystrum/Items/Weapons/Lancer.js","nystrum/Items/Weapons/Snub.js","nystrum/Actions/Tackle.js","nystrum/Actions/MoveMultiple.js","nystrum/Actions/PrepareTackle.js","nystrum/Characters/GearHeavy.js","nystrum/Items/Weapons/RetroLancer.js","nystrum/Items/Weapons/Gnasher.js","nystrum/Characters/GearStranded.js","nystrum/Items/Weapons/Longshot.js","nystrum/Items/Weapons/Boltok.js","nystrum/Characters/index.js","nystrum/Nystrum.js","App.js","serviceWorker.js","index.js"],"names":["SCREENS","delay","timeDelayed","Promise","resolve","setTimeout","clamp","value","min","max","Math","getRandomInArray","array","floor","random","length","getRandomInt","ceil","coordsToString","coords","x","y","isPassableDefault","game","tile","map","tileKey","type","passable","calculatePath","targetPos","currentPos","topology","isPassable","isPassableCallback","astar","ROT","AStar","path","compute","push","slice","lerp_point","p0","p1","t","lerp","start","end","calculateStraightPath","p","points","N","dx","dy","abs","diagonal_distance","step","round","getPositionInDirection","pos","direction","calculatePathWithRange","range","getRandomPos","keys","Object","key","split","coordinates","parseInt","text","getDestructableEntities","entites","filter","entity","hasOwnProperty","getGranularity","radius","pow","getPointsOnCircumference","centerX","centerY","r","n","list","i","cos","PI","sin","Entity","name","id","uuid","this","entityTypes","active","COLORS","THEMES","base03","base02","base01","base00","base0","base1","base2","base3","yellow","orange","red","magenta","violet","blue","cyan","green","TILE_KEY","background","foreground","character","sprite","animation","DIRECTIONS","NE","W","NW","SW","S","SE","E","NONE","EQUIPMENT_TYPES","EQUIPMENT_LAYOUTS","item","CLONE_PATTERNS","point","x_offset","y_offset","positions","taken","triple_point","spread","verticalLine","smallSquare","square","bigSquare","circle","Helper","PARTICLE_TEMPLATES","default","renderer","color","fail","succede","damage","leaf","water","PARTICLE_TYPE","ActionResource","getResourceCost","actorResourcePath","actorResourceGetter","actorResourceSetter","EnergyResource","args","Base","actor","label","hidden","energyCost","processDelay","particles","particleTemplate","Constant","onBefore","onAfter","onSuccess","onFailure","interrupt","requiredResources","life","particle","Particle","energy","setNextAction","_","resource","actorVariable","canPay","listPayableResources","resourceCost","success","alternative","DestroySelf","destroy","EngineCrank","engine","console","log","Parent","superclass","children","CrankEngine","concat","isInitialized","child","entities","e","actors","draw","includes","forEach","destroyChild","canAttack","bind","placeActorOnMap","addActor","initialize","ANIMATION_TYPES","Animation","display","lifeTime","node","frame","timeDiff","getActive","removeAnimation","ExampleAnimation","BlinkTile","lerpDirection","rect","Konva","Rect","tileWidth","tileOffset","tileGutter","tileHeight","offsetX","offsetY","width","height","fill","strokeEnabled","transformsEnabled","perfectDrawEnabled","listening","shadowForStrokeEnabled","animationLayer","add","opacity","Display","containerId","stage","layer","animations","animationLoop","document","d","getElementById","displayContainer","createElement","appendChild","Stage","container","Layer","hitGraphEnabled","update","isRunning","stop","display_element","offsetWidth","mapWidth","mapHeight","anim","Group","Text","fontSize","fontFamily","align","verticalAlign","batchDraw","MESSAGE_TYPE","INFORMATION","backgroundColor","ACTION","DANGER","STATUS_EFFECT","ERROR","Message","Attacking","attackDamage","additional","targets","target","getAttackDamage","equipment","slot","addMessage","decreaseDurability","RangedAttacking","attackRange","baseRangedAccuracy","baseRangedDamage","magazineSize","magazine","weaponAccuracy","getRangedWeaponAccuracy","coverDebuff","getRangedAttackCoverDebuff","distanceDebuff","getRangedAttackDistanceDebuff","result","getPosition","reduce","acc","curr","entitiesProvidingCover","coverModifer","accuracyModifer","getAttackRange","accuracy","getRangedAttackChance","getRangedWeaponDamage","getRangedAttackDamage","getEquipedWeapons","weapon","reloaded","amount","ammo","contains","removeFromContainer","additionalDamage","additionalAccuracy","hit","attackChance","hitChance","useAmmo","canRangedAttack","Equipable","equipmentType","Acting","actions","speed","action","Rendering","currentFrame","canOccupyPosition","targetTile","pushable","newPos","move","ContainerSlot","itemType","items","Containing","slots","index","findIndex","createSlot","it","splice","fire_0","Howl","src","window","PUBLIC_URL","volume","loop","fire_1","scream_0","scream_1","scream_2","water_0","water_1","chop_0","chop_1","equip_0","equip_1","explosion_0","save","lose","grab_0","release_0","Playing","keymap","nextAction","destroyEntity","removeStatusEffectByActorId","Say","message","messageType","Attack","attack","SOUNDS","play","addParticle","Move","ThrowProjectile","move_result","shift","SelfDestructiveAttack","damageToSelf","decreaseDurabilityWithoutDefense","ProjectileMove","DirectionalProjecting","setActorToPrevious","Shove","shove","ThrowProjectileGas","Chasing","targetEntity","PlaceActor","forcePlacement","addActorAsNext","Draggable","draggable","Pushable","TYPE","directionalKunai","DirectionalProjectile","Destructable","durability","defense","onDestroy","durabilityMax","actorSprite","actorCharacter","getDefense","current","newDurability","updateActorRenderer","Burnable","canBurn","willResetCanBurn","Exploding","flammability","explosivity","Array","FireSpread","timeToSpread","spreadCount","fire","structure","position","enflame","explode","HasKeymap","initializeKeymap","keymapStack","addKeymap","newKeymap","unshift","ignoredKeys","getKeymap","removeKeymap","Upgrade","activate","canUpgrade","cost","removeOnActivate","HasFaction","faction","CoverWall","pipe","initiatedBy","messages","saved","damageModifer","providesCover","Bandit","RangedBandit","getProjectile","pathToCheck","inPath","throwDirection","sign","projectile","createPath","targetInPath","movePath","Player","presentingUI","cursorIsActive","cursorPositions","setCursorPositions","setCursorIsActive","resetAnimations","removeAnimations","getCursorPositions","newAnimation","addAnimation","addAnimations","distance","newPositons","draggedEntity","lastPos","moveSuccess","drag","charge","chargeMax","signHistory","itemName","slotName","find","foundSlot","cloneLimit","clones","clone","c","super__destroy","cloneArgs","cloneDeep","reinitializeKeymap","destroyClone","arg","attribute","upgrade_points","upgrade_tree","upgrade","newTree","currUpgrade","RangedWeapon","shapePattern","initialPosition","Ammo","Grenade","owner_id","isClone","cloneCount","clonePattern","offset","cloneDeepWith","referencePos","timeToSpreadMax","spreadCountMax","adjacentPositions","adjacentPos","kill","newTile","tileExists","Boolean","notBurnt","EmergenceHole","getSpawnedEntity","nextPos","getNextPos","Engine","statusEffects","currentActor","gainEnergy","hasEnoughEnergy","getAction","perform","getFirstPlayer","acting","timePassed","getEnergyCost","canPayRequiredResources","payRequiredResources","processActionFX","shouldAutoRun","processStatusEffects","sortActorsByEnergy","processV2","setVisibleKeymap","updateMode","updateReact","visibleKeymap","sort","a","b","newEffect","allowDuplicates","effect","onStart","onStop","actorId","lifespan","timeToLive","timeSinceLastStep","stepInterval","onStep","removeDeadStatusEffects","actionSuccess","removeActorFromMap","removeDeadParticles","process","mode","addTileZone","origin","j","generate","unitCount","unitSize","data","floorPlan","createFloorPlan","unit","createRoomInFloorPlan","unitPosition","getUnitPosition","didCreate","createUnit","removeInnerWalls","addInnerWalls","newUnit","getNeighboringUnit","unitAlreadyExists","unitExists","pnt","pos_two","pos_one","getNeighboringPoints","existingUnits","floorPlanPos","mapOffsetX","mapOffsetY","eightWay","neighbors","size","border","unitCollidesWithEdge","newPosition","coordArray","count","corners","wallCount","corner","wallNeighbors","selectedWallPos","build","currentPosition","previousFloorPositions","prevPos","STAT_RENDERERS","AmmoEntity","GrenadeEntity","Jacinto","level","highestLevel","turnCount","dataByLevel","enemies","emergenceHoles","ammoLoot","grenadeLoot","createEmptyLevel","initializeMapTiles","setWaveData","MapHelper","generateBuilding","placePlayersInSafeZone","player","groundTiles","floorTiles","enemyName","posXY","coord","addCover","addEmerenceHole","addAmmoLoot","addGrenadeLoot","getPlayers","currentBlips","maxBlips","arr","createOrUpdateInfoBlock","join","hasWon","toWin","hasLost","toLose","reset","initializeGameData","levelComplete","nextLevel","setLevel","nextLevelData","playerOnExit","playerIsOnExit","enemiesDefeated","activateExitTiles","players","spawnPosition","banditStats","getBanditStats","entityClass","chance","Item","createAmmoStack","box","banditLevels","infoBlocks","progressBars","merge","Game","entityMap","entityDictionary","mapInitialized","tileMap","cameraWidth","cameraHeight","getSelectedCharacter","spriteMode","Mode","Flume","MAP_WIDTH","MAP_HEIGHT","placed","randomlyPlaceActorOnMap","ac","digger","Arena","freeCells","create","randomlyPlaceAllActorsOnMap","tiles","hasImpassableEntity","fullMap","referencePosition","renderWidth","renderHeight","fullWidth","fullHeight","renderPaddingX","renderPaddingY","parts","finalX","finalY","callback","getRenderMap","getPlayerPosition","tileRenderer","nextFrame","animateTile","renderedEntities","animateEntity","processTileMap","createTile","updateTile","getRenderer","getEntityRenderer","getTileRenderer","isPlaced","placeActorsOnMap","presserRef","show","focus","selectedCharacter","initializeMode","initializeUI","handleKeyPress","event","code","setAsNextAction","Instructions","infoHeader","props","className","onClick","location","reload","toggleSpriteMode","data-target","React","Component","Button","Tooltip","title","ResourceBlock","superScript","style","borderColor","ActionBar","entries","reqs","refocus","req","numBlocks","Portrait","StatusEffect","StatusEffects","getStatusEffectsByActorId","NamePlate","ProgressBar","colorFilled","colorEmpty","attributePathMax","attributePath","valueMax","valueCurrent","blip","CharacterCard","PlayerInformation","EquipItemFromContainer","itemInSlot","getItemInSlot","addToContainer","unequip","equip","StatBlock","stat","getIcon","EquipmentCard","equipped","needsReload","equipable","stats","meleeDamage","Equipment","Help","useLayoutEffect","elems","querySelectorAll","M","Modal","init","href","Level","ENGINE","selectedMode","class","state","activeTab","createRef","setActiveScreen","newGameState","setState","ref","onKeyDown","tabIndex","Title","margin","Lose","Win","CharacterSelect","characters","setSelectedCharacter","ModeSelect","modes","top","setSelectedMode","backgroundImage","backgroundRepeat","backgroundPosition","backgroundPositionY","GoToPreviousKeymap","goToPreviousKeymap","PrepareDirectionalThrow","passThroughEnergyCost","passThroughRequiredResources","projectileType","cursor_positions","none","dir","activateCursor","deactivateCursor","Escape","w","s","setKeymap","MoveRangedAttackCursor","initiatedFrom","isInRange","pathIsNotBlocked","rangedCursorCanOccupyPosition","moveCursorInDirection","MultiTargetRangedAttack","targetPositions","weapons","particlePath","particlePos","rangedAttack","attackSuccess","PrepareRangedAttack","pathAnimations","pathPos","changeCursorColor","equippedWeapon","getPositionsInShape","deactivatePathAnimations","updateCursors","f","OpenInventory","visibleInventory","UpgradeResource","OpenUpgrades","PickupAllItems","Reload","lancer","Lancer","increaseDurability","newX","newY","u","g","grenades","snub","Snub","Tackle","stepCount","PrepareTackle","primary","RetroLancer","secondary","Gnasher","Longshot","Boltok","Characters","The_Scout","The_Veteran","The_Stranded","Nystrum","characterKey","selected","Modes","activeScreen","characterScreen","Screen","titleScreen","loseScreen","winScreen","levelScreen","getActiveScreen","transitionName","transitionAppear","transitionEnter","transitionLeave","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","App","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.092e3c68.chunk.js","sourcesContent":["export const SCREENS = {\n  TITLE: 'Title',\n  LEVEL: 'Level',\n  LOSE: 'Lose',\n  WIN: 'Win',\n  CHARACTER_SELECT: 'CharacterSelect',\n  MODE_SELECT: 'ModeSelect',\n}","import * as ROT from 'rot-js';\n\nexport const delay = (timeDelayed = 100) => {\n  // return;\n  if (timeDelayed <= 0) return;\n  return new Promise(resolve => setTimeout(resolve, timeDelayed));\n}\n\nexport const clamp = (value, min, max) => {\n  return Math.min(Math.max(value, min), max);\n};\n\nexport const getRandomInArray = (array) => {\n  return array[Math.floor(Math.random() * array.length)];\n}\n\nexport const getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nexport const getRandomIntInclusive = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport const coordsAreEqual = (pos_one, pos_two) => pos_one.x === pos_two.x && pos_one.y === pos_two.y\n\nexport const coordsToString = (coords) => `${coords.x},${coords.y}`\n\nconst isPassableDefault = (game) => (x, y) => {\n  const tile = game.map[x + \",\" + y];\n  if (tile) {\n    return (game.tileKey[tile.type].passable);\n  } else {\n    return false\n  }\n}\n\nexport const calculatePath = (game, targetPos, currentPos, topology = 4, isPassable = isPassableDefault) => {\n  let map = game.map\n  let isPassableCallback = isPassable(game);\n  let astar = new ROT.Path.AStar(targetPos.x, targetPos.y, isPassableCallback, { topology });\n  let path = [];\n  astar.compute(currentPos.x, currentPos.y, function (x, y) {\n    path.push({ x, y })\n  });\n\n  return path.slice(1);\n}\n\nconst diagonal_distance = (p0, p1) => {\n  let dx = p1.x - p0.x, dy = p1.y - p0.y;\n  return Math.max(Math.abs(dx), Math.abs(dy));\n}\n\nconst round_point = (p) => {\n  return {x: Math.round(p.x), y: Math.round(p.y)};\n}\n\nconst lerp_point = (p0, p1, t) => {\n  return {\n    x: lerp(p0.x, p1.x, t),\n    y: lerp(p0.y, p1.y, t)\n  };\n}\n\nconst lerp = (start, end, t) => {\n  return start + t * (end - start);\n}\n\nexport const calculateStraightPath = (p0, p1) => {\n  let points = [];\n  let N = diagonal_distance(p0, p1);\n  for (let step = 0; step < N; step++) {\n    let t = N === 0 ? 0.0 : step / N;\n    points.push(round_point(lerp_point(p0, p1, t)));\n  }\n  return points;\n}\n\nexport const getPositionInDirection = (pos, direction) => {\n  return {x: pos.x + direction[0], y: pos.y + direction[1]}\n}\n\nexport const calculatePathWithRange = (game, targetPos, currentPos, topology, range) => {\n  let path = calculatePath(game, targetPos, currentPos, topology);\n  return path.slice(0, range + 1);\n}\n\nexport const getRandomPos = (map) => {\n  let keys = Object.keys(map);\n  let key = getRandomInArray(keys).split(',');\n  let pos = { x: parseInt(key[0]), y: parseInt(key[1])}\n  return {coordinates: pos, text: key}\n}\n\nexport const getDestructableEntities = (entites) => {\n  return entites.filter((entity) => entity.hasOwnProperty('durability'));\n}\n\nexport const filterEntitiesByType = (entites, type) => {\n  return entites.filter((entity) => entity.entityTypes.includes(type));\n}\n\nconst getGranularity = (radius) => {\n  let result = (2 / 3) * (Math.pow(radius, 3) - (9 * Math.pow(radius, 2)) + (32 * radius) - 18)\n  return result\n}\n\nexport const getPointsOnCircumference = (centerX = 0, centerY = 0, r = 3) => {\n  const n = getGranularity(r);\n  let list = [];\n  for (let i = 0; i < n; i++) {\n    let x = Math.round(centerX + (Math.cos(2 * Math.PI / n * i) * r))\n    let y = Math.round(centerY + (Math.sin(2 * Math.PI / n * i) * r))\n    list.push({ x, y });\n  }\n  return list\n}\n\nexport const getPositionsFromStructure = (structure, initialPosition) => {\n  return structure.positions.map((slot) => {\n    let position = {\n      x: initialPosition.x + slot.x + structure.x_offset,\n      y: initialPosition.y + slot.y + structure.y_offset\n    }\n    return position\n  })\n}\n","import uuid from 'uuid/v1';\nexport class Entity {\n  constructor({ game = null, passable = false, name = 'nameless' }) {\n    let id = uuid();\n    this.entityTypes = ['Entity'];\n    this.id = id;\n    this.name = name;\n    this.game = game;\n    this.passable = passable;\n    this.active = true;\n  }\n}\n","import * as Helper from '../helper'\n\nexport const ENERGY_THRESHOLD = 100;\n\nexport const COLORS = {\n  black_1: '#424242',\n  gray_1: '#262d37',\n  gray_2: '#606b79',\n  gray_4: '#B7C3CD',\n  gray_5: '#CED5DD',\n  green_1: '#1d533c',\n  green_2: '#227743',\n  green_3: '#2d9c59',\n  red_4: '#D82D33',\n  red_5: '#E16264',\n  purple_3: '#c45ffd',\n}\n\nexport const THEMES = {\n  NARUTO: {\n    gaara: '#603030',\n    rock_lee: '#155859',\n  },\n  SOLARIZED: {\n    base03: '#002b36',\n    base02: '#073642',\n    base01: '#586e75',\n    base00: '#657b83',\n    base0: '#839496',\n    base1: '#93a1a1',\n    base2: '#eee8d5',\n    base3: '#fdf6e3',\n    yellow: '#b58900',\n    orange: '#cb4b16',\n    red: '#dc322f',\n    magenta: '#d33682',\n    violet: '#6c71c4',\n    blue: '#268bd2',\n    cyan: '#2aa198',\n    green: '#859900',\n  },\n  JACINTO: {\n    // base1: '#07111Dff',\n    base1: '#0B0B0Bff',\n    base2: '#5A7178ff',\n    base3: '#B6ACA3ff',\n    base4: '#EDF6F1ff',\n    cog1: '#2d5fc9',\n    cog2: '#18c0f8',\n    cog3: '#86C8E4ff',\n    // locust2: '#E19D3Fff',\n    locust1: '#96641Dff',\n    locust2: '#F89339ff',\n    locust3: '#E7C898ff',\n    flesh1: '#833139ff',\n    flesh2: '#CC7468ff',\n    flesh3: '#DDA78Fff',\n    gray: '#6D7886ff',\n    red: '#C7141Cff',\n    yellow: '#b58900',\n    green: '#859900',\n  },\n}\n\nexport const NPC_NAME = 'Helpless Citizen';\nexport const PLAYER_NAME = 'Fire Fighter';\n\nexport const TILE_KEY = {\n  'GROUND': {\n    background: THEMES.SOLARIZED.base03,\n    foreground: THEMES.SOLARIZED.base01,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'FLOOR': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base0,\n    character: '',\n    passable: true,\n  },\n  'SAFE_FLOOR': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base0,\n    character: '',\n    passable: true,\n  },\n  'BURNT': {\n    background: THEMES.SOLARIZED.base03,\n    foreground: THEMES.SOLARIZED.red,\n    character: 'X',\n    sprite: '',\n    passable: true,\n    animation: [\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'X', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'x', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'X', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.orange, character: 'x', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.orange, character: 'X', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.yellow, character: 'x', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'X', sprite: '', passable: true, },\n    ]\n  },\n  'WET': {\n    background: THEMES.SOLARIZED.base03,\n    foreground: THEMES.SOLARIZED.blue,\n    character: '=',\n    sprite: '',\n    passable: true,\n    animation: [\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '=', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '~', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '=', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.base0, character: '~', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.base1, character: '=', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.base1, character: '~', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '=', sprite: '', passable: true, },\n    ]\n  },\n  'WALL': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base2,\n    character: '#',\n    sprite: '',\n    passable: false,\n  },\n  'DOOR': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base0,\n    character: '+',\n    sprite: '',\n    passable: true,\n  },\n  'SAFE': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.green,\n    character: '+',\n    sprite: '',\n    passable: true,\n  },\n\n  'WATER': {\n    animation: [\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#8aa', character: '▒', passable: false, },\n      { background: '#424242', foreground: '#8aa', character: '▓', passable: false, },\n    ],\n    background: '#9dc3d3',\n    character: '░',\n    passable: false,\n  },\n}\n\nexport const HAND_SIGNS = {\n  Power: {\n    type: 'Power',\n    name: 'Rin',\n    description: 'Strength of mind, body, spirit',\n  },\n  Energy: {\n    type: 'Energy',\n    name: 'Pyo',\n    description: 'energy direction',\n  },\n  Harmony: {\n    type: 'Harmony',\n    name: 'To',\n    description: 'one- ness with the universe or self',\n  },\n  Healing: {\n    type: 'Healing',\n    name: 'Sha',\n    description: 'of self and others',\n  },\n  Intuition: {\n    type: 'Intuition',\n    name: 'Kai',\n    description: 'premonition of danger, feeling others intent',\n  },\n  Awareness: {\n    type: 'Awareness',\n    name: 'Jin',\n    description: 'feeling thoughts of others, perhaps hiding your own',\n  },\n  Dimension: {\n    type: 'Dimension',\n    name: 'Retsu',\n    description: 'control of time and space',\n  },\n  Creation: {\n    type: 'Creation',\n    name: 'Zai',\n    description: 'understanding nature',\n  },\n  Absolute: {\n    type: 'Absolute',\n    name: 'Zen',\n    description: 'enlightenment',\n  }, \n}\n\nexport const DIRECTIONS = {\n  N: [0, -1],\n  NE: [1, -1],\n  W: [-1, 0],\n  NW: [-1, -1],\n  SW: [-1, 1],\n  S: [0, 1],\n  SE: [1, 1],\n  E: [1, 0],\n  NONE: [0, 0],\n}\n\nexport const getDirectionKey = (direction) => {\n  let directionString = `${direction}`;\n  let keys = Object.keys(DIRECTIONS);\n  let result = false\n  keys.forEach((key) => {\n    if (`${DIRECTIONS[key]}` === directionString) {\n      result = key\n    }\n  })\n  return result\n}\n\nexport const EQUIPMENT_TYPES = {\n  HEAD: 'HEAD',\n  TORSO: 'TORSO',\n  BACK: 'BACK',\n  HAND: 'HAND',\n  FEET: 'FEET',\n  GENERIC: 'GENERIC',\n}\n\nexport const EQUIPMENT_LAYOUTS = {\n  human: () => {\n    return [\n      {type: EQUIPMENT_TYPES.HEAD, name: 'head', item: null},\n      {type: EQUIPMENT_TYPES.TORSO, name: 'torso', item: null},\n      {type: EQUIPMENT_TYPES.BACK, name: 'back', item: null},\n      {type: EQUIPMENT_TYPES.HAND, name: 'left_hand', item: null},\n      {type: EQUIPMENT_TYPES.HAND, name: 'right_hand', item: null},\n      {type: EQUIPMENT_TYPES.FEET, name: 'feet', item: null},\n    ]\n  },\n  limited: () => {\n    return [\n      {type: EQUIPMENT_TYPES.GENERIC, name: 'slot_1', item: null},\n      {type: EQUIPMENT_TYPES.GENERIC, name: 'slot_2', item: null},\n    ]\n  },\n  gear: () => {\n    return [\n      { type: EQUIPMENT_TYPES.HAND, name: 'weapon', item: null },\n      // { type: EQUIPMENT_TYPES.TORSO, name: 'ammo', item: null },\n    ]\n  }\n}\n\nexport const CLONE_PATTERNS = {\n  point: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n    ]\n  },\n  triple_point: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 0, taken: false, },\n    ]\n  },\n  spread: {\n    x_offset: 1,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 1, y: 2, taken: false, },\n      { x: 1, y: -2, taken: false, },\n    ]\n  },\n  verticalLine: {\n    x_offset: 1,\n    y_offset: 1,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n    ]\n  },\n  smallSquare: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n    ]\n  },\n  square: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 1, y: -1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: -1, y: -1, taken: false, },\n      { x: -1, y: 0, taken: false, },\n      { x: -1, y: 1, taken: false, },\n    ]\n  },\n  bigSquare: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 1, y: -1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: -1, y: -1, taken: false, },\n      { x: -1, y: 0, taken: false, },\n      { x: -1, y: 1, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 2, y: 2, taken: false, },\n      { x: 2, y: 0, taken: false, },\n      { x: 2, y: -2, taken: false, },\n      { x: 0, y: -2, taken: false, },\n      { x: -2, y: -2, taken: false, },\n      { x: -2, y: 0, taken: false, },\n      { x: -2, y: 2, taken: false, },\n    ],\n  },\n  circle: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      ...Helper.getPointsOnCircumference(0, 0, 2),\n      ...Helper.getPointsOnCircumference(0, 0, 3)\n    ]\n  },\n}\n\nexport const PARTICLE_TEMPLATES = {\n  default: {\n    renderer: {\n      character: '*',\n      color: 'black',\n      background: 'white',\n    }\n  },\n  fail: {\n    renderer: {\n      character: 'x',\n      color: 'black',\n      background: 'red',\n    }\n  },\n  succede: {\n    renderer: {\n      character: 'x',\n      color: THEMES.SOLARIZED.base3,\n      background: THEMES.SOLARIZED.green,\n    }\n  },\n  damage: {\n    renderer: {\n      character: '*',\n      color: 'darkred',\n      background: 'red',\n    }\n  },\n  leaf: {\n    renderer: {\n      character: '✤',\n      color: '#36635b',\n      background: '#F0D8C0',\n    }\n  },\n  water: {\n    renderer: {\n      character: '~',\n      color: THEMES.SOLARIZED.base3,\n      background: THEMES.SOLARIZED.blue,\n    }\n  },\n}\n\nexport const PARTICLE_TYPE = {\n  directional: 0,\n  path: 1,\n}\n\nexport const ALPHABET = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];","export class ActionResource {\n  constructor({\n    name = 'Resource',\n    getResourceCost = () => null,\n    actorResourcePath = null,\n    actorResourceGetter = null,\n    actorResourceSetter = null,\n    renderer = {background: 'transparent', color: 'black', character: '*'}\n  }) {\n    this.name = name;\n    this.getResourceCost = getResourceCost;\n    this.actorResourcePath = actorResourcePath;\n    this.actorResourceGetter = actorResourceGetter;\n    this.actorResourceSetter = actorResourceSetter;\n    this.renderer = renderer;\n  }\n}\n","import {ActionResource} from './ActionResource';\n\nexport class EnergyResource extends ActionResource {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.name = 'Energy';\n    this.actorResourcePath = 'energy';\n    this.renderer = { color: 'black', background: '#ff9926', character: '8', sprite: '' }\n  }\n}","import * as _ from 'lodash';\nimport { Particle } from '../Entities/index';\nimport * as Constant from '../constants';\nimport {EnergyResource} from './ActionResources/EnergyResource';\n\nexport class Base {\n  constructor({ \n    game,\n    actor,\n    label = 'action label',\n    hidden = false,\n    energyCost = Constant.ENERGY_THRESHOLD, \n    processDelay = 50, \n    particles = [], \n    renderer = null, \n    particleTemplate = Constant.PARTICLE_TEMPLATES.default, \n    onBefore = () => null, \n    onAfter = () => null, \n    onSuccess = () => null, \n    onFailure = () => null, \n    interrupt = false, \n    requiredResources = [],\n  }) {\n    this.actor = actor;\n    this.game = game;\n    this.label = label;\n    this.hidden = hidden;\n    this.energyCost = energyCost;\n    this.processDelay = processDelay;\n    this.particles = particles;\n    this.renderer = renderer;\n    this.particleTemplate = particleTemplate;\n    this.onBefore = onBefore;\n    this.onAfter = onAfter;\n    this.onSuccess = onSuccess;\n    this.onFailure = onFailure;\n    this.interrupt = interrupt;\n    this.requiredResources = [new EnergyResource({ getResourceCost: () => this.energyCost }), ...requiredResources];\n  }\n\n  addParticle(\n    life, \n    pos, \n    direction, \n    renderer = { ...this.particleTemplate.renderer }, \n    type = Constant.PARTICLE_TYPE.directional, \n    path = null\n  ) {\n    let particle = new Particle({\n      game: this.game,\n      name: 'particle',\n      passable: true,\n      life,\n      pos,\n      direction,\n      energy: 100,\n      renderer,\n      type,\n      path,\n    });\n    this.particles.push(particle);\n  }\n\n  removeDeadParticles() {\n    this.particles = this.particles.filter((particle) => particle.life > 0);\n  }\n\n  setAsNextAction() {\n    this.actor.setNextAction(this);\n  }\n\n  getEnergyCost() {\n    return _.find(this.requiredResources, {name: 'Energy'}).getResourceCost();\n  }\n\n  getRequiredResourceName() {\n    return _.map(this.requiredResources, 'name');\n  }\n\n  listPayableResources() {\n    return _.map(this.requiredResources, (resource) => {\n      const getResourceCost = resource.getResourceCost; \n      const actorResourcePath = resource.actorResourcePath; \n      const actorResourceGetter = resource.actorResourceGetter;\n\n      const actorVariable = _.get(this.actor, actorResourcePath, null);\n      \n      let canPay = false;\n      // if the actor has provided a setter for this variable, use that \n      if (_.get(this.actor, actorResourceGetter, null) !== null) {\n        canPay = this.actor[actorResourceGetter]() >= getResourceCost();\n      } else if (actorVariable !== null) {\n        // else if the actor has a path to the appropriate variable, get that value and set it manually\n        canPay = actorVariable >= getResourceCost();\n      }\n\n      return {\n        canPay,\n        ...resource\n      }\n    })\n  }\n\n  canPayRequiredResources() {\n    return !_.find(this.listPayableResources(), {'canPay': false});\n  }\n\n  payRequiredResources() {\n    _.each(this.requiredResources, (resource) => {\n      const getResourceCost = resource.getResourceCost;\n      const actorResourcePath = resource.actorResourcePath;\n      const actorResourceSetter = resource.actorResourceSetter;\n      \n      const actorVariable = _.get(this.actor, actorResourcePath, null);\n      const resourceCost = getResourceCost();\n      // if the actor has provided a setter for this variable, use that \n      if (_.get(this.actor, actorResourceSetter, null)) {\n        this.actor[actorResourceSetter](actorVariable - resourceCost)\n        return true;\n      }\n\n      // else if the actor has a path to the appropriate variable, get that value and set it manually\n      if (actorVariable) {\n        this.actor[actorResourcePath] -= resourceCost;\n        return true;\n        // return _.set(this.actor, actorResourcePath, actorVariable - getResourceCost());\n      }\n      return false;\n    })\n  }\n  \n  perform() {\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n\n}","import { Base } from './Base';\nexport class DestroySelf extends Base {\n  constructor({ processDelay = 0, ...args }) {\n    super({ ...args });\n    this.processDelay = processDelay;\n  }\n  perform() {\n    // console.log(`${this.actor.name} is self-destructing`);\n    this.actor.energy -= this.energyCost;\n    this.actor.destroy();\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { DestroySelf } from './DestroySelf';\nimport * as Constant from '../constants';\n\nexport class EngineCrank extends Base {\n  constructor({ engine, ...args }) {\n    super({ ...args });\n    this.engine = engine;\n  }\n  async perform() {\n    let success = true;\n    let alternative = null;\n    console.log(`${this.actor.name} is cranking its engine.`);\n    try {\n      await this.engine.start();\n      this.actor.energy -= this.energyCost;\n    }\n    catch (error) {\n      console.log('EngineCrank');\n      console.log(error);\n      alternative = new DestroySelf({\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { CrankEngine } from '../Engine/engine';\nimport { EngineCrank } from '../Actions/EngineCrank';\n\nexport const Parent = superclass => class extends superclass {\n  constructor({ children = [], engine = new CrankEngine({}), ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('PARENT');\n    this.children = children;\n    this.engine = engine;\n    this.isInitialized = false;\n  }\n  destroyChild(child) {\n    child.energy = 0;\n    let tile = this.game.map[Helper.coordsToString(child.pos)];\n    this.game.map[Helper.coordsToString(child.pos)].entities = tile.entities.filter((e) => e.id !== child.id);\n    this.engine.actors = this.engine.actors.filter((e) => e.id !== child.id);\n    this.game.draw();\n  }\n  canAttack(entity) {\n    const childIds = this.children.map((child) => child.id);\n    return !childIds.includes(entity.id);\n  }\n  initialize() {\n    this.isInitialized = true;\n    this.engine.game = this.game;\n    this.engine.actors = this.children;\n    this.engine.actors.forEach((actor) => {\n      actor.game = this.game;\n      actor.destroy = () => { this.destroyChild(actor); };\n      actor.canAttack = this.canAttack.bind(this);\n      // actor.canAttack = (entity) => {this.canAttack(entity)};\n      this.game.placeActorOnMap(actor);\n      this.engine.addActor(actor);\n      this.game.draw();\n    });\n  }\n  getAction(game) {\n    // crank engine one turn\n    if (!this.isInitialized) {\n      this.initialize();\n    }\n    let result = new EngineCrank({\n      game,\n      actor: this,\n      engine: this.engine,\n      energyCost: Constant.ENERGY_THRESHOLD,\n      processDelay: 10\n    });\n    return result;\n  }\n};\n","import Konva from 'konva';\nimport uuid from 'uuid/v1';\nimport * as Helper from '../../helper';\n\nexport const ANIMATION_TYPES = {\n  DEFAULT: 0,\n  BLINK_TILE: 1,\n  SOLID_TILE: 2,\n}\n\nclass Animation {\n  constructor({display}) {\n    const id = uuid();\n    this.id = id;\n    this.lifeTime = 0;\n    this.active = true;\n    this.display = display;\n    this.node = null;\n  }\n\n  getActive () {\n    return false;\n  }\n\n  initialize () {\n    return;\n  }\n\n  update (frame) {\n    this.lifeTime += frame.timeDiff;\n    this.active = this.getActive();\n    if (!this.active) {\n      this.display.removeAnimation(this.id);\n    }\n  }\n}\n\nclass ExampleAnimation extends Animation {\n  constructor({...args}) {\n    super({...args})\n  }\n\n  getActive () {\n    if (this.lifeTime > 500) {\n      return false;\n    }\n    return true;\n  }\n}\n\nclass BlinkTile extends Animation {\n  constructor({\n    x,\n    y,\n    lerpDirection = -1,\n    color = '#fff',\n    ...args\n  }) {\n    super({ ...args });\n    this.x = x;\n    this.y = y;\n    this.lerpDirection = lerpDirection;\n    this.color = color;\n  }\n\n  getActive () {\n    return this.active;\n  }\n\n  initialize () {\n    this.active = true;\n    let rect = new Konva.Rect({\n      name: 'rect',\n      x: (this.display.tileWidth * this.x) + (this.display.tileOffset + this.display.tileGutter),\n      y: (this.display.tileHeight * this.y) + (this.display.tileOffset + this.display.tileGutter),\n      offsetX: this.display.tileWidth / -4,\n      offsetY: this.display.tileHeight / -4,\n      width: this.display.tileWidth / 2,\n      height: this.display.tileHeight / 2,\n      fill: this.color,\n      strokeEnabled: false,\n      // for optimization\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n    });\n    this.display.animationLayer.add(rect);\n    this.node = rect;\n    super.initialize();\n  }\n\n  update (frame) {\n    let opacity = this.node.opacity();\n    if (opacity >= 1) this.lerpDirection = -1;\n    if (opacity <= 0) this.lerpDirection = 1;\n    opacity += (0.05 * this.lerpDirection)\n    this.node.opacity(Helper.clamp(opacity, 0, 1))\n    super.update(frame);\n  }\n  \n}\n\nexport class Display {\n  constructor({\n    containerId = null,\n    width = 100,\n    height = 100,\n    tileWidth = 10,\n    tileHeight = 10,\n    tileGutter = 0,\n    tileOffset = 10,\n    game = null,\n  }) {\n    this.containerId = containerId;\n    this.width = width;\n    this.height = height;\n    this.tileWidth = tileWidth;\n    this.tileHeight = tileHeight;\n    this.tileGutter = tileGutter;\n    this.tileOffset = tileOffset;\n    this.stage = null;\n    this.layer = null;\n    this.animationLayer = null;\n    this.animations = [];\n    this.animationLoop = null;\n    this.game = game;\n  }\n\n  initialize (document) {\n    let d = document.getElementById(this.containerId)\n    let displayContainer = document.createElement('div');\n    d.appendChild(displayContainer);\n\n    // this.adjustContentToScreen(d);\n    \n    this.stage = new Konva.Stage({\n      container: 'display',   // id of container <div>\n      width: this.width,\n      height: this.height\n    });\n\n    \n    // setting up main tile map layer\n    this.layer = new Konva.Layer({\n      hitGraphEnabled: false,\n    });\n    \n    this.stage.add(this.layer);\n    \n    // setting up animation layer\n    this.animationLayer = new Konva.Layer({});\n    this.stage.add(this.animationLayer);\n    let animationLoop = new Konva.Animation((frame) => {\n      this.animations.forEach((animation) => animation.update(frame))\n      // Stop animation updates if no animations to process\n      if (this.animations.length <= 0) {\n        if (this.animationLoop) {\n          if (this.animationLoop.isRunning()) {\n            this.animationLoop.stop();\n          }\n        }\n      }\n    }, this.animationLayer);\n    this.animationLoop = animationLoop;\n    animationLoop.start();\n  }\n\n  adjustContentToScreen (display_element) {\n    const DEVICE_WIDTH = display_element.offsetWidth;\n    const value = (DEVICE_WIDTH - this.tileOffset) / this.game.mapWidth;\n    this.tileWidth = Math.floor(value);\n    this.tileHeight = this.tileWidth;\n    this.width = ((this.game.mapWidth - 1) * this.tileWidth) + this.tileOffset;\n    this.height = (this.game.mapHeight * this.tileHeight) + this.tileOffset;\n  }\n\n  addAnimation (type, args) {\n    let animation;\n    switch (type) {\n      case ANIMATION_TYPES.SOLID_TILE:\n        animation = new ExampleAnimation({display: this, ...args})\n        break;\n      case ANIMATION_TYPES.BLINK_TILE:\n        animation = new BlinkTile({display: this, ...args})\n        break;\n      case ANIMATION_TYPES.DEFAULT:\n      default:\n        animation = new Animation({ display: this, ...args})\n        break;\n    }\n    animation.initialize();\n    this.animations.push(animation)\n    if (!this.animationLoop.isRunning()) this.animationLoop.start();\n    return animation\n  }\n\n  removeAnimation (id) {\n    this.animations = this.animations.filter((anim) => {\n      if (anim.id !== id) return true;\n      // if anim is being removed, remove associated nodes and shapes too\n      anim.node.destroy();\n      return false;\n    });\n  }\n\n  updateAnimation (id) {\n    this.animations = this.animations.map((anim) => {\n      if (anim.id === id) {\n        console.log(anim);\n      }\n      return anim;\n    });\n  }\n\n  updateTile(tile, character, foreground, background) {\n    // child[0] is the rectangle\n    // child[1] is the text\n    if (tile) {\n      tile.children[0].fill(background);\n      tile.children[1].fill(foreground);\n      tile.children[1].text(character);\n    }\n  }\n\n  createTile(x, y, character, foreground, background, layer = 'layer') {\n    const actual_x = (this.tileWidth * x) + (this.tileOffset + this.tileGutter);\n    const actual_y = (this.tileHeight * y) + (this.tileOffset + this.tileGutter);\n    let node = new Konva.Group({\n      id: `${x},${y}`,\n      x: (this.tileWidth * x) + (this.tileOffset + this.tileGutter),\n      y: (this.tileHeight * y) + (this.tileOffset + this.tileGutter),\n      width: this.tileWidth,\n      height: this.tileHeight,\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n    });\n\n    let rect = new Konva.Rect({\n      name: 'rect',\n      width: this.tileWidth,\n      height: this.tileHeight,\n      fill: background,\n      strokeEnabled: false,\n      // for optimization\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n    });\n\n    let text = new Konva.Text({\n      name: 'text',\n      text: character,\n      width: this.tileWidth,\n      height: this.tileHeight,\n      fontSize: this.tileWidth - 4,\n      fontFamily: 'scroll-o-script',\n      fill: foreground,\n      align: 'center',\n      verticalAlign: 'middle',\n      // for optimization\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n    });\n\n    node.add(rect);\n    node.add(text);\n    this.layer.add(node);\n    return node;\n  }\n\n  getAbsoultueX(x) {\n    return (this.tileWidth * x) + (this.tileOffset + this.tileGutter)\n  }\n\n  getAbsoultueY(y) {\n    return (this.tileWidth * y) + (this.tileOffset + this.tileGutter)\n  }\n\n  getTilesWide (width, tileOffset, tileWidth) {\n    return Math.floor((width - tileOffset) / tileWidth)\n  }\n  \n  getTilesHigh(height, tileOffset, tileHeight) {\n    return Math.floor((height - tileOffset) / tileHeight)\n  }\n\n  getTilesAcrossOnScreen () { return Math.floor(this.width / this.tileWidth)}\n  getTilesDownOnScreen () { return Math.floor(this.height / this.tileHeight)}\n\n  draw () {\n    this.layer.batchDraw();\n  }\n}","import { COLORS, THEMES } from './constants';\nimport uuid from 'uuid/v1';\n\nexport const MESSAGE_TYPE = {\n  INFORMATION: {\n    color: COLORS.gray_4,\n    backgroundColor: COLORS.black_1,\n  },\n  ACTION: {\n    color: COLORS.gray_2,\n    backgroundColor: COLORS.gray_5,\n  },\n  DANGER: {\n    color: COLORS.red_5,\n    backgroundColor: COLORS.black_1,\n  },\n  STATUS_EFFECT: {\n    color: THEMES.SOLARIZED.base3,\n    backgroundColor: THEMES.SOLARIZED.violet,\n  },\n  ERROR: {\n    color: THEMES.SOLARIZED.base3,\n    backgroundColor: THEMES.SOLARIZED.yellow,\n  },\n}\n\nexport class Message {\n  constructor({ text = '', type = MESSAGE_TYPE.INFORMATION }) {\n    let id = uuid();\n    this.id = id;\n    this.text = text;\n    this.type = type;\n  }\n}","import { MESSAGE_TYPE } from '../message';\nimport * as Helper from '../../helper';\n\nexport const Attacking = superclass => class extends superclass {\n  constructor({ attackDamage = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('ATTACKING');\n    this.attackDamage = attackDamage;\n  }\n  getAttackDamage(additional = 0) {\n\n    return this.attackDamage + additional;\n  }\n  canAttack(entity) {\n    return true;\n  }\n  attack(targetPos, additional = 0) {\n    let success = false;\n    let tile = this.game.map[Helper.coordsToString(targetPos)];\n    if (!tile) {\n      return success;\n    }\n    let targets = Helper.getDestructableEntities(tile.entities);\n    if (targets.length > 0) {\n      let target = targets[0];\n      if (this.canAttack(target)) {\n        let damage = this.getAttackDamage(additional);\n        if (this.entityTypes.includes('EQUIPING')) {\n          this.equipment.forEach((slot) => {\n            if (slot.item) {\n              if (slot.item.entityTypes.includes('ATTACKING')) {\n                damage += slot.item.getAttackDamage();\n              }\n            }\n          });\n        }\n        this.game.addMessage(`${this.name} does ${damage} to ${target.name}`, MESSAGE_TYPE.DANGER);\n        target.decreaseDurability(damage);\n        success = true;\n      }\n    }\n    return success;\n  }\n};\n","import { MESSAGE_TYPE } from '../message';\nimport * as Helper from '../../helper';\n\nexport const RangedAttacking = superclass => class extends superclass {\n  constructor({ attackRange = 0, baseRangedAccuracy = 0, baseRangedDamage = 0, magazineSize = 0, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('RANGED_ATTACKING');\n    this.attackRange = attackRange;\n    this.baseRangedAccuracy = baseRangedAccuracy;\n    this.baseRangedDamage = baseRangedDamage;\n    this.magazineSize = magazineSize;\n    this.magazine = magazineSize;\n  }\n\n  getRangedAttackChance(targetPos = null) {\n    const weaponAccuracy = this.getRangedWeaponAccuracy();\n    const coverDebuff = targetPos ? this.getRangedAttackCoverDebuff(targetPos) : 0;\n    const distanceDebuff = targetPos ? this.getRangedAttackDistanceDebuff(targetPos) : 0;\n    const result = this.baseRangedAccuracy + weaponAccuracy + coverDebuff + distanceDebuff;\n    return result;\n  }\n\n  getRangedAttackCoverDebuff(targetPos) {\n    const path = Helper.calculateStraightPath(this.getPosition(), targetPos);\n    const coverAccuracyModifer = path.reduce((acc, curr) => {\n      let tile = this.game.map[Helper.coordsToString(curr)];\n      let entitiesProvidingCover = Helper.filterEntitiesByType(tile.entities, 'COVERING');\n      let coverModifer = 0;\n      if (entitiesProvidingCover.length > 0) coverModifer = entitiesProvidingCover[0].accuracyModifer;\n      return acc + coverModifer;\n    }, 0);\n    return coverAccuracyModifer;\n  }\n\n  getRangedAttackDistanceDebuff(targetPos) {\n    const distanceToTarget = Helper.calculatePath(this.game, targetPos, this.getPosition(), 8).length;\n    return -1 * (distanceToTarget / (this.getAttackRange() * 3))\n  }\n\n  getAttackRange() {\n    let range = this.attackRange;\n    if (this.entityTypes.includes('EQUIPING')) {\n      this.equipment.forEach((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('RANGED_ATTACKING')) {\n            range += slot.item.attackRange;\n          }\n        }\n      });\n    }\n    return range;\n  }\n\n  getRangedWeaponAccuracy() {\n    let accuracy = 0;\n    if (this.entityTypes.includes('EQUIPING')) {\n      this.equipment.forEach((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('RANGED_ATTACKING')) {\n            accuracy += slot.item.getRangedAttackChance();\n          }\n        }\n      });\n    }\n    return accuracy;\n  }\n\n  getRangedAttackDamage(additional = 0) {\n\n    return this.baseRangedDamage + this.getRangedWeaponDamage() + additional;\n  }\n\n  getRangedWeaponDamage() {\n    let damage = 0;\n    if (this.entityTypes.includes('EQUIPING')) {\n      this.equipment.forEach((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('RANGED_ATTACKING')) {\n            damage += slot.item.getRangedAttackDamage();\n          }\n        }\n      });\n    }\n    return damage;\n  }\n\n  canRangedAttack(entity) {\n    return true;\n  }\n\n  getEquipedWeapons() {\n    if (this.entityTypes.includes('EQUIPING')) {\n      return this.equipment.map((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('RANGED_ATTACKING')) {\n            return slot.item;\n          }\n        }\n      });\n    }\n    return [];\n  }\n\n  useAmmo() {\n    this.getEquipedWeapons().forEach((weapon) => weapon.magazine = Math.max(0, weapon.magazine - 1));\n  }\n\n  reload () {\n    let reloaded = false;\n    if (this.entityTypes.includes('CONTAINING')) {\n      this.getEquipedWeapons().forEach((weapon) => {\n        const amount = weapon.magazineSize - weapon.magazine;\n        for (let i = 0; i < amount; i++) {\n          let ammo = this.contains('Ammo');\n          if (ammo) {\n            this.removeFromContainer(ammo);\n            weapon.magazine += 1;\n            reloaded = true;\n          }\n        }\n      });\n    }\n    return reloaded;\n  }\n\n  rangedAttack(targetPos, additionalDamage = 0, additionalAccuracy = 0) {\n    let success = false;\n    let hit = false;\n    let tile = this.game.map[Helper.coordsToString(targetPos)];\n    if (!tile) {\n      return [success, hit];\n    }\n    let targets = Helper.getDestructableEntities(tile.entities);\n    if (targets.length > 0) {\n      const attackChance = this.getRangedAttackChance(targetPos);\n      const hitChance = attackChance + additionalAccuracy;\n      hit = Math.random() < hitChance;\n      // TODO: trigger hit and miss animations\n      if (!hit) {\n        success = true;\n        return [success, hit];\n      }\n      this.useAmmo();\n      let target = targets[0];\n      if (this.canRangedAttack(target)) {\n        let damage = this.getRangedAttackDamage(additionalDamage);\n        this.game.addMessage(`${this.name} does ${damage} to ${target.name}`, MESSAGE_TYPE.DANGER);\n        target.decreaseDurability(damage);\n        success = true;\n      }\n    }\n    return [success, hit];\n  }\n};\n","import * as Constant from '../constants';\n\nexport const Equipable = superclass => class extends superclass {\n  constructor({ name = 'nameless', equipmentType = Constant.EQUIPMENT_TYPES.HAND, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('EQUIPABLE');\n    this.name = name;\n    this.equipmentType = equipmentType;\n  }\n};\n","import * as Helper from '../../helper';\n\nexport const Acting = superclass => class extends superclass {\n  constructor({ actions = [], speed = 100, energy = 0, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('ACTING');\n    this.actions = actions;\n    this.speed = speed;\n    this.energy = speed;\n  }\n  getAction() {\n    let action = Helper.getRandomInArray(this.actions);\n    if (action) {\n      return action;\n    }\n  }\n  gainEnergy(value = this.speed) {\n    this.energy += value;\n  }\n  hasEnoughEnergy() {\n    return this.energy > 0;\n  }\n};\n","import * as Helper from '../../helper';\n\nexport const Rendering = superclass => class extends superclass {\n  constructor({ pos = { x: 0, y: 0 }, renderer, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('RENDERING');\n    this.pos = pos;\n    this.renderer = { ...renderer };\n    this.currentFrame = 0;\n  }\n\n  getRenderer() {\n    return this.renderer\n  }\n\n  getPosition() {\n    return this.pos;\n  }\n  move(targetPos) {\n    let success = false;\n    if (this.game.canOccupyPosition(targetPos, this)) {\n      let tile = this.game.map[Helper.coordsToString(this.pos)];\n      this.game.map[Helper.coordsToString(this.pos)] = { ...tile, entities: tile.entities.filter((e) => e.id !== this.id) };\n      this.pos = targetPos;\n      this.game.map[Helper.coordsToString(targetPos)].entities.push(this);\n      success = true;\n    }\n    return success;\n  }\n  shove(targetPos, direction) {\n    let success = false;\n    let targetTile = this.game.map[Helper.coordsToString(targetPos)];\n    if (targetTile) {\n      targetTile.entities.map((entity) => {\n        if (entity.entityTypes.includes('PUSHABLE')) {\n          if (!entity.passable && entity.pushable) {\n            let newX = entity.pos.x + direction[0];\n            let newY = entity.pos.y + direction[1];\n            let newPos = { x: newX, y: newY };\n            entity.move(newPos);\n          }\n        }\n      });\n    }\n    success = this.move(targetPos);\n    return success;\n  }\n};\n","export class ContainerSlot {\n  constructor({ itemType, items }) {\n    this.itemType = itemType;\n    this.items = items;\n  }\n}\n\nexport const Containing = superclass => class extends superclass {\n  constructor({ container = [], ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CONTAINING');\n    this.container = container;\n  }\n  createSlot(item) {\n    let slot = new ContainerSlot({\n      itemType: item.name,\n      items: [item],\n    });\n    this.container.push(slot);\n  }\n  contains(itemType) {\n    let container = this.container;\n    let slots = container.filter((slot) => slot.itemType === itemType);\n    return slots.length > 0 ? slots[0].items[0] : false;\n  }\n  addToContainer(item) {\n    const index = this.container.findIndex((slot) => slot.itemType === item.name);\n    if (index >= 0) {\n      this.container[index].items.push(item);\n    }\n    else {\n      this.createSlot(item);\n    }\n  }\n  removeFromContainer(item) {\n    this.container.forEach((slot, index) => {\n      slot.items = slot.items.filter((it) => it.id !== item.id);\n      if (!slot.items.length)\n        this.container.splice(index, 1);\n    });\n  }\n};\n","import { Howl, Howler } from 'howler';\n\nexport default {\n  fire_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/fire-00.mp3'],\n    volume: 0.5,\n    loop: true,\n  }),\n  fire_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/fire-01.mp3'],\n    volume: 0.05,\n    loop: true,\n  }),\n  scream_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/scream-00.wav']\n  }),\n  scream_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/scream-01.wav']\n  }),\n  scream_2: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/scream-02.wav']\n  }),\n  water_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/water-04.wav']\n  }),\n  water_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/water-05.wav']\n  }),\n  chop_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/chop-00.wav']\n  }),\n  chop_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/chop-01.wav']\n  }),\n  equip_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/equip-00.wav']\n  }),\n  equip_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/equip-01.wav']\n  }),\n  explosion_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/explosion-00.wav'],\n    volume: 0.2,\n  }),\n  save: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/save.wav'],\n  }),\n  lose: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/lose-00.wav'],\n  }),\n  grab_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/grab-00.wav'],\n  }),\n  release_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/grab-01.wav'],\n  }),\n}","export const Playing = superclass => class extends superclass {\n  constructor({ keymap = {}, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('PLAYING');\n    this.nextAction = null;\n    this.keymap = keymap;\n  }\n  setNextAction(action) {\n    this.nextAction = action;\n  }\n  getAction() {\n    let action = this.nextAction;\n    this.nextAction = null;\n    return action;\n  }\n};\n","import * as Helper from '../../helper';\n\nexport const destroyEntity = (entity) => {\n  entity.energy = 0;\n  if (entity.pos) {\n    let tile = entity.game.map[Helper.coordsToString(entity.pos)];\n    entity.game.map[Helper.coordsToString(entity.pos)].entities = tile.entities.filter((e) => e.id !== entity.id);\n  }\n  // entity.game.engine.actors = entity.game.engine.actors.filter((e) => e.id !== entity.id);\n  entity.game.engine.removeStatusEffectByActorId(entity.id);\n  entity.game.draw()\n  entity.active = false;\n}","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nexport class Say extends Base {\n  constructor({ message, messageType = MESSAGE_TYPE.INFORMATION, processDelay = 50, ...args }) {\n    super({ ...args });\n    this.message = message;\n    this.messageType = messageType;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    this.game.addMessage(`${this.actor.name} says \"${this.message}\"`, this.messageType);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import SOUNDS from '../sounds';\nimport { Base } from './Base';\nimport { Say } from './Say';\nimport * as Helper from '../../helper';\nimport * as Constant from '../constants';\n\nexport class Attack extends Base {\n  constructor({ targetPos, additionalDamage = 0, processDelay = 100, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.additionalDamage = additionalDamage;\n    this.processDelay = processDelay;\n    this.particleTemplate = Constant.PARTICLE_TEMPLATES.damage;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (!this.actor.entityTypes.includes('ATTACKING')) {\n      return {\n        success: true,\n        alternative: new Say({\n          message: `Ooh I don\\'t know how to attack`,\n          game: this.game,\n          actor: this.actor,\n          energyCost: 0,\n        }),\n      };\n    }\n    success = this.actor.attack(this.targetPos, this.additionalDamage);\n    if (success) {\n      const sound = Helper.getRandomInArray([SOUNDS.chop_0, SOUNDS.chop_1]);\n      sound.play();\n      this.addParticle(1, { ...this.targetPos }, { x: 0, y: 0 });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { Attack } from \"./Attack\";\n\nexport class Move extends Base {\n  constructor({ targetPos, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let moveSuccess = this.actor.move(this.targetPos);\n    if (moveSuccess) {\n      success = true;\n    } else {\n      success = true;\n      alternative = new Attack({\n        targetPos: this.targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: 0\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Move } from './Move';\nimport { DestroySelf } from './DestroySelf';\nimport * as Constant from '../constants';\n\nexport class ThrowProjectile extends Move {\n  constructor({ ...args }) {\n    super({ ...args });\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    this.actor.passable = false;\n    let move_result = super.perform();\n    if (move_result.success) {\n      this.actor.path.shift();\n      success = true;\n    }\n    if (this.actor.path.length === 0) {\n      success = true;\n      alternative = new DestroySelf({\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n      });\n    }\n    if (move_result.alternative) {\n      let attackSuccess = this.actor.attack(this.targetPos);\n      if (attackSuccess) {\n        alternative = new DestroySelf({\n          game: this.game,\n          actor: this.actor,\n          energyCost: Constant.ENERGY_THRESHOLD,\n          processDelay: 0,\n        });\n      }\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n","import { Attack } from './Attack';\nexport class SelfDestructiveAttack extends Attack {\n  constructor({ damageToSelf, ...args }) {\n    super({ ...args });\n    this.damageToSelf = damageToSelf;\n    this.onSuccess = () => {\n      console.log('Self destruct success');\n      this.actor.decreaseDurabilityWithoutDefense(damageToSelf);\n    };\n    this.onFailure = () => {\n      console.log('Self destruct fails');\n      this.actor.destroy();\n    };\n  }\n}\n","import { Base } from './Base';\nimport { SelfDestructiveAttack } from \"./SelfDestructiveAttack\";\nimport * as Constant from '../constants';\n\nexport class ProjectileMove extends Base {\n  constructor({ targetPos, damageToSelf = 1, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.processDelay = processDelay;\n    this.damageToSelf = damageToSelf;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let moveSuccess = this.actor.move(this.targetPos);\n    if (moveSuccess) {\n      this.actor.energy -= this.energyCost;\n      success = true;\n    }\n    else {\n      success = true;\n      alternative = new SelfDestructiveAttack({\n        targetPos: this.targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        damageToSelf: this.damageToSelf,\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import * as Constant from '../constants';\nimport { ProjectileMove } from '../Actions/ProjectileMove';\nimport { DestroySelf } from '../Actions/DestroySelf';\n\nexport const DirectionalProjecting = superclass => class extends superclass {\n  constructor({ path = false, direction = { x: 0, y: 0 }, attackDamage = 1, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DIRECTIONAL_PROJECTING');\n    this.path = path;\n    this.direction = direction;\n    this.attackDamage = attackDamage;\n    this.range = range;\n  }\n  createPath(game) {\n    let path = [];\n    for (let i = 1; i < this.range + 1; i++) {\n      path.push({\n        x: this.pos.x + (this.direction[0] * i),\n        y: this.pos.y + (this.direction[1] * i)\n      });\n    }\n    this.path = path;\n  }\n  getAction(game) {\n    let result = null;\n    let newX = this.pos.x + this.direction[0];\n    let newY = this.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n    this.passable = false;\n    if (this.range > 0) {\n      result = new ProjectileMove({\n        targetPos: targetPos,\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        damageToSelf: 1,\n        onSuccess: () => this.range -= 1,\n        onAfter: () => {\n          if (this.energy <= 100) {\n            game.engine.setActorToPrevious();\n          }\n        }\n      });\n    }\n    else {\n      result = new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: 0\n      });\n    }\n    return result;\n  }\n};\n","import { Base } from './Base';\nimport { Attack } from \"./Attack\";\nimport * as Constant from '../constants';\n\nexport class Shove extends Base {\n  constructor({ targetPos, direction, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.direction = direction;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let moveSuccess = this.actor.shove(this.targetPos, this.direction);\n    if (moveSuccess) {\n      this.actor.energy -= this.energyCost;\n      success = true;\n    }\n    else {\n      success = true;\n      alternative = new Attack({\n        targetPos: this.targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Move } from './Move';\nimport { DestroySelf } from './DestroySelf';\nimport * as Constant from '../constants';\n\nexport class ThrowProjectileGas extends Move {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.processDelay = 0;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    this.actor.passable = false;\n    let move_result = super.perform();\n    if (move_result.success) {\n      this.actor.path.shift();\n      success = true;\n    }\n    if (this.actor.path.length === 0) {\n      success = true;\n      alternative = new DestroySelf({\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n      });\n    }\n    if (move_result.alternative) {\n      this.actor.attack(this.targetPos);\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { Move } from '../Actions/Move';\nimport { Say } from '../Actions/Say';\n\nexport const Chasing = superclass => class extends superclass {\n  constructor({ targetEntity = null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CHASING');\n    this.targetEntity = targetEntity;\n  }\n  getAction(game) {\n    if (this.targetEntity) {\n      let path = Helper.calculatePath(game, this.targetEntity.pos, this.pos);\n      let targetPos = path.length > 0 ? path[0] : this.pos;\n      return new Move({\n        targetPos,\n        game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    } else {\n      return new Say({\n        message: 'Where are they?',\n        game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n  }\n};\n","import { Base } from './Base';\nimport * as Helper from '../../helper';\n\nexport class PlaceActor extends Base {\n  constructor({ targetPos, entity, interrupt = true, forcePlacement = false, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.entity = entity;\n    this.interrupt = interrupt;\n    this.forcePlacement = forcePlacement;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    // let canPlace = true;\n    // if (!this.game.canOccupyPosition(this.targetPos, this.entity)) canPlace = false;\n    // if (this.entity.entityTypes.includes('PARENT')) {\n    //   this.entity.children.forEach((child) => {\n    //     console.log(child.pos);\n    //     if (!this.game.canOccupyPosition(child.pos, child)) canPlace = false;\n    //   })\n    // }\n    // if (canPlace) {\n    //   this.entity.pos = this.targetPos;\n    //   this.game.engine.addActorAsPrevious(this.entity);\n    //   this.game.engine.start(); // should this be used outside of engine?\n    //   success = true;      \n    // }\n    let canOccupyPosition = this.forcePlacement ? true : this.game.canOccupyPosition(this.targetPos, this.entity);\n    const tile = this.game.map[Helper.coordsToString(this.targetPos)];\n    if (canOccupyPosition && tile) {\n      this.entity.pos = this.targetPos;\n      tile.entities.push(this.entity);\n      // this.game.engine.addActorAsPrevious(this.entity);\n      // this.game.engine.addActor(this.entity);\n      this.game.engine.addActorAsNext(this.entity);\n      // this.interrupt = true;\n      // this.game.engine.start(); // BUGGED - should this be used outside of engine?\n      success = true;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","export const Draggable = superclass => class extends superclass {\n  constructor({ draggable = true, ...args }) {\n    super({ ...args });\n    this.draggable = draggable;\n    this.entityTypes = this.entityTypes.concat('DRAGGABLE');\n  }\n};\n","export const Pushable = superclass => class extends superclass {\n  constructor({ pushable = true, ...args }) {\n    super({ ...args });\n    this.pushable = pushable;\n    this.entityTypes = this.entityTypes.concat('PUSHABLE');\n  }\n};\n","import * as Constant from './constants';\nimport {\n  DestructiveCloudProjectileV2,\n  DestructiveProjectile,\n  DirectionalProjectile,\n  MovingWall,\n  DestructiveCloudProjectile,\n  Weapon,\n  Armor,\n} from './Entities/index';\n\nexport const TYPE = {\n  KUNAI: 'Kunai',\n  DIRECTIONAL_KUNAI: 'Directional Kunai',\n  SWORD: 'Sword',\n  AXE: 'Axe',\n  ARMOR: 'Armor',\n  WATER_GUN: 'Water Gun',\n  BARRIER: 'Barrier',\n}\n\nconst createProjectileCloud = ({ \n  engine, \n  actor, \n  targetPos, \n  throwDirection,\n  speed,\n  structureType,\n  createProjectile,\n}) => {\n  let structure = Constant.CLONE_PATTERNS[structureType];\n\n  let children = structure.positions.map((slot) => {\n    let position = {\n      x: actor.pos.x + slot.x + (throwDirection.x * structure.x_offset),\n      y: actor.pos.y + slot.y + (throwDirection.y * structure.y_offset)\n    }\n    \n    let targetPosition = {\n      x: targetPos.x + slot.x,\n      y: targetPos.y + slot.y,\n    }\n\n    return createProjectile(engine, position, targetPosition);\n  })\n\n  return new DestructiveCloudProjectileV2({\n    game: engine.game,\n    passable: true,\n    speed,\n    children,\n  })\n}\n\nconst createProjectileSingularity = ({ \n  engine, \n  actor, \n  targetPos, \n  speed,\n  structureType,\n  createProjectile,\n}) => {\n  let structure = Constant.CLONE_PATTERNS[structureType];\n\n  let children = structure.positions.map((slot) => {\n    let position = {\n      x: targetPos.x + slot.x + structure.x_offset,\n      y: targetPos.y + slot.y + structure.y_offset\n    }\n\n    let targetPosition = {\n      x: targetPos.x,\n      y: targetPos.y,\n    }\n\n    return createProjectile(engine, position, targetPosition);\n\n  })\n\n  return new DestructiveCloudProjectileV2({\n    game: engine.game,\n    passable: true,\n    speed,\n    children,\n  })\n}\n\nconst createProjectileBurst = ({ \n  engine, \n  actor, \n  targetPos, \n  speed,\n  structureType,\n  createProjectile,\n}) => {\n  let structure = Constant.CLONE_PATTERNS[structureType];\n\n  let children = structure.positions.map((slot) => {\n    let position = {\n      x: targetPos.x + structure.x_offset,\n      y: targetPos.y + structure.y_offset\n    }\n\n    let targetPosition = {\n      x: targetPos.x + slot.x,\n      y: targetPos.y + slot.y,\n    }\n\n    return createProjectile(engine, position, targetPosition);\n\n  })\n\n  return new DestructiveCloudProjectileV2({\n    game: engine.game,\n    passable: true,\n    speed,\n    children,\n  })\n}\n\nexport const sandTomb = ({\n  engine,\n  actor,\n  targetPos,\n}) => createProjectileSingularity({\n  engine,\n  actor,\n  targetPos,\n  speed: 100,\n  structureType: 'circle',\n  createProjectile: sandTombPart,\n})\n\nexport const sandBurst = ({\n  engine,\n  actor,\n  targetPos,\n}) => createProjectileBurst({\n  engine,\n  actor,\n  targetPos,\n  speed: 500,\n  structureType: 'circle',\n  createProjectile: sandTombPart,\n})\n\nexport const sandWallPulse = ({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n}) => createProjectileCloud({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n  speed: 500,\n  structureType: 'smallSquare',\n  createProjectile: movingSandWall,\n})\n\nexport const kunaiCloud = ({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n}) => createProjectileCloud({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n  speed: 500,\n  structureType: 'square',\n  createProjectile: kunai,\n})\n\nexport const fireballCloud = ({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n}) => createProjectileCloud({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n  speed: 500,\n  structureType: 'square',\n  createProjectile: fireball,\n})\n\nexport const kunai = (engine, pos, targetPos) => new DestructiveProjectile({\n  game: engine.game,\n  targetPos,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    character: '>',\n    color: 'white',\n    background: '',\n    animation: [\n      { background: '', color: 'white', character: '>', },\n      { background: '', color: 'white', character: 'v', },\n      { background: '', color: 'white', character: '<', },\n      { background: '', color: 'white', character: '^', },\n      { background: '', color: 'white', character: '>', },\n    ],\n  },\n  name: TYPE.KUNAI,\n  speed: 600,\n  energy: 0,\n  range: 30,\n})\n\nexport const directionalKunai = (engine, pos, direction, range) => new DirectionalProjectile({\n  game: engine.game,\n  direction,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    character: '>',\n    color: 'white',\n    background: '',\n    animation: [\n      { background: 'lightgrey', color: 'grey', character: '>', },\n      { background: 'lightgrey', color: 'grey', character: 'v', },\n      { background: 'lightgrey', color: 'grey', character: '<', },\n      { background: 'lightgrey', color: 'grey', character: '^', },\n      { background: 'lightgrey', color: 'grey', character: '>', },\n    ],\n  },\n  name: TYPE.DIRECTIONAL_KUNAI,\n  speed: 600,\n  energy: 0,\n  range,\n})\n\nexport const movingSandWall = (engine, pos, targetPos, range) => new MovingWall({\n  game: engine.game,\n  passable: false,\n  pos: { x: pos.x, y: pos.y },\n  targetPos,\n  renderer: {\n    // character: '>',\n    character: ']',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.KUNAI,\n  // name: TYPE.BARRIER,\n  durability: 3,\n  range,\n  speed: 300,\n})\n\nexport const sandShuriken = (engine, pos, direction, range) => new DirectionalProjectile({\n  game: engine.game,\n  direction,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '✦️',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.DIRECTIONAL_KUNAI,\n  speed: 600,\n  energy: 0,\n  range,\n})\n\nexport const sandTombPart = (engine, pos, targetPos) => new DestructiveProjectile({\n  game: engine.game,\n  targetPos,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '✦️',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.KUNAI,\n  speed: 600,\n  energy: 0,\n  range: 30,\n})\n\nexport const fireball = (engine, pos, targetPos) => new DestructiveProjectile({\n  game: engine.game,\n  targetPos,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '🔥',\n    color: 'wheat',\n    background: 'tomato',\n  },\n  name: TYPE.KUNAI,\n  speed: 100,\n  energy: 0,\n  range: 30,\n})\n\nexport const fireballGas = (engine, actor, targetPos) => {\n  return new DestructiveCloudProjectile({\n    game: engine.game,\n    owner_id: actor ? actor.id : null,\n    targetPos,\n    passable: true,\n    pos: actor ? { x: actor.pos.x, y: actor.pos.y } : null,\n    renderer: {\n      // character: '@',\n      character: '🔥',\n      color: 'wheat',\n      background: 'tomato',\n    },\n    name: TYPE.KUNAI,\n    speed: 100,\n    range: 10,\n    clonePattern: Constant.CLONE_PATTERNS.bigSquare,\n    // clonePattern: Constant.CLONE_PATTERNS.square,\n  })\n}\n\nexport const waterball = (engine, actor, targetPos) => new DestructiveCloudProjectile({\n  game: engine.game,\n  owner_id: actor ? actor.id : null,\n  targetPos,\n  passable: true,\n  pos: actor ? { x: actor.pos.x, y: actor.pos.y } : null,\n  renderer: {\n    // character: '~',\n    character: '🌊',\n    color: 'silver',\n    background: 'lightslategrey',\n  },\n  name: TYPE.KUNAI,\n  speed: 800,\n  range: 10,\n  clonePattern: Constant.CLONE_PATTERNS.bigSquare,\n  // clonePattern: Constant.CLONE_PATTERNS.square,\n})\n\nexport const sword = (engine) => new Weapon({\n  game: engine.game,\n  name: TYPE.SWORD,\n  passable: true,\n  attackDamage: 1,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    // character: '|',\n    character: '🗡️',\n    color: 'white',\n    background: '',\n  },\n})\n\nexport const axe = (engine) => new Weapon({\n  game: engine.game,\n  name: TYPE.AXE,\n  passable: true,\n  attackDamage: 5,\n  equipmentType: Constant.EQUIPMENT_TYPES.GENERIC,\n  renderer: {\n    character: 'a',\n    sprite: '',\n    color: 'white',\n    background: '',\n  },\n})\n\nexport const waterGun = (engine) => new Weapon({\n  game: engine.game,\n  name: TYPE.WATER_GUN,\n  passable: true,\n  attackDamage: 0,\n  equipmentType: Constant.EQUIPMENT_TYPES.GENERIC,\n  renderer: {\n    character: 'w',\n    sprite: '',\n    color: Constant.THEMES.SOLARIZED.blue,\n    background: '',\n  },\n})\n\nexport const fireJacket = (engine) => new Armor({\n  game: engine.game,\n  name: 'Fire Jacket',\n  passable: true,\n  defense: 1,\n  equipmentType: Constant.EQUIPMENT_TYPES.GENERIC,\n  renderer: {\n    character: 'J',\n    sprite: '',\n    color: Constant.THEMES.SOLARIZED.magenta,\n    background: '',\n  },\n})\n\nexport const test = (engine, pos) => new Weapon({\n  game: engine.game,\n  name: TYPE.SWORD,\n  passable: true,\n  attackDamage: 1,\n  pos,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    // character: '|',\n    character: '🗡️',\n    color: 'white',\n    background: 'lightsteelblue',\n  },\n})\n","import { destroyEntity } from './helper';\nexport const Destructable = superclass => class extends superclass {\n  constructor({ durability = 1, defense = 0, onDestroy = () => null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DESTRUCTABLE');\n    this.durability = durability;\n    this.durabilityMax = durability;\n    this.defense = defense;\n    this.onDestroy = onDestroy;\n    this.actorSprite = this.renderer.sprite\n    this.actorCharacter = this.renderer.character\n  }\n  getDefense() {\n    let defense = this.defense;\n    // add in reducer to get defense stats of all equpiment\n    if (this.entityTypes.includes('EQUIPING')) {\n      this.equipment.forEach((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('DESTRUCTABLE')) {\n            defense += slot.item.getDefense();\n          }\n        }\n      });\n    }\n    return defense;\n  }\n  decreaseDurabilityWithoutDefense(value) {\n    this.durability -= value;\n    if (this.durability <= 0) {\n      this.onDestroy(this);\n      this.destroy();\n    }\n  }\n  decreaseDurability(value) {\n    const current = this.durability;\n    const newDurability = current - (value - this.getDefense());\n    this.durability = Math.min(current, newDurability);\n    this.updateActorRenderer();\n    if (this.durability <= 0) {\n      this.onDestroy(this);\n      this.destroy();\n    }\n  }\n  increaseDurability(value) {\n    this.durability += value;\n    this.updateActorRenderer();\n  }\n  updateActorRenderer() {\n    if (this.durability === this.durabilityMax) {\n      this.renderer.sprite = this.actorSprite;\n      this.renderer.character = this.actorCharacter;\n    } else {\n      this.renderer.sprite = this.durability;\n      this.renderer.character = this.durability;\n    }\n    this.game.draw();\n  }\n  destroy() {\n    destroyEntity(this);\n  }\n};\n","export const Burnable = superclass => class extends superclass {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('BURNABLE');\n    this.canBurn = true;\n    this.willResetCanBurn = false;\n  }\n  resetCanBurn() {\n    this.willResetCanBurn = false;\n    this.canBurn = true;\n  }\n  burn() {\n    if (this.canBurn) {\n      this.decreaseDurability(2);\n      return true;\n    }\n    return false;\n  }\n};\n","import SOUNDS from '../sounds';\nimport { FireSpread } from './index';\nimport * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport {MESSAGE_TYPE} from '../message';\n\nexport const Exploding = superclass => class extends superclass {\n  constructor({ flammability = 1, explosivity = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('EXPLODING');\n    this.flammability = flammability;\n    this.explosivity = explosivity;\n  }\n  enflame() {\n    // create num of fireSpreads\n    const fires = Array(this.flammability).fill('').map((item) => {\n      return new FireSpread({\n        name: 'Pyro',\n        pos: { ...this.pos },\n        game: this.game,\n        renderer: {\n          character: '*',\n          color: Constant.THEMES.SOLARIZED.base3,\n          background: Constant.THEMES.SOLARIZED.red,\n        },\n        timeToSpread: 1,\n        spreadCount: 1,\n        durability: 1,\n        attackDamage: 1,\n        speed: 100,\n      });\n    });\n    fires.forEach((fire) => {\n      // add them to map\n      this.game.placeActorOnMap(fire);\n      // add them to engine\n      this.game.engine.addActor(fire);\n    });\n  }\n  explode() {\n    let structure = {\n      x_offset: 0,\n      y_offset: 0,\n      positions: Array(this.explosivity).fill('').reduce((acc, curr, i) => {\n        return acc.concat(...Helper.getPointsOnCircumference(0, 0, i + 1));\n      }, [])\n    };\n    structure.positions.forEach((slot) => {\n      let position = {\n        x: this.pos.x + slot.x + structure.x_offset,\n        y: this.pos.y + slot.y + structure.y_offset\n      };\n      const tile = this.game.map[Helper.coordsToString(position)];\n      if (tile) {\n        tile.type =  'BURNT';\n        let targets = Helper.getDestructableEntities(tile.entities);\n        if (targets.length > 0) {\n          // let target = targets[0];\n          targets.forEach((target) => {\n            let damage = this['attackDamage'] ? this.attackDamage : this.explosivity;\n            this.game.addMessage(`${this.name} does ${damage} to ${target.name}`, MESSAGE_TYPE.DANGER);\n            target.decreaseDurability(damage);\n          })\n        }\n      }\n    });\n    if (this.explosivity > 0)\n      SOUNDS.explosion_0.play();\n    // this.game.draw(); //may not need draw here\n  }\n  destroy() {\n    this.enflame();\n    this.explode();\n    super.destroy();\n  }\n};\n","import * as _ from 'lodash';\n\nexport const HasKeymap = superclass => class extends superclass {\n  constructor({ initializeKeymap, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HAS_KEYMAP');\n    this.keymapStack = [];\n    this.initializeKeymap = initializeKeymap;\n    const keymap = initializeKeymap(this.game.engine, this);\n    this.addKeymap(keymap);\n  }\n\n  getKeymap () {\n    return _.get(this.keymapStack, '0', null);\n  }\n\n  addKeymap (newKeymap) {\n    this.keymapStack.unshift(newKeymap);\n  }\n\n  removeKeymap () {\n    this.keymapStack.shift();\n  }\n\n  reinitializeKeymap (ignoredKeys = []) {\n    this.keymapStack = [];\n    const keymap = this.initializeKeymap(this.game.engine, this);\n    ignoredKeys.forEach((key) => delete keymap[key])\n    this.addKeymap(keymap);\n  }\n\n  setKeymap (newKeymap) {\n    this.addKeymap(newKeymap);\n    return this.getKeymap;\n  }\n\n  goToPreviousKeymap () {\n    this.removeKeymap();\n    return this.getKeymap();\n  }\n};\n","export const Upgrade = ({\n  activate = (actor) => null,\n  canUpgrade = (actor) => true,\n  cost = 1,\n  name = 'upgrade',\n  removeOnActivate = false,\n}) => {\n  return {\n    activate,\n    canUpgrade,\n    cost,\n    name,\n    removeOnActivate,\n  }\n}\n\nexport const Upgradable = superclass => class extends superclass {\n  constructor({ upgrade_points = 0, upgrade_tree = [], ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('UPGRADABLE');\n    this.upgrade_points = upgrade_points;\n    this.upgrade_tree = upgrade_tree;\n  }\n\n  upgrade (upgrade) {\n    if (upgrade.canUpgrade(this)) {\n      upgrade.activate(this);\n      if (upgrade.removeOnActivate) {\n        const newTree = this.upgrade_tree.filter((currUpgrade) => currUpgrade.name !== upgrade.name);\n        this.upgrade_tree = newTree;\n      }\n      return true;\n    }\n    return false;\n  }\n};\n","export const HasFaction = superclass => class extends superclass {\n  constructor({ faction = null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HAS_FACTION');\n    this.faction = faction;\n  }\n};\n","import pipe from 'lodash/fp/pipe';\nimport { Entity } from './Entity';\nimport { Parent } from './Parent';\nimport { PresentingUI } from './PresentingUI';\nimport { HasInnerGates } from './HasInnerGates';\nimport { UI } from './UI';\nimport {HasTargetingCursor} from './HasTargetingCursor';\nimport {HasShapePattern} from './HasShapePattern';\nimport { Attacking } from './Attacking';\nimport { RangedAttacking } from './RangedAttacking';\nimport { Equipable } from './Equipable';\nimport { Acting } from './Acting';\nimport { Rendering } from './Rendering';\nimport { Containing } from './Containing';\nimport { Equiping } from './Equiping';\nimport { Charging } from './Charging';\nimport { Signing } from './Signing';\nimport { Playing } from './Playing';\nimport { Cloning } from './Cloning';\nimport { Covering } from './Covering';\nimport { DestructiveProjecting } from './DestructiveProjecting';\nimport { DirectionalProjecting } from './DirectionalProjecting';\nimport { DirectionalPushing } from './DirectionalPushing';\nimport { GaseousDestructiveProjecting } from './GaseousDestructiveProjecting';\nimport { Gaseous } from './Gaseous';\nimport { Chasing } from './Chasing';\nimport { RangedChasing } from './RangedChasing';\nimport { Dragging } from './Dragging';\nimport { Draggable } from './Draggable';\nimport { Pushable } from './Pushable';\nimport { Spreading } from './Spreading';\nimport { Spawning } from './Spawning';\nimport { Destructable } from './Destructable';\nimport { IsParticle } from './IsParticle';\nimport { Speaking } from './Speaking';\nimport { Burnable } from './Burnable';\nimport { Exploding } from './Exploding';\nimport { Helpless } from './Helpless';\nimport { HasKeymap } from './HasKeymap';\nimport { Upgradable } from './Upgradable';\nimport { HasFaction } from './HasFaction';\n\nexport const UI_Actor = pipe(\n  Acting,\n  Rendering,\n  Playing,\n  HasKeymap,\n  UI\n)(Entity);\n\nexport const Actor = pipe(\n  Acting,\n  Rendering\n)(Entity);\n\nexport const Speaker = pipe(\n  Acting,\n  Rendering,\n  Destructable,\n  Speaking,\n  Draggable,\n  Pushable,\n  Burnable,\n  Helpless,\n)(Entity);\n\nexport const Wall = pipe(\n  Rendering,\n  Destructable,\n)(Entity);\n\nexport const CoverWall = pipe(\n  Rendering,\n  Covering,\n  Destructable,\n)(Entity);\n\nexport const Debris = pipe(\n  Rendering,\n  Containing,\n  Draggable,\n  Burnable,\n  Destructable,\n  Exploding,\n  Pushable,\n)(Entity);\n\nexport const MovingWall = pipe(\n  Acting,\n  Rendering,\n  // Pushing,\n  DirectionalPushing,\n  Destructable,\n)(Entity);\n\nexport const Chaser = pipe(\n  Acting,\n  Rendering,\n  Chasing,\n  Destructable\n)(Entity);\n\nexport const Bandit = pipe(\n  Acting,\n  Rendering,\n  Chasing,\n  Destructable,\n  Attacking,\n  Pushable,\n  HasFaction,\n)(Entity);\n\nexport const RangedBandit = pipe(\n  Acting,\n  Rendering,\n  RangedChasing,\n  Destructable,\n  Attacking,\n  Pushable,\n  HasFaction,\n)(Entity);\n\nexport const Player = pipe(\n  Acting,\n  Rendering,\n  PresentingUI,\n  HasTargetingCursor,\n  HasKeymap,\n  Dragging,\n  Charging,\n  Signing,\n  Containing,\n  Equiping,\n  Attacking,\n  RangedAttacking,\n  Destructable,\n  Cloning,\n  Playing,\n  Burnable,\n  Upgradable,\n  HasFaction,\n)(Entity);\n\nexport const Weapon = pipe(\n  Rendering,\n  Equipable,\n  Attacking\n)(Entity);\n\nexport const RangedWeapon = pipe(\n  Rendering,\n  Equipable,\n  RangedAttacking,\n  Attacking,\n  HasShapePattern,\n)(Entity);\n\nexport const Armor = pipe(\n  Rendering,\n  Equipable,\n  Destructable,\n)(Entity);\n\nexport const Ammo = pipe(\n  Rendering,\n)(Entity);\n\nexport const DestructiveProjectile = pipe(\n  Acting,\n  Rendering,\n  Attacking,\n  DestructiveProjecting,\n  Destructable\n)(Entity);\n\nexport const DirectionalProjectile = pipe(\n  Acting,\n  Rendering,\n  Attacking,\n  DirectionalProjecting,\n  Destructable,\n)(Entity);\n\nexport const Grenade = pipe(\n  Acting,\n  Rendering,\n  Attacking,\n  DirectionalProjecting,\n  Destructable,\n  Exploding,\n)(Entity);\n\nexport const DestructiveCloudProjectile = pipe(\n  Acting,\n  Rendering,\n  Attacking,\n  GaseousDestructiveProjecting,\n  Destructable,\n  Gaseous\n)(Entity);\n\nexport const DestructiveCloudProjectileV2 = pipe(\n  Acting,\n  Destructable,\n  Parent,\n)(Entity);\n\nexport const FireSpread = pipe(\n  Acting,\n  Rendering,\n  Destructable,\n  Attacking,\n  Spreading,\n)(Entity);\n\nexport const EmergenceHole = pipe(\n  Acting,\n  Rendering,\n  Destructable,\n  Spawning,\n  HasFaction,\n)(Entity);\n\nexport const Particle = pipe(\n  Acting,\n  Rendering,\n  IsParticle,\n)(Entity);\n\nexport const ParticleEmitter = pipe(\n  Acting,\n  Destructable,\n  Parent,\n)(Entity);","export const UI = superclass => class extends superclass {\n  constructor({ initiatedBy = null, range = null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('UI');\n    this.initiatedBy = initiatedBy;\n    this.active = true;\n    this.range = range;\n  }\n  hasEnoughEnergy() {\n    return this.active;\n  }\n};\n","import { Say } from '../Actions/Say';\n\nexport const Speaking = superclass => class extends superclass {\n  constructor({ messages = ['I have nothing to say.'], messageType, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SPEAKING');\n    this.messages = messages;\n    this.messageType = messageType;\n  }\n  getAction(game) {\n    const message = this.messages.shift();\n    this.messages.push(message);\n    return new Say({\n      actor: this,\n      game,\n      message: message,\n      messageType: this.messageType,\n      processDelay: 0,\n    });\n  }\n};\n","import SOUNDS from '../sounds';\nimport * as Helper from '../../helper';\n\nexport const Helpless = superclass => class extends superclass {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HELPLESS');\n    this.saved = false;\n  }\n  save() {\n    this.saved = true;\n    SOUNDS.save.play();\n  }\n  destroy() {\n    const sound = Helper.getRandomInArray([SOUNDS.scream_0, SOUNDS.scream_1, SOUNDS.scream_2]);\n    sound.play();\n    super.destroy();\n  }\n};\n","export const Covering = superclass => class extends superclass {\n  constructor({ accuracyModifer = 0, damageModifer = 0, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('COVERING');\n    this.providesCover = true;\n    this.accuracyModifer = accuracyModifer;\n    this.damageModifer = damageModifer;\n  }\n};\n","import * as Constant from '../constants';\nimport { Shove } from '../Actions/Shove';\nimport { DestroySelf } from '../Actions/DestroySelf';\n\nexport const DirectionalPushing = superclass => class extends superclass {\n  constructor({ path = false, direction = { x: 0, y: 0 }, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DIRECTIONAL_PUSHING');\n    this.path = path;\n    this.direction = direction;\n    this.range = range;\n  }\n  getAction(game) {\n    let result = null;\n    let newX = this.pos.x + this.direction[0];\n    let newY = this.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n    this.passable = false;\n    if (this.range > 0) {\n      result = new Shove({\n        targetPos: targetPos,\n        direction: this.direction,\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        onSuccess: () => this.range -= 1,\n      });\n    }\n    else {\n      result = new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: 0\n      });\n    }\n    return result;\n  }\n};\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper'; \nimport { PlaceActor } from '../Actions/PlaceActor';\nimport { Say } from '../Actions/Say';\nimport { Move } from '../Actions/Move';\n\nexport const RangedChasing = superclass => class extends superclass {\n  constructor({ targetEntity = null, getProjectile = () => null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('RANGED_CHASING');\n    this.targetEntity = targetEntity;\n    this.getProjectile = getProjectile;\n  }\n  targetInPath(pathToCheck, targetPos) {\n    let inPath = false;\n    pathToCheck.forEach((pos) => {\n      if (pos.x === targetPos.x && pos.y === targetPos.y) {\n        inPath = true;\n      }\n    });\n    return inPath;\n  }\n  getAction(game) {\n    if (!this.targetEntity) {\n      return new Say({\n        message: `Where are they?`,\n        game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n    let throwDirection = {\n      x: Math.sign(this.targetEntity.pos.x - this.pos.x),\n      y: Math.sign(this.targetEntity.pos.y - this.pos.y),\n    };\n    // projectile.initialize()\n    let projectile = this.getProjectile({\n      pos: {\n        x: this.pos.x,\n        y: this.pos.y,\n      },\n      targetPos: { ...this.targetEntity.pos },\n      direction: [throwDirection.x, throwDirection.y],\n      range: 10,\n    });\n    // projectile.getPath()\n    projectile.createPath(game);\n    // is target in path\n    const inPath = this.targetInPath(projectile.path, this.targetEntity.pos);\n    if (inPath) {\n      // throw\n      if (game.canOccupyPosition(projectile.pos, projectile)) {\n        return new PlaceActor({\n          targetPos: { ...projectile.pos },\n          entity: projectile,\n          game,\n          actor: this,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      }\n      return new Say({\n        message: `I'll get you with this kunai!`,\n        game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n    // if not, select target tile in range of enemy and move\n    let movePath = Helper.calculatePath(game, this.targetEntity.pos, this.pos);\n    let targetPos = movePath.length > 0 ? movePath[0] : this.pos;\n    return new Move({\n      targetPos,\n      game,\n      actor: this,\n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n  }\n};\n","export const PresentingUI = superclass => class extends superclass {\n  constructor({ presentingUI = false, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('PRESENTING_UI');\n    this.presentingUI = presentingUI;\n  }\n};\n","import * as Helper from '../../helper';\nimport { THEMES } from '../constants';\nimport { ANIMATION_TYPES } from '../Display/konvaCustom';\n\nexport const HasTargetingCursor = superclass => class extends superclass {\n  constructor({...args}) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HAS_TARGETING_CURSOR');\n    this.cursorIsActive = false;\n    this.cursorPositions = []; \n    this.animations = []; \n  }\n\n  setCursorIsActive (active = true) {\n    this.cursorIsActive = active;\n  }\n\n  activateCursor (positions) {\n    this.setCursorPositions(positions);\n    this.setCursorIsActive(true);\n    this.resetAnimations();\n  }\n\n  deactivateCursor () {\n    this.setCursorIsActive(false);\n    this.removeAnimations();\n  }\n\n  getCursorPositions () {\n    return this.cursorPositions;\n  }\n\n  setCursorPositions (positions) {\n    this.cursorPositions = positions;\n    return this.getCursorPositions();\n  }\n\n  addAnimations () {\n    const positions = this.getCursorPositions();\n    if (positions.length) {\n      // hack for visual separation\n      let lastPos = {x: null, y: null}\n      let nudge = 0;\n      // const nudgeInc = 0.2\n      positions.forEach((position) => {\n        // if (position.x == lastPos.x && position.y == lastPos.y) nudge += nudgeInc;\n        // lastPos = {...position};\n        const newAnimation = this.game.display.addAnimation(\n          ANIMATION_TYPES.BLINK_TILE, \n          {\n            x: position.x, \n            y: position.y + nudge, \n            color: THEMES.SOLARIZED.base3 \n          }\n        );\n        this.animations.push(newAnimation);\n      })\n    }\n  }\n\n  removeAnimations () {\n    if (this.animations.length) {\n      this.animations.forEach((animation) => this.game.display.removeAnimation(animation.id))\n    }\n    this.animations = [];\n  }\n\n  resetAnimations () {\n    this.removeAnimations();\n    this.addAnimations();\n  }\n\n  moveCursorInDirection (direction, distance = 1) {\n    const newPositons = this.getCursorPositions().map(\n      (pos) => ({\n        x: pos.x + (direction[0] * distance),\n        y: pos.y + (direction[1] * distance)\n      })\n    );\n    this.setCursorPositions(newPositons);\n    this.resetAnimations();\n    return newPositons;\n  }\n\n  changeCursorColor (index, color) {\n    const anim = this.animations[index];\n    anim.node.fill(color)\n  }\n};\n","import * as Helper from '../../helper'; \n\nexport const Dragging = superclass => class extends superclass {\n  constructor({ draggedEntity = null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DRAGGING');\n    this.draggedEntity = draggedEntity;\n  }\n  grab(pos) {\n    const tile = this.game.map[Helper.coordsToString(pos)];\n    if (!tile)\n      return false;\n    if (tile.entities.length > 0) {\n      const entity = tile.entities[0];\n      if (entity.entityTypes.includes('DRAGGABLE'))\n        if (!this.draggedEntity && entity.draggable === true) {\n          this.draggedEntity = entity;\n          return true;\n        }\n    }\n    return false;\n  }\n  release() {\n    if (!this.draggedEntity)\n      return false;\n    const draggedEntity = { ...this.draggedEntity };\n    this.draggedEntity = null;\n    return draggedEntity;\n  }\n  drag(lastPos) {\n    // update entity position\n    const pos = this.draggedEntity.pos;\n    // get tile of draged entity\n    let tile = this.game.map[Helper.coordsToString(pos)];\n    // remove dragged entity from that tile\n    this.game.map[Helper.coordsToString(pos)] = { ...tile, entities: tile.entities.filter((e) => e.id !== this.draggedEntity.id) };\n    // update dragged ent to player's position\n    this.draggedEntity.pos = lastPos;\n    // add dragged ent to new tile\n    this.game.map[Helper.coordsToString(lastPos)].entities.push(this.draggedEntity);\n  }\n  move(targetPos) {\n    const lastPos = { ...this.pos };\n    if (this.draggedEntity) {\n      const moveSuccess = super.move(targetPos);\n      if (moveSuccess) {\n        this.drag(lastPos);\n        return true;\n      }\n      return moveSuccess;\n    }\n    return super.move(targetPos);\n  }\n};\n","export const Charging = superclass => class extends superclass {\n  constructor({ charge = 2, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CHARGING');\n    this.charge = charge;\n    this.chargeMax = charge;\n  }\n  decreaseCharge(value) {\n    this.charge = Math.max(0, this.charge - value);\n  }\n  increaseCharge(value) {\n    this.charge = Math.min(this.chargeMax, this.charge + value);\n  }\n};\n","export const Signing = superclass => class extends superclass {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SIGNING');\n    this.signHistory = [];\n  }\n  addSign(sign) {\n    if (this.signHistory.length >= 4) {\n      this.signHistory.shift();\n    }\n    this.signHistory.push(sign);\n  }\n  clearSigns() {\n    this.signHistory = [];\n  }\n};\n","import SOUNDS from '../sounds';\nimport * as Constant from '../constants';\n\nexport const Equiping = superclass => class extends superclass {\n  constructor({ equipment = Constant.EQUIPMENT_LAYOUTS.human(), ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('EQUIPING');\n    this.equipment = equipment;\n  }\n  hasItemNameEquipped(itemName) {\n    const equipment = this.equipment.filter((slot) => {\n      if (slot.item) {\n        if (slot.item.name === itemName) {\n          return true;\n        }\n      }\n      return false;\n    });\n    return equipment.length > 0;\n  }\n  getItemInSlot(slotName) {\n    let openSlots = this.equipment.filter((slot) => {\n      return (slot.item === null && slot.type === slotName);\n    });\n    if (openSlots.length > 0) {\n      return false;\n    }\n    let slot = this.equipment.find((slot) => slot.type === slotName);\n    if (!slot) {\n      return false;\n    }\n    if (!slot.item) {\n      return false;\n    }\n    return slot.item;\n  }\n  equip(slotName, item) {\n    let foundSlot = false;\n    this.equipment = this.equipment.map((slot) => {\n      if (!foundSlot && slot.type === slotName && slot.item === null) {\n        slot.item = item;\n        foundSlot = true;\n        SOUNDS.equip_1.play();\n      }\n      return slot;\n    });\n    return foundSlot;\n  }\n  unequip(item) {\n    this.equipment = this.equipment.map((slot) => {\n      if (slot.item) {\n        if (slot.item.id === item.id) {\n          slot.item = null;\n          SOUNDS.equip_0.play();\n        }\n      }\n      return slot;\n    });\n  }\n};\n","import uuid from 'uuid/v1';\nimport { destroyEntity } from './helper';\nimport { cloneDeep, find } from 'lodash';\n\nexport const Cloning = superclass => class extends superclass {\n  constructor({ cloneLimit = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CLONING');\n    this.cloneLimit = cloneLimit;\n    this.clones = [];\n  }\n  // perhaps clones should have a status effect that leeches parent actor's energy or chakra\n  // status effects should be removed from engine when owner is removed.\n  destroy() {\n    // add function to override self destroy funtion \n    // if this actor dies, clones should be destroyed as well\n    if (this.clones) {\n      this.clones.map((clone) => {\n        destroyEntity(clone);\n      });\n    }\n    destroyEntity(this);\n  }\n  destroyClone(id) {\n    // overrides clone destroy function\n    // when clone is destroyed, clone count will change accordingly\n    const index = this.clones.findIndex((c) => c.id === id);\n    if (index >= 0) {\n      this.clones[index].super__destroy();\n      this.clones.splice(index, 1);\n    }\n  }\n  createClone(cloneArgs) {\n    if (this.clones.length < this.cloneLimit) {\n      let clone = cloneDeep(this);\n      clone.name = `Clone`;\n      clone.game = this.game;\n      clone.id = uuid();\n      if (clone.entityTypes.includes('HAS_KEYMAP')) {\n        const ignoredKeys = find(cloneArgs, { 'attribute': 'ignoredKeys' });\n        clone.reinitializeKeymap(ignoredKeys? ignoredKeys.value : []);\n      }\n      delete clone.clones;\n      clone['super__destroy'] = clone.destroy;\n      clone.destroy = () => { this.destroyClone(clone.id); };\n      cloneArgs.forEach((arg) => {\n        clone[arg.attribute] = arg.value;\n      });\n      if (this.game.placeActorOnMap(clone)) {\n        this.game.engine.addActorAsNext(clone);\n        this.game.draw();\n        this.clones.push(clone);\n        return true;\n      }\n      ;\n    }\n    return false;\n  }\n};\n","import {CLONE_PATTERNS} from '../constants';\nimport {getPositionsFromStructure} from '../../helper';\nexport const HasShapePattern = superclass => class extends superclass {\n  constructor({ shapePattern = CLONE_PATTERNS.point, ...args }) {\n    super({ ...args });\n    this.shapePattern = shapePattern;\n    this.entityTypes = this.entityTypes.concat('HAS_SHAPE_PATTERN');\n  }\n\n  getPositionsInShape (pos) {\n    return getPositionsFromStructure(this.shapePattern, pos);\n  }\n};\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { ThrowProjectile } from '../Actions/ThrowProjectile';\n\nexport const DestructiveProjecting = superclass => class extends superclass {\n  constructor({ path = false, targetPos = null, attackDamage = 1, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DESTRUCTIVE_PROJECTING');\n    this.path = path;\n    this.targetPos = targetPos;\n    this.attackDamage = attackDamage;\n    this.range = range;\n  }\n  createPath(game) {\n    let path = Helper.calculatePathWithRange(game, this.targetPos, this.pos, 8, this.range);\n    this.path = path;\n  }\n  getAction(game) {\n    if (!this.path) {\n      this.createPath(game);\n    }\n    let targetPos = this.path.length > 0 ? this.path[0] : this.pos;\n    let result = new ThrowProjectile({\n      targetPos,\n      game,\n      actor: this,\n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n    return result;\n  }\n};\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { ThrowProjectileGas } from '../Actions/ThrowProjectileGas';\n\nexport const GaseousDestructiveProjecting = superclass => class extends superclass {\n  constructor({ owner_id = null, path = false, targetPos = null, attackDamage = 1, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('GASEOUS_DESTRUCTIVE_PROJECTING');\n    this.path = path;\n    this.targetPos = targetPos;\n    this.attackDamage = attackDamage;\n    this.range = range;\n    this.owner_id = owner_id;\n  }\n  canAttack(entity) {\n    let success = super.canAttack();\n    if (success) {\n      success = this.owner_id === null || (entity.owner_id !== this.owner_id);\n    }\n    return success;\n  }\n  createPath(game) {\n    let path = Helper.calculatePathWithRange(game, this.targetPos, this.pos, 8, this.range);\n    this.path = path;\n  }\n  getAction(game) {\n    if (!this.path) {\n      this.createPath(game);\n    }\n    let targetPos = this.path.length > 0 ? this.path[0] : this.pos;\n    let result = new ThrowProjectileGas({\n      targetPos,\n      game,\n      actor: this,\n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n    return result;\n  }\n};\n","import uuid from 'uuid/v1';\nimport { cloneDeep, cloneDeepWith } from 'lodash';\nimport * as Constant from '../constants';\n\nexport const Gaseous = superclass => class extends superclass {\n  constructor({ isClone = false, cloneCount = 0, clonePattern = Constant.CLONE_PATTERNS.square, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('GASEOUS');\n    this.isClone = isClone;\n    this.cloneCount = cloneCount;\n    this.clonePattern = cloneDeep(clonePattern);\n  }\n  getAction(game) {\n    let offset = this.clonePattern.positions.find((pos) => !pos.taken);\n    if (!this.isClone && offset) {\n      offset.taken = true;\n      let clone = cloneDeepWith(this, (value, key) => {\n        switch (key) {\n          case 'id':\n          case 'game':\n          case 'engine':\n          case 'clones':\n            return null;\n          default:\n            return undefined;\n        }\n      });\n      clone.game = game;\n      clone.id = uuid();\n      if (this.hasOwnProperty('pos')) {\n        let referencePos = this.pos;\n        clone.pos = {\n          x: referencePos.x + offset.x,\n          y: referencePos.y + offset.y\n        };\n      }\n      if (clone.hasOwnProperty('path')) {\n        clone.path = clone.path.map((pos) => {\n          return {\n            x: pos.x + offset.x,\n            y: pos.y + offset.y\n          };\n        });\n      }\n      clone.isClone = true;\n      this.cloneCount += 1;\n      game.placeActorOnMap(clone);\n      game.engine.addActor(clone);\n      game.draw();\n    }\n    let result = super.getAction(game);\n    return result;\n  }\n};\n","import { FireSpread } from './index';\nimport * as Constant from '../constants';\nimport * as Helper from '../../helper'; \nimport { Say } from '../Actions/Say';\nimport { DestroySelf } from '../Actions/DestroySelf';\nimport { PlaceActor } from '../Actions/PlaceActor';\n\nexport const Spreading = superclass => class extends superclass {\n  constructor({ timeToSpread = 5, spreadCount = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SPREADING');\n    this.timeToSpreadMax = timeToSpread;\n    this.timeToSpread = timeToSpread;\n    this.spreadCountMax = spreadCount;\n    this.spreadCount = spreadCount;\n  }\n  getAction(game) {\n    // if no more spreads, then destroy\n    if (this.spreadCount <= 0) {\n      return new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n        onAfter: () => {\n          game.map[Helper.coordsToString(this.pos)].type = 'BURNT';\n        },\n      });\n    }\n    // if its time to expand again, create a new fire spread and placeActor\n    if (this.timeToSpread <= 0) {\n      // find adjacent spot to spread to\n      let adjacentPositions = [\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + 1,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + -1,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + 1,\n        },\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + -1,\n        },\n      ];\n      let adjacentPos = null;\n      let kill = 100;\n      while (kill > 0) {\n        let newPos = Helper.getRandomInArray(adjacentPositions);\n        let newTile = this.game.map[Helper.coordsToString(newPos)];\n        let tileExists = Boolean(newTile);\n        let notBurnt = true;\n        let canBurn = false;\n        if (newTile) {\n          notBurnt = newTile.type !== 'BURNT';\n          canBurn = ['WALL', 'FLOOR', 'DOOR'].includes(newTile.type);\n        }\n        if (tileExists && notBurnt && canBurn) {\n          adjacentPos = newPos;\n          break;\n        }\n        kill -= 1;\n      }\n      if (adjacentPos) {\n        // create new fire actor and place\n        let fire = new FireSpread({\n          name: 'Pyro',\n          pos: { x: 0, y: 0 },\n          game,\n          renderer: {\n            character: '*',\n            sprite: '',\n            color: Constant.THEMES.SOLARIZED.base3,\n            background: Constant.THEMES.SOLARIZED.red,\n          },\n          timeToSpread: this.timeToSpreadMax,\n          spreadCount: this.spreadCountMax,\n          durability: this.durability,\n          attackDamage: this.attackDamage,\n          speed: this.speed,\n        });\n        this.timeToSpread = this.timeToSpreadMax;\n        this.spreadCount -= 1;\n        return new PlaceActor({\n          targetPos: adjacentPos,\n          entity: fire,\n          game,\n          actor: this,\n          interrupt: false,\n          energyCost: Constant.ENERGY_THRESHOLD,\n          processDelay: 0,\n          forcePlacement: true,\n        });\n      }\n      this.timeToSpread = this.timeToSpreadMax;\n      this.spreadCount -= 1;\n    }\n    this.timeToSpread -= 1;\n    return new Say({\n      message: 'burning',\n      game,\n      actor: this,\n      processDelay: 0,\n    });\n  }\n};\n","import { FireSpread } from './index';\nimport * as Constant from '../constants';\nimport * as Helper from '../../helper'; \nimport * as Item from '../items'; \nimport { Say } from '../Actions/Say';\nimport { DestroySelf } from '../Actions/DestroySelf';\nimport { PlaceActor } from '../Actions/PlaceActor';\n\nexport const Spawning = superclass => class extends superclass {\n  constructor({ getSpawnedEntity, timeToSpread = 5, spreadCount = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SPAWNING');\n    this.timeToSpreadMax = timeToSpread;\n    this.timeToSpread = timeToSpread;\n    this.spreadCountMax = spreadCount;\n    this.spreadCount = spreadCount;\n    this.getSpawnedEntity = getSpawnedEntity\n  }\n  getAction(game) {\n    // if no more spreads, then destroy\n    if (this.spreadCount <= 0) {\n      return new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n      });\n    }\n    // if its time to expand again, create a new fire spread and placeActor\n    if (this.timeToSpread <= 0) {\n      // find adjacent spot to spread to\n      let adjacentPositions = [\n        {\n          x: this.pos.x + 1,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + -1,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + 1,\n        },\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + -1,\n        },\n      ];\n      let adjacentPos = null;\n      let kill = 100;\n      while (kill > 0) {\n        let newPos = Helper.getRandomInArray(adjacentPositions);\n        let newTile = this.game.map[Helper.coordsToString(newPos)];\n        let tileExists = Boolean(newTile);\n        if (tileExists && game.canOccupyPosition(newPos)) {\n          adjacentPos = newPos;\n          break;\n        }\n        kill -= 1;\n      }\n      if (adjacentPos) {\n        this.timeToSpread = this.timeToSpreadMax;\n        this.spreadCount -= 1;\n        return new PlaceActor({\n          targetPos: adjacentPos,\n          entity: this.getSpawnedEntity(adjacentPos),\n          game,\n          actor: this,\n          interrupt: false,\n          energyCost: Constant.ENERGY_THRESHOLD,\n          processDelay: 0,\n          forcePlacement: true,\n        });\n      }\n      this.timeToSpread = this.timeToSpreadMax;\n      this.spreadCount -= 1;\n    }\n    this.timeToSpread -= 1;\n    return new Say({\n      message: 'boom boom',\n      game,\n      actor: this,\n      processDelay: 0,\n    });\n  }\n};\n","import * as Constant from '../constants'; \n\nexport const IsParticle = superclass => class extends superclass {\n  constructor({ pos = { x: 1, y: 1 }, direction = { x: 0, y: 0 }, life = 1, speed = 1, type = Constant.PARTICLE_TYPE.directional, path = null, ...args }) {\n    super({ ...args });\n    this.pos = pos;\n    this.direction = direction;\n    this.life = life;\n    this.speed = speed;\n    this.type = type;\n    this.path = path;\n    this.entityTypes = this.entityTypes.concat('PARTICLE');\n  }\n  getNextPos(step) {\n    switch (this.type) {\n      case Constant.PARTICLE_TYPE.directional:\n        return {\n          x: this.pos.x + (this.direction.x * this.speed) * step,\n          y: this.pos.y + (this.direction.y * this.speed) * step,\n        };\n      case Constant.PARTICLE_TYPE.path:\n        const nextPos = this.path.shift();\n        return nextPos ? { ...nextPos } : { ...this.pos };\n      default:\n        break;\n    }\n  }\n  update(step) {\n    this.life -= step;\n    if (this.life > 0) {\n      this.pos = this.getNextPos(step);\n    }\n  }\n};\n","import * as Helper from '../../helper';\nimport { Particle } from '../Entities/index';\nimport { PARTICLE_TEMPLATES } from '../constants';\n\nexport class Engine {\n  constructor({\n    statusEffects = [],\n    actors = [],\n    currentActor = 0,\n    isRunning = false,\n    game = null,\n  }) {\n    this.statusEffects = statusEffects;\n    this.actors = actors;\n    this.currentActor = currentActor;\n    this.isRunning = isRunning;\n    this.game = game;\n  }\n\n  async processV1 () { // a turn-based system using speed and round-robin\n    let actor = this.actors[this.currentActor]\n    actor.gainEnergy(actor.speed);\n    if (actor.hasEnoughEnergy()) {\n      let action = actor.getAction(this.game);\n      if (!action) { return false; } // if no action given, kick out to UI input\n      while (true) {\n        let result = action.perform();\n        this.game.draw();\n        await Helper.delay(action.processDelay);\n        if (!result.success) return false;\n        if (result.alternative === null) break;\n        action = result.alternative;\n      }\n    }\n    this.currentActor = (this.currentActor + 1) % this.actors.length;\n    return true\n  }\n\n  async processV2() { // a turn-based system using speed and Action Points\n    let actor = this.actors[this.currentActor]\n    if (this.game.getFirstPlayer() === null) return false\n    let acting = true;\n    while (acting) {\n      if (!actor) return false;\n      // if (!actor.active) return false;\n      if (!actor.active) break;\n      let timePassed = 0;\n      \n      if (actor.hasEnoughEnergy()) {\n        // if (!actor.active) break;\n        let action = actor.getAction(this.game);\n        if (!action) { return false; } // if no action given, kick out to UI input\n        timePassed += action.getEnergyCost();\n        // console.log('timePassed ', timePassed);\n        \n        // timePassed += action.energyCost;\n        while (true) {\n          let result = {\n            success: false,\n            alternative: null,\n          };\n          // if (actor.energy >= action.energyCost) { // replace with checking for all required resources\n          if (action.canPayRequiredResources()) { // replace with checking for all required resources\n            \n            action.onBefore();\n            result = await action.perform();\n            if (result.success) {\n              action.onSuccess();\n              action.payRequiredResources();\n            } else {\n              action.onFailure();\n            }\n            action.onAfter();\n          }\n          if (!await this.processActionFX(action, result.success)) {\n            if (this.shouldAutoRun()) {\n              await Helper.delay(25);\n            } else {\n              await Helper.delay(action.processDelay);\n            }\n            this.game.draw();\n          }\n          if (!actor.active) break;\n          // if (!result.success) return false;\n          if (result.alternative === null) break;\n          action = result.alternative;\n        }\n        this.processStatusEffects(timePassed);\n        if (action.interrupt) {\n          acting = false;\n          break;\n        }\n      } else {\n        actor.gainEnergy(actor.speed);\n        acting = false;\n      }\n    }\n    this.actors = this.actors.filter((actor) => actor.active)\n    this.currentActor += 1;\n    if (this.currentActor >= this.actors.length) {\n      this.currentActor = 0;\n    }\n    return true\n  }\n\n  // a turn-based system using speed and Action Points\n  // it reorders all actors by energy after every round robin\n  async processV3() { \n    let actor = this.actors[this.currentActor]\n    if (!actor) return false;\n    let timePassed = 0;\n    if (actor.hasEnoughEnergy()) {\n      let action = actor.getAction(this.game);\n      if (!action) { return false; } // if no action given, kick out to UI input\n      timePassed += action.energyCost;\n      while (true) {\n        let result = await action.perform();\n        if (!await this.processActionFX(action, result.success)) {\n            await Helper.delay(action.processDelay);\n            this.game.draw();\n        }\n        if (!result.success) return false;\n        if (result.alternative === null) break;\n        action = result.alternative;\n      }\n      this.processStatusEffects(timePassed);\n    } else {\n      actor.gainEnergy(actor.speed);\n    }\n    this.currentActor = (this.currentActor + 1) % this.actors.length;\n    if (this.currentActor === 0) this.sortActorsByEnergy();\n    return true\n  }\n\n  // TODO process that reorders actors after every action\n\n  async start() {\n    this.isRunning = true;\n    while (this.isRunning) {\n      this.isRunning = await this.processV2();\n    }\n    let actor = this.actors[this.currentActor]\n    \n    if (!actor) {\n      // this.game.backToTitle();\n      return false;\n    }\n\n    this.setVisibleKeymap(actor);\n    \n    this.game.updateMode();\n    await this.game.updateReact(this.game);\n  }\n  \n  stop() {\n    this.isRunning = false;\n  }\n\n  setVisibleKeymap (actor) {\n    if (actor.entityTypes.includes('HAS_KEYMAP')) {\n      const keymap = actor.getKeymap()\n      if (keymap) {\n        this.game.visibleKeymap = keymap;\n      }\n    }\n  }\n\n  sortActorsByEnergy () {\n    this.actors = this.actors.sort((a, b) => b.energy - a.energy);\n  }\n\n  shouldAutoRun () {\n  // if there is no player, the engine will continue to run, we don't want it to run too fast\n    const hasPlayer = this.actors.filter((actor) => actor.entityTypes.includes('PLAYING')).length\n    if (hasPlayer) return false;\n    return true;\n  }\n\n  addStatusEffect(newEffect) {\n    if (!newEffect.allowDuplicates) {\n      if (this.statusEffects.filter((effect) => (\n        effect.actor.id === newEffect.actor.id &&\n        effect.name === newEffect.name\n      )).length > 0) {\n        console.log(`${newEffect.name} cannot be applied twice to ${newEffect.actor.name}`);\n        return false;\n      };\n    }\n    newEffect.onStart();\n    this.statusEffects.push(newEffect)\n    return true;\n  }\n\n  removeStatusEffectById (id) {\n    this.statusEffects = this.statusEffects.filter((effect) => {\n      if (effect.id !== id) return true;\n      effect.onStop();\n      return false;\n    });\n  }\n  \n  removeStatusEffectByActorId (actorId) {\n    this.statusEffects = this.statusEffects.filter((effect) => {\n      if (effect.actor.id !== actorId) return true;\n      effect.onStop();\n      return false;\n    });\n  }\n\n  removeDeadStatusEffects() {\n    this.statusEffects = this.statusEffects.filter((effect) =>{\n      if (effect.lifespan >= 0 && effect.timeToLive <= 0) {\n        effect.onStop();\n        return false;\n      }\n      return true;\n    });\n  }\n\n  getStatusEffectsByActorId(actorId) {\n    return this.statusEffects.filter((effect) => effect.actor.id === actorId);\n  }\n\n  processStatusEffects (timePassed) {\n    this.statusEffects.forEach((effect) => {\n      effect.timeSinceLastStep += timePassed;\n      effect.timeToLive -= timePassed;\n      if (effect.timeSinceLastStep >= effect.stepInterval) {\n        effect.onStep();\n        effect.timeSinceLastStep = 0;\n      } \n    });\n    this.removeDeadStatusEffects();\n  }\n\n  async processActionFX (action, actionSuccess) {\n    // EASE IN\n    // let time = .8\n    // let nextT = (t) => t *= t; \n    // EASE OUT\n    // let time = .03\n    // let nextT = (t) => t * (2 - t); \n    // EASE IN OUT QUAD\n    // let time = .4\n    // let nextT = (t) => t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t; \n    // EASE IN CUBIC\n    // let time = .8\n    // let nextT = (t) => t * t * t; \n    // EASE OUT CUBIC\n    // let time = .001\n    // let nextT = (t) => (--t) * t * t + 1; \n    if (!actionSuccess) { \n      // If action is not successful, instead of running action's normal particle animation\n      // we'll show a red X on the entity that initiated the action\n      const particle = new Particle({\n        game: this.game,\n        name: 'particle',\n        passable: true,\n        pos: {...action.actor.pos},\n        renderer: PARTICLE_TEMPLATES.fail.renderer,\n      })\n      this.game.placeActorOnMap(particle);\n      this.game.draw();\n      await Helper.delay(100);\n      this.game.removeActorFromMap(particle);\n      particle.update(1);\n      this.game.draw();\n      action.removeDeadParticles(); // is this needed?\n      return true;\n    }\n\n    if (action.particles.length) {\n      while (action.particles.length > 0) {\n        action.particles.forEach((particle) => {\n          this.game.placeActorOnMap(particle);\n        })\n        this.game.draw();\n        // await Helper.delay(time * 100);\n        // await Helper.delay(time * action.processDelay);\n        await Helper.delay(action.processDelay);\n        // await Helper.delay(0);\n        action.particles.forEach((particle) => {\n          this.game.removeActorFromMap(particle);\n          particle.update(1);\n\n        })\n        this.game.draw();\n        action.removeDeadParticles();\n        // time = nextT(time);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  addActor (entity) {\n    this.actors.push(entity);\n  }\n\n  addActorAsPrevious (entity) {\n    this.actors.splice(this.currentActor, 0, entity);\n  }\n\n  addActorAsNext (entity) {\n    this.actors.splice(this.currentActor + 1, 0, entity);\n  }\n\n  setActorToPrevious (entity) {\n    this.currentActor -= 1;\n    if (this.currentActor <= -1) this.currentActor = this.actors.length - 1;\n  }\n\n  setActorToNext (entity) {\n    this.currentActor = (this.currentActor + 1) % this.actors.length;\n  }\n\n}\n\n\nexport class CrankEngine extends Engine {\n  async process() { // a turn-based system using speed and Action Points\n    let actor = this.actors[this.currentActor]\n    let acting = true;\n    while (acting) {\n      if (actor.hasEnoughEnergy()) {\n        let action = actor.getAction(this.game);\n        if (!action) { return false; } // if no action given, kick out to UI input\n        while (true) {\n          this.game.draw();\n          let result = await action.perform();\n          await Helper.delay(action.processDelay);\n          if (!result.success) return false;\n          if (result.alternative === null) break;\n          action = result.alternative;\n        }\n      } else {\n        // actor.gainEnergy(actor.speed);\n        acting = false;\n      }\n    }\n    // this.currentActor = (this.currentActor + 1) % this.actors.length;\n    this.currentActor += 1;\n    if (this.currentActor + 1 >= this.actors.length) {\n      this.currentActor = 0;\n      this.actors.forEach((actor) => actor.gainEnergy(actor.speed));\n      return false;\n    }\n    return true\n  }\n\n  async start() {\n    this.isRunning = true;\n    while (this.isRunning) {\n      this.isRunning = await this.process();\n    }\n    let actor = this.actors[this.currentActor]\n    this.setVisibleKeymap(actor);\n    // this.game.updateMode();\n    this.game.mode.update();\n    await this.game.updateReact(this.game);\n  }\n}","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\n\nexport const addTileZone = (tileKey, origin = { x: 0, y: 0 }, height = 3, width = 3, type = 'GROUND', map, mapHeight, mapWidth) => {\n  for (let i = 0; i < mapHeight; i++) {\n    for (let j = 0; j < mapWidth; j++) {\n      if (i >= origin.y && i <= origin.y + (height - 1) && j >= origin.x && j <= origin.x + (width - 1)) {\n        const key = `${j},${i}`\n        let currentFrame = 0;\n\n        if (tileKey[type].animation) {\n          currentFrame = Helper.getRandomInt(0, tileKey[type].animation.length)\n        }\n\n        map[key] = {\n          type,\n          currentFrame,\n          entities: [],\n        };\n      }\n    }\n  }\n}","import * as Helper from '../../helper';\n\nexport const generate = (map, offsetX, offsetY, unitCount = 12, unitSize = 4, borderWidth = 1) => {\n  let data = {};\n  // const floorPlan = createFloorPlan(unitCount);\n  // let maxX = 0; \n  // let minX = 0; \n  // let maxY = 0; \n  // let minY = 0; \n  // floorPlan.forEach((pos) => {\n  //   if (pos.x > maxX) maxX = pos.x;\n  //   if (pos.x < minX) minX = pos.x;\n  //   if (pos.y > maxY) maxY = pos.y;\n  //   if (pos.y < minY) minY = pos.y;\n  // })\n  // const floorPlanWidth = Math.abs(maxX) + Math.abs(minX) + 1;\n  // const floorPlanHeight = Math.abs(maxY) + Math.abs(minY) + 1;\n  // console.log(floorPlanWidth);\n  // console.log(floorPlanHeight);\n  \n  let floorPlan = createFloorPlan();\n  let kill = 1000\n  while (floorPlan.length < unitCount + 1) {\n    \n    let unit = createRoomInFloorPlan(floorPlan);\n    if (unit) {\n      const unitPosition = getUnitPosition(unit, offsetX, offsetY, unitSize);\n      let didCreate = createUnit(map, unitPosition, unitSize, 0);\n      if (didCreate) floorPlan.push(unit);\n    }\n    \n    kill -= 1;\n    if (kill <= 0) break;\n  }\n  \n  removeInnerWalls(map)\n  addInnerWalls(map, floorPlan.length)\n  return data;\n}\n\nconst createFloorPlan = () => {\n  // create origin\n  let floorPlan = [{x: 0, y: 0}];\n  return floorPlan\n}\n\nconst createRoomInFloorPlan = (floorPlan) => {\n  // randomly choose previously created unit\n  // let origin = floorPlan[floorPlan.length - 1];\n  let origin = Helper.getRandomInArray(floorPlan);\n  // randomly choose neighboring point\n  let newUnit = getNeighboringUnit(origin);\n  let unitAlreadyExists = unitExists(newUnit, floorPlan)\n  let kill = 1000\n  while (unitAlreadyExists) {\n    origin = Helper.getRandomInArray(floorPlan.filter((pnt) => !Helper.coordsAreEqual(pnt, origin)));\n    newUnit = getNeighboringUnit(origin);\n    unitAlreadyExists = unitExists(newUnit, floorPlan)\n    kill -= 1;\n    if (kill <= 0) {\n      unitAlreadyExists = false;\n      newUnit = false;\n      break;\n    }\n  }\n  \n  return newUnit\n}\n\nconst getNeighboringUnit = (origin) => Helper.getRandomInArray(getNeighboringPoints(origin))\nconst unitExists = (newUnit, existingUnits) => existingUnits.filter((unit) => unit.x === newUnit.x && unit.y === newUnit.y).length > 0;\nconst getUnitPosition = (floorPlanPos, mapOffsetX, mapOffsetY, unitSize) => {\n  return {\n    x: floorPlanPos.x + mapOffsetX + (unitSize * floorPlanPos.x),\n    y: floorPlanPos.y + mapOffsetY + (unitSize * floorPlanPos.y),\n  }\n}\n\nconst getNeighboringPoints = (origin, eightWay = false) => {\n  let neighbors = [\n    {\n      x: origin.x,\n      y: origin.y + 1\n    },\n    {\n      x: origin.x + 1,\n      y: origin.y\n    },\n    {\n      x: origin.x,\n      y: origin.y - 1\n    },\n    {\n      x: origin.x - 1,\n      y: origin.y\n    },\n  ]\n\n  if (eightWay) {\n    neighbors = neighbors.concat([\n      {\n        x: origin.x + 1,\n        y: origin.y + 1\n      },\n      {\n        x: origin.x + 1,\n        y: origin.y - 1\n      },\n      {\n        x: origin.x - 1,\n        y: origin.y - 1\n      },\n      {\n        x: origin.x - 1,\n        y: origin.y + 1\n      },\n    ])\n  }\n  return neighbors;\n}\n\nconst createUnit = (map, position, size, border) => {\n  // const length = size; // this will leave a border\n  // const length = size + 1; // this will close the gap\n  const length = size + 1 - border; // this will calculate using border\n\n  // prevent units from hitting map edge\n  let unitCollidesWithEdge = false;\n  for (let i = 0; i < length; i++) {\n    for (let j = 0; j < length; j++) {\n      const newPosition = {\n        x: position.x + i,\n        y: position.y + j,\n      }\n      let tile = map[Helper.coordsToString(newPosition)];\n      if (!tile) unitCollidesWithEdge = true;\n    }\n  }\n\n  if (!unitCollidesWithEdge) {\n    for (let i = 0; i < length; i++) {\n      for (let j = 0; j < length; j++) {\n        const newPosition = {\n          x: position.x + i,\n          y: position.y + j,\n        }\n        let type = 'FLOOR';\n        if (i === 0 || i === (length - 1)) type = 'WALL';\n        if (j === 0 || j === (length - 1)) type = 'WALL';\n        let tile = map[Helper.coordsToString(newPosition)];\n        if (tile) tile.type = type;\n      }\n    }\n  }\n\n  return !unitCollidesWithEdge;\n}\n\nconst removeInnerWalls = (map) => {\n  let walls = Object.keys(map).filter((key) => {\n    return map[key].type === 'WALL';\n  })\n\n  let innerWalls = walls.filter((key) => {\n    const coordArray = key.split(',').map((i) => parseInt(i));\n    const coords = {\n      x: coordArray[0],\n      y: coordArray[1],\n    }\n    const neighbors = getNeighboringPoints(coords, true).filter((point) => {\n      let t = map[Helper.coordsToString(point)];\n      if (t) {\n        if (['WALL', 'FLOOR'].includes(t.type)) {\n          return true;\n        }\n      }\n      return false\n    });\n    \n    if (neighbors.length === 8) {\n      return true;\n    }\n    return false;\n  })\n\n  innerWalls.forEach((key) => {\n    map[key].type = 'FLOOR';\n  })\n}\n\nconst addInnerWalls = (map, count = 2) => {\n  // Finding corners\n  let corners = Object.keys(map).filter((key) => {\n    const tile = map[key];\n    if (tile.type !== 'WALL') return false;\n    const coordArray = key.split(',').map((i) => parseInt(i));\n    const coords = {\n      x: coordArray[0],\n      y: coordArray[1],\n    }\n    const neighbors = getNeighboringPoints(coords, false).filter((point) => {\n      let t = map[Helper.coordsToString(point)];\n      if (t) {\n        if (['GROUND'].includes(t.type)) {\n          return true;\n        }\n      }\n      return false\n    });\n    if (neighbors.length === 2) return true;\n    return false\n  })\n\n  // building walls\n  let wallCount = 0;\n  while (wallCount < count) {\n  // while (wallCount < corners.length) {\n  // for (let i = 0; i < count; i++) {\n    const corner = Helper.getRandomInArray(corners);\n    const coordArray = corner.split(',').map((i) => parseInt(i));\n    const coords = {\n      x: coordArray[0],\n      y: coordArray[1],\n    }\n    const wallNeighbors = getNeighboringPoints(coords, false).filter((point) => {\n      let t = map[Helper.coordsToString(point)];\n      if (t) {\n        if (['WALL'].includes(t.type)) {\n          return true;\n        }\n      }\n      return false\n    });\n    const selectedWallPos = Helper.getRandomInArray(wallNeighbors)\n    if (!selectedWallPos) continue;\n    const direction = {\n      x: Math.sign(selectedWallPos.x - coords.x),\n      y: Math.sign(selectedWallPos.y - coords.y)\n    };\n\n    let kill = 100;\n    let build = true;\n    let currentPosition = {...coords}\n    let previousFloorPositions = [];\n    while (build) {\n      currentPosition.x += direction.x;\n      currentPosition.y += direction.y;\n      let tile = map[Helper.coordsToString(currentPosition)];\n      if (!tile) break;\n      // if (tile.type === 'WALL') continue;\n      if (tile.type === 'FLOOR') {\n        tile.type = 'WALL';\n        previousFloorPositions.push({...currentPosition})\n        // console.log(previousFloorPositions.length);\n        \n      } else if (tile.type === 'GROUND' || (tile.type === 'WALL' && previousFloorPositions.length)) {\n        // go back two and make FLOOR\n        let prevPos = {\n          x: currentPosition.x - (direction.x * 2),\n          y: currentPosition.y - (direction.y * 2),\n        }\n        map[Helper.coordsToString(prevPos)].type = 'DOOR';\n        // map[Helper.coordsToString(prevPos)].type = 'FLOOR';\n        // go back one more and make FLOOR\n        prevPos = {\n          x: currentPosition.x - (direction.x * 3),\n          y: currentPosition.y - (direction.y * 3),\n        }\n        map[Helper.coordsToString(prevPos)].type = 'DOOR';\n        // map[Helper.coordsToString(prevPos)].type = 'FLOOR';\n        if (previousFloorPositions.length <= 0) {\n          //   // we need to create another wall, this one is bust\n          if (count <= 100) count += 1\n        }\n        break;\n      }\n      kill -= 1;\n      if (kill <= 0) build = false;\n    }\n    wallCount += 1;\n  }\n}","export const COLORS = {\n  base04: '#07111D',\n  base03: '#02252e',\n  // base03: '#002b36',\n  base02: '#073642',\n  base01: '#586e75',\n  base00: '#657b83',\n  // base0: '#96641D',\n  base0: '#839496',\n  base1: '#93a1a1',\n  // base2: '#E19D3F',\n  base2: '#eee8d5',\n  base3: '#fdf6e3',\n  yellow: '#b58900',\n  orange: '#cb4b16',\n  red: '#dc322f',\n  magenta: '#d33682',\n  violet: '#6c71c4',\n  blue: '#268bd2',\n  cyan: '#2aa198',\n  green: '#859900',\n  // // base1: '#07111D',\n  // base1: '#0B0B0B',\n  // base2: '#5A7178',\n  // base3: '#B6ACA3',\n  // base4: '#EDF6F1',\n  cog1: '#27295f',\n  cog2: '#3e7dc9',\n  cog3: '#18c0f8',\n  cog4: '#86C8E4',\n  locust0: '#423a18',\n  locust1: '#96641D',\n  locust2: '#E19D3F',\n  // locust2: '#F89339',\n  locust3: '#E7C898',\n  flesh1: '#833139',\n  flesh2: '#CC7468',\n  flesh3: '#DDA78F',\n  gray: '#6D7886',\n}\nexport const TILE_KEY = {\n  'GROUND': {\n    background: COLORS.base03,\n    foreground: COLORS.base01,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'EMERGENCE_DESTROYED': {\n    background: COLORS.base04,\n    foreground: COLORS.locust0,\n    character: '',\n    // sprite: '',\n    sprite: '',\n    passable: true,\n  },\n  'EMERGENCE_GROUND': {\n    background: COLORS.locust0,\n    foreground: COLORS.locust1,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'EMERGENCE_OUTER_GROUND': {\n    background: COLORS.locust0,\n    foreground: COLORS.locust2,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'FLOOR': {\n    background: COLORS.base02,\n    foreground: COLORS.locust1,\n    character: '',\n    passable: true,\n  },\n  'WALL': {\n    background: COLORS.locust0,\n    foreground: COLORS.locust2,\n    character: '#',\n    sprite: '',\n    passable: false,\n  },\n  'DOOR': {\n    background: COLORS.locust0,\n    foreground: COLORS.base1,\n    character: '+',\n    sprite: '',\n    passable: true,\n  },\n  'SAFE': {\n    background: COLORS.base03,\n    foreground: COLORS.base01,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'LOCKED_EXIT': {\n    background: COLORS.base03,\n    foreground: COLORS.base01,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'EXIT': {\n    background: COLORS.base03,\n    foreground: COLORS.green,\n    character: '>',\n    sprite: '',\n    passable: true,\n  },\n  'BURNT': {\n    background: COLORS.base03,\n    foreground: COLORS.red,\n    character: 'X',\n    sprite: '',\n    passable: true,\n    animation: [\n      { background: COLORS.base03, foreground: COLORS.yellow, character: 'X', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.yellow, character: 'x', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.red, character: 'X', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.orange, character: 'x', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.orange, character: 'X', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.red, character: 'x', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.red, character: 'X', sprite: '', passable: true, },\n    ]\n  },\n}\n\nexport const STAT_RENDERERS = {\n  'amount': {\n    background: COLORS.base04,\n    foreground: COLORS.locust2,\n    character: '',\n  },\n  'attackRange': {\n    background: COLORS.green,\n    foreground: COLORS.base3,\n    character: '==>',\n  },\n  'magazine': {\n    background: COLORS.gray,\n    foreground: COLORS.base3,\n    character: '!!',\n  },\n  'baseRangedAccuracy': {\n    background: COLORS.violet,\n    foreground: COLORS.base3,\n    character: '*',\n  },\n  'baseRangedDamage': {\n    background: COLORS.red,\n    foreground: COLORS.base3,\n    character: 'x',\n    sprite: '',\n  },\n  'meleeDamage': {\n    background: COLORS.red,\n    foreground: COLORS.base3,\n    character: 'x',\n    sprite: '',\n  },\n} \n\n// GiArcheryTarget / GiBullseye / GiCrosshair -- accuracy\n// GiBullets -- ammo\n// GiBackwardTime -- ammo / reload\n//  GiBarbedArrow - -range\n// GiBurningDot -- damage\n// GiCog\n\n/*\nSCROLL-O-Sprites\n\n\n\n\n\n\n\n \n*/","import {Ammo as AmmoEntity} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Ammo = (engine) => new AmmoEntity({\n  game: engine.game,\n  name: 'Ammo',\n  passable: true,\n  renderer: {\n    character: '||',\n    sprite: '',\n    background: COLORS.gray,\n    color: COLORS.base3,\n  },\n});","import * as Constant from '../../constants';\nimport {Grenade as GrenadeEntity} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Grenade = (engine, range) => new GrenadeEntity({\n  game: engine.game,\n  name: 'Grenade',\n  passable: true,\n  renderer: {\n    character: 'x',\n    sprite: '',\n    color: COLORS.red,\n    background: COLORS.base02,\n  },\n  flammability: 0,\n  explosivity: 3,\n  attackDamage: 10,\n  speed: Constant.ENERGY_THRESHOLD * range,\n  energy: 0,\n  range,\n})\n","import { Jacinto } from './Jacinto/jacinto'\n\nexport default {\n  Jacinto,\n}","import * as Constant from '../../constants';\nimport * as Helper from '../../../helper';\nimport * as Item from '../../items';\nimport * as MapHelper from '../../Maps/helper';\nimport { generate as generateBuilding } from '../../Maps/generator';\nimport { CoverWall, Debris, Bandit, RangedBandit, EmergenceHole } from '../../Entities/index';\nimport { MESSAGE_TYPE } from '../../message';\nimport { Mode } from '../default';\nimport SOUNDS from '../../sounds';\nimport * as _ from 'lodash';\nimport {COLORS, TILE_KEY} from './theme';\nimport { Ammo } from '../../Items/Pickups/Ammo';\nimport { Grenade } from '../../Items/Weapons/Grenade';\n\n\nexport class Jacinto extends Mode {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.data = {\n      level: 1,\n      highestLevel: null,\n      turnCount: 0,\n    };\n    this.dataByLevel = [\n      {\n        enemies: Array(4).fill('Grub'),\n        emergenceHoles: 1,\n        ammoLoot: 2,\n        grenadeLoot: 1,\n      },\n      {\n        enemies: Array(6).fill('Grub'),\n        emergenceHoles: 3,\n        ammoLoot: 1,\n        grenadeLoot: 0,\n      },\n      {\n        enemies: Array(12).fill('Grub'),\n        emergenceHoles: 0,\n        ammoLoot: 3,\n        grenadeLoot: 1,\n      },\n      {\n        enemies: [],\n        emergenceHoles: 5,\n        ammoLoot: 2,\n        grenadeLoot: 0,\n      },\n      {\n        enemies: Array(10).fill('Grub'),\n        emergenceHoles: 4,\n        ammoLoot: 1,\n        grenadeLoot: 0,\n      },\n      {\n        enemies: [],\n        emergenceHoles: 12,\n        ammoLoot: 20,\n        grenadeLoot: 5,\n      },\n      {\n        enemies: [...Array(4).fill('Grub'), 'Skorge'],\n        emergenceHoles: 6,\n        ammoLoot: 20,\n        grenadeLoot: 2,\n      },\n    ]\n  }\n\n  initialize () {\n    super.initialize();\n    this.game.tileKey = TILE_KEY\n    this.game.createEmptyLevel();\n    this.game.initializeMapTiles();\n    \n    this.setWaveData();\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      { x: 0, y: 0 },\n      this.game.mapHeight,\n      1,\n      'SAFE',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      { x: this.game.mapWidth - 3, y: 0 },\n      this.game.mapHeight,\n      3,\n      'LOCKED_EXIT',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    generateBuilding(this.game.map, 10, 10, 2, 4);\n    generateBuilding(this.game.map, 20, 5, 6, 4);\n    generateBuilding(this.game.map, 30, 5, 10, 4);\n\n    this.placePlayersInSafeZone();\n    const player = this.game.getFirstPlayer();\n    if (player) player.upgrade_points += 1;\n\n    let groundTiles = Object.keys(this.game.map).filter((key) => this.game.map[key].type === 'GROUND')\n    let floorTiles = Object.keys(this.game.map).filter((key) => this.game.map[key].type === 'FLOOR')\n\n    this.data.enemies.forEach((enemyName) => {\n      let pos = Helper.getRandomInArray(groundTiles);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this[`add${enemyName}`]({ x: posXY[0], y: posXY[1] });\n    })\n\n    for (let index = 0; index < 40; index++) {\n      let pos = Helper.getRandomInArray(groundTiles);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addCover({ x: posXY[0], y: posXY[1] });\n    }\n\n    // adding emergence holes\n    for (let index = 0; index < this.data.emergenceHoles; index++) {\n      let pos = Helper.getRandomInArray(groundTiles);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addEmerenceHole({ x: posXY[0], y: posXY[1] });\n    }\n\n    // adding  ammo loot\n    for (let index = 0; index < this.data.ammoLoot; index++) {\n      let pos = Helper.getRandomInArray(floorTiles);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addAmmoLoot({ x: posXY[0], y: posXY[1] });\n    }\n\n    // adding  grenade loot\n    for (let index = 0; index < this.data.grenadeLoot; index++) {\n      let pos = Helper.getRandomInArray(floorTiles);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addGrenadeLoot({ x: posXY[0], y: posXY[1] });\n    }\n  }\n\n  getPlayers () {\n    return this.game.engine.actors.filter((actor) => actor.entityTypes.includes('PLAYING'))\n  }\n\n  updateUI() {\n    _.each(this.getPlayers(), (player, index) => {\n      const currentBlips = Math.floor(player.energy / 100);\n      const maxBlips = Math.floor(player.speed / 100);\n      const arr = [\n        ...Array(currentBlips).fill(''),\n        ...Array(maxBlips - currentBlips).fill('_'),\n      ];\n      this.createOrUpdateInfoBlock(`playerSpeed${player.id}`, { text: `${player.name} | AP: ${arr.join(' ')}` })\n      // this.createOrUpdateInfoBlock(`playerSpeed`, { text: `AP: ${player.energy}/${player.speed}` })\n    })\n  }\n\n  update () {\n    super.update();\n    // this.updateUI();\n    if (this.hasWon()) {\n      this.game.toWin()\n    }\n    if (this.hasLost()) {\n      SOUNDS.lose.play();\n      this.game.toLose();\n      this.reset();\n      this.game.initializeGameData();\n    }\n    if (this.levelComplete()) {\n      this.nextLevel();\n      this.setWaveData();\n\n      // a hack to persist player data\n      // this would persist all existing actors however\n      this.initialize();\n      // this.game.initializeGameData();\n    }\n  }\n  \n  //Extras\n  setLevel (level) {\n    this.data.level = level;\n    this.data.turnCount = 0;\n  }\n\n  nextLevel () {\n    this.setLevel(this.data.level + 1);\n  }\n\n  reset () {\n    this.setLevel(1);\n    this.initialize();\n  }\n\n  setWaveData () {\n    const level = this.data.level - 1\n    const nextLevelData = _.get(this.dataByLevel, level, {});\n    this.data = {...this.data, ...nextLevelData}\n  }\n\n  levelComplete () {\n    const playerOnExit = this.playerIsOnExit();\n    const enemiesDefeated = this.enemiesDefeated();\n    if (enemiesDefeated) {\n      this.activateExitTiles();\n    }\n    return playerOnExit && enemiesDefeated; \n  }\n\n  enemiesDefeated () {\n    return this.game.engine.actors.filter((actor) => actor['faction'] === 'LOCUST').length <= 0\n  }\n\n  hasWon () {\n    return this.data.level > this.dataByLevel.length;\n  }\n\n  hasLost () {\n    let players = this.getPlayers()\n    if (!players.length) return true;\n    else if (players.length) {\n      if (players[0].durability <= 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  addEmerenceHole(pos) {\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      {x: pos.x - 1, y: pos.y - 1},\n      3,\n      3,\n      'EMERGENCE_GROUND',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    // create new fire actor and place\n    let entity = new EmergenceHole({\n      name: 'Hole',\n      pos,\n      game: this.game,\n      passable: true,\n      renderer: {\n        character: '',\n        sprite: '',\n        color: COLORS.locust1,\n        background: COLORS.base04,\n      },\n      timeToSpread: 1,\n      spreadCount: 3,\n      durability: 1,\n      faction: 'LOCUST',\n      speed: Constant.ENERGY_THRESHOLD,\n      getSpawnedEntity: (spawnPosition) => {\n        let players = this.getPlayers()\n        let targetEntity = players[0]\n        const banditStats = this.getBanditStats();\n        let entity = new banditStats.entityClass({\n          targetEntity,\n          pos: spawnPosition,\n          renderer: banditStats.renderer,\n          name: banditStats.name,\n          game: this.game,\n          actions: [],\n          attackDamage: banditStats.attackDamage,\n          durability: banditStats.durability,\n          speed: banditStats.speed,\n          faction: 'LOCUST',\n          onDestroy: (actor) => {\n            const chance = Math.random();\n            if (chance <= 0.05) {\n              this.addAmmoLoot(actor.getPosition());\n            } else if (chance <= 0.1) {\n              this.addGrenadeLoot(actor.getPosition());\n            }\n          },\n          // directional projectile destruction breaks engine\n          getProjectile: ({ pos, targetPos, direction, range }) => Item.directionalKunai(this.game.engine, { ...pos }, direction, range)\n          // getProjectile: ({ pos, targetPos, direction, range }) => Item.kunai(game.engine, { ...pos }, { ...targetPos })\n        });\n\n        return entity\n      },\n      onDestroy: () => this.game.map[Helper.coordsToString(pos)].type = 'EMERGENCE_DESTROYED',\n    });\n\n    if (this.game.placeActorOnMap(entity)) {\n      this.game.engine.addActor(entity);\n      this.game.draw();\n    };\n  }\n\n  createAmmoStack(amount, pos) {\n    return Array(amount).fill('').map((i) => {\n      const ammo = Ammo(this.game.engine);\n      ammo.pos = pos;\n      return ammo;\n    });\n  }\n\n  addAmmoLoot (pos) {\n    this.createAmmoStack(5, pos).forEach((entity) => {\n      this.game.placeActorOnMap(entity)\n    })\n  }\n\n  addGrenadeLoot (pos) {\n    const entity = Grenade(this.game.engine, 6);\n    entity.pos = pos;\n    this.game.placeActorOnMap(entity)\n  }\n\n  addCover (\n    pos,\n    name = 'box',\n    character = '%',\n    durability = 5,\n    background = COLORS.locust0\n  ) {\n    let sprite = Helper.getRandomInArray(['', '', '', '', '', '']);\n    switch (character) {\n      case '%':\n        sprite = Helper.getRandomInArray(['', '']);\n        break;\n      case 'm':\n        sprite = Helper.getRandomInArray(['', '']);\n        break;\n      case 'H':\n        sprite = Helper.getRandomInArray(['', '']);\n        break;\n      case 'Xs':\n        sprite = ''\n        break;\n      case 'X':\n        sprite = ''\n        break;\n      case 'XL':\n        sprite = ''\n        break;\n      default:\n        sprite = '';\n        break;\n    }\n\n    let box = new CoverWall({\n      pos,\n      renderer: {\n        character,\n        sprite,\n        color: COLORS.locust2,\n        background,\n      },\n      name,\n      game: this.game,\n      durability,\n      accuracyModifer: -0.3,\n      damageModifer: 0,\n    })\n\n    this.game.placeActorOnMap(box)\n  }\n  \n  getBanditStats () {\n    let banditLevels = [\n      {\n        name: 'Grub',\n        renderer: {\n          character: Helper.getRandomInArray(['g']),\n          color: COLORS.flesh2,\n          background: COLORS.flesh1,\n          sprite: '',\n          // sprite: '',\n        },\n        durability: 3,\n        attackDamage: 1,\n        speed: 100,\n        entityClass: RangedBandit\n      },\n      {\n        name: 'Grub Scout',\n        renderer: {\n          character: Helper.getRandomInArray(['s']),\n          color: COLORS.flesh1,\n          background: COLORS.flesh2,\n          sprite: '',\n          // sprite: '',\n        },\n        durability: 1,\n        attackDamage: 1,\n        speed: 500,\n        entityClass: RangedBandit\n      },\n      {\n        name: 'Wretch',\n        renderer: {\n          character: Helper.getRandomInArray(['w']),\n          color: COLORS.flesh1,\n          background: COLORS.flesh3,\n          sprite: '',\n        },\n        durability: 1,\n        attackDamage: 1,\n        speed: 500,\n        entityClass: Bandit\n      },\n      {\n        name: 'Big Grub',\n        renderer: {\n          character: Helper.getRandomInArray(['B']),\n          color: COLORS.locust2,\n          background: COLORS.flesh1,\n          sprite: '',\n        },\n        durability: 4,\n        attackDamage: 3,\n        speed: 100,\n        entityClass: Bandit\n      },\n    ]\n    return Helper.getRandomInArray(banditLevels);\n  }\n\n  addGrub (pos) {\n    let players = this.getPlayers()\n    let targetEntity = players[0]\n    const banditStats = this.getBanditStats();\n    let entity = new banditStats.entityClass({\n      targetEntity,\n      pos,\n      renderer: banditStats.renderer,\n      name: banditStats.name,\n      game: this.game,\n      actions: [],\n      attackDamage: banditStats.attackDamage,\n      durability: banditStats.durability,\n      speed: banditStats.speed,\n      faction: 'LOCUST',\n      onDestroy: (actor) => {\n        const chance = Math.random();\n        if (chance <= 0.05) {\n          this.addAmmoLoot(actor.getPosition());\n        } else if (chance <= 0.1) {\n          this.addGrenadeLoot(actor.getPosition());\n        }\n      },\n      // directional projectile destruction breaks engine\n      getProjectile: ({ pos, targetPos, direction, range }) => Item.directionalKunai(this.game.engine, { ...pos }, direction, range)\n      // getProjectile: ({ pos, targetPos, direction, range }) => Item.kunai(game.engine, { ...pos }, { ...targetPos })\n    })\n    if (this.game.placeActorOnMap(entity)) {\n      this.game.engine.addActor(entity);\n      // this.game.draw();\n    };\n  }\n  \n  addSkorge (pos) {\n    let players = this.getPlayers()\n    let targetEntity = players[0]\n    let entity = new Bandit({\n      targetEntity,\n      pos,\n      renderer: {\n        sprite: '',\n        character: 'S',\n        color: COLORS.flesh1,\n        background: COLORS.base04,\n      },\n      name: 'Skorge',\n      game: this.game,\n      attackDamage: 8,\n      durability: 40,\n      speed: Constant.ENERGY_THRESHOLD * 5,\n      faction: 'LOCUST',\n      // directional projectile destruction breaks engine\n      // getProjectile: ({ pos, targetPos, direction, range }) => Item.directionalKunai(this.game.engine, { ...pos }, direction, range)\n      // getProjectile: ({ pos, targetPos, direction, range }) => Item.kunai(game.engine, { ...pos }, { ...targetPos })\n    })\n    if (this.game.placeActorOnMap(entity)) {\n      this.game.engine.addActor(entity);\n    };\n  }\n\n  placePlayersInSafeZone () {\n    let players = this.getPlayers()\n    const keys = Object.keys(this.game.map).filter((key) => this.game.map[key].type == 'SAFE');\n    players.forEach((player) => {\n      const key = keys.shift();\n      if (key) {\n        const position = {\n          x: parseInt(key.split(',')[0]),\n          y: parseInt(key.split(',')[1]),\n        }\n        player.pos = {x: position.x, y: player.pos.y};\n        this.game.placeActorOnMap(player)\n      }\n    })\n  }\n\n  playerIsOnExit() {\n    const player = this.game.getFirstPlayer();\n    if (player) {\n      const tile = this.game.map[Helper.coordsToString(player.pos)];\n      if (tile.type === 'EXIT') {\n        return true;\n      }\n    }\n    return false\n  }\n\n  activateExitTiles() {\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      { x: this.game.mapWidth - 3, y: 0 },\n      this.game.mapHeight,\n      3,\n      'EXIT',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n  }\n\n}\n","import uuid from 'uuid/v1';\nimport {merge} from 'lodash';\n\nexport class Mode {\n  constructor({\n    game = null,\n    data = {},\n  }) {\n    let id = uuid();\n    this.id = id;\n    this.game = game;\n    this.data = data;\n    this.infoBlocks = {}\n    this.progressBars = {}\n  }\n\n  initialize() {}\n\n  update() {}\n\n  createOrUpdateInfoBlock(id, value) {\n    merge(this.infoBlocks, {[id]: value})\n  }\n}","import React from 'react';\nimport * as ROT from 'rot-js';\nimport * as Constant from './constants';\nimport * as Helper from '../helper';\nimport * as Message from './message';\nimport { Display } from './Display/konvaCustom';\nimport Mode from './Modes/index';\nimport * as _ from 'lodash';\n\n// const MAP_DATA = require('./Maps/castle.json');\n// const SOLANGE = require('./Data/solange.json');\n\nconst MAP_WIDTH = 50;\nconst MAP_HEIGHT = 25;\n\nconst TILE_OFFSET = 0;\n\nconst TILE_WIDTH = 26;\nconst TILE_HEIGHT = TILE_WIDTH;\n\nconst canvasWidth = (MAP_WIDTH * TILE_WIDTH) + TILE_OFFSET;\nconst canvasHeight = (MAP_HEIGHT * TILE_HEIGHT) + TILE_OFFSET;\n\nexport class Game {\n  constructor({\n    engine = null,\n    map = {},\n    entityMap = {},\n    entityDictionary = {},\n    mapInitialized = false,\n    tileMap = {},\n    mapWidth = MAP_WIDTH,\n    mapHeight = MAP_HEIGHT,\n    cameraWidth = MAP_WIDTH,\n    cameraHeight = MAP_HEIGHT,\n    tileWidth = TILE_WIDTH,\n    tileHeight = TILE_HEIGHT,\n    tileOffset = TILE_OFFSET,\n    getSelectedCharacter = () => false,\n    spriteMode = true,\n    tileKey = Constant.TILE_KEY,\n    mode = Mode.Flume,\n    messages = [],\n  }) {\n    this.engine = engine;\n    this.map = map;\n    this.entityMap = entityMap;\n    this.entityDictionary = entityDictionary;\n    this.mapInitialized = mapInitialized;\n    this.tileMap = tileMap;\n    this.mapWidth = mapWidth;\n    this.mapHeight = mapHeight;\n    this.cameraWidth = cameraWidth;\n    this.cameraHeight = cameraHeight;\n    this.tileWidth = tileWidth;\n    this.tileHeight = tileHeight;\n    this.tileOffset = tileOffset;\n    this.display = new Display({\n      containerId: 'display',\n      width: canvasWidth,\n      height: canvasHeight,\n      tileWidth: tileWidth,\n      tileHeight: tileHeight,\n      tileOffset: tileOffset,\n      game: this,\n    });\n    this.spriteMode = spriteMode;\n    this.tileKey = tileKey;\n    this.mode = new mode({game: this});\n    this.messages = messages;\n    this.getSelectedCharacter = getSelectedCharacter;\n  }\n\n  initializeMode () {\n    this.mode.initialize();\n  }\n  \n  updateMode () { // this is run every game turn\n    this.mode.update();\n  }\n\n  randomlyPlaceActorOnMap(actor) {\n    let kill = 0;\n    let placed = false;\n    while (!placed) {\n      let pos = Helper.getRandomPos(this.map).coordinates\n      if (this.canOccupyPosition(pos, actor)) {\n        let tile = this.map[Helper.coordsToString(pos)]\n        actor.pos = { ...pos }\n        tile.entities.push(actor);\n        placed = true;\n      }\n      kill += 1;\n      if (kill >= 100) {\n        placed = true;\n      }\n    }\n    return placed;\n  }\n\n  randomlyPlaceAllActorsOnMap() {\n    this.engine.actors.forEach((actor) => {\n      this.randomlyPlaceActorOnMap(actor);\n    })\n  }\n\n  placeActorsOnMap() {\n    this.engine.actors.forEach((actor) => {\n      let tile = this.map[Helper.coordsToString(actor.pos)]\n      if (tile) {\n        tile.entities.push(actor);\n      } else {\n        console.log(`could not place ${actor.id}: ${actor.name} on map`);\n      }\n    })\n  }\n\n  placeActorOnMap(actor) {\n    let tile = this.map[Helper.coordsToString(actor.pos)]\n    if (tile) {\n      tile.entities.push(actor);\n      return true\n    } else {\n      console.log(`could not place ${actor.id}: ${actor.name} on map`);\n      return false\n    }\n  }\n\n  removeActorFromMap (actor) {\n    let tile = this.map[Helper.coordsToString(actor.pos)]\n    if (!tile) return false;\n    this.map[Helper.coordsToString(actor.pos)].entities = tile.entities.filter((ac) => ac.id !== actor.id);\n    return true;\n  }\n\n  createLevel () {\n    let digger = new ROT.Map.Arena(this.mapWidth, this.mapHeight);\n    // let digger = new ROT.Map.Rogue();\n    // let digger = new ROT.Map.DividedMaze();\n    // let digger = new ROT.Map.EllerMaze();\n    // let digger = new ROT.Map.Cellular();\n    // let digger = new ROT.Map.Digger(this.mapWidth, this.mapHeight);\n    // let digger = new ROT.Map.IceyMaze();\n    // let digger = new ROT.Map.Uniform();\n    let freeCells = [];\n    let digCallback = function (x, y, value) {      \n      let key = x + \",\" + y;\n      let type = 'GROUND';\n      let currentFrame = 0;\n      if (value) { \n        type = 'WALL';\n        // type = 'WATER';\n      }\n\n      if (this.tileKey[type].animation) {\n        currentFrame = Helper.getRandomInt(0, this.tileKey[type].animation.length)\n      }\n\n      this.map[key] = {\n        type,\n        currentFrame,\n        entities: [],\n      };\n      freeCells.push(key);\n    }\n    digger.create(digCallback.bind(this));\n    this.randomlyPlaceAllActorsOnMap()\n  }\n\n  createEmptyLevel () {\n    for (let i = 0; i < this.mapHeight; i ++) {\n      for (let j = 0; j < this.mapWidth; j ++) {\n        const key = `${j},${i}`\n        let type = 'GROUND';\n        let currentFrame = 0;\n\n        if (this.tileKey[type].animation) {\n          currentFrame = Helper.getRandomInt(0, this.tileKey[type].animation.length)\n        }\n\n        this.map[key] = {\n          type,\n          currentFrame,\n          entities: [],\n        };\n      }\n    }\n  }\n\n  createCustomLevel (data) {\n    Object.keys(data.tiles).forEach((key, i) => {\n      const tile = data.tiles[key];\n      let type = tile.data.type;\n      let currentFrame = 0;\n      if (!type) {\n        type = 'GROUND';\n      }\n\n      if (this.tileKey[type].animation) {\n        currentFrame = Helper.getRandomInt(0, this.tileKey[type].animation.length)\n      }\n\n    \n      this.map[key] = {\n        type,\n        currentFrame,\n        entities: [],\n      };\n    })\n\n    // this.placeInitialEntities();\n  }\n\n  canOccupyPosition (pos, entity = {passable: false}) {\n    let result = false;\n    let targetTile = this.map[Helper.coordsToString(pos)];\n    if (targetTile) {\n      let hasImpassableEntity = targetTile.entities.filter((entity) => !entity.passable).length > 0;\n      if (!hasImpassableEntity || entity.passable) {\n        let tile = this.map[Helper.coordsToString(pos)];\n        if (this.tileKey[tile.type].passable) {\n          result = true;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  rangedCursorCanOccupyPosition (pos, entity = {passable: false}) {\n    let result = false;\n    let targetTile = this.map[Helper.coordsToString(pos)];\n    if (targetTile) {\n      let tile = this.map[Helper.coordsToString(pos)];\n      if (this.tileKey[tile.type].passable) {\n        result = true;\n      }\n    }\n\n    return result;\n  }\n\n  cursorCanOccupyPosition(pos) {\n    let result = false;\n    let targetTile = this.map[Helper.coordsToString(pos)];\n    if (targetTile) {\n      result = true;\n    }\n\n    return result;\n  }\n\n  show (document) {\n    this.display.initialize(document)\n  }\n\n  getRenderMap(fullMap, referencePosition, renderWidth, renderHeight, fullWidth, fullHeight) { \n    // create an object with only tile keys that should be rendered (around player)\n    // renderWidth/Height measured in tiles\n    // reference positon usually based on player pos\n    // position from fullMap key should be translated to 0,0 based on referencePos\n    \n    const renderPaddingX = Math.floor((renderWidth / 2));\n    const renderPaddingY = Math.floor((renderHeight / 2));\n    let offsetX = 0;\n    let offsetY = 0;\n    if (referencePosition) {\n      offsetX = referencePosition.x - renderPaddingX;\n      offsetY = referencePosition.y - renderPaddingY;\n    }\n    offsetX = Helper.clamp(offsetX, 0, fullWidth - renderWidth);\n    offsetY = Helper.clamp(offsetY, 0, fullHeight - renderHeight);\n    \n    let result = {}\n    for (let key in fullMap) {\n      let parts = key.split(\",\");\n      let x = parseInt(parts[0]);\n      let y = parseInt(parts[1]);\n      let finalX = x - offsetX;\n      let finalY = y - offsetY;\n      if (finalX >= 0 && finalX <= renderWidth) {\n        if (finalY >= 0 && finalY <= renderHeight) {\n          result[`${finalX},${finalY}`] = fullMap[key]\n        }\n      }\n    }\n    return result\n  }\n\n  processTileMap (callback) {\n    // const map = this.map;\n    // const map = this.getRenderMap(this.map, this.getPlayerPosition(), this.mapWidth, this.mapHeight);\n    // const map = this.getRenderMap(this.map, this.getPlayerPosition(), 50, 25, this.mapWidth, this.mapHeight);\n    const map = this.getRenderMap(this.map, this.getPlayerPosition(), this.cameraWidth, this.cameraHeight, this.mapWidth, this.mapHeight);\n    for (let key in map) {\n      let parts = key.split(\",\");\n      let x = parseInt(parts[0]);\n      let y = parseInt(parts[1]);\n      let tile = map[key];\n      // let { foreground, background } = this.tileKey[tile.type]\n      // Proto code to handle tile animations\n      let tileRenderer = this.tileKey[tile.type]\n      let nextFrame = this.animateTile(tile, tileRenderer);\n      let character = nextFrame.character;\n      let foreground = nextFrame.foreground;\n      let background = nextFrame.background;\n      \n      const renderedEntities = tile.entities.filter((entity) => entity.entityTypes.includes('RENDERING'))\n      if (renderedEntities.length > 0) {\n        let entity = renderedEntities[renderedEntities.length - 1]\n        nextFrame = this.animateEntity(entity);\n\n        character = nextFrame.character\n        foreground = nextFrame.foreground\n        if (nextFrame.background) {\n          background = nextFrame.background\n        }\n      }\n      callback(key, x, y, character, foreground, background);          \n    }\n  }\n\n  initializeMapTiles () {\n    if (this.mapInitialized) return false;\n    this.mapInitialized = true;\n    this.processTileMap((key, x, y, character, foreground, background) => {\n      let node = this.display.createTile(x, y, character, foreground, background);\n      this.tileMap[key] = node;\n    });\n  }\n\n  getPlayers () {\n    return this.engine.actors.filter((actor) => actor.entityTypes.includes('PLAYING'))\n  }\n\n  getFirstPlayer () {\n    const players = this.getPlayers();\n    if (players.length) return players[0]\n    return null\n  }\n\n  getPlayerPosition () {\n    const player = this.getFirstPlayer();\n    if (player) return player.getPosition();\n    return null\n  }\n  \n  draw () {\n    this.processTileMap((key, x, y, character, foreground, background) => {\n      this.display.updateTile(this.tileMap[key], character, foreground, background);\n    });\n    this.display.draw();\n  }\n\n  getEntityRenderer (renderer) {\n    // if sprite mode is on and the renderer has a sprite defined, use that\n    if (this.spriteMode && renderer.hasOwnProperty('sprite')) {\n      return {...renderer, character: renderer.sprite, foreground: renderer.color}\n      // return {character: renderer.sprite, foreground: renderer.background, background: ''}\n    }\n    // else us the ascii character\n    return {...renderer, foreground: renderer.color}\n  }\n\n  getTileRenderer (renderer) {\n    // if sprite mode is on and the renderer has a sprite defined, use that\n    if (this.spriteMode && renderer.hasOwnProperty('sprite')) {\n      return {...renderer, character: renderer.sprite}\n    }\n    // else us the ascii character\n    return renderer\n  }\n  \n  animateEntity (entity) {\n    let renderer = entity.getRenderer();\n    let { character, foreground, background } = this.getEntityRenderer(renderer)\n    if (renderer.animation) {\n      let frame = this.getEntityRenderer(renderer.animation[entity.currentFrame]);\n      character = frame.character;\n      foreground = frame.foreground;\n      background = frame.background;\n      entity.currentFrame = (entity.currentFrame + 1) % renderer.animation.length;\n    }\n    return {character, foreground, background}\n  }\n\n  animateTile (tile, renderer) {\n    let {character, foreground, background} = this.getTileRenderer(renderer)\n    if (renderer.animation) {\n      let frame = this.getTileRenderer(renderer.animation[tile.currentFrame]);\n      character = frame.character\n      foreground = frame.foreground;\n      background = frame.background;\n      tile.currentFrame = (tile.currentFrame + 1) % renderer.animation.length;\n    }\n    return {character, foreground, background}\n  }\n\n  addActor (actor, engine = this.engine) {\n    let isPlaced = this.placeActorOnMap(actor); // replace with placeActorOnMap\n    if (!isPlaced) { return false }\n    engine.actors.push(actor);\n    this.draw();\n    return true\n  }\n\n  placeAndDrawActor (actor) {\n    this.placeActorsOnMap(); // replace with placeActorOnMap\n    this.draw();\n  }\n\n  removeActor (actor) {\n    this.engine.actors = this.engine.actors.filter((ac) => ac.id !== actor.id);\n    // this.engine.currentActor = this.engine.actors.length - 1; // should remove need for this line\n    // this.engine.currentActor = (this.engine.currentActor) % this.engine.actors.length;\n    // this.engine.currentActor = (this.engine.currentActor + 1) % this.engine.actors.length;\n    this.removeActorFromMap(actor);\n    this.draw();\n  }\n\n  initializeUI (presserRef, document) {\n    this.show(document);\n    presserRef.current.focus();\n  }\n\n  initializeGameData () {\n    this.engine.game = this;\n    const selectedCharacter = this.getSelectedCharacter();\n    this.engine.actors = [selectedCharacter];\n    this.engine.actors.forEach((actor) => {\n      actor.game = this;\n    });\n    // this.createEmptyLevel();\n    // this.initializeMapTiles();\n    this.initializeMode();\n    this.draw();\n  }\n\n  initialize (presserRef, document) {\n    this.initializeUI(presserRef, document);\n    this.initializeGameData();\n    // hack to register sprite mode\n    setTimeout(() => {\n      this.spriteMode = false;\n      this.draw()\n    }, 500)\n    setTimeout(() => {\n      this.spriteMode = true;\n      this.draw()\n    }, 500)\n    // end hack\n  }\n\n  addMessage (text, type) {\n    const message = new Message.Message({text, type})\n    this.messages.push(message);\n  }\n}\n\n\n/************************** UI ********************************/\nexport const handleKeyPress = (event, engine) => {\n  if (!engine.isRunning) {\n    let actor = engine.actors[engine.currentActor];\n    let keymap = null;\n    try {\n      keymap = actor.getKeymap();\n    } catch (e) {\n      console.log('keypress error');\n      console.log(e);\n    }\n    if (keymap) {\n      let code = event.key;\n      if (!(code in keymap)) { return; }\n      const getAction = keymap[code];\n      const action = getAction();\n      // const action = keymap[code];\n      action.setAsNextAction();\n      engine.start();\n    }\n  }\n  return;\n}\n\nexport const DisplayElement = (presserRef, handleKeyPress, engine) => {\n  return (\n    <div\n      id='display'\n      ref={presserRef}\n      onKeyDown={(event) => handleKeyPress(event, engine)}\n      // onKeyUp={(event) => handleKeyPress(event, engine)}\n      tabIndex='0'\n    />\n  )\n}\n/************************** UI ********************************/\n","import React from 'react';\nimport { SCREENS } from '../Screen/constants';\nimport * as _ from 'lodash';\n\nclass Instructions extends React.Component {\n  render() {\n    const infoHeader = _.get(this.props.game, 'mode.infoHeader', null);\n    const infoBlocks = _.get(this.props.game, 'mode.infoBlocks', {});\n\n    return (\n      <div className=\"Instructions UI\">\n        {infoHeader && (<p className='flow-text'>{infoHeader}</p>)}\n        <div className='flow-text'>\n          {\n            _.map(infoBlocks, (value, key) => {\n              return (\n                <div key={key} className='Instructions__block'>\n                  {value.text}\n                </div>\n              )\n            })\n          }\n          <div \n            className='Instructions__block'\n            // onClick={() => this.props.setActiveScreen(SCREENS.TITLE)}\n            onClick={() => window.location.reload()}\n          >\n            <button className='btn btn-main'>\n              Restart\n            </button>\n          </div>\n          <div \n            className='Instructions__block'\n            onClick={() => this.props.toggleSpriteMode()}\n          >\n            <button className='btn btn-main'>\n              {\n                this.props.spriteMode ? (\n                  'ASCII mode'\n                ) : (\n                  'Sprite mode'\n                )\n              }\n            </button>\n          </div>\n          <div\n            className='Instructions__block'\n          >\n            <button data-target=\"jacinto_help\" className='btn btn-main modal-trigger'>\n              Help\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Instructions;","import React from 'react';\n\nfunction Button(props) {\n  let color = props['color'];\n  if (!color) color = 'grey';\n  return (\n    <button\n      onClick={props.onClick}\n      className={`Button btn ${color}`}\n    >\n      {props.children}  \n    </button>\n  )\n}\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\n\nclass Information extends React.Component {\n  render() {\n    let data = [\n      {\n        label: 'Wave',\n        value: `Current: ${this.props.game.mode.data.level}, Highest: ${this.props.game.mode.data.highestLevel}`,\n      },\n    ];\n\n    data = data.concat(\n      [\n        ...this.props.game.engine.actors.map((actor, index) => {\n          let result = {\n            label: actor.name,\n            // value: index,\n            value: `HP: ${actor.durability}, En/Sp: ${actor.energy}/${actor.speed}`,\n          };\n          if (index === this.props.game.engine.currentActor) {\n            result['color'] = 'red';\n          }\n          return result;\n        })\n      ]\n    )\n\n    return (\n      <div className=\"Information UI\">\n        {\n          data && (\n            data.map((item, index) => {\n              return (\n                <Button key={index} color={item['color']} onClick={() => null}>\n                  {`${item.label}: ${item.value}`}\n                </Button>\n              )\n            })\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Information;","import React from 'react';\n\nfunction Tooltip ({title = 'Effect', text = '', children}) {\n  return (\n    <div className=\"Tooltip\">\n      {children}\n      <div className=\"top\">\n        <h3>{title}</h3>\n        <p>{text}</p>\n        <i></i>\n      </div>\n    </div>\n  )\n}\n\nexport default Tooltip;\n","import React from 'react';\nimport * as _ from 'lodash';\nimport Tooltip from './Tooltip';\n\nfunction ResourceBlock({ resource, superScript, canPay }) {\n  const character = resource.renderer.sprite ? resource.renderer.sprite : resource.renderer.character\n  return (\n    <div className=\"ResourceBlock\" style={{\n      backgroundColor: canPay ? resource.renderer.background : '#616161',\n      color: canPay ? resource.renderer.color : '#bdbdbd',\n      borderColor: canPay ? resource.renderer.color : '#bdbdbd',\n      fontFamily: 'scroll-o-script',\n      width: superScript ? 'auto' : 20,\n    }}>\n      {`${superScript ? superScript + ' ' : ''}${character}`}\n    </div>\n  )\n}\n\nclass ActionBar extends React.Component {\n  render() {\n    return (  \n      <div className=\"ActionBar\">\n        <div className=\"CharacterActions\">\n          {\n            \n            this.props.keymap && (\n              Object.entries(this.props.keymap).map(([key, getAction], index) => {\n                const action = getAction();\n                const hidden = _.get(action, 'hidden', false);\n                const renderer = _.get(action, 'renderer', null);\n                const reqs = action.listPayableResources();\n\n                if (!hidden) {\n                  return (\n                    <Tooltip\n                      key={`${index}-label`}\n                      title={action.label}\n                      text={action.label + ` ${action.actor.name}`}\n                    >\n                      <div \n                        className=\"CharacterActions__item\"\n                        onClick={() => {\n                          action.setAsNextAction();\n                          if (!this.props.game.engine.isRunning) this.props.game.engine.start();\n                          this.props.game.refocus();\n                        }}\n                      >\n                        <div className=\"CharacterActions__item__label\">\n                          {key}\n                        </div>\n                        <div className=\"CharacterActions__item__content\" style={renderer && {\n                          backgroundColor: renderer.background,\n                          color: renderer.color,\n                          borderColor: renderer.color,\n                        }}>\n                          {action.label}\n                        </div>\n                        <div className=\"CharacterActions__item__resources\">\n                          {\n                            reqs.map((req, i) => {\n                              const numBlocks = req.getResourceCost();\n                              return numBlocks > 0 && (\n                                <ResourceBlock\n                                  key={`${i}-${req.name}-resource-block`}\n                                  superScript={numBlocks}\n                                  resource={req}\n                                  canPay={req.canPay}\n                                />\n                              )\n                            })\n                          }\n                        </div>\n                      </div>\n                    </Tooltip>\n                  )\n                }\n              })\n            )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ActionBar;","import React from 'react';\nimport * as _ from 'lodash';\nimport Tooltip from '../Tooltip';\nimport ActionBar from '../ActionBar';\n\nfunction Portrait ({actor}) {\n  return (\n    <div className=\"Portrait\" style={{\n      backgroundColor: actor.renderer.background, \n      color: actor.renderer.color,\n      borderColor: actor.renderer.color,\n    }}>\n      {actor.renderer.sprite ? actor.renderer.sprite : actor.renderer.character}\n    </div>\n  )\n}\n\nfunction StatusEffect ({effect}) {\n  return (\n    <div className=\"StatusEffects__effect\" style={{\n      backgroundColor: effect.renderer.background, \n      color: effect.renderer.color,\n      borderColor: effect.renderer.color,\n    }}>\n      {effect.renderer.sprite ? effect.renderer.sprite : effect.renderer.character}\n    </div>\n  )\n}\n\nfunction StatusEffects ({actor}) {\n  return (\n    <div className=\"StatusEffects\">\n      {\n        actor.game.engine.getStatusEffectsByActorId(actor.id).map((effect, i) => {\n          return (\n            <Tooltip \n              key={i}\n              title={effect.name}\n              text={effect.name}\n            >\n              <StatusEffect effect={effect} />\n            </Tooltip>\n          )\n        })\n      }\n    </div>\n  )\n}\n\nfunction NamePlate ({actor}) {\n  return (\n    <div className=\"NamePlate\">\n      {actor.name}\n    </div>\n  )\n}\n\nfunction ProgressBar ({\n  actor, \n  label, \n  colorFilled = 'red',\n  colorEmpty = 'gray',\n  attributePathMax, \n  attributePath, \n  unit,\n}) {\n  const valueMax = _.get(actor, attributePathMax, 0) / unit;\n  const valueCurrent = _.get(actor, attributePath, 0) / unit;\n  return (\n    <div className=\"ProgressBar\">\n      <div>\n        <span className='ProgressBar__label'>{label}</span>\n      </div>\n      <div>\n        <div className='ProgressBar__blips'>\n          {\n            Array(valueMax).fill(true).map((blip, index) => {\n              return (\n                <span \n                  key={index}\n                  className='ProgressBar__blips__blip' \n                  style={{backgroundColor: valueCurrent > index ? colorFilled : colorEmpty }}\n                />\n              )\n            })\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction CharacterCard ({actor, game}) {\n  return (\n    <div className='CharacterCard'>\n      <Portrait actor={actor}/>\n      <div>\n        <NamePlate actor={actor}/>\n        <ProgressBar \n          label='Action Points'\n          attributePath='energy'\n          attributePathMax='speed'\n          colorFilled='#ff9926'\n          unit={100}\n          actor={actor} \n        />\n        <ProgressBar \n          label='Health Points'\n          attributePath='durability'\n          attributePathMax='durabilityMax'\n          colorFilled='#dc322f'\n          unit={1}\n          actor={actor} \n        />\n        <ProgressBar \n          label='Upgrade Points'\n          attributePath='upgrade_points'\n          attributePathMax='upgrade_points'\n          colorFilled='#3e7dc9'\n          unit={1}\n          actor={actor} \n        />\n        <StatusEffects actor={actor} />\n      </div>\n      <div>\n        {/* <ActionBar keymap={game.visibleKeymap} game={game} /> */}\n        <ActionBar keymap={actor.getKeymap()} game={game} />\n      </div>\n    </div>\n  )\n}\n\nexport default CharacterCard;\n","import React from 'react';\nimport CharacterCard from './CharacterCard';\nimport * as _ from 'lodash';\n\nconst PlayerInformation = ({game}) => {\n  const actors = game.engine.actors.filter((actor) => actor.entityTypes.includes('PRESENTING_UI')).filter((actor) => actor.presentingUI)\n  return (\n    <div className=\"PlayerInformation Information UI\">\n      <div className='CharacterCard_Container'>\n        {\n          actors.map((actor, index) => <CharacterCard key={index} actor={actor} game={game} />)\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default PlayerInformation;","import React from 'react';\nimport Button from './Button';\n\nclass Inventory extends React.Component {\n  render() {\n    return (\n      <div className=\"Inventory UI\">\n        {\n          this.props.inventory && (\n            <div>\n              <div className='flow-text'>Inventory</div>\n              <div>\n                {\n                  this.props.inventory.map((slot, index) => {\n                    return (\n                      <Button key={index} onClick={() => null}>\n                        {`${slot.itemType} | x ${slot.items.length}`}\n                      </Button>\n                    )\n                  })\n                }\n              </div>\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Inventory;","import React from 'react';\n\nfunction Message (props) {\n  return (\n    <div\n      className='Message'\n      style={{\n        color: props.color,\n        backgroundColor: props.backgroundColor,\n        borderColor: props.color,\n      }}\n    >\n      {props.children}\n    </div>\n  )\n}\n\nclass Messages extends React.Component {\n  render() {\n    return (\n      <div className=\"Messages UI\">\n        <div className='flow-text center'>Messages</div>\n        {\n          this.props.messages && (\n            this.props.messages.map((message, index) => {\n              return (\n                <Message \n                  key={index} \n                  color={message.type.color}\n                  backgroundColor={message.type.backgroundColor}\n                >\n                  {`${message.text}`}\n                </Message>\n              )\n            })\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Messages;","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nexport class EquipItemFromContainer extends Base {\n  // entities can only equip items from their container/inventory\n  constructor({ item, ...args }) {\n    super({ ...args });\n    this.item = item;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (this.item.equipmentType) {\n      let itemInSlot = this.actor.getItemInSlot(this.item.equipmentType);\n      if (itemInSlot) {\n        this.actor.addToContainer(itemInSlot);\n        this.actor.unequip(itemInSlot);\n      }\n      this.actor.removeFromContainer(this.item);\n      this.actor.equip(this.item.equipmentType, this.item);\n      this.game.addMessage(`${this.actor.name} equips ${this.item.name}.`, MESSAGE_TYPE.ACTION);\n      success = true;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import React from 'react';\nimport {\n  GiCrosshair,\n  GiBullets,\n  GiBackwardTime,\n  GiBarbedArrow,\n  GiBurningDot,\n} from \"react-icons/gi\";\nimport {EquipItemFromContainer} from '../../Actions/EquipItemFromContainer';\nimport {STAT_RENDERERS} from '../../Modes/Jacinto/theme';\n\nfunction StatBlock({stat}) {\n  const {getIcon, value, name} = stat;\n  const character = stat.renderer.sprite ? stat.renderer.sprite : stat.renderer.character\n  return (\n    <div \n      className=\"StatBlock\" \n      style={{\n        backgroundColor: stat.renderer.background,\n        color: stat.renderer.foreground,\n        borderColor: stat.renderer.foreground,\n        fontFamily: 'scroll-o-script',\n        width: stat.value !== null ? 'auto' : 20,\n      }}\n      title={name}\n    >\n      {\n        getIcon ? getIcon() : `${character}`\n      }\n      <span>&nbsp;{value}</span>\n    </div>\n  )\n}\n\nconst EquipmentCard = (props) => {\n  const {\n    game,\n    player,\n    data,\n  } = props;\n  const {\n    item,\n    equipped,\n    amount,\n    equipable,\n  } = data;\n\n  let needsReload = false;\n\n  let onClick = () => null;\n  if (equipable) {\n    const action = new EquipItemFromContainer({\n      item,\n      game,\n      energyCost: 0,\n      actor: player,\n      label: `Equip ${item.name}`,\n    });\n    onClick = () => {\n      game.refocus();\n      action.setAsNextAction();\n      game.engine.start();\n    }\n  }\n\n  let stats = [];\n  if (amount) {\n    stats.push({\n      name: 'amount left',\n      value: amount,\n      renderer: STAT_RENDERERS.amount,\n    })\n  }\n  if (item.hasOwnProperty('attackRange')) {\n    stats.push({\n      name: 'attack range',\n      value: item['attackRange'],\n      renderer: STAT_RENDERERS.attackRange,\n      getIcon: () => <GiBarbedArrow />,\n    })\n  }\n  if (item.hasOwnProperty('magazine')) {\n    stats.push({\n      name: 'shots before reload',\n      value: item.magazine,\n      renderer: STAT_RENDERERS.magazine,\n      getIcon: () => <GiBullets />,\n    })\n    if (item.magazine <= 0) {\n      needsReload = true;\n    }\n  }\n  if (item.hasOwnProperty('baseRangedAccuracy')) {\n    stats.push({\n      name: 'base accuracy',\n      value: `${Math.round(item['baseRangedAccuracy'] * 100)}%`,\n      renderer: STAT_RENDERERS.baseRangedAccuracy,\n      getIcon: () => <GiCrosshair />,\n    })\n  }\n  if (item.hasOwnProperty('baseRangedDamage')) {\n    stats.push({\n      name: 'base damage',\n      value: item['baseRangedDamage'],\n      renderer: STAT_RENDERERS.baseRangedDamage,\n      getIcon: () => <GiBurningDot />,\n    })\n  }\n  if (item.hasOwnProperty('attackDamage')) {\n    stats.push({\n      name: 'base melee damage',\n      value: item['attackDamage'],\n      renderer: STAT_RENDERERS.meleeDamage,\n    })\n  }\n  \n  return (\n    <div \n      className={`EquipmentCard ${equipped ? 'EquipmentCard--selected' : ''}`} \n      onClick={() => game.refocus()}\n    >\n      {needsReload && (\n        <div className=\"EquipmentCard__reload_overlay\">\n          <div className=\"EquipmentCard__reload_overlay__text\">Needs Reload</div>\n          <div className=\"EquipmentCard__reload_overlay__text\"><GiBackwardTime /></div>\n        </div>\n      )}\n      <div\n        className=\"EquipmentCard__item\"\n        onClick={onClick}\n      >\n        <div className=\"EquipmentCard__item__label\">\n          {item.name}\n        </div>\n        <div className=\"EquipmentCard__item__content\" style={item.renderer && {\n          backgroundColor: item.renderer.background,\n          color: item.renderer.color,\n          borderColor: item.renderer.color,\n        }}>\n          {item.renderer.sprite ? item.renderer.sprite : item.renderer.character}\n        </div>\n      </div>\n      <div className=\"EquipmentCard__item__stats\">\n        {\n          stats.map((stat, i) => {\n            return (\n              <StatBlock\n                key={`${i}-${stat.name}-resource-block`}\n                stat={stat}\n              />\n            )\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\nclass Equipment extends React.Component {\n  render() {\n    if (!this.props.player) return null;\n    const player = this.props.player;\n    const game = this.props.game;\n    let items = [];\n    player.equipment.forEach((slot) => {\n      if (slot.item) {\n        items.push({\n          item: slot.item,\n          equipped: true,\n        });\n      }\n    });\n    player.container.forEach((slot) => {\n      if (slot.items.length) {\n        const item = slot.items[0];\n        // disallow duplicates\n        if (items.filter((data) => data.item.name === item.name).length === 0) {\n          const equipable = item.entityTypes.includes('EQUIPABLE');\n          const amount = equipable ? null : slot.items.length;\n          items.push({\n            item,\n            amount,\n            equipable,\n            equipped: false,\n          })\n        }\n      }\n    });\n    return (\n      <div className=\"Equipment UI\">\n        {\n          <div>\n            <div className='flow-text'>Equipment</div>\n            <div>\n              {\n                items.map((item, index) => {\n                  return (\n                    <EquipmentCard \n                      key={index}\n                      game={game} \n                      player={player} \n                      data={item} \n                    />\n                  )\n                })\n              }\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default Equipment;","import React from 'react';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nfunction Help(props) {\n  React.useLayoutEffect(() => {\n    var elems = document.querySelectorAll(`#${props.id}`);\n    window.M.Modal.init(elems)\n  })\n  return (\n    <div id={props.id} className={`Jacinto_Help modal`}>\n      <div className=\"modal-content\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <div className=\"Jacinto_Help__section_header\">Goal</div>\n            <div className=\"Jacinto_Help__section_body\">\n              Defend Jacinto, the last human bastion on Sera. Move block by block and clear the city of \n              <span className=\"red-text\">&nbsp;Grubs</span> until you can locate and defeat their leader, \n              <span className=\"red-text\">&nbsp;Skorge</span>.\n            </div>\n          </div>\n          <div className=\"col s12 m6\">\n            <div className=\"Jacinto_Help__section_header\">Hints</div>\n            <div className=\"Jacinto_Help__section_body\">\n              <div>Destroy <span className=\"red-text\">Emergence Holes</span> ASAP.</div>\n              <div>Spend <span className=\"blue-text\">Upgrade Points</span>.</div>\n              <div>Weapon <span className=\"blue-text\">accuracy</span> decreases over distance.</div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <div className=\"Jacinto_Help__section_header\">Controls</div>\n            <div className=\"Jacinto_Help__section_body\">\n              <div>Movement: WASD</div>\n              <div>Actions: click or key press</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"modal-footer\">\n        <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Close</a>\n      </div>\n    </div>\n  )\n}\n\nexport default Help;","import React from 'react';\nimport { SCREENS } from './constants';\nimport * as Engine from '../Engine/engine';\nimport * as Game from '../game';\nimport Instructions from '../UI/Instructions';\nimport Information from '../UI/Information';\nimport PlayerInformation from '../UI/Entity/PlayerInformation';\nimport Inventory from '../UI/Inventory';\n// import KeymapUI from '../UI/Keymap';\nimport KeymapUI from '../UI/ActionBar';\nimport Messages from '../UI/Messages';\nimport Equipment from '../UI/Jacinto/Equipment';\nimport Help from '../UI/Jacinto/Help';\n\nclass Level extends React.Component {\n  constructor(props) {\n    super(props);\n    let ENGINE = new Engine.Engine({});\n    let game = new Game.Game({ \n      engine: ENGINE, \n      getSelectedCharacter: () => this.props.selectedCharacter.initialize(ENGINE),\n      mode: this.props.selectedMode.class,\n    })\n    this.state = {\n      game: game,\n      activeTab: 0,\n      spriteMode: game.spriteMode,\n    };\n    this.presserRef = React.createRef();\n  }\n\n  async componentDidMount() {\n    this.state.game.initialize(this.presserRef, document)\n    this.state.game['backToTitle'] = () => this.props.setActiveScreen(SCREENS.TITLE);\n    this.state.game['toLose'] = () => {\n      this.props.setActiveScreen(SCREENS.LOSE)\n    };\n    this.state.game['toWin'] = () => {\n      this.props.setActiveScreen(SCREENS.WIN)\n    };\n    this.state.game['refocus'] = () => this.refocus();\n    this.state.game.updateReact = (newGameState) => { this.setState({game: newGameState}) }\n    this.state.game.engine.start()\n  }\n\n  refocus () {\n    if (this.presserRef) this.presserRef.current.focus();\n  }\n\n  toggleSpriteMode () {\n    this.state.game.spriteMode = !this.state.game.spriteMode;\n    this.state.game.draw();\n    this.refocus();\n    this.setState({ spriteMode: this.state.game.spriteMode})\n  }\n\n  render() {\n    return (\n      <div className=\"Level\">\n        <div className='row'>\n          <div className='col s10'>\n            <div className='game_display_container'>\n              {Game.DisplayElement(this.presserRef, Game.handleKeyPress, this.state.game.engine)}\n            </div>\n            <Help id=\"jacinto_help\" />\n            <PlayerInformation game={this.state.game} />\n            {/* <Information game={this.state.game} /> */}\n            <Instructions game={this.state.game} spriteMode={this.state.game.spriteMode} setActiveScreen={this.props.setActiveScreen} toggleSpriteMode={this.toggleSpriteMode.bind(this)} />\n          </div>\n          <div className='col s2'>\n            <Equipment game={this.state.game} player={this.state.game.getFirstPlayer()} />\n            {/* <Messages messages={this.state.game.messages.slice(-5).reverse()} /> */}\n            {/* <Inventory inventory={this.state.game.visibleInventory} /> */}\n          </div>\n          {/* <div className='col s2'> */}\n          {/* </div> */}\n          {/* <button className='btn' onClick={() => this.props.setActiveScreen(SCREENS.TITLE)}>Quit</button> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Level;\n","import React from 'react';\nimport {\n  GiCog,\n  GiStarSkull,\n} from \"react-icons/gi\";\nimport { SCREENS } from './constants';\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          className=\"Title__content\"\n          style={{\n\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: '#07111Dff',\n            // backgroundImage: `url(\"${window.PUBLIC_URL}/icons/512x512.png\")`,\n            // backgroundRepeat: 'no-repeat',\n            // backgroundPosition: 'center',\n            // backgroundPositionY: '10px'\n\n          }}\n        >\n          <div className={`Jacinto_Help`}>\n            <div className=\"modal-content\">\n              <div className=\"row\">\n                <div className=\"col s12 m6\">\n                  <div className=\"Jacinto_Help__section_header\">Goal</div>\n                  <div className=\"Jacinto_Help__section_body\">\n                    Defend Jacinto, the last human bastion on Sera. Move block by block and clear the city of\n              <span className=\"red-text\">&nbsp;Grubs</span> until you can locate and defeat their leader,\n              <span className=\"red-text\">&nbsp;Skorge</span>.\n            </div>\n                </div>\n                <div className=\"col s12 m6\">\n                  <div className=\"Jacinto_Help__section_header\">Hints</div>\n                  <div className=\"Jacinto_Help__section_body\">\n                    <div>Destroy <span className=\"red-text\">Emergence Holes</span> ASAP.</div>\n                    <div>Spend <span className=\"blue-text\">Upgrade Points</span>.</div>\n                    <div>Weapon <span className=\"blue-text\">accuracy</span> decreases over distance.</div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col s12\">\n                  <div className=\"Jacinto_Help__section_header\">Controls</div>\n                  <div className=\"Jacinto_Help__section_body\">\n                    <div>Movement: WASD</div>\n                    <div>Actions: click or key press</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <h2 className=\"Title__header\"><GiCog/></h2>\n          <button\n            style={{\n              margin: 'initial',\n            }}\n            className={`CharacterSelect__button btn btn-main`}\n            onClick={() => {\n              this.props.setActiveScreen(SCREENS.CHARACTER_SELECT)\n            }}\n          >\n            Defend Jacinto\n          </button>\n          <h2 className=\"Title__header\"><GiStarSkull /></h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;","import React from 'react';\nimport {\n  GiStarSkull,\n} from \"react-icons/gi\";\nimport { SCREENS } from './constants';\n\n\nclass Lose extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          className=\"Title__content\"\n          style={{\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: '#222',\n          }}\n        >\n          <h2 className=\"Title__header\">\n            <GiStarSkull />\n            <GiStarSkull />\n            <GiStarSkull />\n          </h2>\n          <button\n            style={{\n              margin: 'initial',\n            }}\n            className={`CharacterSelect__button btn btn-main`}\n            onClick={() => window.location.reload()}\n          >\n            Restart\n          </button>\n          <h2 className=\"Title__header\">\n            <GiStarSkull />\n            <GiStarSkull />\n            <GiStarSkull />\n          </h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Lose;","import React from 'react';\nimport {\n  GiCog,\n} from \"react-icons/gi\";\n\nclass Win extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          className=\"Title__content\"\n          style={{\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: '#3e7dc9',\n          }}\n        >\n          <h2 className=\"Title__header\">\n            <GiCog />\n            <GiCog />\n            <GiCog />\n          </h2>\n          <button\n            style={{\n              margin: 'initial',\n            }}\n            className={`CharacterSelect__button btn btn-main`}\n            onClick={() => window.location.reload()}\n          >\n            Victory\n          </button>\n          <h2 className=\"Title__header\">\n            <GiCog />\n            <GiCog />\n            <GiCog />\n          </h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Win;","import React from 'react';\nimport { SCREENS } from '../Screen/constants';\n\nconst CharacterSelect = (props) => {\n  return (\n    <div className='CharacterSelect'>\n      {\n        props.characters.map((character, index) => {\n          let color = '';\n          if (props.selectedCharacter) {\n            color = props.selectedCharacter.name === character.name ? 'red' : ''\n          }\n\n          return (\n            <button\n              key={index}\n              className={`CharacterSelect__button btn btn-main`}\n              onClick={() => {\n                props.setSelectedCharacter(character)\n                props.setActiveScreen(SCREENS.LEVEL)\n              }}\n            >\n              Play as {character.name}\n            </button>\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default CharacterSelect;","import React from 'react';\nimport {\n  GiCog,\n  GiStarSkull,\n} from \"react-icons/gi\";\nimport { SCREENS } from './constants';\nimport CharacterSelect from '../UI/CharacterSelect';\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          className=\"Title__content\"\n          style={{\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: '#07111Dff',\n          }}\n        >\n          <h2 className=\"Title__header\"><GiCog/></h2>\n          <CharacterSelect \n            characters={this.props.characters} \n            selectedCharacter={this.props.selectedCharacter} \n            setSelectedCharacter={this.props.setSelectedCharacter}\n            setActiveScreen={this.props.setActiveScreen}\n          />\n          <h2 className=\"Title__header\"><GiStarSkull /></h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;","import React from 'react';\nimport { SCREENS } from '../Screen/constants';\n\nconst ModeSelect = (props) => {\n  return (\n    <div className='CharacterSelect'>\n      {\n        props.modes.map((mode, index) => {\n          let color = '';\n          if (props.selectedMode) {\n            color = props.selectedMode.name === mode.name ? 'red' : ''\n          }\n\n          return (\n            <button\n              key={index}\n              style={{\n                position: 'relative',\n                top: '280px'\n              }}\n              className={`CharacterSelect__button btn btn-main`}\n              onClick={() => {\n                console.log(mode);\n                \n                props.setSelectedMode(mode)\n                props.setActiveScreen(SCREENS.CHARACTER_SELECT)\n              }}\n            >\n              {mode.name}\n            </button>\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default ModeSelect;","import Level from './Level';\nimport Title from './Title';\nimport Lose from './Lose';\nimport Win from './Win';\nimport CharacterSelect from './CharacterSelect';\nimport ModeSelect from './ModeSelect';\n\nexport default {\n  Level,\n  Title,\n  Win,\n  Lose,\n  CharacterSelect,\n  ModeSelect,\n}","import React from 'react';\nimport { SCREENS } from './constants';\nimport ModeSelect from '../UI/ModeSelect';\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          style={{\n\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: 'rgb(4, 49, 61)',\n            backgroundImage: `url(\"${window.PUBLIC_URL}/fire_man_blue.jpg\")`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundPositionY: '10px'\n\n          }}\n        >\n          <ModeSelect \n            modes={this.props.modes} \n            selectedMode={this.props.selectedMode} \n            setSelectedMode={this.props.setSelectedMode}\n            setActiveScreen={this.props.setActiveScreen}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;","import { Base } from './Base';\nexport class GoToPreviousKeymap extends Base {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.label = 'Close';\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    this.actor.goToPreviousKeymap();\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { PlaceActor } from './PlaceActor';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\nimport { TYPE } from '../items';\nimport { DIRECTIONS, ENERGY_THRESHOLD } from '../constants';\nimport { getPositionInDirection } from '../../helper';\n\nexport class PrepareDirectionalThrow extends Base {\n  constructor({ \n    passThroughEnergyCost = ENERGY_THRESHOLD, \n    passThroughRequiredResources = [],\n    projectileType = TYPE.DIRECTIONAL_KUNAI,\n    ...args \n  }) {\n    super({ ...args });\n    this.passThroughEnergyCost = passThroughEnergyCost;\n    this.passThroughRequiredResources = passThroughRequiredResources;\n    this.projectileType = projectileType;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n\n    let projectile = this.actor.contains(this.projectileType);\n    if (!projectile) return {\n      success: false,\n      alternative: null,\n    };\n\n    projectile.game = this.game;\n    projectile.pos = {\n      x: this.actor.pos.x,\n      y: this.actor.pos.y,\n    };\n\n    this.actor.removeFromContainer(projectile);\n\n    const pos = this.actor.getPosition();\n    // tackle in 4 directions a sfar as the actor has energy\n    const cursor_positions = [];\n    [\n      DIRECTIONS.N,\n      DIRECTIONS.S,\n      DIRECTIONS.E,\n      DIRECTIONS.W,\n    ].forEach((direction, i) => {\n      Array(projectile.range).fill('').forEach((none, distance) => {\n        if (distance > 0) {\n          cursor_positions.push(\n            getPositionInDirection(pos, direction.map((dir) => dir * (distance)))\n          )\n        }\n      })\n    });\n    this.actor.activateCursor(cursor_positions)\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n      onAfter: () => this.actor.deactivateCursor(),\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n      \n      w: () => { \n        return new PlaceActor({\n          targetPos: {...projectile.pos},\n          actor: this.actor,\n          game: this.game,\n          entity: projectile,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'throw N',\n          onBefore: () => {\n            projectile.direction = DIRECTIONS.N;\n          },\n          onSuccess: () => {\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      d: () => { \n        return new PlaceActor({\n          targetPos: {...projectile.pos},\n          actor: this.actor,\n          game: this.game,\n          entity: projectile,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'throw E',\n          onBefore: () => {\n            projectile.direction = DIRECTIONS.E;\n          },\n          onSuccess: () => {\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      s: () => { \n        return new PlaceActor({\n          targetPos: {...projectile.pos},\n          actor: this.actor,\n          game: this.game,\n          entity: projectile,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'throw S',\n          onBefore: () => {\n            projectile.direction = DIRECTIONS.S;\n          },\n          onSuccess: () => {\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      a: () => { \n        return new PlaceActor({\n          targetPos: {...projectile.pos},\n          actor: this.actor,\n          game: this.game,\n          entity: projectile,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'throw W',\n          onBefore: () => {\n            projectile.direction = DIRECTIONS.W;\n          },\n          onSuccess: () => {\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n    };\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import { Base } from './Base';\nimport * as Helper from '../../helper';\nimport {THEMES} from '../constants';\n\nexport class MoveRangedAttackCursor extends Base {\n  constructor({ direction, range, ...args }) {\n    super({ ...args });\n    this.direction = direction;\n    this.range = range;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    const initiatedFrom = this.actor.getPosition();\n    const targetPos = Helper.getPositionInDirection(this.actor.getCursorPositions()[0], this.direction);\n    const path = Helper.calculateStraightPath(initiatedFrom, targetPos);\n    const isInRange = this.range ? path.length <= this.range : true;\n    const pathIsNotBlocked = path.reduce((acc, curr) => acc && this.game.rangedCursorCanOccupyPosition(curr), true);\n    if (isInRange && pathIsNotBlocked && this.game.rangedCursorCanOccupyPosition(targetPos, this.actor)) {\n    // if (isInRange && this.game.rangedCursorCanOccupyPosition(targetPos, this.actor)) {\n    // if (isInRange) {\n      this.actor.moveCursorInDirection(this.direction);\n      success = true;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { Say } from './Say';\nimport SOUNDS from '../sounds';\nimport * as Constant from '../constants';\nimport * as Helper from '../../helper';\n\nexport class MultiTargetRangedAttack extends Base {\n  constructor({ targetPositions, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPositions = targetPositions;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (!this.actor.entityTypes.includes('RANGED_ATTACKING')) {\n      return {\n        success: true,\n        alternative: new Say({\n          message: `Ooh I don\\'t know how to attack`,\n          game: this.game,\n          actor: this.actor,\n        }),\n      };\n    }\n    const weapons = this.actor.getEquipedWeapons();\n    if (weapons.length > 0) {\n      if (weapons[0].magazine <= 0) {\n        return {\n          success,\n          alternative,\n        };\n      }\n    }\n    let particlePath = [];\n    let particlePos = { x: this.actor.pos.x, y: this.actor.pos.y };\n    let renderer = this.particleTemplate.renderer;\n    this.targetPositions.forEach((targetPos) => {\n      let [attackSuccess, hit] = this.actor.rangedAttack(targetPos);\n      particlePath.push(targetPos);\n      if (attackSuccess) {\n        success = true;\n        if (!hit) {\n          SOUNDS.release_0.play();\n          success = true;\n          this.addParticle(\n            1,\n            { ...targetPos },\n            { x: 0, y: 0 },\n            Constant.PARTICLE_TEMPLATES.fail.renderer,\n          );\n        } else {\n          const sound = Helper.getRandomInArray([SOUNDS.chop_0, SOUNDS.chop_1]);\n          sound.play();\n          this.addParticle(\n            particlePath.length + 1,\n            particlePos,\n            null,\n            renderer,\n            Constant.PARTICLE_TYPE.path,\n            particlePath\n          );\n        }\n      }\n    });\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { MoveRangedAttackCursor } from './MoveRangedAttackCursor';\nimport { MultiTargetRangedAttack } from './MultiTargetRangedAttack';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\nimport { DIRECTIONS, ENERGY_THRESHOLD, THEMES, EQUIPMENT_TYPES } from '../constants';\nimport * as Helper from '../../helper';\nimport {find} from 'lodash';\n\nexport class PrepareRangedAttack extends Base {\n  constructor({ \n    passThroughEnergyCost = ENERGY_THRESHOLD, \n    passThroughRequiredResources = [], \n    ...args \n  }) {\n    super({ ...args });\n    this.passThroughEnergyCost = passThroughEnergyCost;\n    this.passThroughRequiredResources = passThroughRequiredResources;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n\n  updateCursors(pathAnimations, initiatedFrom) {\n    const cursorPositions = this.actor.getCursorPositions();\n    const path = Helper.calculateStraightPath(initiatedFrom, this.actor.getCursorPositions()[0]);\n    // removing visible path from last action\n    pathAnimations.forEach((anim) => {\n      this.game.display.removeAnimation(anim.id);\n    })\n    \n    // adding visible path to new cursor position\n    path.slice(1).forEach((pathPos) => {\n      if (!find(cursorPositions, {x: pathPos.x, y: pathPos.y})) {\n        const animation = this.game.display.addAnimation(1, { x: pathPos.x, y: pathPos.y, color: THEMES.SOLARIZED.base3 })\n        pathAnimations.push(animation);\n      }\n    })\n\n    // modifying target curso color based on change to hit\n    cursorPositions.forEach((pos, i) => {\n      const chance = this.actor.getRangedAttackChance(pos);\n      if (chance <= 0) {\n        this.actor.changeCursorColor(i, 'transparent');\n      }\n      if (chance > 0 && chance <= 0.5) {\n        this.actor.changeCursorColor(i, THEMES.SOLARIZED.red);\n      }\n      if (chance > 0.5 && chance <= 0.7) {\n        this.actor.changeCursorColor(i, THEMES.SOLARIZED.yellow);\n      }\n      if (chance >= 0.7) {\n        this.actor.changeCursorColor(i, THEMES.SOLARIZED.green);\n      }\n    })\n  }\n\n  perform() {\n    const pos = this.actor.getPosition();\n    const range = this.actor.getAttackRange();\n    const equippedWeapon = this.actor.getItemInSlot(EQUIPMENT_TYPES.HAND)\n    let positions = [{ ...pos }];\n    if (equippedWeapon) positions = equippedWeapon.getPositionsInShape(pos);\n\n    const pathAnimations = [];\n    const deactivatePathAnimations = () => pathAnimations.forEach((anim) => {\n      this.game.display.removeAnimation(anim.id);\n    })\n\n    this.actor.activateCursor(positions);\n    this.updateCursors(pathAnimations, pos);\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n      onAfter: () => {\n        this.actor.deactivateCursor()\n        deactivatePathAnimations()\n      },\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n      \n      w: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move N',\n          direction: DIRECTIONS.N,\n          range,\n          onSuccess: () => {\n            this.updateCursors(pathAnimations, pos);\n          }\n        })\n      },\n      a: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move W',\n          direction: DIRECTIONS.W,\n          range,\n          onSuccess: () => {\n            this.updateCursors(pathAnimations, pos);\n          }\n        })\n      },\n      s: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move S',\n          direction: DIRECTIONS.S,\n          range,\n          onSuccess: () => {\n            this.updateCursors(pathAnimations, pos);\n          }\n        })\n      },\n      d: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move E',\n          direction: DIRECTIONS.E,\n          range,\n          onSuccess: () => {\n            this.updateCursors(pathAnimations, pos);\n          }\n        })\n      },\n      f: () => { \n        return new MultiTargetRangedAttack({\n          label: 'Fire',\n          targetPositions:  [...this.actor.getCursorPositions()],\n          game: this.game,\n          actor: this.actor,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            deactivatePathAnimations();\n            this.actor.setNextAction(goToPreviousKeymap);\n          }\n        })\n      },\n    };\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import { Base } from './Base';\nimport { EquipItemFromContainer } from './EquipItemFromContainer';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\n\n\nexport class OpenInventory extends Base {\n  constructor({ \n    ...args \n  }) {\n    super({ ...args });\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    this.game.visibleInventory = this.actor.container;\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n    };\n\n    this.actor.container.forEach((slot, index) => {\n      const item = slot.items[0];\n      keymap[index] = () => new EquipItemFromContainer({\n        item,\n        game: this.game,\n        actor: this.actor,\n        label: `Equip ${item.name}`,\n        energyCost: 0,\n        onSuccess: () => {\n          this.game.visibleInventory = null\n          this.actor.setNextAction(goToPreviousKeymap);\n        },\n      });\n    })\n\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import * as Helper from '../../helper';\nimport { Base } from './Base';\nimport SOUNDS from '../sounds';\n\nexport class Upgrade extends Base {\n  constructor({ upgrade, ...args }) {\n    super({ ...args });\n    this.upgrade = upgrade;\n    this.particleTemplate = {\n      renderer: {\n        sprite: '',\n        character: '^',\n        color: 'white',\n        background: '#3e7dc9',\n      }\n    };\n  }\n  perform() {\n    let success = false;\n    if (this.actor.upgrade(this.upgrade)) {\n      success = true;\n      let positions = Helper.getPointsOnCircumference(this.actor.pos.x, this.actor.pos.y, 5);\n      positions.forEach((pos) => {\n        this.addParticle(4, { ...pos }, {\n          x: -1 * Math.sign(pos.x - this.actor.pos.x),\n          y: -1 * Math.sign(pos.y - this.actor.pos.y)\n        });\n      });\n      SOUNDS.save.play();\n    }\n    return {\n      success,\n      alternative: null,\n    };\n  }\n}\n;\n","import {ActionResource} from './ActionResource';\n\nexport class UpgradeResource extends ActionResource {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.name = 'Upgrade Points';\n    this.actorResourcePath = 'upgrade_points';\n    this.renderer = { color: 'white', background: '#3e7dc9', character: '^', sprite: '' }\n  }\n}","import { Base } from './Base';\nimport { Say } from './Say';\nimport { Upgrade } from './Upgrade';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\nimport { UpgradeResource } from './ActionResources/UpgradeResource';\n\nexport class OpenUpgrades extends Base {\n  constructor({ \n    ...args \n  }) {\n    super({ ...args });\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n    };\n\n    this.actor.upgrade_tree.forEach((upgrade, index) => {\n      keymap[index] = () => new Upgrade({\n        // message: upgrade.name,\n        upgrade,\n        game: this.game,\n        actor: this.actor,\n        label: `${upgrade.name}`,\n        energyCost: 0,\n        requiredResources: [new UpgradeResource({getResourceCost: () => upgrade.cost })],\n        onSuccess: () => {\n          this.actor.setNextAction(goToPreviousKeymap);\n        },\n      });\n    })\n\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nimport * as Helper from '../../helper';\n\nexport class PickupAllItems extends Base {\n  constructor({ ...args }) {\n    super({ ...args });\n  }\n  perform() {\n    let success = false;\n    const items = this.game.map[Helper.coordsToString(this.actor.pos)].entities.filter((e) => e.id !== this.actor.id);\n    if (items.length) {\n      // const item = Helper.getRandomInArray(items);\n      items.forEach((item) => {\n        this.game.addMessage(`${this.actor.name} picks up ${item.name}.`, MESSAGE_TYPE.ACTION);\n        this.actor.addToContainer(item);\n        let entities = this.game.map[Helper.coordsToString(this.actor.pos)].entities;\n        this.game.map[Helper.coordsToString(this.actor.pos)].entities = entities.filter((it) => it.id !== item.id);\n        success = true;\n      });\n    } \n    return {\n      success,\n      alternative: null,\n    };\n  }\n}\n;\n","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nexport class Reload extends Base {\n  constructor({ message, messageType = MESSAGE_TYPE.INFORMATION, ...args }) {\n    super({ ...args });\n    this.processDelay = 0;\n  }\n  perform() {\n    const success = this.actor.reload();\n    this.game.addMessage(`${this.actor.name} says \"RELOADING\"`, MESSAGE_TYPE.INFORMATION);\n    return {\n      success,\n      alternative: null,\n    };\n  }\n}\n;\n","// import deps\nimport * as Constant from '../constants';\nimport { Player } from '../Entities/index';\nimport { ContainerSlot } from '../Entities/Containing';\nimport {Say} from '../Actions/Say';\nimport {Move} from '../Actions/Move';\nimport {PrepareDirectionalThrow} from '../Actions/PrepareDirectionalThrow';\nimport {PrepareRangedAttack} from '../Actions/PrepareRangedAttack';\nimport {OpenInventory} from '../Actions/OpenInventory';\nimport {OpenUpgrades} from '../Actions/OpenUpgrades';\nimport {Upgrade} from '../Entities/Upgradable';\nimport {PickupAllItems} from '../Actions/PickupAllItems';\nimport { Lancer } from '../Items/Weapons/Lancer';\nimport { Snub } from '../Items/Weapons/Snub';\nimport { Grenade } from '../Items/Weapons/Grenade';\nimport { Ammo } from '../Items/Pickups/Ammo';\nimport {COLORS} from '../Modes/Jacinto/theme';\nimport { Reload } from '../Actions/Reload';\n\nexport default function (engine) {\n  // define keymap\n  const keymap = (engine, actor) => {\n    return {\n      Escape: () => new Say({\n        label: 'Pass',\n        message: 'pass turn...',\n        game: engine.game,\n        actor,\n        interrupt: true,\n        energyCost: 0,\n      }),\n      w: () => {\n        const direction = Constant.DIRECTIONS.N;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      s: () => {\n        const direction = Constant.DIRECTIONS.S;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      a: () => {\n        const direction = Constant.DIRECTIONS.W;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      d: () => {\n        const direction = Constant.DIRECTIONS.E;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      p: () => new Say({\n        label: 'Stay',\n        message: 'standing still...',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      f: () => new PrepareRangedAttack({\n        label: 'Fire Weapon',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n        passThroughRequiredResources: [],\n      }),\n      r: () => new Reload({\n        label: 'Reload',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      i: () => new OpenInventory({\n        label: 'Inventory',\n        game: engine.game,\n        actor,\n      }),\n      // o: () => new OpenEquipment({\n      //   label: 'Equipment',\n      //   game: engine.game,\n      //   actor,\n      // }),\n      u: () => new OpenUpgrades({\n        label: 'Upgrade',\n        game: engine.game,\n        actor,\n      }),\n      g: () => new PickupAllItems({\n        label: 'Pickup',\n        game: engine.game,\n        actor,\n      }),\n      t: () => new PrepareDirectionalThrow({\n        label: 'Grenade',\n        projectileType: 'Grenade',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n      })\n    };\n  }\n  // instantiate class\n  const lancer = Lancer(engine);\n  const durability = 10;\n  let actor = new Player({\n    pos: { x: 23, y: 7 },\n    renderer: {\n      sprite: '',\n      character: 'G',\n      color: COLORS.base3,\n      background: COLORS.cog2,\n    },\n    name: 'The Scout',\n    actions: [],\n    speed: Constant.ENERGY_THRESHOLD * 8,\n    durability,\n    attackDamage: 0,\n    baseRangedAccuracy: 0,\n    baseRangedDamage: 0,\n    upgrade_points: 0,\n    upgrade_tree: [\n      Upgrade({\n        cost: 1,\n        name: '+1 Health',\n        activate: (actor) => {\n          actor.durabilityMax += 1\n          actor.increaseDurability(1)\n        },\n      }),\n      Upgrade({\n        cost: 1,\n        name: '+5% Lancer Accuracy',\n        activate: (actor) => (lancer.baseRangedAccuracy += 0.1),\n      }),\n      Upgrade({\n        cost: 2,\n        name: '+1 Actions',\n        activate: (actor) => {\n          actor.speed += Constant.ENERGY_THRESHOLD;\n          actor.energy += Constant.ENERGY_THRESHOLD;\n        },\n        // removeOnActivate: true,\n      }),\n      Upgrade({\n        cost: 3,\n        name: 'Full Health',\n        canUpgrade: (actor) => actor.durability < actor.durabilityMax,\n        activate: (actor) => (actor.increaseDurability(actor.durabilityMax - actor.durability)),\n      }),\n    ],\n    equipment: Constant.EQUIPMENT_LAYOUTS.gear(),\n    game: engine.game,\n    presentingUI: true,\n    faction: 'COG',\n    initializeKeymap: keymap,\n  })\n\n  // add default items to container\n  const ammo = Array(30).fill('').map(() => Ammo(engine));\n  const grenades = Array(4).fill('').map(() => Grenade(engine, 6));\n  const snub = Snub(engine);\n  actor.container = [\n    new ContainerSlot({\n      itemType: snub.name,\n      items: [snub],\n    }),\n    new ContainerSlot({\n      itemType: ammo[0].name,\n      items: ammo,\n    }),\n    new ContainerSlot({\n      itemType: grenades[0].name,\n      items: grenades,\n    }),\n  ]\n\n  actor.equip(lancer.equipmentType, lancer);\n\n  return actor;\n}","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Lancer = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Lancer',\n  passable: true,\n  attackRange: 12,\n  magazineSize: 4,\n  baseRangedAccuracy: 0.85,\n  baseRangedDamage: 2,\n  attackDamage: 2,\n  pos,\n  // shapePattern: Constant.CLONE_PATTERNS.triple_point,\n  // shapePattern: Constant.CLONE_PATTERNS.bigSquare,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'L',\n    color: COLORS.base3,\n    background: COLORS.gray,\n  },\n});\n","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Snub = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Snub',\n  passable: true,\n  attackRange: 6,\n  magazineSize: 10,\n  baseRangedAccuracy: 0.7,\n  baseRangedDamage: 1,\n  attackDamage: 1,\n  pos,\n  // shapePattern: Constant.CLONE_PATTERNS.square,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'S',\n    color: COLORS.base3,\n    background: COLORS.base01,\n  },\n});\n","import { MoveMultiple } from './MoveMultiple';\nimport { Attack } from './Attack';\nimport {ENERGY_THRESHOLD} from '../constants';\n\nexport class Tackle extends MoveMultiple {\n  constructor({ direction, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.direction = direction;\n    this.stepCount = 0;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let alternative = null;\n    let newX = this.actor.pos.x + this.direction[0];\n    let newY = this.actor.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n\n    alternative = new Attack({\n      targetPos,\n      additionalDamage: this.stepCount,\n      game: this.game,\n      actor: this.actor,\n      energyCost: 0,\n    });\n\n    if (this.actor.energy > ENERGY_THRESHOLD) {\n      const shoveSuccess = this.actor.shove(targetPos, this.direction);\n      if (shoveSuccess) {\n        this.stepCount += 1;\n        alternative = this\n        for (let i = 0; i < 3; i++) {\n          this.addParticle(1, {\n            x: this.actor.pos.x - (this.direction[0] * i),\n            y: this.actor.pos.y - (this.direction[1] * i),\n          }, { x: 0, y: 0 });\n        }\n      }\n    }\n\n    return {\n      success: true,\n      alternative,\n    };\n  }\n};\n","import { Base } from './Base';\nimport { Attack } from \"./Attack\";\nimport * as Constant from '../constants';\n\nexport class MoveMultiple extends Base {\n  constructor({ direction, stepCount, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.direction = direction;\n    this.stepCount = stepCount;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let newX = this.actor.pos.x + this.direction[0];\n    let newY = this.actor.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n    if (this.stepCount > 0 && this.actor.move(targetPos)) {\n      this.stepCount -= 1;\n      this.actor.setNextAction(this);\n      success = true;\n    }\n    else {\n      success = true;\n      alternative = new Attack({\n        targetPos: targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { Tackle } from './Tackle';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\nimport { DIRECTIONS, ENERGY_THRESHOLD, PARTICLE_TEMPLATES } from '../constants';\nimport { getPositionInDirection } from '../../helper';\n\nexport class PrepareTackle extends Base {\n  constructor({ \n    passThroughEnergyCost = ENERGY_THRESHOLD, \n    passThroughRequiredResources = [], \n    ...args \n  }) {\n    super({ ...args });\n    this.passThroughEnergyCost = passThroughEnergyCost;\n    this.passThroughRequiredResources = passThroughRequiredResources;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n\n    const pos = this.actor.getPosition();\n    // tackle in 4 directions a sfar as the actor has energy\n    const cursor_positions = [];\n    [\n      DIRECTIONS.N,\n      DIRECTIONS.S,\n      DIRECTIONS.E,\n      DIRECTIONS.W,\n    ].forEach((direction, i) => {\n      Array(this.actor.energy / ENERGY_THRESHOLD).fill('').forEach((none, distance) => {\n        if (distance > 0) {\n          cursor_positions.push(\n            getPositionInDirection(pos, direction.map((dir) => dir * (distance)))\n          )\n        }\n      })\n    });\n    this.actor.activateCursor(cursor_positions)\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n      onAfter: () => this.actor.deactivateCursor(),\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n      \n      w: () => { \n        return new Tackle({\n          actor: this.actor,\n          game: this.game,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'tackle N',\n          direction: DIRECTIONS.N,\n          particleTemplate: PARTICLE_TEMPLATES.leaf,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      d: () => { \n        return new Tackle({\n          actor: this.actor,\n          game: this.game,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'tackle E',\n          direction: DIRECTIONS.E,\n          particleTemplate: PARTICLE_TEMPLATES.leaf,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      s: () => { \n        return new Tackle({\n          actor: this.actor,\n          game: this.game,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'tackle S',\n          direction: DIRECTIONS.S,\n          particleTemplate: PARTICLE_TEMPLATES.leaf,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      a: () => { \n        return new Tackle({\n          actor: this.actor,\n          game: this.game,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'tackle W',\n          direction: DIRECTIONS.W,\n          particleTemplate: PARTICLE_TEMPLATES.leaf,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n    };\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","// import deps\nimport * as Constant from '../constants';\nimport { Player } from '../Entities/index';\nimport { ContainerSlot } from '../Entities/Containing';\nimport {Say} from '../Actions/Say';\nimport {Move} from '../Actions/Move';\nimport {PrepareDirectionalThrow} from '../Actions/PrepareDirectionalThrow';\nimport {PrepareRangedAttack} from '../Actions/PrepareRangedAttack';\nimport {OpenInventory} from '../Actions/OpenInventory';\nimport {OpenUpgrades} from '../Actions/OpenUpgrades';\nimport {Upgrade} from '../Entities/Upgradable';\nimport {PickupAllItems} from '../Actions/PickupAllItems';\nimport { PrepareTackle } from '../Actions/PrepareTackle';\nimport { RetroLancer } from '../Items/Weapons/RetroLancer';\nimport { Boltok } from '../Items/Weapons/Boltok';\nimport { Snub } from '../Items/Weapons/Snub';\nimport { Grenade } from '../Items/Weapons/Grenade';\nimport { Ammo } from '../Items/Pickups/Ammo';\nimport {COLORS} from '../Modes/Jacinto/theme';\nimport { Reload } from '../Actions/Reload';\nimport { Gnasher } from '../Items/Weapons/Gnasher';\n\nexport default function (engine) {\n  // define keymap\n  const keymap = (engine, actor) => {\n    return {\n      Escape: () => new Say({\n        label: 'Pass',\n        message: 'pass turn...',\n        game: engine.game,\n        actor,\n        interrupt: true,\n        energyCost: 0,\n      }),\n      w: () => {\n        const direction = Constant.DIRECTIONS.N;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      s: () => {\n        const direction = Constant.DIRECTIONS.S;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      a: () => {\n        const direction = Constant.DIRECTIONS.W;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      d: () => {\n        const direction = Constant.DIRECTIONS.E;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      p: () => new Say({\n        label: 'Stay',\n        message: 'standing still...',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      f: () => new PrepareRangedAttack({\n        label: 'Fire Weapon',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n        passThroughRequiredResources: [],\n      }),\n      r: () => new Reload({\n        label: 'Reload',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      i: () => new OpenInventory({\n        label: 'Inventory',\n        game: engine.game,\n        actor,\n      }),\n      // o: () => new OpenEquipment({\n      //   label: 'Equipment',\n      //   game: engine.game,\n      //   actor,\n      // }),\n      u: () => new OpenUpgrades({\n        label: 'Upgrade',\n        game: engine.game,\n        actor,\n      }),\n      g: () => new PickupAllItems({\n        label: 'Pickup',\n        game: engine.game,\n        actor,\n      }),\n      t: () => new PrepareDirectionalThrow({\n        label: 'Grenade',\n        projectileType: 'Grenade',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      c: () => new PrepareTackle({\n        label: 'Bayonet Charge',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n      }),\n    };\n  }\n  // instantiate class\n  const primary = RetroLancer(engine);\n  const durability = 20;\n  let actor = new Player({\n    pos: { x: 23, y: 7 },\n    renderer: {\n      sprite: '',\n      character: 'G',\n      color: COLORS.base3,\n      background: COLORS.cog2,\n    },\n    name: 'The Veteran',\n    speed: Constant.ENERGY_THRESHOLD * 4,\n    durability,\n    baseRangedAccuracy: 0,\n    baseRangedDamage: 0,\n    attackDamage: 0,\n    upgrade_points: 0,\n    upgrade_tree: [\n      Upgrade({\n        cost: 1,\n        name: '+1 Health',\n        activate: (actor) => {\n          actor.durabilityMax += 1\n          actor.increaseDurability(1)\n        },\n      }),\n      Upgrade({\n        cost: 1,\n        name: '+2 Melee Damage',\n        activate: (actor) => (primary.attackDamage += 2),\n      }),\n      Upgrade({\n        cost: 3,\n        name: 'Full Health',\n        canUpgrade: (actor) => actor.durability < actor.durabilityMax,\n        activate: (actor) => (actor.increaseDurability(actor.durabilityMax - actor.durability)),\n      }),\n    ],\n    equipment: Constant.EQUIPMENT_LAYOUTS.gear(),\n    game: engine.game,\n    presentingUI: true,\n    faction: 'COG',\n    initializeKeymap: keymap,\n  })\n\n  // add default items to container\n  const ammo = Array(10).fill('').map(() => Ammo(engine));\n  const grenades = Array(2).fill('').map(() => Grenade(engine, 6));\n  const secondary = Gnasher(engine);\n  actor.container = [\n    new ContainerSlot({\n      itemType: secondary.name,\n      items: [secondary],\n    }),\n    new ContainerSlot({\n      itemType: ammo[0].name,\n      items: ammo,\n    }),\n    new ContainerSlot({\n      itemType: grenades[0].name,\n      items: grenades,\n    }),\n  ]\n\n  actor.equip(primary.equipmentType, primary);\n\n  return actor;\n}","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const RetroLancer = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Retro Lancer',\n  passable: true,\n  attackRange: 10,\n  magazineSize: 3,\n  baseRangedAccuracy: 0.7,\n  baseRangedDamage: 2,\n  attackDamage: 6,\n  pos,\n  // shapePattern: Constant.CLONE_PATTERNS.triple_point,\n  // shapePattern: Constant.CLONE_PATTERNS.bigSquare,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'R',\n    color: COLORS.base3,\n    background: COLORS.cog1,\n  },\n});\n","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Gnasher = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Gnasher',\n  passable: true,\n  attackRange: 4,\n  magazineSize: 2,\n  baseRangedAccuracy: 0.9,\n  baseRangedDamage: 3,\n  attackDamage: 0,\n  pos,\n  shapePattern: Constant.CLONE_PATTERNS.square,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'G',\n    color: COLORS.base03,\n    background: COLORS.green,\n  },\n});\n","// import deps\nimport * as Constant from '../constants';\nimport { UpgradeResource } from '../Actions/ActionResources/UpgradeResource';\nimport { Player } from '../Entities/index';\nimport { ContainerSlot } from '../Entities/Containing';\nimport {Say} from '../Actions/Say';\nimport {Move} from '../Actions/Move';\nimport {PrepareDirectionalThrow} from '../Actions/PrepareDirectionalThrow';\nimport {PrepareRangedAttack} from '../Actions/PrepareRangedAttack';\nimport {OpenInventory} from '../Actions/OpenInventory';\nimport {OpenUpgrades} from '../Actions/OpenUpgrades';\nimport {Upgrade} from '../Entities/Upgradable';\nimport {PickupAllItems} from '../Actions/PickupAllItems';\nimport { Longshot } from '../Items/Weapons/Longshot';\nimport { Boltok } from '../Items/Weapons/Boltok';\nimport { Grenade } from '../Items/Weapons/Grenade';\nimport { Ammo } from '../Items/Pickups/Ammo';\nimport {COLORS} from '../Modes/Jacinto/theme';\nimport { Reload } from '../Actions/Reload';\nimport { AddSprintStatusEffect } from '../Actions/AddSprintStatusEffect';\n\nexport default function (engine) {\n  // define keymap\n  const keymap = (engine, actor) => {\n    return {\n      Escape: () => new Say({\n        label: 'Pass',\n        message: 'pass turn...',\n        game: engine.game,\n        actor,\n        interrupt: true,\n        energyCost: 0,\n      }),\n      w: () => {\n        const direction = Constant.DIRECTIONS.N;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      s: () => {\n        const direction = Constant.DIRECTIONS.S;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      a: () => {\n        const direction = Constant.DIRECTIONS.W;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      d: () => {\n        const direction = Constant.DIRECTIONS.E;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      p: () => new Say({\n        label: 'Stay',\n        message: 'standing still...',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      f: () => new PrepareRangedAttack({\n        label: 'Fire Weapon',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n        passThroughRequiredResources: [],\n      }),\n      r: () => new Reload({\n        label: 'Reload',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      i: () => new OpenInventory({\n        label: 'Inventory',\n        game: engine.game,\n        actor,\n      }),\n      u: () => new OpenUpgrades({\n        label: 'Upgrade',\n        game: engine.game,\n        actor,\n      }),\n      g: () => new PickupAllItems({\n        label: 'Pickup',\n        game: engine.game,\n        actor,\n      }),\n      t: () => new PrepareDirectionalThrow({\n        label: 'Grenade',\n        projectileType: 'Grenade',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      // c: () => new AddSprintStatusEffect({\n      //   label: 'Sprint',\n      //   game: engine.game,\n      //   actor,\n      //   speedBuff: Constant.ENERGY_THRESHOLD * 10,\n      //   requiredResources: [\n      //     new UpgradeResource({ getResourceCost: () => 1 }),\n      //   ],\n      // }),\n    };\n  }\n  // instantiate class\n  const primary = Longshot(engine);\n  const secondary = Boltok(engine);\n  const durability = 12;\n  let actor = new Player({\n    pos: { x: 23, y: 7 },\n    renderer: {\n      sprite: '',\n      character: 'G',\n      color: COLORS.base3,\n      background: COLORS.cog2,\n    },\n    name: 'The Stranded',\n    speed: Constant.ENERGY_THRESHOLD * 6,\n    durability,\n    baseRangedAccuracy: 0,\n    baseRangedDamage: 0,\n    attackDamage: 0,\n    upgrade_points: 0,\n    upgrade_tree: [\n      Upgrade({\n        cost: 1,\n        name: '+1 Health',\n        activate: (actor) => {\n          actor.durabilityMax += 1\n          actor.increaseDurability(1)\n        },\n      }),\n      Upgrade({\n        cost: 1,\n        name: '+5% Longshot Accuracy',\n        activate: (actor) => (primary.baseRangedAccuracy += 0.05),\n      }),\n      Upgrade({\n        cost: 1,\n        name: '+5% Boltok Accuracy',\n        activate: (actor) => (secondary.baseRangedAccuracy += 0.05),\n      }),\n      Upgrade({\n        cost: 1,\n        name: 'Craft 3 Grenades',\n        activate: (actor) => {\n          Array(3).fill('').map(() => actor.addToContainer(Grenade(engine, 6)));\n        },\n      }),\n      Upgrade({\n        cost: 3,\n        name: 'Full Health',\n        canUpgrade: (actor) => actor.durability < actor.durabilityMax,\n        activate: (actor) => (actor.increaseDurability(actor.durabilityMax - actor.durability)),\n      }),\n    ],\n    equipment: Constant.EQUIPMENT_LAYOUTS.gear(),\n    game: engine.game,\n    presentingUI: true,\n    faction: 'COG',\n    initializeKeymap: keymap,\n  })\n\n  // add default items to container\n  const ammo = Array(20).fill('').map(() => Ammo(engine));\n  const grenades = Array(2).fill('').map(() => Grenade(engine, 6));\n  actor.container = [\n    new ContainerSlot({\n      itemType: secondary.name,\n      items: [secondary],\n    }),\n    new ContainerSlot({\n      itemType: ammo[0].name,\n      items: ammo,\n    }),\n    new ContainerSlot({\n      itemType: grenades[0].name,\n      items: grenades,\n    }),\n  ]\n\n  actor.equip(primary.equipmentType, primary);\n\n  return actor;\n}","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Longshot = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Longshot',\n  passable: true,\n  attackRange: 20,\n  magazineSize: 1,\n  baseRangedAccuracy: 1,\n  baseRangedDamage: 10,\n  attackDamage: 0,\n  pos,\n  // shapePattern: Constant.CLONE_PATTERNS.triple_point,\n  // shapePattern: Constant.CLONE_PATTERNS.bigSquare,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'L',\n    color: COLORS.base1,\n    background: COLORS.base04,\n  },\n});\n","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Boltok = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Boltok',\n  passable: true,\n  attackRange: 4,\n  magazineSize: 2,\n  baseRangedAccuracy: 0.8,\n  baseRangedDamage: 3,\n  attackDamage: 1,\n  pos,\n  // shapePattern: Constant.CLONE_PATTERNS.square,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'B',\n    color: COLORS.base3,\n    background: COLORS.locust0,\n  },\n});\n","import The_Scout from './GearLight';\nimport The_Veteran from './GearHeavy';\nimport The_Stranded from './GearStranded';\n\nlet Characters = () => {\n  return {\n    The_Scout,\n    The_Veteran,\n    The_Stranded,\n  }\n}\n\nexport default Characters;","import React from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport { SCREENS } from './Screen/constants';\nimport Screens from './Screen/index';\nimport Characters from './Characters/index';\nimport Modes from './Modes/index';\nimport SOUNDS from './sounds';\n\nclass Nystrum extends React.Component {\n  constructor() {\n    super();\n    let characterKey = Characters();\n    let characters = Object.keys(characterKey).map((key, i) => {\n      return {\n        initialize: characterKey[key],\n        selected: false,\n        name: key.split('_').join(' '),\n      }\n    });\n\n    let modes = Object.keys(Modes).map((key, i) => {\n      return {\n        class: Modes[key],\n        selected: false,\n        name: key.split('_').join(' '),\n      }\n    });\n\n    this.state = {\n      activeScreen: SCREENS.TITLE,\n      characters,\n      modes,\n      selectedCharacter: null,\n      selectedMode: modes[0],\n    };\n  }\n\n  setActiveScreen (activeScreen) {\n    if (activeScreen === SCREENS.TITLE) {\n      Object.keys(SOUNDS).forEach(key => {\n        SOUNDS[key].stop();\n      });\n    }\n    this.setState({activeScreen})\n  }\n\n  setSelectedCharacter (character) {\n    this.setState({selectedCharacter: {...character}})\n  }\n\n  setSelectedMode (mode) {\n    this.setState({selectedMode: mode})\n  }\n\n  getActiveScreen () {\n    const characterScreen = <Screens.CharacterSelect \n      key={SCREENS.CHARACTER_SELECT} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n      />\n      const titleScreen = <Screens.Title \n      key={SCREENS.TITLE} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n    />\n    const loseScreen = <Screens.Lose \n      key={SCREENS.LOSE} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n    />\n    const winScreen = <Screens.Win \n      key={SCREENS.WIN} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n    />\n    const levelScreen = <Screens.Level \n      key={SCREENS.LEVEL} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      selectedMode={this.state.selectedMode}\n    />\n\n    switch (this.state.activeScreen) {\n      case SCREENS.CHARACTER_SELECT:\n        return characterScreen\n      case SCREENS.TITLE:\n        return titleScreen\n      case SCREENS.LOSE:\n        return loseScreen\n      case SCREENS.WIN:\n        return winScreen\n      case SCREENS.LEVEL:\n        return levelScreen\n      default:\n        return titleScreen\n    }\n  }\n\n  render() {\n    const activeScreen = this.getActiveScreen();\n    return (\n      <div className=\"Nystrum\">\n        <ReactCSSTransitionGroup\n          transitionName=\"fade\"\n          transitionAppear={true}\n          transitionEnter={true}\n          transitionLeave={true}\n          transitionAppearTimeout={500}\n          transitionEnterTimeout={500}\n          transitionLeaveTimeout={300}\n        >\n          { activeScreen }\n        </ReactCSSTransitionGroup>\n      </div>\n    );\n  }\n}\n\nexport default Nystrum;\n","import React from 'react';\nimport './App.css';\nimport Nystrum from './nystrum/Nystrum';\n\nfunction App() {\n  return (\n    <div className=\"App container-fluid\">\n      <Nystrum />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}