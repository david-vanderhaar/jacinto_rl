{"version":3,"sources":["nystrum/Screen/constants.js","helper.js","nystrum/Entities/Entity.js","nystrum/constants.js","nystrum/Actions/ActionResources/ActionResource.js","nystrum/Actions/ActionResources/EnergyResource.js","nystrum/Actions/Base.js","nystrum/Actions/DestroySelf.js","nystrum/Actions/EngineCrank.js","nystrum/Entities/Parent.js","nystrum/Display/konvaCustom.js","nystrum/message.js","nystrum/Entities/Attacking.js","nystrum/Maps/helper.js","nystrum/Entities/RangedAttacking.js","nystrum/Entities/Equipable.js","nystrum/Entities/Acting.js","nystrum/Entities/Rendering.js","nystrum/Entities/Containing.js","nystrum/sounds.js","nystrum/Entities/Playing.js","nystrum/Entities/helper.js","nystrum/Actions/Say.js","nystrum/Actions/Attack.js","nystrum/Actions/Move.js","nystrum/Actions/ThrowProjectile.js","nystrum/Actions/SelfDestructiveAttack.js","nystrum/Actions/ProjectileMove.js","nystrum/Entities/DirectionalProjecting.js","nystrum/Actions/Shove.js","nystrum/Actions/ThrowProjectileGas.js","nystrum/Entities/Chasing.js","nystrum/Actions/PlaceActor.js","nystrum/Entities/Draggable.js","nystrum/Entities/Pushable.js","nystrum/items.js","nystrum/Entities/Destructable.js","nystrum/Entities/Burnable.js","nystrum/Entities/Exploding.js","nystrum/Entities/HasKeymap.js","nystrum/Entities/Upgradable.js","nystrum/Entities/HasFaction.js","nystrum/Entities/UsesCover.js","nystrum/Entities/index.js","nystrum/Entities/UI.js","nystrum/Entities/Speaking.js","nystrum/Entities/Helpless.js","nystrum/Entities/Covering.js","nystrum/Entities/DirectionalPushing.js","nystrum/Entities/RangedChasing.js","nystrum/Entities/PresentingUI.js","nystrum/Entities/HasTargetingCursor.js","nystrum/Entities/Dragging.js","nystrum/Entities/Charging.js","nystrum/Entities/Signing.js","nystrum/Entities/Equiping.js","nystrum/Entities/Cloning.js","nystrum/Entities/HasShapePattern.js","nystrum/Entities/DestructiveProjecting.js","nystrum/Entities/GaseousDestructiveProjecting.js","nystrum/Entities/Gaseous.js","nystrum/Entities/Spreading.js","nystrum/Entities/Spawning.js","nystrum/Entities/IsParticle.js","nystrum/Engine/engine.js","nystrum/Maps/generator.js","nystrum/Modes/Jacinto/theme.js","nystrum/Maps/coverGenerator.js","nystrum/Modes/default.js","nystrum/Items/Pickups/Ammo.js","nystrum/Items/Weapons/Grenade.js","nystrum/Modes/index.js","nystrum/Modes/Jacinto/jacinto.js","nystrum/game.js","nystrum/UI/Instructions.js","nystrum/UI/Button.js","nystrum/UI/Information.js","nystrum/UI/Tooltip.js","nystrum/UI/ActionBar.js","nystrum/UI/Entity/CharacterCard.js","nystrum/UI/Entity/PlayerInformation.js","nystrum/UI/Inventory.js","nystrum/UI/Messages.js","nystrum/UI/InfoBlocks.js","nystrum/Actions/EquipItemFromContainer.js","nystrum/UI/Jacinto/Equipment.js","nystrum/UI/Jacinto/HelpContent.js","nystrum/UI/Jacinto/Help.js","nystrum/Screen/Level.js","nystrum/Screen/Title.js","nystrum/Screen/Lose.js","nystrum/Screen/Win.js","nystrum/UI/CharacterSelect.js","nystrum/Screen/CharacterSelect.js","nystrum/UI/ModeSelect.js","nystrum/Screen/index.js","nystrum/Screen/ModeSelect.js","nystrum/Actions/GoToPreviousKeymap.js","nystrum/Actions/PrepareDirectionalThrow.js","nystrum/Actions/MoveRangedAttackCursor.js","nystrum/Actions/Reload.js","nystrum/Actions/MultiTargetRangedAttack.js","nystrum/Actions/PrepareRangedAttack.js","nystrum/Actions/OpenInventory.js","nystrum/Actions/Upgrade.js","nystrum/Actions/ActionResources/UpgradeResource.js","nystrum/Actions/OpenUpgrades.js","nystrum/Actions/PickupAllItems.js","nystrum/Actions/AddStatusEffect.js","nystrum/StatusEffects/Base.js","nystrum/StatusEffects/MeleeDamage.js","nystrum/Characters/GearLight.js","nystrum/Items/Weapons/Lancer.js","nystrum/Items/Weapons/Snub.js","nystrum/Actions/Tackle.js","nystrum/Actions/MoveMultiple.js","nystrum/Actions/PrepareTackle.js","nystrum/Characters/GearHeavy.js","nystrum/Items/Weapons/RetroLancer.js","nystrum/Items/Weapons/Gnasher.js","nystrum/Characters/GearStranded.js","nystrum/Items/Weapons/Longshot.js","nystrum/Items/Weapons/Boltok.js","nystrum/Characters/index.js","nystrum/Nystrum.js","App.js","serviceWorker.js","index.js"],"names":["SCREENS","delay","timeDelayed","Promise","resolve","setTimeout","clamp","value","min","max","Math","getRandomInArray","array","floor","random","length","getRandomIntInclusive","ceil","coordsAreEqual","pos_one","pos_two","x","y","coordsToString","coords","isPassableDefault","game","tile","map","tileKey","type","passable","calculatePath","targetPos","currentPos","topology","isPassable","isPassableCallback","astar","ROT","AStar","path","compute","push","slice","lerp_point","p0","p1","t","lerp","start","end","calculateStraightPath","p","points","N","dx","dy","abs","diagonal_distance","step","round","getPositionInDirection","pos","direction","calculatePathWithRange","range","getRandomPos","keys","Object","key","split","coordinates","parseInt","text","getDestructableEntities","entites","filter","entity","hasOwnProperty","getGranularity","radius","pow","getPointsOnCircumference","centerX","centerY","r","n","list","i","cos","PI","sin","getPointsWithinRadius","position","positions","yspan","acos","getPositionsFromStructure","structure","initialPosition","slot","x_offset","y_offset","Entity","name","id","uuid","this","entityTypes","active","COLORS","THEMES","base03","base02","base01","base00","base0","base1","base2","base3","yellow","orange","red","magenta","violet","blue","cyan","green","TILE_KEY","background","foreground","character","sprite","animation","DIRECTIONS","NE","W","NW","SW","S","SE","E","NONE","EQUIPMENT_TYPES","EQUIPMENT_LAYOUTS","item","CLONE_PATTERNS","point","taken","triple_point","spread","verticalLine","smallSquare","square","bigSquare","circle","Helper","PARTICLE_TEMPLATES","default","renderer","color","fail","succede","damage","leaf","water","PARTICLE_TYPE","ActionResource","getResourceCost","actorResourcePath","actorResourceGetter","actorResourceSetter","EnergyResource","args","Base","actor","label","hidden","energyCost","processDelay","particles","particleTemplate","Constant","onBefore","onAfter","onSuccess","onFailure","interrupt","requiredResources","life","particle","Particle","energy","setNextAction","_","resource","actorVariable","canPay","listPayableResources","resourceCost","success","alternative","DestroySelf","destroy","EngineCrank","engine","console","log","Parent","superclass","children","CrankEngine","concat","isInitialized","child","entities","e","actors","draw","includes","forEach","destroyChild","canAttack","bind","placeActorOnMap","addActor","initialize","ANIMATION_TYPES","DEFAULT","BLINK_TILE","SOLID_TILE","BLINK_BOX","Animation","display","lifeTime","node","frame","timeDiff","getActive","removeAnimation","ExampleAnimation","BlinkTile","lerpDirection","rectAttributes","attrs","tileWidth","tileOffset","tileGutter","tileHeight","offsetX","offsetY","width","height","fill","transformsEnabled","perfectDrawEnabled","listening","shadowForStrokeEnabled","rect","Konva","Rect","animationLayer","add","opacity","BlinkBox","stroke","strokeWidth","Display","containerId","stage","layer","animations","animationLoop","animationTypes","document","d","getElementById","displayContainer","createElement","appendChild","Stage","container","Layer","hitGraphEnabled","update","isRunning","stop","display_element","offsetWidth","mapWidth","mapHeight","anim","Group","strokeEnabled","Text","fontSize","fontFamily","align","verticalAlign","batchDraw","MESSAGE_TYPE","INFORMATION","backgroundColor","ACTION","DANGER","STATUS_EFFECT","ERROR","Message","Attacking","attackDamage","additional","targets","target","getAttackDamage","equipment","addMessage","decreaseDurability","addTileZone","origin","j","addTileToMap","tileType","numberOfAnimationFrames","tileData","currentFrame","tileHasTag","tag","getTileFromMap","RangedAttacking","attackRange","baseRangedAccuracy","baseRangedDamage","magazineSize","magazine","weaponAccuracy","getRangedWeaponAccuracy","coverDebuff","getRangedAttackCoverDebuff","distanceDebuff","getRangedAttackDistanceDebuff","result","getPosition","reduce","acc","curr","MapHelper","entitiesProvidingCover","coverModifer","getCoveredByIds","accuracyModifer","getAttackRange","accuracy","getRangedAttackChance","getRangedWeaponDamage","getRangedAttackDamage","getEquipedWeapons","weapon","reloaded","amount","ammo","contains","removeFromContainer","additionalDamage","additionalAccuracy","hit","attackChance","hitChance","useAmmo","canRangedAttack","Equipable","equipmentType","Acting","actions","speed","action","Rendering","canOccupyPosition","targetTile","pushable","newPos","move","ContainerSlot","itemType","items","Containing","slots","index","findIndex","createSlot","it","splice","fire_0","Howl","src","window","PUBLIC_URL","volume","loop","fire_1","scream_0","scream_1","scream_2","water_0","water_1","chop_0","chop_1","equip_0","equip_1","explosion_0","save","lose","grab_0","release_0","Playing","keymap","nextAction","destroyEntity","removeStatusEffectByActorId","Say","message","messageType","Attack","attack","SOUNDS","play","addParticle","Move","ThrowProjectile","move_result","shift","SelfDestructiveAttack","damageToSelf","decreaseDurabilityWithoutDefense","ProjectileMove","DirectionalProjecting","setActorToPrevious","Shove","shove","ThrowProjectileGas","Chasing","targetEntity","PlaceActor","forcePlacement","addActorAsNext","Draggable","draggable","Pushable","TYPE","directionalKunai","DirectionalProjectile","Destructable","durability","defense","onDestroy","durabilityMax","actorSprite","actorCharacter","getDefense","current","newDurability","updateActorRenderer","Burnable","canBurn","willResetCanBurn","Exploding","flammability","explosivity","Array","FireSpread","timeToSpread","spreadCount","fire","explode","enflame","HasKeymap","initializeKeymap","keymapStack","addKeymap","newKeymap","unshift","ignoredKeys","getKeymap","removeKeymap","Upgrade","activate","canUpgrade","cost","removeOnActivate","HasFaction","faction","UsesCover","coverAnimations","showCoverAnimations","coveredBy","tiles","newTile","Boolean","coverAnimated","isProvidingCover","newAnimation","addAnimation","removeCoverAnimations","removeCoveredBy","setCoverAnimations","CoverWall","pipe","initiatedBy","messages","saved","damageModifer","providesCover","Bandit","RangedBandit","getProjectile","pathToCheck","inPath","throwDirection","sign","projectile","createPath","targetInPath","movePath","Player","presentingUI","cursorIsActive","cursorPositions","setCursorPositions","setCursorIsActive","resetAnimations","removeAnimations","getCursorPositions","addAnimations","currentPositions","xDelta","yDelta","newPositons","distance","arg","draggedEntity","lastPos","moveSuccess","drag","charge","chargeMax","signHistory","itemName","slotName","find","foundSlot","cloneLimit","clones","clone","c","super__destroy","cloneArgs","cloneDeep","reinitializeKeymap","destroyClone","attribute","upgrade_points","upgrade_tree","upgrade","newTree","currUpgrade","RangedWeapon","shapePattern","Ammo","Grenade","owner_id","isClone","cloneCount","clonePattern","offset","cloneDeepWith","referencePos","timeToSpreadMax","spreadCountMax","adjacentPositions","adjacentPos","kill","tileExists","notBurnt","EmergenceHole","getSpawnedEntity","nextPos","getNextPos","Engine","statusEffects","currentActor","gainEnergy","hasEnoughEnergy","getAction","perform","getFirstPlayer","acting","timePassed","getEnergyCost","canPayRequiredResources","payRequiredResources","processActionFX","shouldAutoRun","processStatusEffects","sortActorsByEnergy","processV2","setVisibleKeymap","updateMode","updateReact","visibleKeymap","sort","a","b","newEffect","allowDuplicates","effect","onStart","onStop","actorId","lifespan","timeToLive","timeSinceLastStep","stepInterval","onStep","removeDeadStatusEffects","actionSuccess","removeActorFromMap","removeDeadParticles","process","mode","addCorridors","floorPlan","unitSize","relativeCornerCoords","currentUnit","currentUnitPosition","getUnitPosition","currentUnitRelativeCornerCoord","getNeighboringUnitsFromFloorPlan","neigbor","nextUnitPosition","nextUnitRelativeCornerCoord","digCorridor","neighbors","getNeighboringPoints","unit","corridorDirection","corridorPosition","hasDoor","tileIsWall","createFloorPlan","createRoomInFloorPlan","newUnit","getNeighboringUnit","unitAlreadyExists","unitExists","pnt","existingUnits","floorPlanPos","mapOffsetX","mapOffsetY","eightWay","createUnit","size","border","newPosition","tags","STAT_RENDERERS","SHAPES","horizontalLine","southEastVerticalL","southWestVerticalL","northWestVerticalL","northEastVerticalL","southEastHorizontalL","southWestHorizontalL","northEastHorizontalL","northWestHorizontalL","shapeChanceTable","generate","shape","box","generateCoverBlock","generateRandom","Mode","data","infoBlocks","progressBars","merge","AmmoEntity","GrenadeEntity","require","Jacinto","createVerticalRoadGoingNorthAndSouth","createVerticalRoad","createVerticalRoadGoingNorth","fromY","createVerticalRoadGoingSouth","level","highestLevel","turnCount","dataByLevel","enemies","emergenceHoles","ammoLoot","grenadeLoot","numberOfVerticalRoads","numberOfBuildings","mainRoadY","createHorizontalRoad","generateRoad","groundTiles","getEmptyGroundTileKeys","posXY","coord","unitCount","unitPosition","didCreate","generateBuilding","createEmptyLevel","initializeMapTiles","setWaveData","createCityBlockLevel","floorTiles","placePlayersInSafeZone","player","getEmptyTileKeys","addEmerenceHole","numberOfCoverStructures","coverEligibleTiles","CoverGenerator","addAmmoLoot","addGrenadeLoot","enemyName","createOrUpdateInfoBlock","resetCoverAnimations","checkCoverAnimations","updateUI","hasWon","toWin","hasLost","toLose","reset","initializeGameData","levelComplete","nextLevel","setLevel","nextLevelData","playerOnExit","playerIsOnExit","enemiesDefeated","activateExitTiles","players","getPlayers","spawnPosition","banditStats","getBanditStats","entityClass","chance","Item","createAmmoStack","banditLevels","Game","entityMap","entityDictionary","mapInitialized","tileMap","cameraWidth","cameraHeight","getSelectedCharacter","spriteMode","Flume","MAP_WIDTH","MAP_HEIGHT","placed","randomlyPlaceActorOnMap","ac","digger","Arena","freeCells","create","hasImpassableEntity","fullMap","referencePosition","renderWidth","renderHeight","fullWidth","fullHeight","renderPaddingX","renderPaddingY","parts","finalX","finalY","callback","getRenderMap","getPlayerPosition","tileRenderer","nextFrame","animateTile","renderedEntities","animateEntity","processTileMap","createTile","updateTile","getRenderer","getEntityRenderer","getTileRenderer","isPlaced","placeActorsOnMap","presserRef","show","focus","selectedCharacter","initializeMode","initializeUI","handleKeyPress","event","code","setAsNextAction","Instructions","infoHeader","props","className","onClick","location","reload","toggleSpriteMode","data-target","React","Component","Button","Tooltip","title","ResourceBlock","superScript","style","borderColor","ActionBar","entries","reqs","refocus","req","numBlocks","Portrait","StatusEffect","StatusEffects","getStatusEffectsByActorId","NamePlate","ProgressBar","colorFilled","colorEmpty","attributePathMax","attributePath","valueMax","valueCurrent","blip","CharacterCard","PlayerInformation","InfoBlocks","EquipItemFromContainer","itemInSlot","getItemInSlot","addToContainer","unequip","equip","StatBlock","stat","getIcon","EquipmentCard","equipped","needsReload","equipable","stats","meleeDamage","Equipment","HelpContent","Help","useLayoutEffect","elems","querySelectorAll","M","Modal","init","href","Level","ENGINE","selectedMode","class","state","activeTab","createRef","setActiveScreen","newGameState","setState","ref","onKeyDown","tabIndex","Title","margin","Lose","Win","CharacterSelect","characters","setSelectedCharacter","ModeSelect","modes","top","setSelectedMode","backgroundImage","backgroundRepeat","backgroundPosition","backgroundPositionY","GoToPreviousKeymap","goToPreviousKeymap","PrepareDirectionalThrow","passThroughEnergyCost","passThroughRequiredResources","projectileType","cursor_positions","none","endPosition","dir","circlePositions","activateCursor","deactivateCursor","Escape","w","s","setKeymap","MoveRangedAttackCursor","availablePositions","initiatedFrom","isInRange","moveCursorToPosition","Reload","MultiTargetRangedAttack","targetPositions","weapons","particlePath","particlePos","rangedAttack","attackSuccess","PrepareRangedAttack","pathAnimations","pathPos","updateCursoNode","equippedWeapon","rangeAnims","deactivateAnimations","anims","positionsInRange","targetIndex","validTargets","newTarget","getPositionsInShape","updateCursors","q","f","OpenInventory","visibleInventory","UpgradeResource","OpenUpgrades","PickupAllItems","AddStatusEffect","addStatusEffect","MeleeDamage","buffValue","lancer","Lancer","increaseDurability","newX","newY","u","g","grenades","snub","Snub","Tackle","stepCount","PrepareTackle","primary","RetroLancer","secondary","Gnasher","Longshot","Boltok","Characters","The_Scout","The_Veteran","The_Stranded","Nystrum","characterKey","selected","join","Modes","activeScreen","characterScreen","Screen","titleScreen","loseScreen","winScreen","levelScreen","getActiveScreen","transitionName","transitionAppear","transitionEnter","transitionLeave","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","App","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0074ffbf.chunk.js","sourcesContent":["export const SCREENS = {\n  TITLE: 'Title',\n  LEVEL: 'Level',\n  LOSE: 'Lose',\n  WIN: 'Win',\n  CHARACTER_SELECT: 'CharacterSelect',\n  MODE_SELECT: 'ModeSelect',\n}","import * as ROT from 'rot-js';\n\nexport const delay = (timeDelayed = 100) => {\n  // return;\n  if (timeDelayed <= 0) return;\n  return new Promise(resolve => setTimeout(resolve, timeDelayed));\n}\n\nexport const clamp = (value, min, max) => {\n  return Math.min(Math.max(value, min), max);\n};\n\nexport const getRandomInArray = (array) => {\n  return array[Math.floor(Math.random() * array.length)];\n}\n\nexport const getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nexport const getRandomIntInclusive = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport const coordsAreEqual = (pos_one, pos_two) => pos_one.x === pos_two.x && pos_one.y === pos_two.y\n\nexport const coordsToString = (coords) => `${coords.x},${coords.y}`\n\nconst isPassableDefault = (game) => (x, y) => {\n  const tile = game.map[x + \",\" + y];\n  if (tile) {\n    return (game.tileKey[tile.type].passable);\n  } else {\n    return false\n  }\n}\n\nexport const calculatePath = (game, targetPos, currentPos, topology = 4, isPassable = isPassableDefault) => {\n  let map = game.map\n  let isPassableCallback = isPassable(game);\n  let astar = new ROT.Path.AStar(targetPos.x, targetPos.y, isPassableCallback, { topology });\n  let path = [];\n  astar.compute(currentPos.x, currentPos.y, function (x, y) {\n    path.push({ x, y })\n  });\n\n  return path.slice(1);\n}\n\nconst diagonal_distance = (p0, p1) => {\n  let dx = p1.x - p0.x, dy = p1.y - p0.y;\n  return Math.max(Math.abs(dx), Math.abs(dy));\n}\n\nconst round_point = (p) => {\n  return {x: Math.round(p.x), y: Math.round(p.y)};\n}\n\nconst lerp_point = (p0, p1, t) => {\n  return {\n    x: lerp(p0.x, p1.x, t),\n    y: lerp(p0.y, p1.y, t)\n  };\n}\n\nconst lerp = (start, end, t) => {\n  return start + t * (end - start);\n}\n\nexport const calculateStraightPath = (p0, p1) => {\n  let points = [];\n  let N = diagonal_distance(p0, p1);\n  for (let step = 0; step < N; step++) {\n    let t = N === 0 ? 0.0 : step / N;\n    points.push(round_point(lerp_point(p0, p1, t)));\n  }\n  return points;\n}\n\nexport const getPositionInDirection = (pos, direction) => {\n  return {x: pos.x + direction[0], y: pos.y + direction[1]}\n}\n\nexport const calculatePathWithRange = (game, targetPos, currentPos, topology, range) => {\n  let path = calculatePath(game, targetPos, currentPos, topology);\n  return path.slice(0, range + 1);\n}\n\nexport const getRandomPos = (map) => {\n  let keys = Object.keys(map);\n  let key = getRandomInArray(keys).split(',');\n  let pos = { x: parseInt(key[0]), y: parseInt(key[1])}\n  return {coordinates: pos, text: key}\n}\n\nexport const getDestructableEntities = (entites) => {\n  return entites.filter((entity) => entity.hasOwnProperty('durability'));\n}\n\nexport const filterEntitiesByType = (entites, type) => {\n  return entites.filter((entity) => entity.entityTypes.includes(type));\n}\n\nconst getGranularity = (radius) => {\n  let result = (2 / 3) * (Math.pow(radius, 3) - (9 * Math.pow(radius, 2)) + (32 * radius) - 18)\n  return result\n}\n\nexport const getNeighboringTiles = (map, pos) => {\n  const neigborPositions = [\n    { x: 0, y: 1},\n    { x: 1, y: 1},\n    { x: 1, y: 0},\n    { x: 1, y: -1},\n    { x: 0, y: -1},\n    { x: -1, y: -1},\n    { x: -1, y: 0},\n    { x: -1, y: 1},\n  ];\n\n  return neigborPositions.map((point) => {\n    const newPos = { x: pos.x + point.x, y: pos.y + point.y};\n    let newTile = map[coordsToString(newPos)];\n    if (newTile) {\n      return newTile\n    }\n  }).filter((item) => Boolean(item));\n}\n\nexport const getPointsOnCircumference = (centerX = 0, centerY = 0, r = 3) => {\n  const n = getGranularity(r);\n  let list = [];\n  for (let i = 0; i < n; i++) {\n    let x = Math.round(centerX + (Math.cos(2 * Math.PI / n * i) * r))\n    let y = Math.round(centerY + (Math.sin(2 * Math.PI / n * i) * r))\n    list.push({ x, y });\n  }\n  return list\n}\n\nexport const getPointsWithinRadius = (position, radius) => {\n  let positions = [];\n  for (let x = position.x - radius; x < position.x + radius; x++) {\n    let yspan = Math.round(radius * Math.sin(Math.acos((position.x - x) / radius)));\n    for (let y = position.y - yspan; y < position.y + yspan; y++) {\n      positions.push({x, y})\n    }\n  }\n  return positions;\n}\n\nexport const getPositionsFromStructure = (structure, initialPosition) => {\n  return structure.positions.map((slot) => {\n    let position = {\n      x: initialPosition.x + slot.x + structure.x_offset,\n      y: initialPosition.y + slot.y + structure.y_offset\n    }\n    return position\n  })\n}\n","import uuid from 'uuid/v1';\nexport class Entity {\n  constructor({ game = null, passable = false, name = 'nameless' }) {\n    let id = uuid();\n    this.entityTypes = ['Entity'];\n    this.id = id;\n    this.name = name;\n    this.game = game;\n    this.passable = passable;\n    this.active = true;\n  }\n}\n","import * as Helper from '../helper'\n\nexport const ENERGY_THRESHOLD = 100;\n\nexport const COLORS = {\n  black_1: '#424242',\n  gray_1: '#262d37',\n  gray_2: '#606b79',\n  gray_4: '#B7C3CD',\n  gray_5: '#CED5DD',\n  green_1: '#1d533c',\n  green_2: '#227743',\n  green_3: '#2d9c59',\n  red_4: '#D82D33',\n  red_5: '#E16264',\n  purple_3: '#c45ffd',\n}\n\nexport const THEMES = {\n  NARUTO: {\n    gaara: '#603030',\n    rock_lee: '#155859',\n  },\n  SOLARIZED: {\n    base03: '#002b36',\n    base02: '#073642',\n    base01: '#586e75',\n    base00: '#657b83',\n    base0: '#839496',\n    base1: '#93a1a1',\n    base2: '#eee8d5',\n    base3: '#fdf6e3',\n    yellow: '#b58900',\n    orange: '#cb4b16',\n    red: '#dc322f',\n    magenta: '#d33682',\n    violet: '#6c71c4',\n    blue: '#268bd2',\n    cyan: '#2aa198',\n    green: '#859900',\n  },\n  JACINTO: {\n    // base1: '#07111Dff',\n    base1: '#0B0B0Bff',\n    base2: '#5A7178ff',\n    base3: '#B6ACA3ff',\n    base4: '#EDF6F1ff',\n    cog1: '#2d5fc9',\n    cog2: '#18c0f8',\n    cog3: '#86C8E4ff',\n    // locust2: '#E19D3Fff',\n    locust1: '#96641Dff',\n    locust2: '#F89339ff',\n    locust3: '#E7C898ff',\n    flesh1: '#833139ff',\n    flesh2: '#CC7468ff',\n    flesh3: '#DDA78Fff',\n    gray: '#6D7886ff',\n    red: '#C7141Cff',\n    yellow: '#b58900',\n    green: '#859900',\n  },\n}\n\nexport const NPC_NAME = 'Helpless Citizen';\nexport const PLAYER_NAME = 'Fire Fighter';\n\nexport const TILE_KEY = {\n  'GROUND': {\n    background: THEMES.SOLARIZED.base03,\n    foreground: THEMES.SOLARIZED.base01,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'FLOOR': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base0,\n    character: '',\n    passable: true,\n  },\n  'SAFE_FLOOR': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base0,\n    character: '',\n    passable: true,\n  },\n  'BURNT': {\n    background: THEMES.SOLARIZED.base03,\n    foreground: THEMES.SOLARIZED.red,\n    character: 'X',\n    sprite: '',\n    passable: true,\n    animation: [\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'X', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'x', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'X', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.orange, character: 'x', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.orange, character: 'X', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.yellow, character: 'x', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'X', sprite: '', passable: true, },\n    ]\n  },\n  'WET': {\n    background: THEMES.SOLARIZED.base03,\n    foreground: THEMES.SOLARIZED.blue,\n    character: '=',\n    sprite: '',\n    passable: true,\n    animation: [\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '=', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '~', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '=', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.base0, character: '~', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.base1, character: '=', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.base1, character: '~', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '=', sprite: '', passable: true, },\n    ]\n  },\n  'WALL': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base2,\n    character: '#',\n    sprite: '',\n    passable: false,\n  },\n  'DOOR': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base0,\n    character: '+',\n    sprite: '',\n    passable: true,\n  },\n  'SAFE': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.green,\n    character: '+',\n    sprite: '',\n    passable: true,\n  },\n\n  'WATER': {\n    animation: [\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#8aa', character: '▒', passable: false, },\n      { background: '#424242', foreground: '#8aa', character: '▓', passable: false, },\n    ],\n    background: '#9dc3d3',\n    character: '░',\n    passable: false,\n  },\n}\n\nexport const HAND_SIGNS = {\n  Power: {\n    type: 'Power',\n    name: 'Rin',\n    description: 'Strength of mind, body, spirit',\n  },\n  Energy: {\n    type: 'Energy',\n    name: 'Pyo',\n    description: 'energy direction',\n  },\n  Harmony: {\n    type: 'Harmony',\n    name: 'To',\n    description: 'one- ness with the universe or self',\n  },\n  Healing: {\n    type: 'Healing',\n    name: 'Sha',\n    description: 'of self and others',\n  },\n  Intuition: {\n    type: 'Intuition',\n    name: 'Kai',\n    description: 'premonition of danger, feeling others intent',\n  },\n  Awareness: {\n    type: 'Awareness',\n    name: 'Jin',\n    description: 'feeling thoughts of others, perhaps hiding your own',\n  },\n  Dimension: {\n    type: 'Dimension',\n    name: 'Retsu',\n    description: 'control of time and space',\n  },\n  Creation: {\n    type: 'Creation',\n    name: 'Zai',\n    description: 'understanding nature',\n  },\n  Absolute: {\n    type: 'Absolute',\n    name: 'Zen',\n    description: 'enlightenment',\n  }, \n}\n\nexport const DIRECTIONS = {\n  N: [0, -1],\n  NE: [1, -1],\n  W: [-1, 0],\n  NW: [-1, -1],\n  SW: [-1, 1],\n  S: [0, 1],\n  SE: [1, 1],\n  E: [1, 0],\n  NONE: [0, 0],\n}\n\nexport const getDirectionKey = (direction) => {\n  let directionString = `${direction}`;\n  let keys = Object.keys(DIRECTIONS);\n  let result = false\n  keys.forEach((key) => {\n    if (`${DIRECTIONS[key]}` === directionString) {\n      result = key\n    }\n  })\n  return result\n}\n\nexport const EQUIPMENT_TYPES = {\n  HEAD: 'HEAD',\n  TORSO: 'TORSO',\n  BACK: 'BACK',\n  HAND: 'HAND',\n  FEET: 'FEET',\n  GENERIC: 'GENERIC',\n}\n\nexport const EQUIPMENT_LAYOUTS = {\n  human: () => {\n    return [\n      {type: EQUIPMENT_TYPES.HEAD, name: 'head', item: null},\n      {type: EQUIPMENT_TYPES.TORSO, name: 'torso', item: null},\n      {type: EQUIPMENT_TYPES.BACK, name: 'back', item: null},\n      {type: EQUIPMENT_TYPES.HAND, name: 'left_hand', item: null},\n      {type: EQUIPMENT_TYPES.HAND, name: 'right_hand', item: null},\n      {type: EQUIPMENT_TYPES.FEET, name: 'feet', item: null},\n    ]\n  },\n  limited: () => {\n    return [\n      {type: EQUIPMENT_TYPES.GENERIC, name: 'slot_1', item: null},\n      {type: EQUIPMENT_TYPES.GENERIC, name: 'slot_2', item: null},\n    ]\n  },\n  gear: () => {\n    return [\n      { type: EQUIPMENT_TYPES.HAND, name: 'weapon', item: null },\n      // { type: EQUIPMENT_TYPES.TORSO, name: 'ammo', item: null },\n    ]\n  }\n}\n\nexport const CLONE_PATTERNS = {\n  point: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n    ]\n  },\n  triple_point: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 0, taken: false, },\n    ]\n  },\n  spread: {\n    x_offset: 1,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 1, y: 2, taken: false, },\n      { x: 1, y: -2, taken: false, },\n    ]\n  },\n  verticalLine: {\n    x_offset: 1,\n    y_offset: 1,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n    ]\n  },\n  smallSquare: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n    ]\n  },\n  square: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 1, y: -1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: -1, y: -1, taken: false, },\n      { x: -1, y: 0, taken: false, },\n      { x: -1, y: 1, taken: false, },\n    ]\n  },\n  bigSquare: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 1, y: -1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: -1, y: -1, taken: false, },\n      { x: -1, y: 0, taken: false, },\n      { x: -1, y: 1, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 2, y: 2, taken: false, },\n      { x: 2, y: 0, taken: false, },\n      { x: 2, y: -2, taken: false, },\n      { x: 0, y: -2, taken: false, },\n      { x: -2, y: -2, taken: false, },\n      { x: -2, y: 0, taken: false, },\n      { x: -2, y: 2, taken: false, },\n    ],\n  },\n  circle: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      ...Helper.getPointsOnCircumference(0, 0, 2),\n      ...Helper.getPointsOnCircumference(0, 0, 3)\n    ]\n  },\n}\n\nexport const PARTICLE_TEMPLATES = {\n  default: {\n    renderer: {\n      character: '*',\n      color: 'black',\n      background: 'white',\n    }\n  },\n  fail: {\n    renderer: {\n      character: 'x',\n      color: 'black',\n      background: 'red',\n    }\n  },\n  succede: {\n    renderer: {\n      character: 'x',\n      color: THEMES.SOLARIZED.base3,\n      background: THEMES.SOLARIZED.green,\n    }\n  },\n  damage: {\n    renderer: {\n      character: '*',\n      color: 'darkred',\n      background: 'red',\n    }\n  },\n  leaf: {\n    renderer: {\n      character: '✤',\n      color: '#36635b',\n      background: '#F0D8C0',\n    }\n  },\n  water: {\n    renderer: {\n      character: '~',\n      color: THEMES.SOLARIZED.base3,\n      background: THEMES.SOLARIZED.blue,\n    }\n  },\n}\n\nexport const PARTICLE_TYPE = {\n  directional: 0,\n  path: 1,\n}\n\nexport const ALPHABET = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];","export class ActionResource {\n  constructor({\n    name = 'Resource',\n    getResourceCost = () => null,\n    actorResourcePath = null,\n    actorResourceGetter = null,\n    actorResourceSetter = null,\n    renderer = {background: 'transparent', color: 'black', character: '*'}\n  }) {\n    this.name = name;\n    this.getResourceCost = getResourceCost;\n    this.actorResourcePath = actorResourcePath;\n    this.actorResourceGetter = actorResourceGetter;\n    this.actorResourceSetter = actorResourceSetter;\n    this.renderer = renderer;\n  }\n}\n","import {ActionResource} from './ActionResource';\n\nexport class EnergyResource extends ActionResource {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.name = 'Energy';\n    this.actorResourcePath = 'energy';\n    this.renderer = { color: 'black', background: '#ff9926', character: '8', sprite: '' }\n  }\n}","import * as _ from 'lodash';\nimport { Particle } from '../Entities/index';\nimport * as Constant from '../constants';\nimport {EnergyResource} from './ActionResources/EnergyResource';\n\nexport class Base {\n  constructor({ \n    game,\n    actor,\n    label = 'action label',\n    hidden = false,\n    energyCost = Constant.ENERGY_THRESHOLD, \n    processDelay = 50, \n    particles = [], \n    renderer = null, \n    particleTemplate = Constant.PARTICLE_TEMPLATES.default, \n    onBefore = () => null, \n    onAfter = () => null, \n    onSuccess = () => null, \n    onFailure = () => null, \n    interrupt = false, \n    requiredResources = [],\n  }) {\n    this.actor = actor;\n    this.game = game;\n    this.label = label;\n    this.hidden = hidden;\n    this.energyCost = energyCost;\n    this.processDelay = processDelay;\n    this.particles = particles;\n    this.renderer = renderer;\n    this.particleTemplate = particleTemplate;\n    this.onBefore = onBefore;\n    this.onAfter = onAfter;\n    this.onSuccess = onSuccess;\n    this.onFailure = onFailure;\n    this.interrupt = interrupt;\n    this.requiredResources = [new EnergyResource({ getResourceCost: () => this.energyCost }), ...requiredResources];\n  }\n\n  addParticle(\n    life, \n    pos, \n    direction, \n    renderer = { ...this.particleTemplate.renderer }, \n    type = Constant.PARTICLE_TYPE.directional, \n    path = null\n  ) {\n    let particle = new Particle({\n      game: this.game,\n      name: 'particle',\n      passable: true,\n      life,\n      pos,\n      direction,\n      energy: 100,\n      renderer,\n      type,\n      path,\n    });\n    this.particles.push(particle);\n  }\n\n  removeDeadParticles() {\n    this.particles = this.particles.filter((particle) => particle.life > 0);\n  }\n\n  setAsNextAction() {\n    this.actor.setNextAction(this);\n  }\n\n  getEnergyCost() {\n    return _.find(this.requiredResources, {name: 'Energy'}).getResourceCost();\n  }\n\n  getRequiredResourceName() {\n    return _.map(this.requiredResources, 'name');\n  }\n\n  listPayableResources() {\n    return _.map(this.requiredResources, (resource) => {\n      const getResourceCost = resource.getResourceCost; \n      const actorResourcePath = resource.actorResourcePath; \n      const actorResourceGetter = resource.actorResourceGetter;\n\n      const actorVariable = _.get(this.actor, actorResourcePath, null);\n      \n      let canPay = false;\n      // if the actor has provided a setter for this variable, use that \n      if (_.get(this.actor, actorResourceGetter, null) !== null) {\n        canPay = this.actor[actorResourceGetter]() >= getResourceCost();\n      } else if (actorVariable !== null) {\n        // else if the actor has a path to the appropriate variable, get that value and set it manually\n        canPay = actorVariable >= getResourceCost();\n      }\n\n      return {\n        canPay,\n        ...resource\n      }\n    })\n  }\n\n  canPayRequiredResources() {\n    return !_.find(this.listPayableResources(), {'canPay': false});\n  }\n\n  payRequiredResources() {\n    _.each(this.requiredResources, (resource) => {\n      const getResourceCost = resource.getResourceCost;\n      const actorResourcePath = resource.actorResourcePath;\n      const actorResourceSetter = resource.actorResourceSetter;\n      \n      const actorVariable = _.get(this.actor, actorResourcePath, null);\n      const resourceCost = getResourceCost();\n      // if the actor has provided a setter for this variable, use that \n      if (_.get(this.actor, actorResourceSetter, null)) {\n        this.actor[actorResourceSetter](actorVariable - resourceCost)\n        return true;\n      }\n\n      // else if the actor has a path to the appropriate variable, get that value and set it manually\n      if (actorVariable) {\n        this.actor[actorResourcePath] -= resourceCost;\n        return true;\n        // return _.set(this.actor, actorResourcePath, actorVariable - getResourceCost());\n      }\n      return false;\n    })\n  }\n  \n  perform() {\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n\n}","import { Base } from './Base';\nexport class DestroySelf extends Base {\n  constructor({ processDelay = 0, ...args }) {\n    super({ ...args });\n    this.processDelay = processDelay;\n  }\n  perform() {\n    // console.log(`${this.actor.name} is self-destructing`);\n    this.actor.energy -= this.energyCost;\n    this.actor.destroy();\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { DestroySelf } from './DestroySelf';\nimport * as Constant from '../constants';\n\nexport class EngineCrank extends Base {\n  constructor({ engine, ...args }) {\n    super({ ...args });\n    this.engine = engine;\n  }\n  async perform() {\n    let success = true;\n    let alternative = null;\n    console.log(`${this.actor.name} is cranking its engine.`);\n    try {\n      await this.engine.start();\n      this.actor.energy -= this.energyCost;\n    }\n    catch (error) {\n      console.log('EngineCrank');\n      console.log(error);\n      alternative = new DestroySelf({\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { CrankEngine } from '../Engine/engine';\nimport { EngineCrank } from '../Actions/EngineCrank';\n\nexport const Parent = superclass => class extends superclass {\n  constructor({ children = [], engine = new CrankEngine({}), ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('PARENT');\n    this.children = children;\n    this.engine = engine;\n    this.isInitialized = false;\n  }\n  destroyChild(child) {\n    child.energy = 0;\n    let tile = this.game.map[Helper.coordsToString(child.pos)];\n    this.game.map[Helper.coordsToString(child.pos)].entities = tile.entities.filter((e) => e.id !== child.id);\n    this.engine.actors = this.engine.actors.filter((e) => e.id !== child.id);\n    this.game.draw();\n  }\n  canAttack(entity) {\n    const childIds = this.children.map((child) => child.id);\n    return !childIds.includes(entity.id);\n  }\n  initialize() {\n    this.isInitialized = true;\n    this.engine.game = this.game;\n    this.engine.actors = this.children;\n    this.engine.actors.forEach((actor) => {\n      actor.game = this.game;\n      actor.destroy = () => { this.destroyChild(actor); };\n      actor.canAttack = this.canAttack.bind(this);\n      // actor.canAttack = (entity) => {this.canAttack(entity)};\n      this.game.placeActorOnMap(actor);\n      this.engine.addActor(actor);\n      this.game.draw();\n    });\n  }\n  getAction(game) {\n    // crank engine one turn\n    if (!this.isInitialized) {\n      this.initialize();\n    }\n    let result = new EngineCrank({\n      game,\n      actor: this,\n      engine: this.engine,\n      energyCost: Constant.ENERGY_THRESHOLD,\n      processDelay: 10\n    });\n    return result;\n  }\n};\n","import Konva from 'konva';\nimport uuid from 'uuid/v1';\nimport * as Helper from '../../helper';\n\nexport const ANIMATION_TYPES = {\n  DEFAULT: 0,\n  BLINK_TILE: 1,\n  SOLID_TILE: 2,\n  BLINK_BOX: 3,\n}\n\nclass Animation {\n  constructor({display}) {\n    const id = uuid();\n    this.id = id;\n    this.lifeTime = 0;\n    this.active = true;\n    this.display = display;\n    this.node = null;\n  }\n\n  getActive () {\n    return false;\n  }\n\n  initialize () {\n    return;\n  }\n\n  update (frame) {\n    this.lifeTime += frame.timeDiff;\n    this.active = this.getActive();\n    if (!this.active) {\n      this.display.removeAnimation(this.id);\n    }\n  }\n}\n\nclass ExampleAnimation extends Animation {\n  constructor({...args}) {\n    super({...args})\n  }\n\n  getActive () {\n    if (this.lifeTime > 500) {\n      return false;\n    }\n    return true;\n  }\n}\n\nclass BlinkTile extends Animation {\n  constructor({\n    x,\n    y,\n    lerpDirection = -1,\n    color = '#fff',\n    rectAttributes = {},\n    ...args\n  }) {\n    super({ ...args });\n    this.x = x;\n    this.y = y;\n    this.lerpDirection = lerpDirection;\n    this.color = color;\n    this.rectAttributes = rectAttributes\n  }\n\n  getActive () {\n    return this.active;\n  }\n\n  initialize () {\n    this.active = true;\n    const attrs = {\n      name: 'rect',\n      x: (this.display.tileWidth * this.x) + (this.display.tileOffset + this.display.tileGutter),\n      y: (this.display.tileHeight * this.y) + (this.display.tileOffset + this.display.tileGutter),\n      offsetX: this.display.tileWidth / -4,\n      offsetY: this.display.tileHeight / -4,\n      width: this.display.tileWidth / 2,\n      height: this.display.tileHeight / 2,\n      fill: this.color,\n      // strokeEnabled: false,\n      // for optimization\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n      ...this.rectAttributes,\n    };\n    let rect = new Konva.Rect(attrs);\n    this.display.animationLayer.add(rect);\n    this.node = rect;\n    super.initialize();\n  }\n\n  update (frame) {\n    let opacity = this.node.opacity();\n    if (opacity >= 1) this.lerpDirection = -1;\n    if (opacity <= 0) this.lerpDirection = 1;\n    opacity += (0.030 * this.lerpDirection)\n    this.node.opacity(Helper.clamp(opacity, 0, 1))\n    super.update(frame);\n  }\n  \n}\n\nexport class BlinkBox extends BlinkTile {\n  constructor({...args}) {\n    super({ ...args });\n    this.rectAttributes = {\n      fill: 'transparent',\n      stroke: args.color,\n      strokeWidth: 5,\n      offsetX: 0,\n      offsetY: 0,\n      width: this.display.tileWidth,\n      height: this.display.tileHeight,\n    }\n  }\n}\n\nexport class Display {\n  constructor({\n    containerId = null,\n    width = 100,\n    height = 100,\n    tileWidth = 10,\n    tileHeight = 10,\n    tileGutter = 0,\n    tileOffset = 10,\n    game = null,\n  }) {\n    this.containerId = containerId;\n    this.width = width;\n    this.height = height;\n    this.tileWidth = tileWidth;\n    this.tileHeight = tileHeight;\n    this.tileGutter = tileGutter;\n    this.tileOffset = tileOffset;\n    this.stage = null;\n    this.layer = null;\n    this.animationLayer = null;\n    this.animations = [];\n    this.animationLoop = null;\n    this.game = game;\n    this.animationTypes = ANIMATION_TYPES;\n  }\n\n  initialize (document) {\n    let d = document.getElementById(this.containerId)\n    let displayContainer = document.createElement('div');\n    d.appendChild(displayContainer);\n\n    // this.adjustContentToScreen(d);\n    \n    this.stage = new Konva.Stage({\n      container: 'display',   // id of container <div>\n      width: this.width,\n      height: this.height\n    });\n\n    \n    // setting up main tile map layer\n    this.layer = new Konva.Layer({\n      hitGraphEnabled: false,\n    });\n    \n    this.stage.add(this.layer);\n    \n    // setting up animation layer\n    this.animationLayer = new Konva.Layer({});\n    this.stage.add(this.animationLayer);\n    let animationLoop = new Konva.Animation((frame) => {\n      this.animations.forEach((animation) => animation.update(frame))\n      // Stop animation updates if no animations to process\n      if (this.animations.length <= 0) {\n        if (this.animationLoop) {\n          if (this.animationLoop.isRunning()) {\n            this.animationLoop.stop();\n          }\n        }\n      }\n    }, this.animationLayer);\n    this.animationLoop = animationLoop;\n    animationLoop.start();\n  }\n\n  adjustContentToScreen (display_element) {\n    const DEVICE_WIDTH = display_element.offsetWidth;\n    const value = (DEVICE_WIDTH - this.tileOffset) / this.game.mapWidth;\n    this.tileWidth = Math.floor(value);\n    this.tileHeight = this.tileWidth;\n    this.width = ((this.game.mapWidth - 1) * this.tileWidth) + this.tileOffset;\n    this.height = (this.game.mapHeight * this.tileHeight) + this.tileOffset;\n  }\n\n  addAnimation (type, args) {\n    let animation;\n    switch (type) {\n      case ANIMATION_TYPES.SOLID_TILE:\n        animation = new ExampleAnimation({display: this, ...args})\n        break;\n      case ANIMATION_TYPES.BLINK_TILE:\n        animation = new BlinkTile({display: this, ...args})\n        break;\n      case ANIMATION_TYPES.BLINK_BOX:\n        animation = new BlinkBox({display: this, ...args})\n        break;\n      case ANIMATION_TYPES.DEFAULT:\n      default:\n        animation = new Animation({ display: this, ...args})\n        break;\n    }\n    animation.initialize();\n    this.animations.push(animation)\n    if (!this.animationLoop.isRunning()) this.animationLoop.start();\n    return animation\n  }\n\n  removeAnimation (id) {\n    this.animations = this.animations.filter((anim) => {\n      if (anim.id !== id) return true;\n      // if anim is being removed, remove associated nodes and shapes too\n      anim.node.destroy();\n      return false;\n    });\n  }\n\n  updateAnimation (id) {\n    this.animations = this.animations.map((anim) => {\n      if (anim.id === id) {\n        console.log(anim);\n      }\n      return anim;\n    });\n  }\n\n  updateTile(tile, character, foreground, background) {\n    // child[0] is the rectangle\n    // child[1] is the text\n    if (tile) {\n      tile.children[0].fill(background);\n      tile.children[1].fill(foreground);\n      tile.children[1].text(character);\n    }\n  }\n\n  createTile(x, y, character, foreground, background, layer = 'layer') {\n    const actual_x = (this.tileWidth * x) + (this.tileOffset + this.tileGutter);\n    const actual_y = (this.tileHeight * y) + (this.tileOffset + this.tileGutter);\n    let node = new Konva.Group({\n      id: `${x},${y}`,\n      x: (this.tileWidth * x) + (this.tileOffset + this.tileGutter),\n      y: (this.tileHeight * y) + (this.tileOffset + this.tileGutter),\n      width: this.tileWidth,\n      height: this.tileHeight,\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n    });\n\n    let rect = new Konva.Rect({\n      name: 'rect',\n      width: this.tileWidth,\n      height: this.tileHeight,\n      fill: background,\n      strokeEnabled: false,\n      // for optimization\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n    });\n\n    let text = new Konva.Text({\n      name: 'text',\n      text: character,\n      width: this.tileWidth,\n      height: this.tileHeight,\n      fontSize: this.tileWidth - 2,\n      fontFamily: 'scroll-o-script',\n      fill: foreground,\n      align: 'center',\n      verticalAlign: 'middle',\n      // for optimization\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n    });\n\n    node.add(rect);\n    node.add(text);\n    this.layer.add(node);\n    return node;\n  }\n\n  getAbsoultueX(x) {\n    return (this.tileWidth * x) + (this.tileOffset + this.tileGutter)\n  }\n\n  getAbsoultueY(y) {\n    return (this.tileWidth * y) + (this.tileOffset + this.tileGutter)\n  }\n\n  getTilesWide (width, tileOffset, tileWidth) {\n    return Math.floor((width - tileOffset) / tileWidth)\n  }\n  \n  getTilesHigh(height, tileOffset, tileHeight) {\n    return Math.floor((height - tileOffset) / tileHeight)\n  }\n\n  getTilesAcrossOnScreen () { return Math.floor(this.width / this.tileWidth)}\n  getTilesDownOnScreen () { return Math.floor(this.height / this.tileHeight)}\n\n  draw () {\n    this.layer.batchDraw();\n  }\n}","import { COLORS, THEMES } from './constants';\nimport uuid from 'uuid/v1';\n\nexport const MESSAGE_TYPE = {\n  INFORMATION: {\n    color: COLORS.gray_4,\n    backgroundColor: COLORS.black_1,\n  },\n  ACTION: {\n    color: COLORS.gray_2,\n    backgroundColor: COLORS.gray_5,\n  },\n  DANGER: {\n    color: COLORS.red_5,\n    backgroundColor: COLORS.black_1,\n  },\n  STATUS_EFFECT: {\n    color: THEMES.SOLARIZED.base3,\n    backgroundColor: THEMES.SOLARIZED.violet,\n  },\n  ERROR: {\n    color: THEMES.SOLARIZED.base3,\n    backgroundColor: THEMES.SOLARIZED.yellow,\n  },\n}\n\nexport class Message {\n  constructor({ text = '', type = MESSAGE_TYPE.INFORMATION }) {\n    let id = uuid();\n    this.id = id;\n    this.text = text;\n    this.type = type;\n  }\n}","import { MESSAGE_TYPE } from '../message';\nimport * as Helper from '../../helper';\n\nexport const Attacking = superclass => class extends superclass {\n  constructor({ attackDamage = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('ATTACKING');\n    this.attackDamage = attackDamage;\n  }\n  getAttackDamage(additional = 0) {\n\n    return this.attackDamage + additional;\n  }\n  canAttack(entity) {\n    return true;\n  }\n  attack(targetPos, additional = 0) {\n    let success = false;\n    let tile = this.game.map[Helper.coordsToString(targetPos)];\n    if (!tile) {\n      return success;\n    }\n    let targets = Helper.getDestructableEntities(tile.entities);\n    if (targets.length > 0) {\n      let target = targets[0];\n      if (this.canAttack(target)) {\n        let damage = this.getAttackDamage(additional);\n        if (this.entityTypes.includes('EQUIPING')) {\n          this.equipment.forEach((slot) => {\n            if (slot.item) {\n              if (slot.item.entityTypes.includes('ATTACKING')) {\n                damage += slot.item.getAttackDamage();\n              }\n            }\n          });\n        }\n        this.game.addMessage(`${this.name} does ${damage} to ${target.name}`, MESSAGE_TYPE.DANGER);\n        target.decreaseDurability(damage);\n        success = true;\n      }\n    }\n    return success;\n  }\n};\n","import * as _ from 'lodash';\nimport * as Helper from '../../helper';\n\nexport const addTileZone = (tileKey, origin = { x: 0, y: 0 }, height = 3, width = 3, type = 'GROUND', map, mapHeight, mapWidth) => {\n  for (let i = 0; i < mapHeight; i++) {\n    for (let j = 0; j < mapWidth; j++) {\n      if (i >= origin.y && i <= origin.y + (height - 1) && j >= origin.x && j <= origin.x + (width - 1)) {\n        const key = `${j},${i}`\n        addTileToMap({map, key, tileKey, tileType: type})\n      }\n    }\n  }\n}\n\nexport const addTileToMap = ({map, key, tileKey, tileType, entities = []}) => {\n  const numberOfAnimationFrames = _.get(tileKey[tileType], 'animation.length', 0);\n  const currentFrame = Helper.getRandomInt(0, numberOfAnimationFrames);\n  const tileData = {\n    type: tileType,\n    currentFrame,\n    entities,\n    tileKey,\n  };\n  map[key] = tileData;\n\n  return tileData;\n}\n\nexport const tileHasTag = ({tile, tag}) => {\n  const tags = _.get(tile.tileKey[tile.type], 'tags', []);\n  return tags.includes(tag);\n}\n\nexport const tileHasAnyTags = ({tile, tags}) => {\n  const tileTags = _.get(tile.tileKey[tile.type], 'tags', []);\n  return tags.some((tag) => tileTags.includes(tag))\n}\n\nexport const getTileFromMap = ({map, position}) => map[Helper.coordsToString(position)];","import { MESSAGE_TYPE } from '../message';\nimport * as Helper from '../../helper';\nimport * as MapHelper from '../Maps/helper';\n\nexport const RangedAttacking = superclass => class extends superclass {\n  constructor({ attackRange = 0, baseRangedAccuracy = 0, baseRangedDamage = 0, magazineSize = 0, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('RANGED_ATTACKING');\n    this.attackRange = attackRange;\n    this.baseRangedAccuracy = baseRangedAccuracy;\n    this.baseRangedDamage = baseRangedDamage;\n    this.magazineSize = magazineSize;\n    this.magazine = magazineSize;\n  }\n\n  getRangedAttackChance(targetPos = null) {\n    const weaponAccuracy = this.getRangedWeaponAccuracy();\n    const coverDebuff = targetPos ? this.getRangedAttackCoverDebuff(targetPos) : 0;\n    const distanceDebuff = targetPos ? this.getRangedAttackDistanceDebuff(targetPos) : 0;\n    const result = this.baseRangedAccuracy + weaponAccuracy + coverDebuff + distanceDebuff;\n    return result;\n  }\n\n  getRangedAttackCoverDebuff(targetPos) {\n    const path = Helper.calculateStraightPath(this.getPosition(), targetPos);\n    const coverAccuracyModifer = path.reduce((acc, curr) => {\n      let tile = this.game.map[Helper.coordsToString(curr)];\n      // if targeting throuh a wall, the shot is modified by -100%\n      if (MapHelper.tileHasTag({tile, tag: 'WALL'})) return acc - 1;\n      let entitiesProvidingCover = Helper.filterEntitiesByType(tile.entities, 'COVERING');\n      let coverModifer = 0;\n      // only counts the first entity cover modifer in a tile\n      if (entitiesProvidingCover.length > 0) {\n        // if covering entity is in use by this actor, ignore it's modifer\n        if (this.entityTypes.includes('USES_COVER')) {\n          if (this.getCoveredByIds().includes(entitiesProvidingCover[0].id)) {\n            return acc;\n          }\n        }\n        coverModifer = entitiesProvidingCover[0].accuracyModifer;\n      }\n      return acc + coverModifer;\n    }, 0);\n    return coverAccuracyModifer;\n  }\n\n  getRangedAttackDistanceDebuff(targetPos) {\n    const distanceToTarget = Helper.calculatePath(this.game, targetPos, this.getPosition(), 8).length;\n    return -1 * (distanceToTarget / (this.getAttackRange() * 3))\n  }\n\n  getAttackRange() {\n    let range = this.attackRange;\n    if (this.entityTypes.includes('EQUIPING')) {\n      this.equipment.forEach((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('RANGED_ATTACKING')) {\n            range += slot.item.attackRange;\n          }\n        }\n      });\n    }\n    return range;\n  }\n\n  getRangedWeaponAccuracy() {\n    let accuracy = 0;\n    if (this.entityTypes.includes('EQUIPING')) {\n      this.equipment.forEach((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('RANGED_ATTACKING')) {\n            accuracy += slot.item.getRangedAttackChance();\n          }\n        }\n      });\n    }\n    return accuracy;\n  }\n\n  getRangedAttackDamage(additional = 0) {\n\n    return this.baseRangedDamage + this.getRangedWeaponDamage() + additional;\n  }\n\n  getRangedWeaponDamage() {\n    let damage = 0;\n    if (this.entityTypes.includes('EQUIPING')) {\n      this.equipment.forEach((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('RANGED_ATTACKING')) {\n            damage += slot.item.getRangedAttackDamage();\n          }\n        }\n      });\n    }\n    return damage;\n  }\n\n  canRangedAttack(entity) {\n    return true;\n  }\n\n  getEquipedWeapons() {\n    if (this.entityTypes.includes('EQUIPING')) {\n      return this.equipment.map((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('RANGED_ATTACKING')) {\n            return slot.item;\n          }\n        }\n      });\n    }\n    return [];\n  }\n\n  useAmmo() {\n    this.getEquipedWeapons().forEach((weapon) => weapon.magazine = Math.max(0, weapon.magazine - 1));\n  }\n\n  reload () {\n    let reloaded = false;\n    if (this.entityTypes.includes('CONTAINING')) {\n      this.getEquipedWeapons().forEach((weapon) => {\n        const amount = weapon.magazineSize - weapon.magazine;\n        for (let i = 0; i < amount; i++) {\n          let ammo = this.contains('Ammo');\n          if (ammo) {\n            this.removeFromContainer(ammo);\n            weapon.magazine += 1;\n            reloaded = true;\n          }\n        }\n      });\n    }\n    return reloaded;\n  }\n\n  rangedAttack(targetPos, additionalDamage = 0, additionalAccuracy = 0) {\n    let success = false;\n    let hit = false;\n    let tile = this.game.map[Helper.coordsToString(targetPos)];\n    if (!tile) {\n      return [success, hit];\n    }\n    let targets = Helper.getDestructableEntities(tile.entities);\n    if (targets.length > 0) {\n      const attackChance = this.getRangedAttackChance(targetPos);\n      const hitChance = attackChance + additionalAccuracy;\n      hit = Math.random() < hitChance;\n      // TODO: trigger hit and miss animations\n      this.useAmmo();\n      if (!hit) {\n        success = true;\n        return [success, hit];\n      }\n      let target = targets[0];\n      if (this.canRangedAttack(target)) {\n        let damage = this.getRangedAttackDamage(additionalDamage);\n        this.game.addMessage(`${this.name} does ${damage} to ${target.name}`, MESSAGE_TYPE.DANGER);\n        target.decreaseDurability(damage);\n        success = true;\n      }\n    }\n    return [success, hit];\n  }\n};\n","import * as Constant from '../constants';\n\nexport const Equipable = superclass => class extends superclass {\n  constructor({ name = 'nameless', equipmentType = Constant.EQUIPMENT_TYPES.HAND, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('EQUIPABLE');\n    this.name = name;\n    this.equipmentType = equipmentType;\n  }\n};\n","import * as Helper from '../../helper';\n\nexport const Acting = superclass => class extends superclass {\n  constructor({ actions = [], speed = 100, energy = 0, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('ACTING');\n    this.actions = actions;\n    this.speed = speed;\n    this.energy = speed;\n  }\n  getAction() {\n    let action = Helper.getRandomInArray(this.actions);\n    if (action) {\n      return action;\n    }\n  }\n  gainEnergy(value = this.speed) {\n    this.energy += value;\n  }\n  hasEnoughEnergy() {\n    return this.energy > 0;\n  }\n};\n","import * as Helper from '../../helper';\n\nexport const Rendering = superclass => class extends superclass {\n  constructor({ pos = { x: 0, y: 0 }, renderer, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('RENDERING');\n    this.pos = pos;\n    this.renderer = { ...renderer };\n    this.currentFrame = 0;\n  }\n\n  getRenderer() {\n    return this.renderer\n  }\n\n  getPosition() {\n    return this.pos;\n  }\n  move(targetPos) {\n    let success = false;\n    if (this.game.canOccupyPosition(targetPos, this)) {\n      let tile = this.game.map[Helper.coordsToString(this.pos)];\n      this.game.map[Helper.coordsToString(this.pos)] = { ...tile, entities: tile.entities.filter((e) => e.id !== this.id) };\n      this.pos = targetPos;\n      this.game.map[Helper.coordsToString(targetPos)].entities.push(this);\n      success = true;\n    }\n    return success;\n  }\n  shove(targetPos, direction) {\n    let success = false;\n    let targetTile = this.game.map[Helper.coordsToString(targetPos)];\n    if (targetTile) {\n      targetTile.entities.map((entity) => {\n        if (entity.entityTypes.includes('PUSHABLE')) {\n          if (!entity.passable && entity.pushable) {\n            let newX = entity.pos.x + direction[0];\n            let newY = entity.pos.y + direction[1];\n            let newPos = { x: newX, y: newY };\n            entity.move(newPos);\n          }\n        }\n      });\n    }\n    success = this.move(targetPos);\n    return success;\n  }\n};\n","export class ContainerSlot {\n  constructor({ itemType, items }) {\n    this.itemType = itemType;\n    this.items = items;\n  }\n}\n\nexport const Containing = superclass => class extends superclass {\n  constructor({ container = [], ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CONTAINING');\n    this.container = container;\n  }\n  createSlot(item) {\n    let slot = new ContainerSlot({\n      itemType: item.name,\n      items: [item],\n    });\n    this.container.push(slot);\n  }\n  contains(itemType) {\n    let container = this.container;\n    let slots = container.filter((slot) => slot.itemType === itemType);\n    return slots.length > 0 ? slots[0].items[0] : false;\n  }\n  addToContainer(item) {\n    const index = this.container.findIndex((slot) => slot.itemType === item.name);\n    if (index >= 0) {\n      this.container[index].items.push(item);\n    }\n    else {\n      this.createSlot(item);\n    }\n  }\n  removeFromContainer(item) {\n    this.container.forEach((slot, index) => {\n      slot.items = slot.items.filter((it) => it.id !== item.id);\n      if (!slot.items.length)\n        this.container.splice(index, 1);\n    });\n  }\n};\n","import { Howl, Howler } from 'howler';\n\nexport default {\n  fire_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/fire-00.mp3'],\n    volume: 0.5,\n    loop: true,\n  }),\n  fire_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/fire-01.mp3'],\n    volume: 0.05,\n    loop: true,\n  }),\n  scream_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/scream-00.wav']\n  }),\n  scream_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/scream-01.wav']\n  }),\n  scream_2: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/scream-02.wav']\n  }),\n  water_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/water-04.wav']\n  }),\n  water_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/water-05.wav']\n  }),\n  chop_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/chop-00.wav']\n  }),\n  chop_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/chop-01.wav']\n  }),\n  equip_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/equip-00.wav']\n  }),\n  equip_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/equip-01.wav']\n  }),\n  explosion_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/explosion-00.wav'],\n    volume: 0.2,\n  }),\n  save: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/save.wav'],\n  }),\n  lose: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/lose-00.wav'],\n  }),\n  grab_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/grab-00.wav'],\n  }),\n  release_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/grab-01.wav'],\n  }),\n}","export const Playing = superclass => class extends superclass {\n  constructor({ keymap = {}, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('PLAYING');\n    this.nextAction = null;\n    this.keymap = keymap;\n  }\n  setNextAction(action) {\n    this.nextAction = action;\n  }\n  getAction() {\n    let action = this.nextAction;\n    this.nextAction = null;\n    return action;\n  }\n};\n","import * as Helper from '../../helper';\n\nexport const destroyEntity = (entity) => {\n  entity.energy = 0;\n  if (entity.pos) {\n    let tile = entity.game.map[Helper.coordsToString(entity.pos)];\n    entity.game.map[Helper.coordsToString(entity.pos)].entities = tile.entities.filter((e) => e.id !== entity.id);\n  }\n  // entity.game.engine.actors = entity.game.engine.actors.filter((e) => e.id !== entity.id);\n  entity.game.engine.removeStatusEffectByActorId(entity.id);\n  entity.game.draw()\n  entity.active = false;\n}","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nexport class Say extends Base {\n  constructor({ message, messageType = MESSAGE_TYPE.INFORMATION, processDelay = 50, ...args }) {\n    super({ ...args });\n    this.message = message;\n    this.messageType = messageType;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    this.game.addMessage(`${this.actor.name} says \"${this.message}\"`, this.messageType);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import SOUNDS from '../sounds';\nimport { Base } from './Base';\nimport { Say } from './Say';\nimport * as Helper from '../../helper';\nimport * as Constant from '../constants';\n\nexport class Attack extends Base {\n  constructor({ targetPos, additionalDamage = 0, processDelay = 100, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.additionalDamage = additionalDamage;\n    this.processDelay = processDelay;\n    this.particleTemplate = Constant.PARTICLE_TEMPLATES.damage;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (!this.actor.entityTypes.includes('ATTACKING')) {\n      return {\n        success: true,\n        alternative: new Say({\n          message: `Ooh I don\\'t know how to attack`,\n          game: this.game,\n          actor: this.actor,\n          energyCost: 0,\n        }),\n      };\n    }\n    success = this.actor.attack(this.targetPos, this.additionalDamage);\n    if (success) {\n      const sound = Helper.getRandomInArray([SOUNDS.chop_0, SOUNDS.chop_1]);\n      sound.play();\n      this.addParticle(1, { ...this.targetPos }, { x: 0, y: 0 });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { Attack } from \"./Attack\";\n\nexport class Move extends Base {\n  constructor({ targetPos, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let moveSuccess = this.actor.move(this.targetPos);\n    if (moveSuccess) {\n      success = true;\n    } else {\n      success = true;\n      alternative = new Attack({\n        targetPos: this.targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: 0\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Move } from './Move';\nimport { DestroySelf } from './DestroySelf';\nimport * as Constant from '../constants';\n\nexport class ThrowProjectile extends Move {\n  constructor({ ...args }) {\n    super({ ...args });\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    this.actor.passable = false;\n    let move_result = super.perform();\n    if (move_result.success) {\n      this.actor.path.shift();\n      success = true;\n    }\n    if (this.actor.path.length === 0) {\n      success = true;\n      alternative = new DestroySelf({\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n      });\n    }\n    if (move_result.alternative) {\n      let attackSuccess = this.actor.attack(this.targetPos);\n      if (attackSuccess) {\n        alternative = new DestroySelf({\n          game: this.game,\n          actor: this.actor,\n          energyCost: Constant.ENERGY_THRESHOLD,\n          processDelay: 0,\n        });\n      }\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n","import { Attack } from './Attack';\nexport class SelfDestructiveAttack extends Attack {\n  constructor({ damageToSelf, ...args }) {\n    super({ ...args });\n    this.damageToSelf = damageToSelf;\n    this.onSuccess = () => {\n      console.log('Self destruct success');\n      this.actor.decreaseDurabilityWithoutDefense(damageToSelf);\n    };\n    this.onFailure = () => {\n      console.log('Self destruct fails');\n      this.actor.destroy();\n    };\n  }\n}\n","import { Base } from './Base';\nimport { SelfDestructiveAttack } from \"./SelfDestructiveAttack\";\nimport * as Constant from '../constants';\n\nexport class ProjectileMove extends Base {\n  constructor({ targetPos, damageToSelf = 1, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.processDelay = processDelay;\n    this.damageToSelf = damageToSelf;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let moveSuccess = this.actor.move(this.targetPos);\n    if (moveSuccess) {\n      this.actor.energy -= this.energyCost;\n      success = true;\n    }\n    else {\n      success = true;\n      alternative = new SelfDestructiveAttack({\n        targetPos: this.targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        damageToSelf: this.damageToSelf,\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import * as Constant from '../constants';\nimport { ProjectileMove } from '../Actions/ProjectileMove';\nimport { DestroySelf } from '../Actions/DestroySelf';\n\nexport const DirectionalProjecting = superclass => class extends superclass {\n  constructor({ path = false, direction = { x: 0, y: 0 }, attackDamage = 1, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DIRECTIONAL_PROJECTING');\n    this.path = path;\n    this.direction = direction;\n    this.attackDamage = attackDamage;\n    this.range = range;\n  }\n  createPath(game) {\n    let path = [];\n    for (let i = 1; i < this.range + 1; i++) {\n      path.push({\n        x: this.pos.x + (this.direction[0] * i),\n        y: this.pos.y + (this.direction[1] * i)\n      });\n    }\n    this.path = path;\n  }\n  getAction(game) {\n    let result = null;\n    let newX = this.pos.x + this.direction[0];\n    let newY = this.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n    this.passable = false;\n    if (this.range > 0) {\n      result = new ProjectileMove({\n        targetPos: targetPos,\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        damageToSelf: 1,\n        onSuccess: () => this.range -= 1,\n        onAfter: () => {\n          if (this.energy <= 100) {\n            game.engine.setActorToPrevious();\n          }\n        }\n      });\n    }\n    else {\n      result = new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: 0\n      });\n    }\n    return result;\n  }\n};\n","import { Base } from './Base';\nimport { Attack } from \"./Attack\";\nimport * as Constant from '../constants';\n\nexport class Shove extends Base {\n  constructor({ targetPos, direction, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.direction = direction;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let moveSuccess = this.actor.shove(this.targetPos, this.direction);\n    if (moveSuccess) {\n      this.actor.energy -= this.energyCost;\n      success = true;\n    }\n    else {\n      success = true;\n      alternative = new Attack({\n        targetPos: this.targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Move } from './Move';\nimport { DestroySelf } from './DestroySelf';\nimport * as Constant from '../constants';\n\nexport class ThrowProjectileGas extends Move {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.processDelay = 0;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    this.actor.passable = false;\n    let move_result = super.perform();\n    if (move_result.success) {\n      this.actor.path.shift();\n      success = true;\n    }\n    if (this.actor.path.length === 0) {\n      success = true;\n      alternative = new DestroySelf({\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n      });\n    }\n    if (move_result.alternative) {\n      this.actor.attack(this.targetPos);\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { Move } from '../Actions/Move';\nimport { Say } from '../Actions/Say';\n\nexport const Chasing = superclass => class extends superclass {\n  constructor({ targetEntity = null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CHASING');\n    this.targetEntity = targetEntity;\n  }\n  getAction(game) {\n    if (this.targetEntity) {\n      let path = Helper.calculatePath(game, this.targetEntity.pos, this.pos);\n      let targetPos = path.length > 0 ? path[0] : this.pos;\n      return new Move({\n        targetPos,\n        game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    } else {\n      return new Say({\n        message: 'Where are they?',\n        game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n  }\n};\n","import { Base } from './Base';\nimport * as Helper from '../../helper';\n\nexport class PlaceActor extends Base {\n  constructor({ targetPos, entity, interrupt = true, forcePlacement = false, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.entity = entity;\n    this.interrupt = interrupt;\n    this.forcePlacement = forcePlacement;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    // let canPlace = true;\n    // if (!this.game.canOccupyPosition(this.targetPos, this.entity)) canPlace = false;\n    // if (this.entity.entityTypes.includes('PARENT')) {\n    //   this.entity.children.forEach((child) => {\n    //     console.log(child.pos);\n    //     if (!this.game.canOccupyPosition(child.pos, child)) canPlace = false;\n    //   })\n    // }\n    // if (canPlace) {\n    //   this.entity.pos = this.targetPos;\n    //   this.game.engine.addActorAsPrevious(this.entity);\n    //   this.game.engine.start(); // should this be used outside of engine?\n    //   success = true;      \n    // }\n    let canOccupyPosition = this.forcePlacement ? true : this.game.canOccupyPosition(this.targetPos, this.entity);\n    const tile = this.game.map[Helper.coordsToString(this.targetPos)];\n    if (canOccupyPosition && tile) {\n      this.entity.pos = this.targetPos;\n      tile.entities.push(this.entity);\n      // this.game.engine.addActorAsPrevious(this.entity);\n      // this.game.engine.addActor(this.entity);\n      this.game.engine.addActorAsNext(this.entity);\n      // this.interrupt = true;\n      // this.game.engine.start(); // BUGGED - should this be used outside of engine?\n      success = true;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","export const Draggable = superclass => class extends superclass {\n  constructor({ draggable = true, ...args }) {\n    super({ ...args });\n    this.draggable = draggable;\n    this.entityTypes = this.entityTypes.concat('DRAGGABLE');\n  }\n};\n","export const Pushable = superclass => class extends superclass {\n  constructor({ pushable = true, ...args }) {\n    super({ ...args });\n    this.pushable = pushable;\n    this.entityTypes = this.entityTypes.concat('PUSHABLE');\n  }\n};\n","import * as Constant from './constants';\nimport {\n  DestructiveCloudProjectileV2,\n  DestructiveProjectile,\n  DirectionalProjectile,\n  MovingWall,\n  DestructiveCloudProjectile,\n  Weapon,\n  Armor,\n} from './Entities/index';\n\nexport const TYPE = {\n  KUNAI: 'Kunai',\n  DIRECTIONAL_KUNAI: 'Directional Kunai',\n  SWORD: 'Sword',\n  AXE: 'Axe',\n  ARMOR: 'Armor',\n  WATER_GUN: 'Water Gun',\n  BARRIER: 'Barrier',\n}\n\nconst createProjectileCloud = ({ \n  engine, \n  actor, \n  targetPos, \n  throwDirection,\n  speed,\n  structureType,\n  createProjectile,\n}) => {\n  let structure = Constant.CLONE_PATTERNS[structureType];\n\n  let children = structure.positions.map((slot) => {\n    let position = {\n      x: actor.pos.x + slot.x + (throwDirection.x * structure.x_offset),\n      y: actor.pos.y + slot.y + (throwDirection.y * structure.y_offset)\n    }\n    \n    let targetPosition = {\n      x: targetPos.x + slot.x,\n      y: targetPos.y + slot.y,\n    }\n\n    return createProjectile(engine, position, targetPosition);\n  })\n\n  return new DestructiveCloudProjectileV2({\n    game: engine.game,\n    passable: true,\n    speed,\n    children,\n  })\n}\n\nconst createProjectileSingularity = ({ \n  engine, \n  actor, \n  targetPos, \n  speed,\n  structureType,\n  createProjectile,\n}) => {\n  let structure = Constant.CLONE_PATTERNS[structureType];\n\n  let children = structure.positions.map((slot) => {\n    let position = {\n      x: targetPos.x + slot.x + structure.x_offset,\n      y: targetPos.y + slot.y + structure.y_offset\n    }\n\n    let targetPosition = {\n      x: targetPos.x,\n      y: targetPos.y,\n    }\n\n    return createProjectile(engine, position, targetPosition);\n\n  })\n\n  return new DestructiveCloudProjectileV2({\n    game: engine.game,\n    passable: true,\n    speed,\n    children,\n  })\n}\n\nconst createProjectileBurst = ({ \n  engine, \n  actor, \n  targetPos, \n  speed,\n  structureType,\n  createProjectile,\n}) => {\n  let structure = Constant.CLONE_PATTERNS[structureType];\n\n  let children = structure.positions.map((slot) => {\n    let position = {\n      x: targetPos.x + structure.x_offset,\n      y: targetPos.y + structure.y_offset\n    }\n\n    let targetPosition = {\n      x: targetPos.x + slot.x,\n      y: targetPos.y + slot.y,\n    }\n\n    return createProjectile(engine, position, targetPosition);\n\n  })\n\n  return new DestructiveCloudProjectileV2({\n    game: engine.game,\n    passable: true,\n    speed,\n    children,\n  })\n}\n\nexport const sandTomb = ({\n  engine,\n  actor,\n  targetPos,\n}) => createProjectileSingularity({\n  engine,\n  actor,\n  targetPos,\n  speed: 100,\n  structureType: 'circle',\n  createProjectile: sandTombPart,\n})\n\nexport const sandBurst = ({\n  engine,\n  actor,\n  targetPos,\n}) => createProjectileBurst({\n  engine,\n  actor,\n  targetPos,\n  speed: 500,\n  structureType: 'circle',\n  createProjectile: sandTombPart,\n})\n\nexport const sandWallPulse = ({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n}) => createProjectileCloud({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n  speed: 500,\n  structureType: 'smallSquare',\n  createProjectile: movingSandWall,\n})\n\nexport const kunaiCloud = ({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n}) => createProjectileCloud({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n  speed: 500,\n  structureType: 'square',\n  createProjectile: kunai,\n})\n\nexport const fireballCloud = ({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n}) => createProjectileCloud({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n  speed: 500,\n  structureType: 'square',\n  createProjectile: fireball,\n})\n\nexport const kunai = (engine, pos, targetPos) => new DestructiveProjectile({\n  game: engine.game,\n  targetPos,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    character: '>',\n    color: 'white',\n    background: '',\n    animation: [\n      { background: '', color: 'white', character: '>', },\n      { background: '', color: 'white', character: 'v', },\n      { background: '', color: 'white', character: '<', },\n      { background: '', color: 'white', character: '^', },\n      { background: '', color: 'white', character: '>', },\n    ],\n  },\n  name: TYPE.KUNAI,\n  speed: 600,\n  energy: 0,\n  range: 30,\n})\n\nexport const directionalKunai = (engine, pos, direction, range) => new DirectionalProjectile({\n  game: engine.game,\n  direction,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    character: '>',\n    color: 'white',\n    background: '',\n    animation: [\n      { background: 'lightgrey', color: 'grey', character: '>', },\n      { background: 'lightgrey', color: 'grey', character: 'v', },\n      { background: 'lightgrey', color: 'grey', character: '<', },\n      { background: 'lightgrey', color: 'grey', character: '^', },\n      { background: 'lightgrey', color: 'grey', character: '>', },\n    ],\n  },\n  name: TYPE.DIRECTIONAL_KUNAI,\n  speed: 600,\n  energy: 0,\n  range,\n})\n\nexport const movingSandWall = (engine, pos, targetPos, range) => new MovingWall({\n  game: engine.game,\n  passable: false,\n  pos: { x: pos.x, y: pos.y },\n  targetPos,\n  renderer: {\n    // character: '>',\n    character: ']',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.KUNAI,\n  // name: TYPE.BARRIER,\n  durability: 3,\n  range,\n  speed: 300,\n})\n\nexport const sandShuriken = (engine, pos, direction, range) => new DirectionalProjectile({\n  game: engine.game,\n  direction,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '✦️',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.DIRECTIONAL_KUNAI,\n  speed: 600,\n  energy: 0,\n  range,\n})\n\nexport const sandTombPart = (engine, pos, targetPos) => new DestructiveProjectile({\n  game: engine.game,\n  targetPos,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '✦️',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.KUNAI,\n  speed: 600,\n  energy: 0,\n  range: 30,\n})\n\nexport const fireball = (engine, pos, targetPos) => new DestructiveProjectile({\n  game: engine.game,\n  targetPos,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '🔥',\n    color: 'wheat',\n    background: 'tomato',\n  },\n  name: TYPE.KUNAI,\n  speed: 100,\n  energy: 0,\n  range: 30,\n})\n\nexport const fireballGas = (engine, actor, targetPos) => {\n  return new DestructiveCloudProjectile({\n    game: engine.game,\n    owner_id: actor ? actor.id : null,\n    targetPos,\n    passable: true,\n    pos: actor ? { x: actor.pos.x, y: actor.pos.y } : null,\n    renderer: {\n      // character: '@',\n      character: '🔥',\n      color: 'wheat',\n      background: 'tomato',\n    },\n    name: TYPE.KUNAI,\n    speed: 100,\n    range: 10,\n    clonePattern: Constant.CLONE_PATTERNS.bigSquare,\n    // clonePattern: Constant.CLONE_PATTERNS.square,\n  })\n}\n\nexport const waterball = (engine, actor, targetPos) => new DestructiveCloudProjectile({\n  game: engine.game,\n  owner_id: actor ? actor.id : null,\n  targetPos,\n  passable: true,\n  pos: actor ? { x: actor.pos.x, y: actor.pos.y } : null,\n  renderer: {\n    // character: '~',\n    character: '🌊',\n    color: 'silver',\n    background: 'lightslategrey',\n  },\n  name: TYPE.KUNAI,\n  speed: 800,\n  range: 10,\n  clonePattern: Constant.CLONE_PATTERNS.bigSquare,\n  // clonePattern: Constant.CLONE_PATTERNS.square,\n})\n\nexport const sword = (engine) => new Weapon({\n  game: engine.game,\n  name: TYPE.SWORD,\n  passable: true,\n  attackDamage: 1,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    // character: '|',\n    character: '🗡️',\n    color: 'white',\n    background: '',\n  },\n})\n\nexport const axe = (engine) => new Weapon({\n  game: engine.game,\n  name: TYPE.AXE,\n  passable: true,\n  attackDamage: 5,\n  equipmentType: Constant.EQUIPMENT_TYPES.GENERIC,\n  renderer: {\n    character: 'a',\n    sprite: '',\n    color: 'white',\n    background: '',\n  },\n})\n\nexport const waterGun = (engine) => new Weapon({\n  game: engine.game,\n  name: TYPE.WATER_GUN,\n  passable: true,\n  attackDamage: 0,\n  equipmentType: Constant.EQUIPMENT_TYPES.GENERIC,\n  renderer: {\n    character: 'w',\n    sprite: '',\n    color: Constant.THEMES.SOLARIZED.blue,\n    background: '',\n  },\n})\n\nexport const fireJacket = (engine) => new Armor({\n  game: engine.game,\n  name: 'Fire Jacket',\n  passable: true,\n  defense: 1,\n  equipmentType: Constant.EQUIPMENT_TYPES.GENERIC,\n  renderer: {\n    character: 'J',\n    sprite: '',\n    color: Constant.THEMES.SOLARIZED.magenta,\n    background: '',\n  },\n})\n\nexport const test = (engine, pos) => new Weapon({\n  game: engine.game,\n  name: TYPE.SWORD,\n  passable: true,\n  attackDamage: 1,\n  pos,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    // character: '|',\n    character: '🗡️',\n    color: 'white',\n    background: 'lightsteelblue',\n  },\n})\n","import { destroyEntity } from './helper';\nexport const Destructable = superclass => class extends superclass {\n  constructor({ durability = 1, defense = 0, onDestroy = () => null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DESTRUCTABLE');\n    this.durability = durability;\n    this.durabilityMax = durability;\n    this.defense = defense;\n    this.onDestroy = onDestroy;\n    this.actorSprite = this.renderer.sprite\n    this.actorCharacter = this.renderer.character\n  }\n  getDefense() {\n    let defense = this.defense;\n    // add in reducer to get defense stats of all equpiment\n    if (this.entityTypes.includes('EQUIPING')) {\n      this.equipment.forEach((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('DESTRUCTABLE')) {\n            defense += slot.item.getDefense();\n          }\n        }\n      });\n    }\n    return defense;\n  }\n  decreaseDurabilityWithoutDefense(value) {\n    this.durability -= value;\n    if (this.durability <= 0) {\n      this.onDestroy(this);\n      this.destroy();\n    }\n  }\n  decreaseDurability(value) {\n    const current = this.durability;\n    const newDurability = current - (value - this.getDefense());\n    this.durability = Math.min(current, newDurability);\n    this.updateActorRenderer();\n    if (this.durability <= 0) {\n      this.onDestroy(this);\n      this.destroy();\n    }\n  }\n  increaseDurability(value) {\n    this.durability += value;\n    this.updateActorRenderer();\n  }\n  updateActorRenderer() {\n    if (this.durability === this.durabilityMax) {\n      this.renderer.sprite = this.actorSprite;\n      this.renderer.character = this.actorCharacter;\n    } else {\n      this.renderer.sprite = this.durability;\n      this.renderer.character = this.durability;\n    }\n    this.game.draw();\n  }\n  destroy() {\n    destroyEntity(this);\n  }\n};\n","export const Burnable = superclass => class extends superclass {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('BURNABLE');\n    this.canBurn = true;\n    this.willResetCanBurn = false;\n  }\n  resetCanBurn() {\n    this.willResetCanBurn = false;\n    this.canBurn = true;\n  }\n  burn() {\n    if (this.canBurn) {\n      this.decreaseDurability(2);\n      return true;\n    }\n    return false;\n  }\n};\n","import SOUNDS from '../sounds';\nimport { FireSpread } from './index';\nimport * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport {MESSAGE_TYPE} from '../message';\n\nexport const Exploding = superclass => class extends superclass {\n  constructor({ flammability = 1, explosivity = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('EXPLODING');\n    this.flammability = flammability;\n    this.explosivity = explosivity;\n  }\n  enflame() {\n    // create num of fireSpreads\n    const fires = Array(this.flammability).fill('').map((item) => {\n      return new FireSpread({\n        name: 'Pyro',\n        pos: { ...this.pos },\n        game: this.game,\n        renderer: {\n          character: '*',\n          color: Constant.THEMES.SOLARIZED.base3,\n          background: Constant.THEMES.SOLARIZED.red,\n        },\n        timeToSpread: 1,\n        spreadCount: 1,\n        durability: 1,\n        attackDamage: 1,\n        speed: 100,\n      });\n    });\n    fires.forEach((fire) => {\n      // add them to map\n      this.game.placeActorOnMap(fire);\n      // add them to engine\n      this.game.engine.addActor(fire);\n    });\n  }\n  explode() {\n    const positions = Helper.getPointsWithinRadius({ x: 0, y: 0 }, this.explosivity)\n    let structure = {\n      x_offset: 0,\n      y_offset: 0,\n      positions\n    };\n    structure.positions.forEach((slot) => {\n      let position = {\n        x: this.pos.x + slot.x + structure.x_offset,\n        y: this.pos.y + slot.y + structure.y_offset\n      };\n      const tile = this.game.map[Helper.coordsToString(position)];\n      if (tile) {\n        tile.type = 'BURNT';\n        let targets = Helper.getDestructableEntities(tile.entities.filter(\n          (entity) => entity.id !== this.id\n        ));\n        if (targets.length > 0) {\n          // let target = targets[0];\n          targets.forEach((target) => {\n            let damage = this['attackDamage'] ? this.attackDamage : this.explosivity;\n            this.game.addMessage(`${this.name} does ${damage} to ${target.name}`, MESSAGE_TYPE.DANGER);\n            target.decreaseDurability(damage);\n          })\n        }\n      }\n    });\n    if (this.explosivity > 0)\n      SOUNDS.explosion_0.play();\n    // this.game.draw(); //may not need draw here\n  }\n  destroy() {\n    this.explode();\n    this.enflame();\n    super.destroy();\n  }\n};\n","import * as _ from 'lodash';\n\nexport const HasKeymap = superclass => class extends superclass {\n  constructor({ initializeKeymap, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HAS_KEYMAP');\n    this.keymapStack = [];\n    this.initializeKeymap = initializeKeymap;\n    const keymap = initializeKeymap(this.game.engine, this);\n    this.addKeymap(keymap);\n  }\n\n  getKeymap () {\n    return _.get(this.keymapStack, '0', null);\n  }\n\n  addKeymap (newKeymap) {\n    this.keymapStack.unshift(newKeymap);\n  }\n\n  removeKeymap () {\n    this.keymapStack.shift();\n  }\n\n  reinitializeKeymap (ignoredKeys = []) {\n    this.keymapStack = [];\n    const keymap = this.initializeKeymap(this.game.engine, this);\n    ignoredKeys.forEach((key) => delete keymap[key])\n    this.addKeymap(keymap);\n  }\n\n  setKeymap (newKeymap) {\n    this.addKeymap(newKeymap);\n    return this.getKeymap;\n  }\n\n  goToPreviousKeymap () {\n    this.removeKeymap();\n    return this.getKeymap();\n  }\n};\n","export const Upgrade = ({\n  activate = (actor) => null,\n  canUpgrade = (actor) => true,\n  cost = 1,\n  name = 'upgrade',\n  removeOnActivate = false,\n}) => {\n  return {\n    activate,\n    canUpgrade,\n    cost,\n    name,\n    removeOnActivate,\n  }\n}\n\nexport const Upgradable = superclass => class extends superclass {\n  constructor({ upgrade_points = 0, upgrade_tree = [], ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('UPGRADABLE');\n    this.upgrade_points = upgrade_points;\n    this.upgrade_tree = upgrade_tree;\n  }\n\n  upgrade (upgrade) {\n    if (upgrade.canUpgrade(this)) {\n      upgrade.activate(this);\n      if (upgrade.removeOnActivate) {\n        const newTree = this.upgrade_tree.filter((currUpgrade) => currUpgrade.name !== upgrade.name);\n        this.upgrade_tree = newTree;\n      }\n      return true;\n    }\n    return false;\n  }\n};\n","export const HasFaction = superclass => class extends superclass {\n  constructor({ faction = null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HAS_FACTION');\n    this.faction = faction;\n  }\n};\n","import { ANIMATION_TYPES } from '../Display/konvaCustom';\nimport * as Helper from '../../helper';\nexport const UsesCover = superclass => class extends superclass {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('USES_COVER');\n    this.coverAnimations = [];\n    this.showCoverAnimations = true;\n    this.coveredBy = [];\n  }\n\n  getCoveredByIds () {\n    return this.coveredBy.map((entity) => entity.id);\n  }\n\n  setCoverAnimations () {\n    // check neigbors\n    if (!this.showCoverAnimations) return;\n    const tiles = Helper.getNeighboringTiles(this.game.map, this.getPosition());\n    let coverAnimated = false;\n    tiles.forEach((tile) => {\n      if (tile.entities.length) {\n        const entity = tile.entities[0];\n        if (entity.entityTypes.includes('COVERING')) {\n          if (entity.isProvidingCover()) {\n            const position = entity.getPosition();\n            const newAnimation = this.game.display.addAnimation(\n              ANIMATION_TYPES.BLINK_BOX,\n              {\n                x: position.x,\n                y: position.y,\n                color: '#3e7dc9'\n              }\n            );\n            this.coverAnimations.push(newAnimation);\n            coverAnimated = true;\n            this.coveredBy.push(entity);\n          }\n        }\n      }\n    });\n    if (coverAnimated) {\n      //animate covered actor\n      const position = this.getPosition();\n      const newAnimation = this.game.display.addAnimation(\n        ANIMATION_TYPES.BLINK_BOX,\n        {\n          x: position.x,\n          y: position.y,\n          color: '#3e7dc9'\n        }\n      );\n      this.coverAnimations.push(newAnimation);\n    }\n  }\n\n  removeCoverAnimations () {\n    if (this.coverAnimations.length) {\n      this.coverAnimations.forEach((animation) => {\n        this.game.display.removeAnimation(animation.id);\n      })\n      this.coverAnimations = [];\n    }\n  }\n\n  removeCoveredBy () {\n    this.coveredBy = [];\n  }\n\n  resetCoverAnimations() {\n    this.removeCoverAnimations();\n    this.removeCoveredBy();\n    this.setCoverAnimations();\n  }\n\n  destroy() {\n    this.showCoverAnimations = false;\n    this.removeCoverAnimations();\n    this.removeCoveredBy();\n    super.destroy();\n  }\n\n};\n","import pipe from 'lodash/fp/pipe';\nimport { Entity } from './Entity';\nimport { Parent } from './Parent';\nimport { PresentingUI } from './PresentingUI';\nimport { HasInnerGates } from './HasInnerGates';\nimport { UI } from './UI';\nimport {HasTargetingCursor} from './HasTargetingCursor';\nimport {HasShapePattern} from './HasShapePattern';\nimport { Attacking } from './Attacking';\nimport { RangedAttacking } from './RangedAttacking';\nimport { Equipable } from './Equipable';\nimport { Acting } from './Acting';\nimport { Rendering } from './Rendering';\nimport { Containing } from './Containing';\nimport { Equiping } from './Equiping';\nimport { Charging } from './Charging';\nimport { Signing } from './Signing';\nimport { Playing } from './Playing';\nimport { Cloning } from './Cloning';\nimport { Covering } from './Covering';\nimport { DestructiveProjecting } from './DestructiveProjecting';\nimport { DirectionalProjecting } from './DirectionalProjecting';\nimport { DirectionalPushing } from './DirectionalPushing';\nimport { GaseousDestructiveProjecting } from './GaseousDestructiveProjecting';\nimport { Gaseous } from './Gaseous';\nimport { Chasing } from './Chasing';\nimport { RangedChasing } from './RangedChasing';\nimport { Dragging } from './Dragging';\nimport { Draggable } from './Draggable';\nimport { Pushable } from './Pushable';\nimport { Spreading } from './Spreading';\nimport { Spawning } from './Spawning';\nimport { Destructable } from './Destructable';\nimport { IsParticle } from './IsParticle';\nimport { Speaking } from './Speaking';\nimport { Burnable } from './Burnable';\nimport { Exploding } from './Exploding';\nimport { Helpless } from './Helpless';\nimport { HasKeymap } from './HasKeymap';\nimport { Upgradable } from './Upgradable';\nimport { HasFaction } from './HasFaction';\nimport { UsesCover } from './UsesCover';\n\nexport const UI_Actor = pipe(\n  Acting,\n  Rendering,\n  Playing,\n  HasKeymap,\n  UI\n)(Entity);\n\nexport const Actor = pipe(\n  Acting,\n  Rendering\n)(Entity);\n\nexport const Speaker = pipe(\n  Acting,\n  Rendering,\n  Destructable,\n  Speaking,\n  Draggable,\n  Pushable,\n  Burnable,\n  Helpless,\n)(Entity);\n\nexport const Wall = pipe(\n  Rendering,\n  Destructable,\n)(Entity);\n\nexport const CoverWall = pipe(\n  Rendering,\n  Covering,\n  Destructable,\n)(Entity);\n\nexport const Debris = pipe(\n  Rendering,\n  Containing,\n  Draggable,\n  Burnable,\n  Destructable,\n  Exploding,\n  Pushable,\n)(Entity);\n\nexport const MovingWall = pipe(\n  Acting,\n  Rendering,\n  // Pushing,\n  DirectionalPushing,\n  Destructable,\n)(Entity);\n\nexport const Chaser = pipe(\n  Acting,\n  Rendering,\n  Chasing,\n  Destructable\n)(Entity);\n\nexport const Bandit = pipe(\n  Acting,\n  Rendering,\n  Chasing,\n  Destructable,\n  Attacking,\n  Pushable,\n  HasFaction,\n  UsesCover,\n)(Entity);\n\nexport const RangedBandit = pipe(\n  Acting,\n  Rendering,\n  RangedChasing,\n  Destructable,\n  Attacking,\n  Pushable,\n  HasFaction,\n  UsesCover,\n)(Entity);\n\nexport const Player = pipe(\n  Acting,\n  Rendering,\n  PresentingUI,\n  HasTargetingCursor,\n  HasKeymap,\n  Dragging,\n  Charging,\n  Signing,\n  Containing,\n  Equiping,\n  Attacking,\n  RangedAttacking,\n  Destructable,\n  Cloning,\n  Playing,\n  Burnable,\n  Upgradable,\n  HasFaction,\n  UsesCover,\n)(Entity);\n\nexport const Weapon = pipe(\n  Rendering,\n  Equipable,\n  Attacking\n)(Entity);\n\nexport const RangedWeapon = pipe(\n  Rendering,\n  Equipable,\n  RangedAttacking,\n  Attacking,\n  HasShapePattern,\n)(Entity);\n\nexport const Armor = pipe(\n  Rendering,\n  Equipable,\n  Destructable,\n)(Entity);\n\nexport const Ammo = pipe(\n  Rendering,\n)(Entity);\n\nexport const DestructiveProjectile = pipe(\n  Acting,\n  Rendering,\n  Attacking,\n  DestructiveProjecting,\n  Destructable\n)(Entity);\n\nexport const DirectionalProjectile = pipe(\n  Acting,\n  Rendering,\n  Attacking,\n  DirectionalProjecting,\n  Destructable,\n)(Entity);\n\nexport const Grenade = pipe(\n  Acting,\n  Rendering,\n  Attacking,\n  DirectionalProjecting,\n  Destructable,\n  Exploding,\n)(Entity);\n\nexport const DestructiveCloudProjectile = pipe(\n  Acting,\n  Rendering,\n  Attacking,\n  GaseousDestructiveProjecting,\n  Destructable,\n  Gaseous\n)(Entity);\n\nexport const DestructiveCloudProjectileV2 = pipe(\n  Acting,\n  Destructable,\n  Parent,\n)(Entity);\n\nexport const FireSpread = pipe(\n  Acting,\n  Rendering,\n  Destructable,\n  Attacking,\n  Spreading,\n)(Entity);\n\nexport const EmergenceHole = pipe(\n  Acting,\n  Rendering,\n  Destructable,\n  Spawning,\n  HasFaction,\n)(Entity);\n\nexport const Particle = pipe(\n  Acting,\n  Rendering,\n  IsParticle,\n)(Entity);\n\nexport const ParticleEmitter = pipe(\n  Acting,\n  Destructable,\n  Parent,\n)(Entity);","export const UI = superclass => class extends superclass {\n  constructor({ initiatedBy = null, range = null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('UI');\n    this.initiatedBy = initiatedBy;\n    this.active = true;\n    this.range = range;\n  }\n  hasEnoughEnergy() {\n    return this.active;\n  }\n};\n","import { Say } from '../Actions/Say';\n\nexport const Speaking = superclass => class extends superclass {\n  constructor({ messages = ['I have nothing to say.'], messageType, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SPEAKING');\n    this.messages = messages;\n    this.messageType = messageType;\n  }\n  getAction(game) {\n    const message = this.messages.shift();\n    this.messages.push(message);\n    return new Say({\n      actor: this,\n      game,\n      message: message,\n      messageType: this.messageType,\n      processDelay: 0,\n    });\n  }\n};\n","import SOUNDS from '../sounds';\nimport * as Helper from '../../helper';\n\nexport const Helpless = superclass => class extends superclass {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HELPLESS');\n    this.saved = false;\n  }\n  save() {\n    this.saved = true;\n    SOUNDS.save.play();\n  }\n  destroy() {\n    const sound = Helper.getRandomInArray([SOUNDS.scream_0, SOUNDS.scream_1, SOUNDS.scream_2]);\n    sound.play();\n    super.destroy();\n  }\n};\n","import { ANIMATION_TYPES } from '../Display/konvaCustom';\n\nexport const Covering = superclass => class extends superclass {\n  constructor({ accuracyModifer = 0, damageModifer = 0, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('COVERING');\n    this.providesCover = true;\n    this.accuracyModifer = accuracyModifer;\n    this.damageModifer = damageModifer;\n  }\n\n  isProvidingCover () {\n    return this.providesCover && (this.accuracyModifer < 0 || this.damageModifer < 0);\n  }\n\n};\n","import * as Constant from '../constants';\nimport { Shove } from '../Actions/Shove';\nimport { DestroySelf } from '../Actions/DestroySelf';\n\nexport const DirectionalPushing = superclass => class extends superclass {\n  constructor({ path = false, direction = { x: 0, y: 0 }, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DIRECTIONAL_PUSHING');\n    this.path = path;\n    this.direction = direction;\n    this.range = range;\n  }\n  getAction(game) {\n    let result = null;\n    let newX = this.pos.x + this.direction[0];\n    let newY = this.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n    this.passable = false;\n    if (this.range > 0) {\n      result = new Shove({\n        targetPos: targetPos,\n        direction: this.direction,\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        onSuccess: () => this.range -= 1,\n      });\n    }\n    else {\n      result = new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: 0\n      });\n    }\n    return result;\n  }\n};\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper'; \nimport { PlaceActor } from '../Actions/PlaceActor';\nimport { Say } from '../Actions/Say';\nimport { Move } from '../Actions/Move';\n\nexport const RangedChasing = superclass => class extends superclass {\n  constructor({ targetEntity = null, getProjectile = () => null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('RANGED_CHASING');\n    this.targetEntity = targetEntity;\n    this.getProjectile = getProjectile;\n  }\n  targetInPath(pathToCheck, targetPos) {\n    let inPath = false;\n    pathToCheck.forEach((pos) => {\n      if (pos.x === targetPos.x && pos.y === targetPos.y) {\n        inPath = true;\n      }\n    });\n    return inPath;\n  }\n  getAction(game) {\n    if (!this.targetEntity) {\n      return new Say({\n        message: `Where are they?`,\n        game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n    let throwDirection = {\n      x: Math.sign(this.targetEntity.pos.x - this.pos.x),\n      y: Math.sign(this.targetEntity.pos.y - this.pos.y),\n    };\n    // projectile.initialize()\n    let projectile = this.getProjectile({\n      pos: {\n        x: this.pos.x,\n        y: this.pos.y,\n      },\n      targetPos: { ...this.targetEntity.pos },\n      direction: [throwDirection.x, throwDirection.y],\n      range: 10,\n    });\n    // projectile.getPath()\n    projectile.createPath(game);\n    // is target in path\n    const inPath = this.targetInPath(projectile.path, this.targetEntity.pos);\n    if (inPath) {\n      // throw\n      if (game.canOccupyPosition(projectile.pos, projectile)) {\n        return new PlaceActor({\n          targetPos: { ...projectile.pos },\n          entity: projectile,\n          game,\n          actor: this,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      }\n      return new Say({\n        message: `I'll get you with this kunai!`,\n        game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n    // if not, select target tile in range of enemy and move\n    let movePath = Helper.calculatePath(game, this.targetEntity.pos, this.pos);\n    let targetPos = movePath.length > 0 ? movePath[0] : this.pos;\n    return new Move({\n      targetPos,\n      game,\n      actor: this,\n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n  }\n};\n","export const PresentingUI = superclass => class extends superclass {\n  constructor({ presentingUI = false, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('PRESENTING_UI');\n    this.presentingUI = presentingUI;\n  }\n};\n","import * as Helper from '../../helper';\nimport { THEMES } from '../constants';\nimport { ANIMATION_TYPES } from '../Display/konvaCustom';\n\nexport const HasTargetingCursor = superclass => class extends superclass {\n  constructor({...args}) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HAS_TARGETING_CURSOR');\n    this.cursorIsActive = false;\n    this.cursorPositions = []; \n    this.animations = []; \n  }\n\n  setCursorIsActive (active = true) {\n    this.cursorIsActive = active;\n  }\n\n  activateCursor (positions) {\n    this.setCursorPositions(positions);\n    this.setCursorIsActive(true);\n    this.resetAnimations();\n  }\n\n  deactivateCursor () {\n    this.setCursorIsActive(false);\n    this.removeAnimations();\n  }\n\n  getCursorPositions () {\n    return this.cursorPositions;\n  }\n\n  setCursorPositions (positions) {\n    this.cursorPositions = positions;\n    return this.getCursorPositions();\n  }\n\n  addAnimations () {\n    const positions = this.getCursorPositions();\n    if (positions.length) {\n      // hack for visual separation\n      let lastPos = {x: null, y: null}\n      let nudge = 0;\n      // const nudgeInc = 0.2\n      positions.forEach((position) => {\n        // if (position.x == lastPos.x && position.y == lastPos.y) nudge += nudgeInc;\n        // lastPos = {...position};\n        const newAnimation = this.game.display.addAnimation(\n          ANIMATION_TYPES.BLINK_BOX, \n          {\n            x: position.x, \n            y: position.y + nudge, \n            color: THEMES.SOLARIZED.base3 \n          }\n        );\n        this.animations.push(newAnimation);\n      })\n    }\n  }\n\n  removeAnimations () {\n    if (this.animations.length) {\n      this.animations.forEach((animation) => this.game.display.removeAnimation(animation.id))\n    }\n    this.animations = [];\n  }\n\n  resetAnimations () {\n    this.removeAnimations();\n    this.addAnimations();\n  }\n\n  moveCursorToPosition (position) {\n    const currentPositions = this.getCursorPositions()\n    const xDelta = position.x - currentPositions[0].x;\n    const yDelta = position.y - currentPositions[0].y;\n    const newPositons = currentPositions.map(\n      (pos) => ({\n        x: pos.x + xDelta,\n        y: pos.y + yDelta\n      })\n    );\n    this.setCursorPositions(newPositons);\n    this.resetAnimations();\n    return newPositons;\n  }\n\n  moveCursorInDirection (direction, distance = 1) {\n    const newPositons = this.getCursorPositions().map(\n      (pos) => ({\n        x: pos.x + (direction[0] * distance),\n        y: pos.y + (direction[1] * distance)\n      })\n    );\n    this.setCursorPositions(newPositons);\n    this.resetAnimations();\n    return newPositons;\n  }\n\n  updateCursoNode (index, args) {\n    const anim = this.animations[index];\n    args.forEach((arg) => {\n      anim.node[arg.key](arg.value)\n    })\n  }\n};\n","import * as Helper from '../../helper'; \n\nexport const Dragging = superclass => class extends superclass {\n  constructor({ draggedEntity = null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DRAGGING');\n    this.draggedEntity = draggedEntity;\n  }\n  grab(pos) {\n    const tile = this.game.map[Helper.coordsToString(pos)];\n    if (!tile)\n      return false;\n    if (tile.entities.length > 0) {\n      const entity = tile.entities[0];\n      if (entity.entityTypes.includes('DRAGGABLE'))\n        if (!this.draggedEntity && entity.draggable === true) {\n          this.draggedEntity = entity;\n          return true;\n        }\n    }\n    return false;\n  }\n  release() {\n    if (!this.draggedEntity)\n      return false;\n    const draggedEntity = { ...this.draggedEntity };\n    this.draggedEntity = null;\n    return draggedEntity;\n  }\n  drag(lastPos) {\n    // update entity position\n    const pos = this.draggedEntity.pos;\n    // get tile of draged entity\n    let tile = this.game.map[Helper.coordsToString(pos)];\n    // remove dragged entity from that tile\n    this.game.map[Helper.coordsToString(pos)] = { ...tile, entities: tile.entities.filter((e) => e.id !== this.draggedEntity.id) };\n    // update dragged ent to player's position\n    this.draggedEntity.pos = lastPos;\n    // add dragged ent to new tile\n    this.game.map[Helper.coordsToString(lastPos)].entities.push(this.draggedEntity);\n  }\n  move(targetPos) {\n    const lastPos = { ...this.pos };\n    if (this.draggedEntity) {\n      const moveSuccess = super.move(targetPos);\n      if (moveSuccess) {\n        this.drag(lastPos);\n        return true;\n      }\n      return moveSuccess;\n    }\n    return super.move(targetPos);\n  }\n};\n","export const Charging = superclass => class extends superclass {\n  constructor({ charge = 2, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CHARGING');\n    this.charge = charge;\n    this.chargeMax = charge;\n  }\n  decreaseCharge(value) {\n    this.charge = Math.max(0, this.charge - value);\n  }\n  increaseCharge(value) {\n    this.charge = Math.min(this.chargeMax, this.charge + value);\n  }\n};\n","export const Signing = superclass => class extends superclass {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SIGNING');\n    this.signHistory = [];\n  }\n  addSign(sign) {\n    if (this.signHistory.length >= 4) {\n      this.signHistory.shift();\n    }\n    this.signHistory.push(sign);\n  }\n  clearSigns() {\n    this.signHistory = [];\n  }\n};\n","import SOUNDS from '../sounds';\nimport * as Constant from '../constants';\n\nexport const Equiping = superclass => class extends superclass {\n  constructor({ equipment = Constant.EQUIPMENT_LAYOUTS.human(), ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('EQUIPING');\n    this.equipment = equipment;\n  }\n  hasItemNameEquipped(itemName) {\n    const equipment = this.equipment.filter((slot) => {\n      if (slot.item) {\n        if (slot.item.name === itemName) {\n          return true;\n        }\n      }\n      return false;\n    });\n    return equipment.length > 0;\n  }\n  getItemInSlot(slotName) {\n    let openSlots = this.equipment.filter((slot) => {\n      return (slot.item === null && slot.type === slotName);\n    });\n    if (openSlots.length > 0) {\n      return false;\n    }\n    let slot = this.equipment.find((slot) => slot.type === slotName);\n    if (!slot) {\n      return false;\n    }\n    if (!slot.item) {\n      return false;\n    }\n    return slot.item;\n  }\n  equip(slotName, item) {\n    let foundSlot = false;\n    this.equipment = this.equipment.map((slot) => {\n      if (!foundSlot && slot.type === slotName && slot.item === null) {\n        slot.item = item;\n        foundSlot = true;\n        SOUNDS.equip_1.play();\n      }\n      return slot;\n    });\n    return foundSlot;\n  }\n  unequip(item) {\n    this.equipment = this.equipment.map((slot) => {\n      if (slot.item) {\n        if (slot.item.id === item.id) {\n          slot.item = null;\n          SOUNDS.equip_0.play();\n        }\n      }\n      return slot;\n    });\n  }\n};\n","import uuid from 'uuid/v1';\nimport { destroyEntity } from './helper';\nimport { cloneDeep, find } from 'lodash';\n\nexport const Cloning = superclass => class extends superclass {\n  constructor({ cloneLimit = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CLONING');\n    this.cloneLimit = cloneLimit;\n    this.clones = [];\n  }\n  // perhaps clones should have a status effect that leeches parent actor's energy or chakra\n  // status effects should be removed from engine when owner is removed.\n  destroy() {\n    // add function to override self destroy funtion \n    // if this actor dies, clones should be destroyed as well\n    if (this.clones) {\n      this.clones.map((clone) => {\n        destroyEntity(clone);\n      });\n    }\n    destroyEntity(this);\n  }\n  destroyClone(id) {\n    // overrides clone destroy function\n    // when clone is destroyed, clone count will change accordingly\n    const index = this.clones.findIndex((c) => c.id === id);\n    if (index >= 0) {\n      this.clones[index].super__destroy();\n      this.clones.splice(index, 1);\n    }\n  }\n  createClone(cloneArgs) {\n    if (this.clones.length < this.cloneLimit) {\n      let clone = cloneDeep(this);\n      clone.name = `Clone`;\n      clone.game = this.game;\n      clone.id = uuid();\n      if (clone.entityTypes.includes('HAS_KEYMAP')) {\n        const ignoredKeys = find(cloneArgs, { 'attribute': 'ignoredKeys' });\n        clone.reinitializeKeymap(ignoredKeys? ignoredKeys.value : []);\n      }\n      delete clone.clones;\n      clone['super__destroy'] = clone.destroy;\n      clone.destroy = () => { this.destroyClone(clone.id); };\n      cloneArgs.forEach((arg) => {\n        clone[arg.attribute] = arg.value;\n      });\n      if (this.game.placeActorOnMap(clone)) {\n        this.game.engine.addActorAsNext(clone);\n        this.game.draw();\n        this.clones.push(clone);\n        return true;\n      }\n      ;\n    }\n    return false;\n  }\n};\n","import {CLONE_PATTERNS} from '../constants';\nimport {getPositionsFromStructure} from '../../helper';\nexport const HasShapePattern = superclass => class extends superclass {\n  constructor({ shapePattern = CLONE_PATTERNS.point, ...args }) {\n    super({ ...args });\n    this.shapePattern = shapePattern;\n    this.entityTypes = this.entityTypes.concat('HAS_SHAPE_PATTERN');\n  }\n\n  getPositionsInShape (pos) {\n    return getPositionsFromStructure(this.shapePattern, pos);\n  }\n};\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { ThrowProjectile } from '../Actions/ThrowProjectile';\n\nexport const DestructiveProjecting = superclass => class extends superclass {\n  constructor({ path = false, targetPos = null, attackDamage = 1, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DESTRUCTIVE_PROJECTING');\n    this.path = path;\n    this.targetPos = targetPos;\n    this.attackDamage = attackDamage;\n    this.range = range;\n  }\n  createPath(game) {\n    let path = Helper.calculatePathWithRange(game, this.targetPos, this.pos, 8, this.range);\n    this.path = path;\n  }\n  getAction(game) {\n    if (!this.path) {\n      this.createPath(game);\n    }\n    let targetPos = this.path.length > 0 ? this.path[0] : this.pos;\n    let result = new ThrowProjectile({\n      targetPos,\n      game,\n      actor: this,\n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n    return result;\n  }\n};\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { ThrowProjectileGas } from '../Actions/ThrowProjectileGas';\n\nexport const GaseousDestructiveProjecting = superclass => class extends superclass {\n  constructor({ owner_id = null, path = false, targetPos = null, attackDamage = 1, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('GASEOUS_DESTRUCTIVE_PROJECTING');\n    this.path = path;\n    this.targetPos = targetPos;\n    this.attackDamage = attackDamage;\n    this.range = range;\n    this.owner_id = owner_id;\n  }\n  canAttack(entity) {\n    let success = super.canAttack();\n    if (success) {\n      success = this.owner_id === null || (entity.owner_id !== this.owner_id);\n    }\n    return success;\n  }\n  createPath(game) {\n    let path = Helper.calculatePathWithRange(game, this.targetPos, this.pos, 8, this.range);\n    this.path = path;\n  }\n  getAction(game) {\n    if (!this.path) {\n      this.createPath(game);\n    }\n    let targetPos = this.path.length > 0 ? this.path[0] : this.pos;\n    let result = new ThrowProjectileGas({\n      targetPos,\n      game,\n      actor: this,\n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n    return result;\n  }\n};\n","import uuid from 'uuid/v1';\nimport { cloneDeep, cloneDeepWith } from 'lodash';\nimport * as Constant from '../constants';\n\nexport const Gaseous = superclass => class extends superclass {\n  constructor({ isClone = false, cloneCount = 0, clonePattern = Constant.CLONE_PATTERNS.square, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('GASEOUS');\n    this.isClone = isClone;\n    this.cloneCount = cloneCount;\n    this.clonePattern = cloneDeep(clonePattern);\n  }\n  getAction(game) {\n    let offset = this.clonePattern.positions.find((pos) => !pos.taken);\n    if (!this.isClone && offset) {\n      offset.taken = true;\n      let clone = cloneDeepWith(this, (value, key) => {\n        switch (key) {\n          case 'id':\n          case 'game':\n          case 'engine':\n          case 'clones':\n            return null;\n          default:\n            return undefined;\n        }\n      });\n      clone.game = game;\n      clone.id = uuid();\n      if (this.hasOwnProperty('pos')) {\n        let referencePos = this.pos;\n        clone.pos = {\n          x: referencePos.x + offset.x,\n          y: referencePos.y + offset.y\n        };\n      }\n      if (clone.hasOwnProperty('path')) {\n        clone.path = clone.path.map((pos) => {\n          return {\n            x: pos.x + offset.x,\n            y: pos.y + offset.y\n          };\n        });\n      }\n      clone.isClone = true;\n      this.cloneCount += 1;\n      game.placeActorOnMap(clone);\n      game.engine.addActor(clone);\n      game.draw();\n    }\n    let result = super.getAction(game);\n    return result;\n  }\n};\n","import { FireSpread } from './index';\nimport * as Constant from '../constants';\nimport * as Helper from '../../helper'; \nimport * as MapHelper from '../Maps/helper'; \nimport { Say } from '../Actions/Say';\nimport { DestroySelf } from '../Actions/DestroySelf';\nimport { PlaceActor } from '../Actions/PlaceActor';\n\nexport const Spreading = superclass => class extends superclass {\n  constructor({ timeToSpread = 5, spreadCount = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SPREADING');\n    this.timeToSpreadMax = timeToSpread;\n    this.timeToSpread = timeToSpread;\n    this.spreadCountMax = spreadCount;\n    this.spreadCount = spreadCount;\n  }\n  getAction(game) {\n    // if no more spreads, then destroy\n    if (this.spreadCount <= 0) {\n      return new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n        onAfter: () => {\n          game.map[Helper.coordsToString(this.pos)].type = 'BURNT';\n        },\n      });\n    }\n    // if its time to expand again, create a new fire spread and placeActor\n    if (this.timeToSpread <= 0) {\n      // find adjacent spot to spread to\n      let adjacentPositions = [\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + 1,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + -1,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + 1,\n        },\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + -1,\n        },\n      ];\n      let adjacentPos = null;\n      let kill = 100;\n      while (kill > 0) {\n        let newPos = Helper.getRandomInArray(adjacentPositions);\n        let newTile = MapHelper.getTileFromMap({map: this.game.map, position: newPos});\n        let tileExists = Boolean(newTile);\n        let notBurnt = true;\n        let canBurn = false;\n        if (newTile) {\n          notBurnt = newTile.type !== 'BURNT';\n          canBurn = MapHelper.tileHasTag({tile: newTile, tag: 'BURNABLE'});\n        }\n        if (tileExists && notBurnt && canBurn) {\n          adjacentPos = newPos;\n          break;\n        }\n        kill -= 1;\n      }\n      if (adjacentPos) {\n        // create new fire actor and place\n        let fire = new FireSpread({\n          name: 'Pyro',\n          pos: { x: 0, y: 0 },\n          game,\n          renderer: {\n            character: '*',\n            sprite: '',\n            color: Constant.THEMES.SOLARIZED.base3,\n            background: Constant.THEMES.SOLARIZED.red,\n          },\n          timeToSpread: this.timeToSpreadMax,\n          spreadCount: this.spreadCountMax,\n          durability: this.durability,\n          attackDamage: this.attackDamage,\n          speed: this.speed,\n        });\n        this.timeToSpread = this.timeToSpreadMax;\n        this.spreadCount -= 1;\n        return new PlaceActor({\n          targetPos: adjacentPos,\n          entity: fire,\n          game,\n          actor: this,\n          interrupt: false,\n          energyCost: Constant.ENERGY_THRESHOLD,\n          processDelay: 0,\n          forcePlacement: true,\n        });\n      }\n      this.timeToSpread = this.timeToSpreadMax;\n      this.spreadCount -= 1;\n    }\n    this.timeToSpread -= 1;\n    return new Say({\n      message: 'burning',\n      game,\n      actor: this,\n      processDelay: 0,\n    });\n  }\n};\n","import { FireSpread } from './index';\nimport * as Constant from '../constants';\nimport * as Helper from '../../helper'; \nimport * as Item from '../items'; \nimport { Say } from '../Actions/Say';\nimport { DestroySelf } from '../Actions/DestroySelf';\nimport { PlaceActor } from '../Actions/PlaceActor';\n\nexport const Spawning = superclass => class extends superclass {\n  constructor({ getSpawnedEntity, timeToSpread = 5, spreadCount = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SPAWNING');\n    this.timeToSpreadMax = timeToSpread;\n    this.timeToSpread = timeToSpread;\n    this.spreadCountMax = spreadCount;\n    this.spreadCount = spreadCount;\n    this.getSpawnedEntity = getSpawnedEntity\n  }\n  getAction(game) {\n    // if no more spreads, then destroy\n    if (this.spreadCount <= 0) {\n      return new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n      });\n    }\n    // if its time to expand again, create a new fire spread and placeActor\n    if (this.timeToSpread <= 0) {\n      // find adjacent spot to spread to\n      let adjacentPositions = [\n        {\n          x: this.pos.x + 1,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + -1,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + 1,\n        },\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + -1,\n        },\n      ];\n      let adjacentPos = null;\n      let kill = 100;\n      while (kill > 0) {\n        let newPos = Helper.getRandomInArray(adjacentPositions);\n        let newTile = this.game.map[Helper.coordsToString(newPos)];\n        let tileExists = Boolean(newTile);\n        if (tileExists && game.canOccupyPosition(newPos)) {\n          adjacentPos = newPos;\n          break;\n        }\n        kill -= 1;\n      }\n      if (adjacentPos) {\n        this.timeToSpread = this.timeToSpreadMax;\n        this.spreadCount -= 1;\n        return new PlaceActor({\n          targetPos: adjacentPos,\n          entity: this.getSpawnedEntity(adjacentPos),\n          game,\n          actor: this,\n          interrupt: false,\n          energyCost: Constant.ENERGY_THRESHOLD,\n          processDelay: 0,\n          forcePlacement: true,\n        });\n      }\n      this.timeToSpread = this.timeToSpreadMax;\n      this.spreadCount -= 1;\n    }\n    this.timeToSpread -= 1;\n    return new Say({\n      message: 'boom boom',\n      game,\n      actor: this,\n      processDelay: 0,\n    });\n  }\n};\n","import * as Constant from '../constants'; \n\nexport const IsParticle = superclass => class extends superclass {\n  constructor({ pos = { x: 1, y: 1 }, direction = { x: 0, y: 0 }, life = 1, speed = 1, type = Constant.PARTICLE_TYPE.directional, path = null, ...args }) {\n    super({ ...args });\n    this.pos = pos;\n    this.direction = direction;\n    this.life = life;\n    this.speed = speed;\n    this.type = type;\n    this.path = path;\n    this.entityTypes = this.entityTypes.concat('PARTICLE');\n  }\n  getNextPos(step) {\n    switch (this.type) {\n      case Constant.PARTICLE_TYPE.directional:\n        return {\n          x: this.pos.x + (this.direction.x * this.speed) * step,\n          y: this.pos.y + (this.direction.y * this.speed) * step,\n        };\n      case Constant.PARTICLE_TYPE.path:\n        const nextPos = this.path.shift();\n        return nextPos ? { ...nextPos } : { ...this.pos };\n      default:\n        break;\n    }\n  }\n  update(step) {\n    this.life -= step;\n    if (this.life > 0) {\n      this.pos = this.getNextPos(step);\n    }\n  }\n};\n","import * as Helper from '../../helper';\nimport { Particle } from '../Entities/index';\nimport { PARTICLE_TEMPLATES } from '../constants';\n\nexport class Engine {\n  constructor({\n    statusEffects = [],\n    actors = [],\n    currentActor = 0,\n    isRunning = false,\n    game = null,\n  }) {\n    this.statusEffects = statusEffects;\n    this.actors = actors;\n    this.currentActor = currentActor;\n    this.isRunning = isRunning;\n    this.game = game;\n  }\n\n  async processV1 () { // a turn-based system using speed and round-robin\n    let actor = this.actors[this.currentActor]\n    actor.gainEnergy(actor.speed);\n    if (actor.hasEnoughEnergy()) {\n      let action = actor.getAction(this.game);\n      if (!action) { return false; } // if no action given, kick out to UI input\n      while (true) {\n        let result = action.perform();\n        this.game.draw();\n        await Helper.delay(action.processDelay);\n        if (!result.success) return false;\n        if (result.alternative === null) break;\n        action = result.alternative;\n      }\n    }\n    this.currentActor = (this.currentActor + 1) % this.actors.length;\n    return true\n  }\n\n  async processV2() { // a turn-based system using speed and Action Points\n    let actor = this.actors[this.currentActor]\n    if (this.game.getFirstPlayer() === null) return false\n    let acting = true;\n    while (acting) {\n      if (!actor) return false;\n      // if (!actor.active) return false;\n      if (!actor.active) break;\n      let timePassed = 0;\n      \n      if (actor.hasEnoughEnergy()) {\n        // if (!actor.active) break;\n        let action = actor.getAction(this.game);\n        if (!action) { return false; } // if no action given, kick out to UI input\n        timePassed += action.getEnergyCost();\n        // console.log('timePassed ', timePassed);\n        \n        // timePassed += action.energyCost;\n        while (true) {\n          let result = {\n            success: false,\n            alternative: null,\n          };\n          // if (actor.energy >= action.energyCost) { // replace with checking for all required resources\n          if (action.canPayRequiredResources()) { // replace with checking for all required resources\n            \n            action.onBefore();\n            result = await action.perform();\n            if (result.success) {\n              action.onSuccess();\n              action.payRequiredResources();\n            } else {\n              action.onFailure();\n            }\n            action.onAfter();\n          }\n          if (!await this.processActionFX(action, result.success)) {\n            if (this.shouldAutoRun()) {\n              await Helper.delay(25);\n            } else {\n              await Helper.delay(action.processDelay);\n            }\n            this.game.draw();\n          }\n          if (!actor.active) break;\n          // if (!result.success) return false;\n          if (result.alternative === null) break;\n          action = result.alternative;\n        }\n        this.processStatusEffects(timePassed);\n        if (action.interrupt) {\n          acting = false;\n          break;\n        }\n      } else {\n        actor.gainEnergy(actor.speed);\n        acting = false;\n      }\n    }\n    this.actors = this.actors.filter((actor) => actor.active)\n    this.currentActor += 1;\n    if (this.currentActor >= this.actors.length) {\n      this.currentActor = 0;\n    }\n    return true\n  }\n\n  // a turn-based system using speed and Action Points\n  // it reorders all actors by energy after every round robin\n  async processV3() { \n    let actor = this.actors[this.currentActor]\n    if (!actor) return false;\n    let timePassed = 0;\n    if (actor.hasEnoughEnergy()) {\n      let action = actor.getAction(this.game);\n      if (!action) { return false; } // if no action given, kick out to UI input\n      timePassed += action.energyCost;\n      while (true) {\n        let result = await action.perform();\n        if (!await this.processActionFX(action, result.success)) {\n            await Helper.delay(action.processDelay);\n            this.game.draw();\n        }\n        if (!result.success) return false;\n        if (result.alternative === null) break;\n        action = result.alternative;\n      }\n      this.processStatusEffects(timePassed);\n    } else {\n      actor.gainEnergy(actor.speed);\n    }\n    this.currentActor = (this.currentActor + 1) % this.actors.length;\n    if (this.currentActor === 0) this.sortActorsByEnergy();\n    return true\n  }\n\n  // TODO process that reorders actors after every action\n\n  async start() {\n    this.isRunning = true;\n    while (this.isRunning) {\n      this.isRunning = await this.processV2();\n    }\n    let actor = this.actors[this.currentActor]\n    \n    if (!actor) {\n      // this.game.backToTitle();\n      return false;\n    }\n\n    this.setVisibleKeymap(actor);\n    \n    this.game.updateMode();\n    await this.game.updateReact(this.game);\n  }\n  \n  stop() {\n    this.isRunning = false;\n  }\n\n  setVisibleKeymap (actor) {\n    if (actor.entityTypes.includes('HAS_KEYMAP')) {\n      const keymap = actor.getKeymap()\n      if (keymap) {\n        this.game.visibleKeymap = keymap;\n      }\n    }\n  }\n\n  sortActorsByEnergy () {\n    this.actors = this.actors.sort((a, b) => b.energy - a.energy);\n  }\n\n  shouldAutoRun () {\n  // if there is no player, the engine will continue to run, we don't want it to run too fast\n    const hasPlayer = this.actors.filter((actor) => actor.entityTypes.includes('PLAYING')).length\n    if (hasPlayer) return false;\n    return true;\n  }\n\n  addStatusEffect(newEffect) {\n    if (!newEffect.allowDuplicates) {\n      if (this.statusEffects.filter((effect) => (\n        effect.actor.id === newEffect.actor.id &&\n        effect.name === newEffect.name\n      )).length > 0) {\n        console.log(`${newEffect.name} cannot be applied twice to ${newEffect.actor.name}`);\n        return false;\n      };\n    }\n    newEffect.onStart();\n    this.statusEffects.push(newEffect)\n    return true;\n  }\n\n  removeStatusEffectById (id) {\n    this.statusEffects = this.statusEffects.filter((effect) => {\n      if (effect.id !== id) return true;\n      effect.onStop();\n      return false;\n    });\n  }\n  \n  removeStatusEffectByActorId (actorId) {\n    this.statusEffects = this.statusEffects.filter((effect) => {\n      if (effect.actor.id !== actorId) return true;\n      effect.onStop();\n      return false;\n    });\n  }\n\n  removeDeadStatusEffects() {\n    this.statusEffects = this.statusEffects.filter((effect) =>{\n      if (effect.lifespan >= 0 && effect.timeToLive <= 0) {\n        effect.onStop();\n        return false;\n      }\n      return true;\n    });\n  }\n\n  getStatusEffectsByActorId(actorId) {\n    return this.statusEffects.filter((effect) => effect.actor.id === actorId);\n  }\n\n  processStatusEffects (timePassed) {\n    this.statusEffects.forEach((effect) => {\n      effect.timeSinceLastStep += timePassed;\n      effect.timeToLive -= timePassed;\n      if (effect.timeSinceLastStep >= effect.stepInterval) {\n        effect.onStep();\n        effect.timeSinceLastStep = 0;\n      } \n    });\n    this.removeDeadStatusEffects();\n  }\n\n  async processActionFX (action, actionSuccess) {\n    // EASE IN\n    // let time = .8\n    // let nextT = (t) => t *= t; \n    // EASE OUT\n    // let time = .03\n    // let nextT = (t) => t * (2 - t); \n    // EASE IN OUT QUAD\n    // let time = .4\n    // let nextT = (t) => t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t; \n    // EASE IN CUBIC\n    // let time = .8\n    // let nextT = (t) => t * t * t; \n    // EASE OUT CUBIC\n    // let time = .001\n    // let nextT = (t) => (--t) * t * t + 1; \n    if (!actionSuccess) { \n      // If action is not successful, instead of running action's normal particle animation\n      // we'll show a red X on the entity that initiated the action\n      const particle = new Particle({\n        game: this.game,\n        name: 'particle',\n        passable: true,\n        pos: {...action.actor.pos},\n        renderer: PARTICLE_TEMPLATES.fail.renderer,\n      })\n      this.game.placeActorOnMap(particle);\n      this.game.draw();\n      await Helper.delay(100);\n      this.game.removeActorFromMap(particle);\n      particle.update(1);\n      this.game.draw();\n      action.removeDeadParticles(); // is this needed?\n      return true;\n    }\n\n    if (action.particles.length) {\n      while (action.particles.length > 0) {\n        action.particles.forEach((particle) => {\n          this.game.placeActorOnMap(particle);\n        })\n        this.game.draw();\n        // await Helper.delay(time * 100);\n        // await Helper.delay(time * action.processDelay);\n        await Helper.delay(action.processDelay);\n        // await Helper.delay(0);\n        action.particles.forEach((particle) => {\n          this.game.removeActorFromMap(particle);\n          particle.update(1);\n\n        })\n        this.game.draw();\n        action.removeDeadParticles();\n        // time = nextT(time);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  addActor (entity) {\n    this.actors.push(entity);\n  }\n\n  addActorAsPrevious (entity) {\n    this.actors.splice(this.currentActor, 0, entity);\n  }\n\n  addActorAsNext (entity) {\n    this.actors.splice(this.currentActor + 1, 0, entity);\n  }\n\n  setActorToPrevious (entity) {\n    this.currentActor -= 1;\n    if (this.currentActor <= -1) this.currentActor = this.actors.length - 1;\n  }\n\n  setActorToNext (entity) {\n    this.currentActor = (this.currentActor + 1) % this.actors.length;\n  }\n\n}\n\n\nexport class CrankEngine extends Engine {\n  async process() { // a turn-based system using speed and Action Points\n    let actor = this.actors[this.currentActor]\n    let acting = true;\n    while (acting) {\n      if (actor.hasEnoughEnergy()) {\n        let action = actor.getAction(this.game);\n        if (!action) { return false; } // if no action given, kick out to UI input\n        while (true) {\n          this.game.draw();\n          let result = await action.perform();\n          await Helper.delay(action.processDelay);\n          if (!result.success) return false;\n          if (result.alternative === null) break;\n          action = result.alternative;\n        }\n      } else {\n        // actor.gainEnergy(actor.speed);\n        acting = false;\n      }\n    }\n    // this.currentActor = (this.currentActor + 1) % this.actors.length;\n    this.currentActor += 1;\n    if (this.currentActor + 1 >= this.actors.length) {\n      this.currentActor = 0;\n      this.actors.forEach((actor) => actor.gainEnergy(actor.speed));\n      return false;\n    }\n    return true\n  }\n\n  async start() {\n    this.isRunning = true;\n    while (this.isRunning) {\n      this.isRunning = await this.process();\n    }\n    let actor = this.actors[this.currentActor]\n    this.setVisibleKeymap(actor);\n    // this.game.updateMode();\n    this.game.mode.update();\n    await this.game.updateReact(this.game);\n  }\n}","import * as Helper from '../../helper';\nimport * as MapHelper from './helper';\n\nexport const generate = (map, offsetX, offsetY, unitCount = 12, unitSize = 4, borderWidth = 1) => {\n  let data = {};\n  // const floorPlan = createFloorPlan(unitCount);\n  // let maxX = 0; \n  // let minX = 0; \n  // let maxY = 0; \n  // let minY = 0; \n  // floorPlan.forEach((pos) => {\n  //   if (pos.x > maxX) maxX = pos.x;\n  //   if (pos.x < minX) minX = pos.x;\n  //   if (pos.y > maxY) maxY = pos.y;\n  //   if (pos.y < minY) minY = pos.y;\n  // })\n  // const floorPlanWidth = Math.abs(maxX) + Math.abs(minX) + 1;\n  // const floorPlanHeight = Math.abs(maxY) + Math.abs(minY) + 1;\n  // console.log(floorPlanWidth);\n  // console.log(floorPlanHeight);\n  \n  let floorPlan = createFloorPlan();\n  let kill = 1000\n  while (floorPlan.length < unitCount + 1) {\n    \n    let unit = createRoomInFloorPlan(floorPlan);\n    if (unit) {\n      const unitPosition = getUnitPosition(unit, offsetX, offsetY, unitSize);\n      let didCreate = createUnit(map, unitPosition, unitSize, 0);\n      if (didCreate) floorPlan.push(unit);\n    }\n    \n    kill -= 1;\n    if (kill <= 0) break;\n  }\n\n  // removeInnerWalls(map)\n  // addDoorToOuterWalls(map)\n  // addInnerWalls(map, floorPlan.length)\n  addCorridors(map, floorPlan, offsetX, offsetY, unitSize)\n  return data;\n}\n\nconst addCorridors = (map, floorPlan, offsetX, offsetY, unitSize) => {\n  const relativeCornerCoords = [\n    {x: 1, y: 1},\n    {x: unitSize - 1, y: unitSize - 1},\n    {x: 1, y: unitSize - 1},\n    {x: unitSize - 1, y: 1},\n  ]\n  for (let i = 0; i < (floorPlan.length - 1); i++) {\n    const currentUnit = floorPlan[i];\n    let currentUnitPosition = getUnitPosition(currentUnit, offsetX, offsetY, unitSize);\n    const currentUnitRelativeCornerCoord = Helper.getRandomInArray(relativeCornerCoords)\n    currentUnitPosition.x += currentUnitRelativeCornerCoord.x;\n    currentUnitPosition.y += currentUnitRelativeCornerCoord.y;\n    \n    const neigbors = getNeighboringUnitsFromFloorPlan(floorPlan, currentUnit);\n    neigbors.forEach((neigbor) => {\n      let nextUnitPosition = getUnitPosition(neigbor, offsetX, offsetY, unitSize);\n      const nextUnitRelativeCornerCoord = currentUnitRelativeCornerCoord\n      nextUnitPosition.x += nextUnitRelativeCornerCoord.x;\n      nextUnitPosition.y += nextUnitRelativeCornerCoord.y;\n      \n      digCorridor(map, currentUnitPosition, nextUnitPosition);\n    });\n  }\n}\n\nconst getNeighboringUnitsFromFloorPlan = (floorPlan, currentUnit) => {\n  const neighbors = getNeighboringPoints(currentUnit);\n  return floorPlan.filter((unit) => {\n    return neighbors.find((coords) => coords.x === unit.x && coords.y === unit.y);\n  })\n}\n\nconst digCorridor = (map, currentUnitPosition, nextUnitPosition) => {\n    const corridorDirection = [\n      Math.sign(nextUnitPosition.x - currentUnitPosition.x),\n      Math.sign(nextUnitPosition.y - currentUnitPosition.y)\n    ]\n    let kill = 1000;\n    let corridorPosition = Helper.getPositionInDirection(currentUnitPosition, corridorDirection); \n    let hasDoor = false\n    while (!Helper.coordsAreEqual(corridorPosition, nextUnitPosition)) {\n      let tile = map[Helper.coordsToString(corridorPosition)];\n      if (tile) {\n        if (tileIsWall(tile)) {\n          if (!hasDoor) {\n            tile.type = 'DOOR'\n            hasDoor = true;\n          } else {\n            tile.type = 'FLOOR'\n          }\n        }\n      }\n      corridorPosition = Helper.getPositionInDirection(corridorPosition, corridorDirection); \n      kill -= 1;\n      if (kill <= 0) break;\n    }\n}\n\nconst createFloorPlan = () => {\n  // create origin\n  let floorPlan = [{x: 0, y: 0}];\n  return floorPlan\n}\n\nconst createRoomInFloorPlan = (floorPlan) => {\n  // randomly choose previously created unit\n  // let origin = floorPlan[floorPlan.length - 1];\n  let origin = Helper.getRandomInArray(floorPlan);\n  // randomly choose neighboring point\n  let newUnit = getNeighboringUnit(origin);\n  let unitAlreadyExists = unitExists(newUnit, floorPlan)\n  let kill = 1000\n  while (unitAlreadyExists) {\n    origin = Helper.getRandomInArray(floorPlan.filter((pnt) => !Helper.coordsAreEqual(pnt, origin)));\n    newUnit = getNeighboringUnit(origin);\n    unitAlreadyExists = unitExists(newUnit, floorPlan)\n    kill -= 1;\n    if (kill <= 0) {\n      unitAlreadyExists = false;\n      newUnit = false;\n      break;\n    }\n  }\n  \n  return newUnit\n}\n\nconst getNeighboringUnit = (origin) => Helper.getRandomInArray(getNeighboringPoints(origin))\nconst unitExists = (newUnit, existingUnits) => existingUnits.filter((unit) => unit.x === newUnit.x && unit.y === newUnit.y).length > 0;\nconst getUnitPosition = (floorPlanPos, mapOffsetX, mapOffsetY, unitSize) => {\n  return {\n    x: floorPlanPos.x + mapOffsetX + (unitSize * floorPlanPos.x),\n    y: floorPlanPos.y + mapOffsetY + (unitSize * floorPlanPos.y),\n  }\n}\n\nconst getNeighboringPoints = (origin, eightWay = false) => {\n  let neighbors = [\n    {\n      x: origin.x,\n      y: origin.y + 1\n    },\n    {\n      x: origin.x + 1,\n      y: origin.y\n    },\n    {\n      x: origin.x,\n      y: origin.y - 1\n    },\n    {\n      x: origin.x - 1,\n      y: origin.y\n    },\n  ]\n\n  if (eightWay) {\n    neighbors = neighbors.concat([\n      {\n        x: origin.x + 1,\n        y: origin.y + 1\n      },\n      {\n        x: origin.x + 1,\n        y: origin.y - 1\n      },\n      {\n        x: origin.x - 1,\n        y: origin.y - 1\n      },\n      {\n        x: origin.x - 1,\n        y: origin.y + 1\n      },\n    ])\n  }\n  return neighbors;\n}\n\nconst isCorner = (x, y, roomSize) => {\n  if (x === 0 && y === 0) return true\n  if (x === roomSize && y === roomSize) return true\n  if (x === roomSize && y === 0) return true\n  if (x === 0 && y === roomSize) return true\n  return false;\n};\n\nconst createUnit = (map, position, size, border) => {\n  // const length = size; // this will leave a border\n  // const length = size + 1; // this will close the gap\n  const length = size + 1 - border; // this will calculate using border\n\n  // prevent units from hitting map edge\n  for (let i = 0; i < length; i++) {\n    for (let j = 0; j < length; j++) {\n      const newPosition = {\n        x: position.x + i,\n        y: position.y + j,\n      }\n      let tile = map[Helper.coordsToString(newPosition)];\n      if (!tile) return false;\n      if (tile.type === 'ROAD_EDGE') return false;\n      if (tileIsWall(tile)) return false;\n      if (tile.type === 'FLOOR') return false;\n    }\n  }\n\n  for (let i = 0; i < length; i++) {\n    for (let j = 0; j < length; j++) {\n      const newPosition = {\n        x: position.x + i,\n        y: position.y + j,\n      }\n      let type = 'FLOOR';\n      if (i === 0 || i === (length - 1)) type = 'WALL_VERTICAL';\n      if (j === 0 || j === (length - 1)) type = 'WALL_HORIZONTAL';\n      if (i === 0 && j === 0) type = 'WALL_CORNER_NW';\n      if (i === 0 && j === (length - 1)) type = 'WALL_CORNER_SW';\n      if (i === (length - 1) && j === 0) type = 'WALL_CORNER_NE';\n      if (i === (length - 1) && j === (length - 1)) type = 'WALL_CORNER_SE';\n      let tile = map[Helper.coordsToString(newPosition)];\n      if (tile) tile.type = type;\n    }\n  }\n\n  return true;\n}\n\nconst tileIsWall = (tile) => MapHelper.tileHasTag({tile, tag: 'WALL'})\n\nconst getInnerWalls = (map, tiles) => {\n  return tiles.filter((key) => {\n    const coordArray = key.split(',').map((i) => parseInt(i));\n    const coords = {\n      x: coordArray[0],\n      y: coordArray[1],\n    }\n    const neighbors = getNeighboringPoints(coords, true).filter((point) => {\n      let t = map[Helper.coordsToString(point)];\n      if (t) {\n        if (['FLOOR', 'DOOR'].includes(t.type) || tileIsWall(t)) {\n          return true;\n        }\n      }\n      return false\n    });\n    \n    if (neighbors.length === 8) {\n      return true;\n    }\n    return false;\n  })\n}\n\nconst getOuterWalls = (map, tiles) => {\n  return tiles.filter((key) => {\n    const coordArray = key.split(',').map((i) => parseInt(i));\n    const coords = {\n      x: coordArray[0],\n      y: coordArray[1],\n    }\n    const neighbors = getNeighboringPoints(coords, true).filter((point) => {\n      let t = map[Helper.coordsToString(point)];\n      if (t) {\n        if (['FLOOR'].includes(t.type) || tileIsWall(t)) {\n          return false;\n        }\n      }\n      return true\n    });\n    \n    if (neighbors.length === 8) {\n      return false;\n    }\n    return true;\n  })\n}\n\nconst removeInnerWalls = (map) => {\n  let walls = Object.keys(map).filter((key) => {\n    return tileIsWall(map[key]);\n  })\n\n  let innerWalls = getInnerWalls(map, walls);\n\n  innerWalls.forEach((key) => {\n    map[key].type = 'FLOOR';\n  })\n}\n\nconst addDoorToOuterWalls = (map) => {\n  let walls = Object.keys(map).filter((key) => {\n    return tileIsWall(map[key]);\n  });\n\n  let outerWalls = getOuterWalls(map, walls);\n  let key = Helper.getRandomInArray(outerWalls);\n  map[key].type = 'DOOR'\n}\n\nconst addInnerWalls = (map, count = 2) => {\n  // Finding corners\n  let corners = Object.keys(map).filter((key) => {\n    const tile = map[key];\n    if (!tileIsWall(tile)) return false;\n    const coordArray = key.split(',').map((i) => parseInt(i));\n    const coords = {\n      x: coordArray[0],\n      y: coordArray[1],\n    }\n    const neighbors = getNeighboringPoints(coords, false).filter((point) => {\n      let t = map[Helper.coordsToString(point)];\n      if (t) {\n        if (['GROUND', 'GROUND_ALT', 'ROAD', 'ROAD_EDGE'].includes(t.type)) {\n          return true;\n        }\n      }\n      return false\n    });\n    if (neighbors.length === 2) return true;\n    return false\n  })\n\n  if (!corners.length) return;\n\n  // building walls\n  let wallCount = 0;\n  while (wallCount < count) {\n  // while (wallCount < corners.length) {\n  // for (let i = 0; i < count; i++) {\n    const corner = Helper.getRandomInArray(corners);\n    const coordArray = corner.split(',').map((i) => parseInt(i));\n    const coords = {\n      x: coordArray[0],\n      y: coordArray[1],\n    }\n    const wallNeighbors = getNeighboringPoints(coords, false).filter((point) => {\n      let t = map[Helper.coordsToString(point)];\n      if (t) {\n        if (tileIsWall(t)) {\n          return true;\n        }\n      }\n      return false\n    });\n    const selectedWallPos = Helper.getRandomInArray(wallNeighbors)\n    if (!selectedWallPos) continue;\n    const direction = {\n      x: Math.sign(selectedWallPos.x - coords.x),\n      y: Math.sign(selectedWallPos.y - coords.y)\n    };\n\n    let kill = 100;\n    let build = true;\n    let currentPosition = {...coords}\n    let previousFloorPositions = [];\n    while (build) {\n      currentPosition.x += direction.x;\n      currentPosition.y += direction.y;\n      let tile = map[Helper.coordsToString(currentPosition)];\n      if (!tile) break;\n      // if (tile.type === 'WALL') continue;\n      if (tile.type === 'FLOOR') {\n        tile.type = 'WALL';\n        previousFloorPositions.push({...currentPosition})\n        // console.log(previousFloorPositions.length);\n      }\n      // else if (['GROUND', 'GROUND_ALT', 'ROAD', 'ROAD_EDGE'].includes(tile.type) || (tile.type === 'WALL' && previousFloorPositions.length)) {\n      // else if (['GROUND', 'GROUND_ALT', 'ROAD', 'ROAD_EDGE'].includes(tile.type)) {\n      else if (['GROUND', 'GROUND_ALT', 'ROAD', 'ROAD_EDGE'].includes(tile.type) && previousFloorPositions.length) {\n        // go back two and make FLOOR\n        let prevPos = {\n          x: currentPosition.x - (direction.x * 2),\n          y: currentPosition.y - (direction.y * 2),\n        }\n        map[Helper.coordsToString(prevPos)].type = 'DOOR';\n        // map[Helper.coordsToString(prevPos)].type = 'FLOOR';\n        // go back one more and make FLOOR\n        prevPos = {\n          x: currentPosition.x - (direction.x * 3),\n          y: currentPosition.y - (direction.y * 3),\n        }\n        map[Helper.coordsToString(prevPos)].type = 'DOOR';\n        // map[Helper.coordsToString(prevPos)].type = 'FLOOR';\n        if (previousFloorPositions.length <= 0) {\n          //   // we need to create another wall, this one is bust\n          if (count <= 100) count += 1\n        }\n        break;\n      }\n      kill -= 1;\n      if (kill <= 0) build = false;\n    }\n    wallCount += 1;\n  }\n}","export const COLORS = {\n  base04: '#07111D',\n  base03: '#02252e',\n  // base03: '#002b36',\n  base02: '#073642',\n  base01: '#586e75',\n  base00: '#657b83',\n  // base0: '#96641D',\n  base0: '#839496',\n  base1: '#93a1a1',\n  // base2: '#E19D3F',\n  base2: '#eee8d5',\n  base3: '#fdf6e3',\n  yellow: '#b58900',\n  orange: '#cb4b16',\n  red: '#dc322f',\n  magenta: '#d33682',\n  violet: '#6c71c4',\n  blue: '#268bd2',\n  cyan: '#2aa198',\n  green: '#859900',\n  // // base1: '#07111D',\n  // base1: '#0B0B0B',\n  // base2: '#5A7178',\n  // base3: '#B6ACA3',\n  // base4: '#EDF6F1',\n  cog1: '#27295f',\n  cog2: '#3e7dc9',\n  cog3: '#18c0f8',\n  cog4: '#86C8E4',\n  locust0: '#423a18',\n  locust1: '#96641D',\n  locust2: '#E19D3F',\n  // locust2: '#F89339',\n  locust3: '#E7C898',\n  flesh1: '#833139',\n  flesh2: '#CC7468',\n  flesh3: '#DDA78F',\n  gray: '#6D7886',\n}\nexport const TILE_KEY = {\n  'GROUND': {\n    background: COLORS.base04,\n    foreground: COLORS.base02,\n    character: '.',\n    sprite: '',\n    passable: true,\n    tags: ['PROVIDING_COVER'],\n  },\n  'GROUND_ALT': {\n    background: COLORS.base04,\n    foreground: COLORS.base02,\n    character: '',\n    sprite: '',\n    passable: true,\n    tags: ['PROVIDING_COVER'],\n  },\n  'EMERGENCE_DESTROYED': {\n    background: COLORS.base04,\n    foreground: COLORS.locust0,\n    character: '',\n    // sprite: '',\n    sprite: '',\n    passable: true,\n  },\n  'EMERGENCE_GROUND': {\n    background: COLORS.locust0,\n    foreground: COLORS.locust1,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'EMERGENCE_OUTER_GROUND': {\n    background: COLORS.locust0,\n    foreground: COLORS.locust2,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'FLOOR': {\n    background: COLORS.base02,\n    foreground: COLORS.locust1,\n    character: '',\n    passable: true,\n    tags: ['BURNABLE'],\n  },\n  'WALL': {\n    background: COLORS.base02,\n    foreground: COLORS.locust2,\n    character: '#',\n    sprite: '',\n    passable: false,\n    tags: ['BURNABLE', 'WALL'],\n  },\n  'WALL_VERTICAL': {\n    background: COLORS.base02,\n    foreground: COLORS.locust2,\n    character: '||',\n    sprite: '',\n    passable: false,\n    tags: ['BURNABLE', 'WALL'],\n  },\n  'WALL_HORIZONTAL': {\n    background: COLORS.base02,\n    foreground: COLORS.locust2,\n    character: '=',\n    sprite: '',\n    passable: false,\n    tags: ['BURNABLE', 'WALL'],\n  },\n  'WALL_CORNER_NW': {\n    background: COLORS.base02,\n    foreground: COLORS.locust2,\n    character: '#',\n    sprite: '',\n    passable: false,\n    tags: ['BURNABLE', 'WALL'],\n  },\n  'WALL_CORNER_NE': {\n    background: COLORS.base02,\n    foreground: COLORS.locust2,\n    character: '#',\n    sprite: '',\n    passable: false,\n    tags: ['BURNABLE', 'WALL'],\n  },\n  'WALL_CORNER_SW': {\n    background: COLORS.base02,\n    foreground: COLORS.locust2,\n    character: '#',\n    sprite: '',\n    passable: false,\n    tags: ['BURNABLE', 'WALL'],\n  },\n  'WALL_CORNER_SE': {\n    background: COLORS.base02,\n    foreground: COLORS.locust2,\n    character: '#',\n    sprite: '',\n    passable: false,\n    tags: ['BURNABLE', 'WALL'],\n  },\n  'ROAD_EDGE': {\n    background: COLORS.base03,\n    foreground: COLORS.base02,\n    character: '',\n    sprite: '',\n    passable: true,\n    tags: ['ROAD', 'PROVIDING_COVER'],\n  },\n  'ROAD': {\n    background: COLORS.base03,\n    foreground: COLORS.base02,\n    character: '=',\n    sprite: '',\n    passable: true,\n    tags: ['ROAD', 'PROVIDING_COVER'],\n  },\n  'DOOR': {\n    background: COLORS.base02,\n    foreground: COLORS.base1,\n    character: '+',\n    sprite: '',\n    passable: true,\n    tags: ['BURNABLE'],\n  },\n  'SAFE': {\n    background: COLORS.base04,\n    foreground: COLORS.base02,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'LOCKED_EXIT': {\n    background: COLORS.base04,\n    foreground: COLORS.base02,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'EXIT': {\n    background: COLORS.base04,\n    foreground: COLORS.green,\n    character: '>',\n    sprite: '',\n    passable: true,\n  },\n  'BURNT': {\n    background: COLORS.base03,\n    foreground: COLORS.red,\n    character: 'X',\n    sprite: '',\n    passable: true,\n    tags: ['BURNABLE'],\n    animation: [\n      { background: COLORS.base03, foreground: COLORS.yellow, character: 'X', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.yellow, character: 'x', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.red, character: 'X', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.orange, character: 'x', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.orange, character: 'X', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.red, character: 'x', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.red, character: 'X', sprite: '', passable: true, },\n    ]\n  },\n}\n\nexport const STAT_RENDERERS = {\n  'amount': {\n    background: COLORS.base04,\n    foreground: COLORS.locust2,\n    character: '',\n  },\n  'attackRange': {\n    background: COLORS.green,\n    foreground: COLORS.base3,\n    character: '==>',\n  },\n  'magazine': {\n    background: COLORS.gray,\n    foreground: COLORS.base3,\n    character: '!!',\n  },\n  'baseRangedAccuracy': {\n    background: COLORS.violet,\n    foreground: COLORS.base3,\n    character: '*',\n  },\n  'baseRangedDamage': {\n    background: COLORS.red,\n    foreground: COLORS.base3,\n    character: 'x',\n    sprite: '',\n  },\n  'meleeDamage': {\n    background: COLORS.red,\n    foreground: COLORS.base3,\n    character: 'x',\n    sprite: '',\n  },\n} \n\n// GiArcheryTarget / GiBullseye / GiCrosshair -- accuracy\n// GiBullets -- ammo\n// GiBackwardTime -- ammo / reload\n//  GiBarbedArrow - -range\n// GiBurningDot -- damage\n// GiCog\n\n/*\nSCROLL-O-Sprites\n\n\n\n\n\n\n\n \n*/","import { keys } from 'lodash';\nimport * as Helper from '../../helper';\nimport * as MapHelper from '../Maps/helper';\nimport { CoverWall } from '../Entities/index';\nimport {COLORS} from '../Modes/Jacinto/theme';\nimport Map from 'rot-js/lib/map/map';\n\nexport const generateCoverBlock = (\n    pos,\n    game,\n    name = 'box',\n    character = '%',\n    durability = 5,\n    background = COLORS.base02,\n    color = COLORS.base01\n  ) => {\n    let sprite = Helper.getRandomInArray(['', '']);\n\n    let box = new CoverWall({\n      pos,\n      renderer: {\n        character,\n        sprite,\n        color,\n        background,\n      },\n      name,\n      game,\n      durability,\n      accuracyModifer: -0.3,\n      damageModifer: 0,\n    })\n\n    game.placeActorOnMap(box)\n  }\n\nconst SHAPES = {\n  point: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n    ]\n  },\n  verticalLine: {\n    x_offset: 1,\n    y_offset: 1,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n    ]\n  },\n  horizontalLine: {\n    x_offset: 1,\n    y_offset: 1,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 1, y: 0, taken: false, },\n    ]\n  },\n  smallSquare: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n    ]\n  },\n  southEastVerticalL: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 0, y: 2, taken: false, },\n      { x: 1, y: 2, taken: false, },\n    ]\n  },\n  southWestVerticalL: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 0, y: 2, taken: false, },\n      { x: -1, y: 2, taken: false, },\n    ]\n  },\n  northWestVerticalL: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: 0, y: -2, taken: false, },\n      { x: -1, y: -2, taken: false, },\n    ]\n  },\n  northEastVerticalL: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: 0, y: -2, taken: false, },\n      { x: 1, y: -2, taken: false, },\n    ]\n  },\n  southEastHorizontalL: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 2, y: 0, taken: false, },\n      { x: 2, y: 1, taken: false, },\n    ]\n  },\n  southWestHorizontalL: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: -1, y: 0, taken: false, },\n      { x: -2, y: 0, taken: false, },\n      { x: -2, y: 1, taken: false, },\n    ]\n  },\n  northEastHorizontalL: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 2, y: 0, taken: false, },\n      { x: 2, y: -1, taken: false, },\n    ]\n  },\n  northWestHorizontalL: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: -1, y: 0, taken: false, },\n      { x: -2, y: 0, taken: false, },\n      { x: -2, y: -1, taken: false, },\n    ]\n  },\n}\n\nconst shapeChanceTable = [\n  ...Array(1).fill('point'),\n  ...Array(4).fill('verticalLine'),\n  ...Array(3).fill('horizontalLine'),\n  ...Array(2).fill('smallSquare'),\n  ...Array(2).fill('southEastVerticalL'),\n  ...Array(2).fill('southWestVerticalL'),\n  ...Array(2).fill('northWestVerticalL'),\n  ...Array(2).fill('northEastVerticalL'),\n  ...Array(1).fill('southEastHorizontalL'),\n  ...Array(1).fill('southWestHorizontalL'),\n  ...Array(1).fill('northWestHorizontalL'),\n  ...Array(1).fill('northEastHorizontalL'),\n];\n\nexport const generate = (pos, game, shape) => {\n  const positions = Helper.getPositionsFromStructure(shape, pos);\n  positions.forEach((position) => {\n    let tile = game.map[Helper.coordsToString(position)];\n    if (!tile) return;\n    if (MapHelper.tileHasTag({tile, tag: 'PROVIDING_COVER'})) {\n      generateCoverBlock(position, game);\n    }\n  });\n}\n\nexport const generateSingle = (pos, game) => generate(pos, game, SHAPES.point);\nexport const generateTwoVertically = (pos, game) => generate(pos, game, SHAPES.verticalLine);\nexport const generateTwoHorizontally = (pos, game) => generate(pos, game, SHAPES.horizontalLine);\nexport const generateSquare = (pos, game) => generate(pos, game, SHAPES.smallSquare);\nexport const generateRandom = (pos, game) => {\n  const shape = SHAPES[Helper.getRandomInArray(shapeChanceTable)];\n  generate(pos, game, shape);\n};","import uuid from 'uuid/v1';\nimport {merge} from 'lodash';\n\nexport class Mode {\n  constructor({\n    game = null,\n    data = {},\n  }) {\n    let id = uuid();\n    this.id = id;\n    this.game = game;\n    this.data = data;\n    this.infoBlocks = {}\n    this.progressBars = {}\n  }\n\n  initialize() {}\n\n  update() {}\n\n  createOrUpdateInfoBlock(id, value) {\n    merge(this.infoBlocks, {[id]: value})\n  }\n}","import {Ammo as AmmoEntity} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Ammo = (engine) => new AmmoEntity({\n  game: engine.game,\n  name: 'Ammo',\n  passable: true,\n  renderer: {\n    character: '||',\n    sprite: '',\n    background: COLORS.gray,\n    color: COLORS.base3,\n  },\n});","import * as Constant from '../../constants';\nimport {Grenade as GrenadeEntity} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Grenade = (engine, range) => new GrenadeEntity({\n  game: engine.game,\n  name: 'Grenade',\n  passable: true,\n  renderer: {\n    character: 'x',\n    sprite: '',\n    color: COLORS.red,\n    background: COLORS.base02,\n  },\n  flammability: 0,\n  explosivity: 3,\n  attackDamage: 10,\n  speed: Constant.ENERGY_THRESHOLD * range,\n  energy: 0,\n  range,\n})\n","import { Jacinto } from './Jacinto/jacinto'\n\nexport default {\n  Jacinto,\n}","import * as Constant from '../../constants';\nimport * as Helper from '../../../helper';\nimport * as Item from '../../items';\nimport * as MapHelper from '../../Maps/helper';\nimport { generate as generateBuilding } from '../../Maps/generator';\nimport * as CoverGenerator from '../../Maps/coverGenerator';\nimport { CoverWall, Debris, Bandit, RangedBandit, EmergenceHole } from '../../Entities/index';\nimport { MESSAGE_TYPE } from '../../message';\nimport { Mode } from '../default';\nimport SOUNDS from '../../sounds';\nimport * as _ from 'lodash';\nimport {COLORS, TILE_KEY} from './theme';\nimport { Ammo } from '../../Items/Pickups/Ammo';\nimport { Grenade } from '../../Items/Weapons/Grenade';\nconst MAP_DATA = require('../../Maps/castle.json');\n\nexport class Jacinto extends Mode {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.data = {\n      level: 1,\n      highestLevel: null,\n      turnCount: 0,\n    };\n    this.dataByLevel = [\n      {\n        enemies: Array(4).fill('Grub'),\n        emergenceHoles: 2,\n        ammoLoot: 2,\n        grenadeLoot: 1,\n      },\n      {\n        enemies: Array(6).fill('Grub'),\n        emergenceHoles: 3,\n        ammoLoot: 1,\n        grenadeLoot: 0,\n      },\n      {\n        enemies: Array(12).fill('Grub'),\n        emergenceHoles: 0,\n        ammoLoot: 3,\n        grenadeLoot: 1,\n      },\n      {\n        enemies: [],\n        emergenceHoles: 5,\n        ammoLoot: 2,\n        grenadeLoot: 0,\n      },\n      {\n        enemies: Array(10).fill('Grub'),\n        emergenceHoles: 4,\n        ammoLoot: 1,\n        grenadeLoot: 0,\n      },\n      {\n        enemies: [],\n        emergenceHoles: 12,\n        ammoLoot: 20,\n        grenadeLoot: 5,\n      },\n      {\n        enemies: [...Array(4).fill('Grub'), 'Skorge'],\n        emergenceHoles: 6,\n        ammoLoot: 20,\n        grenadeLoot: 2,\n      },\n    ]\n  }\n\n  createHorizontalRoad (y, length, x = 0) {\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      { x, y},\n      4,\n      length,\n      'ROAD_EDGE',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      { x, y: y + 1},\n      2,\n      length,\n      'ROAD',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n  }\n\n  createVerticalRoad (x, length, y = 0) {\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      { x, y },\n      length,\n      3,\n      'ROAD_EDGE',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      { x: x + 1, y },\n      length,\n      1,\n      'ROAD',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n  }\n\n  createVerticalRoadGoingNorthAndSouth = () => (x) => this.createVerticalRoad(x, this.game.mapHeight);\n  createVerticalRoadGoingNorth = (fromY) => (x) => this.createVerticalRoad(x, (fromY) + 1);\n  createVerticalRoadGoingSouth = (fromY) => (x) => this.createVerticalRoad(x, (this.game.mapHeight - fromY) - 1, (fromY) + 1);\n\n  createCityBlockLevel (numberOfVerticalRoads, numberOfBuildings) {\n    // Generates the main road\n    const mainRoadY = this.game.mapHeight / 4\n    this.createHorizontalRoad(mainRoadY, this.game.mapWidth)\n\n    // Generates roads to run the height of the map\n    Array(numberOfVerticalRoads).fill('').forEach(() => {\n      const x = Helper.getRandomIntInclusive(0, this.game.mapWidth);\n      const generateRoad = Helper.getRandomInArray([\n        this.createVerticalRoadGoingNorth(mainRoadY),\n        this.createVerticalRoadGoingSouth(mainRoadY),\n        this.createVerticalRoadGoingNorthAndSouth(mainRoadY),\n      ]);\n      generateRoad(x)\n    })\n\n    Array(numberOfBuildings).fill('').forEach(() => {\n      let groundTiles = this.getEmptyGroundTileKeys()\n      let pos = Helper.getRandomInArray(groundTiles);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      const unitCount = Helper.getRandomIntInclusive(1, 6);\n      // const unitCount = 4\n      const unitSize = Helper.getRandomInArray([3, 4, 6]);\n      generateBuilding(this.game.map, posXY[0], posXY[1], unitCount, unitSize);\n    })\n  }\n\n  initialize () {\n    super.initialize();\n    this.game.tileKey = TILE_KEY\n    this.game.createEmptyLevel();\n    this.game.initializeMapTiles();\n    // this.game.createCustomLevel(MAP_DATA);\n\n    this.setWaveData();\n\n    // Generates a safe zone on left-hand edge of map for player to start\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      { x: 0, y: 0 },\n      this.game.mapHeight,\n      1,\n      'SAFE',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n  \n    const numberOfVerticalRoads = Helper.getRandomIntInclusive(0, 5);\n    const numberOfBuildings = Helper.getRandomIntInclusive(0, 10);\n    this.createCityBlockLevel(numberOfVerticalRoads, numberOfBuildings);\n\n    let floorTiles = Object.keys(this.game.map).filter((key) => this.game.map[key].type === 'FLOOR')\n\n    this.placePlayersInSafeZone();\n    const player = this.game.getFirstPlayer();\n    if (player) player.upgrade_points += 1;\n\n    // adding emergence holes\n    for (let index = 0; index < this.data.emergenceHoles; index++) {\n      let pos = Helper.getRandomInArray(this.getEmptyTileKeys());\n      if (!pos) break;\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addEmerenceHole({ x: posXY[0], y: posXY[1] });\n    }\n\n    // adding cover blocks\n    const numberOfCoverStructures = 5 + this.data.enemies.length;\n    \n    let coverEligibleTiles = Object.keys(this.game.map).filter((key) =>  ['ROAD', 'DOOR', 'EMERGENCE_GROUND'].includes(this.game.map[key].type))\n    for (let index = 0; index < numberOfCoverStructures; index++) {\n      let pos = Helper.getRandomInArray(coverEligibleTiles);\n      if (!pos) break;\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      const position = { x: posXY[0], y: posXY[1] };\n      CoverGenerator.generateRandom(position, this.game);\n    }\n\n    // adding  ammo loot\n    for (let index = 0; index < this.data.ammoLoot; index++) {\n      let pos = Helper.getRandomInArray(floorTiles);\n      if (!pos) break;\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addAmmoLoot({ x: posXY[0], y: posXY[1] });\n    }\n\n    // adding  grenade loot\n    for (let index = 0; index < this.data.grenadeLoot; index++) {\n      let pos = Helper.getRandomInArray(floorTiles);\n      if (!pos) break;\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addGrenadeLoot({ x: posXY[0], y: posXY[1] });\n    }\n\n      // adding enemies\n    this.data.enemies.forEach((enemyName) => {\n      let pos = Helper.getRandomInArray(this.getEmptyGroundTileKeys());\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this[`add${enemyName}`]({ x: posXY[0], y: posXY[1] });\n    })\n  }\n\n  // TODO curry these funcs\n  getEmptyTileKeys (keys = Object.keys(this.game.map)) {\n    return keys.filter((key) => !!!this.game.map[key].entities.length)\n  }\n\n  getEmptyGroundTileKeys (keys = Object.keys(this.game.map)) {\n    return this.getEmptyTileKeys(keys).filter((key) => this.game.map[key].type === 'GROUND')\n  }\n\n  getEmptyFloorTileKeys (keys = Object.keys(this.game.map)) {\n    return this.getEmptyTileKeys(keys).filter((key) => this.game.map[key].type === 'FLOOR')\n  }\n\n  getPlayers () {\n    return this.game.engine.actors.filter((actor) => actor.entityTypes.includes('PLAYING'))\n  }\n\n  updateUI() {\n    this.createOrUpdateInfoBlock(\n      'gameProgress',\n      { \n        text: `${this.data.level - 1} of  ${this.dataByLevel.length} city blocks cleared.` \n      }\n    );\n  }\n\n  checkCoverAnimations() {\n    this.game.engine.actors.forEach((actor) => {\n      if (actor.entityTypes.includes('USES_COVER')) {\n        if (actor.resetCoverAnimations());\n      }\n    })\n  }\n\n  update () {\n    super.update();\n    this.checkCoverAnimations();\n    this.updateUI();\n    if (this.hasWon()) {\n      this.game.toWin()\n    }\n    if (this.hasLost()) {\n      SOUNDS.lose.play();\n      this.game.toLose();\n      this.reset();\n      this.game.initializeGameData();\n    }\n    if (this.levelComplete()) {\n      this.nextLevel();\n      this.setWaveData();\n\n      // a hack to persist player data\n      // this would persist all existing actors however\n      this.initialize();\n      // this.game.initializeGameData();\n    }\n  }\n  \n  //Extras\n  setLevel (level) {\n    this.data.level = level;\n    this.data.turnCount = 0;\n  }\n\n  nextLevel () {\n    this.setLevel(this.data.level + 1);\n  }\n\n  reset () {\n    this.setLevel(1);\n    this.initialize();\n  }\n\n  setWaveData () {\n    const level = this.data.level - 1\n    const nextLevelData = _.get(this.dataByLevel, level, {});\n    this.data = {...this.data, ...nextLevelData}\n  }\n\n  levelComplete () {\n    const playerOnExit = this.playerIsOnExit();\n    const enemiesDefeated = this.enemiesDefeated();\n    if (enemiesDefeated) {\n      this.activateExitTiles();\n    }\n    return playerOnExit && enemiesDefeated; \n  }\n\n  enemiesDefeated () {\n    return this.game.engine.actors.filter((actor) => actor['faction'] === 'LOCUST').length <= 0\n  }\n\n  hasWon () {\n    return this.data.level > this.dataByLevel.length;\n  }\n\n  hasLost () {\n    let players = this.getPlayers()\n    if (!players.length) return true;\n    else if (players.length) {\n      if (players[0].durability <= 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  addEmerenceHole(pos) {\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      {x: pos.x - 1, y: pos.y - 1},\n      3,\n      3,\n      'EMERGENCE_GROUND',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    // create new fire actor and place\n    let entity = new EmergenceHole({\n      name: 'Hole',\n      pos,\n      game: this.game,\n      passable: true,\n      renderer: {\n        character: '',\n        sprite: '',\n        color: COLORS.locust1,\n        background: COLORS.base04,\n      },\n      timeToSpread: 1,\n      spreadCount: 3,\n      durability: 1,\n      faction: 'LOCUST',\n      speed: Constant.ENERGY_THRESHOLD,\n      getSpawnedEntity: (spawnPosition) => {\n        let players = this.getPlayers()\n        let targetEntity = players[0]\n        const banditStats = this.getBanditStats();\n        let entity = new banditStats.entityClass({\n          targetEntity,\n          pos: spawnPosition,\n          renderer: banditStats.renderer,\n          name: banditStats.name,\n          game: this.game,\n          actions: [],\n          attackDamage: banditStats.attackDamage,\n          durability: banditStats.durability,\n          speed: banditStats.speed,\n          faction: 'LOCUST',\n          onDestroy: (actor) => {\n            const chance = Math.random();\n            if (chance <= 0.05) {\n              this.addAmmoLoot(actor.getPosition());\n            } else if (chance <= 0.1) {\n              this.addGrenadeLoot(actor.getPosition());\n            }\n          },\n          // directional projectile destruction breaks engine\n          getProjectile: ({ pos, targetPos, direction, range }) => Item.directionalKunai(this.game.engine, { ...pos }, direction, range)\n          // getProjectile: ({ pos, targetPos, direction, range }) => Item.kunai(game.engine, { ...pos }, { ...targetPos })\n        });\n\n        return entity\n      },\n      onDestroy: () => this.game.map[Helper.coordsToString(pos)].type = 'EMERGENCE_DESTROYED',\n    });\n\n    if (this.game.placeActorOnMap(entity)) {\n      this.game.engine.addActor(entity);\n      this.game.draw();\n    };\n  }\n\n  createAmmoStack(amount, pos) {\n    return Array(amount).fill('').map((i) => {\n      const ammo = Ammo(this.game.engine);\n      ammo.pos = pos;\n      return ammo;\n    });\n  }\n\n  addAmmoLoot (pos) {\n    this.createAmmoStack(5, pos).forEach((entity) => {\n      this.game.placeActorOnMap(entity)\n    })\n  }\n\n  addGrenadeLoot (pos) {\n    const entity = Grenade(this.game.engine, 6);\n    entity.pos = pos;\n    this.game.placeActorOnMap(entity)\n  }\n\n  getBanditStats () {\n    let banditLevels = [\n      {\n        name: 'Grub',\n        renderer: {\n          character: Helper.getRandomInArray(['g']),\n          color: COLORS.flesh2,\n          background: COLORS.flesh1,\n          sprite: '',\n          // sprite: '',\n        },\n        durability: 3,\n        attackDamage: 1,\n        speed: 100,\n        entityClass: RangedBandit\n      },\n      {\n        name: 'Grub Scout',\n        renderer: {\n          character: Helper.getRandomInArray(['s']),\n          color: COLORS.flesh1,\n          background: COLORS.flesh2,\n          sprite: '',\n          // sprite: '',\n        },\n        durability: 1,\n        attackDamage: 1,\n        speed: 500,\n        entityClass: RangedBandit\n      },\n      {\n        name: 'Wretch',\n        renderer: {\n          character: Helper.getRandomInArray(['w']),\n          color: COLORS.flesh1,\n          background: COLORS.flesh3,\n          sprite: '',\n        },\n        durability: 1,\n        attackDamage: 1,\n        speed: 500,\n        entityClass: Bandit\n      },\n      {\n        name: 'Big Grub',\n        renderer: {\n          character: Helper.getRandomInArray(['B']),\n          color: COLORS.locust2,\n          background: COLORS.flesh1,\n          sprite: '',\n        },\n        durability: 4,\n        attackDamage: 3,\n        speed: 100,\n        entityClass: Bandit\n      },\n    ]\n    return Helper.getRandomInArray(banditLevels);\n  }\n\n  addGrub (pos) {\n    let players = this.getPlayers()\n    let targetEntity = players[0]\n    const banditStats = this.getBanditStats();\n    let entity = new banditStats.entityClass({\n      targetEntity,\n      pos,\n      renderer: banditStats.renderer,\n      name: banditStats.name,\n      game: this.game,\n      actions: [],\n      attackDamage: banditStats.attackDamage,\n      durability: banditStats.durability,\n      speed: banditStats.speed,\n      faction: 'LOCUST',\n      onDestroy: (actor) => {\n        const chance = Math.random();\n        if (chance <= 0.05) {\n          this.addAmmoLoot(actor.getPosition());\n        } else if (chance <= 0.1) {\n          this.addGrenadeLoot(actor.getPosition());\n        }\n      },\n      // directional projectile destruction breaks engine\n      getProjectile: ({ pos, targetPos, direction, range }) => Item.directionalKunai(this.game.engine, { ...pos }, direction, range)\n      // getProjectile: ({ pos, targetPos, direction, range }) => Item.kunai(game.engine, { ...pos }, { ...targetPos })\n    })\n    if (this.game.placeActorOnMap(entity)) {\n      this.game.engine.addActor(entity);\n      // this.game.draw();\n    };\n  }\n  \n  addSkorge (pos) {\n    let players = this.getPlayers()\n    let targetEntity = players[0]\n    let entity = new Bandit({\n      targetEntity,\n      pos,\n      renderer: {\n        sprite: '',\n        character: 'S',\n        color: COLORS.flesh1,\n        background: COLORS.base04,\n      },\n      name: 'Skorge',\n      game: this.game,\n      attackDamage: 8,\n      durability: 40,\n      speed: Constant.ENERGY_THRESHOLD * 5,\n      faction: 'LOCUST',\n      // directional projectile destruction breaks engine\n      // getProjectile: ({ pos, targetPos, direction, range }) => Item.directionalKunai(this.game.engine, { ...pos }, direction, range)\n      // getProjectile: ({ pos, targetPos, direction, range }) => Item.kunai(game.engine, { ...pos }, { ...targetPos })\n    })\n    if (this.game.placeActorOnMap(entity)) {\n      this.game.engine.addActor(entity);\n    };\n  }\n\n  placePlayersInSafeZone () {\n    let players = this.getPlayers()\n    const keys = Object.keys(this.game.map).filter((key) => this.game.map[key].type == 'SAFE');\n    players.forEach((player) => {\n      const key = keys.shift();\n      if (key) {\n        const position = {\n          x: parseInt(key.split(',')[0]),\n          y: parseInt(key.split(',')[1]),\n        }\n        player.pos = {x: position.x, y: player.pos.y};\n        this.game.placeActorOnMap(player)\n      }\n    })\n  }\n\n  playerIsOnExit() {\n    const player = this.game.getFirstPlayer();\n    if (player) {\n      const tile = this.game.map[Helper.coordsToString(player.pos)];\n      if (tile.type === 'EXIT') {\n        return true;\n      }\n    }\n    return false\n  }\n\n  activateExitTiles() {\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      { x: this.game.mapWidth - 3, y: 0 },\n      this.game.mapHeight,\n      3,\n      'EXIT',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n  }\n\n}\n","import React from 'react';\nimport * as ROT from 'rot-js';\nimport * as _ from 'lodash';\nimport * as Constant from './constants';\nimport * as Helper from '../helper';\nimport * as Message from './message';\nimport { Display } from './Display/konvaCustom';\nimport Mode from './Modes/index';\nimport * as MapHelper from './Maps/helper';\n\n// const MAP_DATA = require('./Maps/castle.json');\n// const SOLANGE = require('./Data/solange.json');\n\nconst MAP_WIDTH = 50;\nconst MAP_HEIGHT = 25;\n\nconst TILE_OFFSET = 0;\n\nconst TILE_WIDTH = 26;\nconst TILE_HEIGHT = TILE_WIDTH;\n\nconst canvasWidth = (MAP_WIDTH * TILE_WIDTH) + TILE_OFFSET;\nconst canvasHeight = (MAP_HEIGHT * TILE_HEIGHT) + TILE_OFFSET;\n\nexport class Game {\n  constructor({\n    engine = null,\n    map = {},\n    entityMap = {},\n    entityDictionary = {},\n    mapInitialized = false,\n    tileMap = {},\n    mapWidth = MAP_WIDTH,\n    mapHeight = MAP_HEIGHT,\n    cameraWidth = MAP_WIDTH,\n    cameraHeight = MAP_HEIGHT,\n    tileWidth = TILE_WIDTH,\n    tileHeight = TILE_HEIGHT,\n    tileOffset = TILE_OFFSET,\n    getSelectedCharacter = () => false,\n    spriteMode = true,\n    tileKey = Constant.TILE_KEY,\n    mode = Mode.Flume,\n    messages = [],\n  }) {\n    this.engine = engine;\n    this.map = map;\n    this.entityMap = entityMap;\n    this.entityDictionary = entityDictionary;\n    this.mapInitialized = mapInitialized;\n    this.tileMap = tileMap;\n    this.mapWidth = mapWidth;\n    this.mapHeight = mapHeight;\n    this.cameraWidth = cameraWidth;\n    this.cameraHeight = cameraHeight;\n    this.tileWidth = tileWidth;\n    this.tileHeight = tileHeight;\n    this.tileOffset = tileOffset;\n    this.display = new Display({\n      containerId: 'display',\n      width: canvasWidth,\n      height: canvasHeight,\n      tileWidth: tileWidth,\n      tileHeight: tileHeight,\n      tileOffset: tileOffset,\n      game: this,\n    });\n    this.spriteMode = spriteMode;\n    this.tileKey = tileKey;\n    this.mode = new mode({game: this});\n    this.messages = messages;\n    this.getSelectedCharacter = getSelectedCharacter;\n  }\n\n  initializeMode () {\n    this.mode.initialize();\n  }\n  \n  updateMode () { // this is run every game turn\n    this.mode.update();\n  }\n\n  randomlyPlaceActorOnMap(actor) {\n    let kill = 0;\n    let placed = false;\n    while (!placed) {\n      let pos = Helper.getRandomPos(this.map).coordinates\n      if (this.canOccupyPosition(pos, actor)) {\n        let tile = this.map[Helper.coordsToString(pos)]\n        actor.pos = { ...pos }\n        tile.entities.push(actor);\n        placed = true;\n      }\n      kill += 1;\n      if (kill >= 100) {\n        placed = true;\n      }\n    }\n    return placed;\n  }\n\n  randomlyPlaceAllActorsOnMap() {\n    this.engine.actors.forEach((actor) => {\n      this.randomlyPlaceActorOnMap(actor);\n    })\n  }\n\n  placeActorsOnMap() {\n    this.engine.actors.forEach((actor) => {\n      let tile = this.map[Helper.coordsToString(actor.pos)]\n      if (tile) {\n        tile.entities.push(actor);\n      } else {\n        console.log(`could not place ${actor.id}: ${actor.name} on map`);\n      }\n    })\n  }\n\n  placeActorOnMap(actor) {\n    let tile = this.map[Helper.coordsToString(actor.pos)]\n    if (tile) {\n      tile.entities.push(actor);\n      return true\n    } else {\n      console.log(`could not place ${actor.id}: ${actor.name} on map`);\n      return false\n    }\n  }\n\n  removeActorFromMap (actor) {\n    let tile = this.map[Helper.coordsToString(actor.pos)]\n    if (!tile) return false;\n    this.map[Helper.coordsToString(actor.pos)].entities = tile.entities.filter((ac) => ac.id !== actor.id);\n    return true;\n  }\n\n  createLevel () {\n    let digger = new ROT.Map.Arena(this.mapWidth, this.mapHeight);\n    // let digger = new ROT.Map.Rogue();\n    // let digger = new ROT.Map.DividedMaze();\n    // let digger = new ROT.Map.EllerMaze();\n    // let digger = new ROT.Map.Cellular();\n    // let digger = new ROT.Map.Digger(this.mapWidth, this.mapHeight);\n    // let digger = new ROT.Map.IceyMaze();\n    // let digger = new ROT.Map.Uniform();\n    let freeCells = [];\n    let digCallback = function (x, y, value) {      \n      let key = x + \",\" + y;\n      let type = 'GROUND';\n      if (value) { \n        type = 'WALL';\n        // type = 'WATER';\n      }\n      MapHelper.addTileToMap({map: this.map, key, tileKey: this.tileKey, tileType: type})\n      freeCells.push(key);\n    }\n    digger.create(digCallback.bind(this));\n  }\n\n  createEmptyLevel () {\n    for (let i = 0; i < this.mapHeight; i ++) {\n      for (let j = 0; j < this.mapWidth; j ++) {\n        const key = `${j},${i}`\n        // let type = 'GROUND';\n        let type = Helper.getRandomInArray(['GROUND', 'GROUND_ALT', 'GROUND_ALT', 'GROUND_ALT']);\n        MapHelper.addTileToMap({map: this.map, key, tileKey: this.tileKey, tileType: type})\n      }\n    }\n  }\n\n  createCustomLevel (data) {\n    Object.keys(data.tiles).forEach((key, i) => {\n      const tile = data.tiles[key];\n      let type = tile.data.type;\n      if (!type) {\n        type = 'GROUND';\n      }\n      MapHelper.addTileToMap({map: this.map, key, tileKey: this.tileKey, tileType: type})\n    })\n  }\n\n  canOccupyPosition (pos, entity = {passable: false}) {\n    let result = false;\n    let targetTile = this.map[Helper.coordsToString(pos)];\n    if (targetTile) {\n      let hasImpassableEntity = targetTile.entities.filter((entity) => !entity.passable).length > 0;\n      if (!hasImpassableEntity || entity.passable) {\n        let tile = this.map[Helper.coordsToString(pos)];\n        if (this.tileKey[tile.type].passable) {\n          result = true;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  rangedCursorCanOccupyPosition (pos, entity = {passable: false}) {\n    let result = false;\n    let targetTile = this.map[Helper.coordsToString(pos)];\n    if (targetTile) {\n      let tile = this.map[Helper.coordsToString(pos)];\n      if (this.tileKey[tile.type].passable) {\n        result = true;\n      }\n    }\n\n    return result;\n  }\n\n  cursorCanOccupyPosition(pos) {\n    let result = false;\n    let targetTile = this.map[Helper.coordsToString(pos)];\n    if (targetTile) {\n      result = true;\n    }\n\n    return result;\n  }\n\n  show (document) {\n    this.display.initialize(document)\n  }\n\n  getRenderMap(fullMap, referencePosition, renderWidth, renderHeight, fullWidth, fullHeight) { \n    // create an object with only tile keys that should be rendered (around player)\n    // renderWidth/Height measured in tiles\n    // reference positon usually based on player pos\n    // position from fullMap key should be translated to 0,0 based on referencePos\n    \n    const renderPaddingX = Math.floor((renderWidth / 2));\n    const renderPaddingY = Math.floor((renderHeight / 2));\n    let offsetX = 0;\n    let offsetY = 0;\n    if (referencePosition) {\n      offsetX = referencePosition.x - renderPaddingX;\n      offsetY = referencePosition.y - renderPaddingY;\n    }\n    offsetX = Helper.clamp(offsetX, 0, fullWidth - renderWidth);\n    offsetY = Helper.clamp(offsetY, 0, fullHeight - renderHeight);\n    \n    let result = {}\n    for (let key in fullMap) {\n      let parts = key.split(\",\");\n      let x = parseInt(parts[0]);\n      let y = parseInt(parts[1]);\n      let finalX = x - offsetX;\n      let finalY = y - offsetY;\n      if (finalX >= 0 && finalX <= renderWidth) {\n        if (finalY >= 0 && finalY <= renderHeight) {\n          result[`${finalX},${finalY}`] = fullMap[key]\n        }\n      }\n    }\n    return result\n  }\n\n  processTileMap (callback) {\n    // const map = this.map;\n    // const map = this.getRenderMap(this.map, this.getPlayerPosition(), this.mapWidth, this.mapHeight);\n    // const map = this.getRenderMap(this.map, this.getPlayerPosition(), 50, 25, this.mapWidth, this.mapHeight);\n    const map = this.getRenderMap(this.map, this.getPlayerPosition(), this.cameraWidth, this.cameraHeight, this.mapWidth, this.mapHeight);\n    for (let key in map) {\n      let parts = key.split(\",\");\n      let x = parseInt(parts[0]);\n      let y = parseInt(parts[1]);\n      let tile = map[key];\n      // let { foreground, background } = this.tileKey[tile.type]\n      // Proto code to handle tile animations\n      let tileRenderer = this.tileKey[tile.type]\n      let nextFrame = this.animateTile(tile, tileRenderer);\n      let character = nextFrame.character;\n      let foreground = nextFrame.foreground;\n      let background = nextFrame.background;\n      \n      const renderedEntities = tile.entities.filter((entity) => entity.entityTypes.includes('RENDERING'))\n      if (renderedEntities.length > 0) {\n        let entity = renderedEntities[renderedEntities.length - 1]\n        nextFrame = this.animateEntity(entity);\n\n        character = nextFrame.character\n        foreground = nextFrame.foreground\n        if (nextFrame.background) {\n          background = nextFrame.background\n        }\n      }\n      callback(key, x, y, character, foreground, background);          \n    }\n  }\n\n  initializeMapTiles () {\n    if (this.mapInitialized) return false;\n    this.mapInitialized = true;\n    this.processTileMap((key, x, y, character, foreground, background) => {\n      let node = this.display.createTile(x, y, character, foreground, background);\n      this.tileMap[key] = node;\n    });\n  }\n\n  getPlayers () {\n    return this.engine.actors.filter((actor) => actor.entityTypes.includes('PLAYING'))\n  }\n\n  getFirstPlayer () {\n    const players = this.getPlayers();\n    if (players.length) return players[0]\n    return null\n  }\n\n  getPlayerPosition () {\n    const player = this.getFirstPlayer();\n    if (player) return player.getPosition();\n    return null\n  }\n  \n  draw () {\n    this.processTileMap((key, x, y, character, foreground, background) => {\n      this.display.updateTile(this.tileMap[key], character, foreground, background);\n    });\n    this.display.draw();\n  }\n\n  getEntityRenderer (renderer) {\n    // if sprite mode is on and the renderer has a sprite defined, use that\n    if (this.spriteMode && renderer.hasOwnProperty('sprite')) {\n      return {...renderer, character: renderer.sprite, foreground: renderer.color}\n      // return {character: renderer.sprite, foreground: renderer.background, background: ''}\n    }\n    // else us the ascii character\n    return {...renderer, foreground: renderer.color}\n  }\n\n  getTileRenderer (renderer) {\n    // if sprite mode is on and the renderer has a sprite defined, use that\n    if (this.spriteMode && renderer.hasOwnProperty('sprite')) {\n      return {...renderer, character: renderer.sprite}\n    }\n    // else us the ascii character\n    return renderer\n  }\n  \n  animateEntity (entity) {\n    let renderer = entity.getRenderer();\n    let { character, foreground, background } = this.getEntityRenderer(renderer)\n    if (renderer.animation) {\n      let frame = this.getEntityRenderer(renderer.animation[entity.currentFrame]);\n      character = frame.character;\n      foreground = frame.foreground;\n      background = frame.background;\n      entity.currentFrame = (entity.currentFrame + 1) % renderer.animation.length;\n    }\n    return {character, foreground, background}\n  }\n\n  animateTile (tile, renderer) {\n    let {character, foreground, background} = this.getTileRenderer(renderer)\n    if (renderer.animation) {\n      let frame = this.getTileRenderer(renderer.animation[tile.currentFrame]);\n      character = frame.character\n      foreground = frame.foreground;\n      background = frame.background;\n      tile.currentFrame = (tile.currentFrame + 1) % renderer.animation.length;\n    }\n    return {character, foreground, background}\n  }\n\n  addActor (actor, engine = this.engine) {\n    let isPlaced = this.placeActorOnMap(actor); // replace with placeActorOnMap\n    if (!isPlaced) { return false }\n    engine.actors.push(actor);\n    this.draw();\n    return true\n  }\n\n  placeAndDrawActor (actor) {\n    this.placeActorsOnMap(); // replace with placeActorOnMap\n    this.draw();\n  }\n\n  removeActor (actor) {\n    this.engine.actors = this.engine.actors.filter((ac) => ac.id !== actor.id);\n    // this.engine.currentActor = this.engine.actors.length - 1; // should remove need for this line\n    // this.engine.currentActor = (this.engine.currentActor) % this.engine.actors.length;\n    // this.engine.currentActor = (this.engine.currentActor + 1) % this.engine.actors.length;\n    this.removeActorFromMap(actor);\n    this.draw();\n  }\n\n  initializeUI (presserRef, document) {\n    this.show(document);\n    presserRef.current.focus();\n  }\n\n  initializeGameData () {\n    this.engine.game = this;\n    const selectedCharacter = this.getSelectedCharacter();\n    this.engine.actors = [selectedCharacter];\n    this.engine.actors.forEach((actor) => {\n      actor.game = this;\n    });\n    // this.createEmptyLevel();\n    // this.initializeMapTiles();\n    this.initializeMode();\n    this.draw();\n  }\n\n  initialize (presserRef, document) {\n    this.initializeUI(presserRef, document);\n    this.initializeGameData();\n    // hack to register sprite mode\n    setTimeout(() => {\n      this.spriteMode = false;\n      this.draw()\n    }, 500)\n    setTimeout(() => {\n      this.spriteMode = true;\n      this.draw()\n    }, 500)\n    // end hack\n  }\n\n  addMessage (text, type) {\n    const message = new Message.Message({text, type})\n    this.messages.push(message);\n  }\n}\n\n\n/************************** UI ********************************/\nexport const handleKeyPress = (event, engine) => {\n  if (!engine.isRunning) {\n    let actor = engine.actors[engine.currentActor];\n    let keymap = null;\n    try {\n      keymap = actor.getKeymap();\n    } catch (e) {\n      console.log('keypress error');\n      console.log(e);\n    }\n    if (keymap) {\n      let code = event.key;\n      if (!(code in keymap)) { return; }\n      const getAction = keymap[code];\n      const action = getAction();\n      // const action = keymap[code];\n      action.setAsNextAction();\n      engine.start();\n    }\n  }\n  return;\n}\n\nexport const DisplayElement = (presserRef, handleKeyPress, engine) => {\n  return (\n    <div\n      id='display'\n      ref={presserRef}\n      onKeyDown={(event) => handleKeyPress(event, engine)}\n      // onKeyUp={(event) => handleKeyPress(event, engine)}\n      tabIndex='0'\n    />\n  )\n}\n/************************** UI ********************************/\n","import React from 'react';\nimport { SCREENS } from '../Screen/constants';\nimport * as _ from 'lodash';\n\nclass Instructions extends React.Component {\n  render() {\n    const infoHeader = _.get(this.props.game, 'mode.infoHeader', null);\n    const infoBlocks = _.get(this.props.game, 'mode.infoBlocks', {});\n\n    return (\n      <div className=\"Instructions UI\">\n        {infoHeader && (<p className='flow-text'>{infoHeader}</p>)}\n        <div className='flow-text'>\n          <div \n            className='Instructions__block'\n            // onClick={() => this.props.setActiveScreen(SCREENS.TITLE)}\n            onClick={() => window.location.reload()}\n          >\n            <button className='btn btn-main'>\n              Restart\n            </button>\n          </div>\n          <div \n            className='Instructions__block'\n            onClick={() => this.props.toggleSpriteMode()}\n          >\n            <button className='btn btn-main'>\n              {\n                this.props.spriteMode ? (\n                  'ASCII mode'\n                ) : (\n                  'Sprite mode'\n                )\n              }\n            </button>\n          </div>\n          <div\n            className='Instructions__block'\n          >\n            <button data-target=\"jacinto_help\" className='btn btn-main modal-trigger'>\n              Help\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Instructions;","import React from 'react';\n\nfunction Button(props) {\n  let color = props['color'];\n  if (!color) color = 'grey';\n  return (\n    <button\n      onClick={props.onClick}\n      className={`Button btn ${color}`}\n    >\n      {props.children}  \n    </button>\n  )\n}\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\n\nclass Information extends React.Component {\n  render() {\n    let data = [\n      {\n        label: 'Wave',\n        value: `Current: ${this.props.game.mode.data.level}, Highest: ${this.props.game.mode.data.highestLevel}`,\n      },\n    ];\n\n    data = data.concat(\n      [\n        ...this.props.game.engine.actors.map((actor, index) => {\n          let result = {\n            label: actor.name,\n            // value: index,\n            value: `HP: ${actor.durability}, En/Sp: ${actor.energy}/${actor.speed}`,\n          };\n          if (index === this.props.game.engine.currentActor) {\n            result['color'] = 'red';\n          }\n          return result;\n        })\n      ]\n    )\n\n    return (\n      <div className=\"Information UI\">\n        {\n          data && (\n            data.map((item, index) => {\n              return (\n                <Button key={index} color={item['color']} onClick={() => null}>\n                  {`${item.label}: ${item.value}`}\n                </Button>\n              )\n            })\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Information;","import React from 'react';\n\nfunction Tooltip ({title = 'Effect', text = '', children}) {\n  return (\n    <div className=\"Tooltip\">\n      {children}\n      <div className=\"top\">\n        <h3>{title}</h3>\n        <p>{text}</p>\n        <i></i>\n      </div>\n    </div>\n  )\n}\n\nexport default Tooltip;\n","import React from 'react';\nimport * as _ from 'lodash';\nimport Tooltip from './Tooltip';\n\nfunction ResourceBlock({ resource, superScript, canPay }) {\n  const character = resource.renderer.sprite ? resource.renderer.sprite : resource.renderer.character\n  return (\n    <div className=\"ResourceBlock\" style={{\n      backgroundColor: canPay ? resource.renderer.background : '#616161',\n      color: canPay ? resource.renderer.color : '#bdbdbd',\n      borderColor: canPay ? resource.renderer.color : '#bdbdbd',\n      fontFamily: 'scroll-o-script',\n      width: superScript ? 'auto' : 20,\n    }}>\n      {`${superScript ? superScript + ' ' : ''}${character}`}\n    </div>\n  )\n}\n\nclass ActionBar extends React.Component {\n  render() {\n    return (  \n      <div className=\"ActionBar\">\n        <div className=\"CharacterActions\">\n          {\n            \n            this.props.keymap && (\n              Object.entries(this.props.keymap).map(([key, getAction], index) => {\n                const action = getAction();\n                const hidden = _.get(action, 'hidden', false);\n                const renderer = _.get(action, 'renderer', null);\n                const reqs = action.listPayableResources();\n\n                if (!hidden) {\n                  return (\n                    <Tooltip\n                      key={`${index}-label`}\n                      title={action.label}\n                      text={action.label + ` ${action.actor.name}`}\n                    >\n                      <div \n                        className=\"CharacterActions__item\"\n                        onClick={() => {\n                          action.setAsNextAction();\n                          if (!this.props.game.engine.isRunning) this.props.game.engine.start();\n                          this.props.game.refocus();\n                        }}\n                      >\n                        <div className=\"CharacterActions__item__label\">\n                          {key}\n                        </div>\n                        <div className=\"CharacterActions__item__content\" style={renderer && {\n                          backgroundColor: renderer.background,\n                          color: renderer.color,\n                          borderColor: renderer.color,\n                        }}>\n                          {action.label}\n                        </div>\n                        <div className=\"CharacterActions__item__resources\">\n                          {\n                            reqs.map((req, i) => {\n                              const numBlocks = req.getResourceCost();\n                              return numBlocks > 0 && (\n                                <ResourceBlock\n                                  key={`${i}-${req.name}-resource-block`}\n                                  superScript={numBlocks}\n                                  resource={req}\n                                  canPay={req.canPay}\n                                />\n                              )\n                            })\n                          }\n                        </div>\n                      </div>\n                    </Tooltip>\n                  )\n                }\n              })\n            )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ActionBar;","import React from 'react';\nimport * as _ from 'lodash';\nimport Tooltip from '../Tooltip';\nimport ActionBar from '../ActionBar';\n\nfunction Portrait ({actor}) {\n  return (\n    <div className=\"Portrait\" style={{\n      backgroundColor: actor.renderer.background, \n      color: actor.renderer.color,\n      borderColor: actor.renderer.color,\n    }}>\n      {actor.renderer.sprite ? actor.renderer.sprite : actor.renderer.character}\n    </div>\n  )\n}\n\nfunction StatusEffect ({effect}) {\n  return (\n    <div className=\"StatusEffects__effect\" style={{\n      backgroundColor: effect.renderer.background, \n      color: effect.renderer.color,\n      borderColor: effect.renderer.color,\n    }}>\n      {effect.renderer.sprite ? effect.renderer.sprite : effect.renderer.character}\n    </div>\n  )\n}\n\nfunction StatusEffects ({actor}) {\n  return (\n    <div className=\"StatusEffects\">\n      {\n        actor.game.engine.getStatusEffectsByActorId(actor.id).map((effect, i) => {\n          return (\n            <Tooltip \n              key={i}\n              title={effect.name}\n              text={effect.name}\n            >\n              <StatusEffect effect={effect} />\n            </Tooltip>\n          )\n        })\n      }\n    </div>\n  )\n}\n\nfunction NamePlate ({actor}) {\n  return (\n    <div className=\"NamePlate\">\n      {actor.name}\n    </div>\n  )\n}\n\nfunction ProgressBar ({\n  actor, \n  label, \n  colorFilled = 'red',\n  colorEmpty = 'gray',\n  attributePathMax, \n  attributePath, \n  unit,\n}) {\n  const valueMax = _.get(actor, attributePathMax, 0) / unit;\n  const valueCurrent = _.get(actor, attributePath, 0) / unit;\n  return (\n    <div className=\"ProgressBar\">\n      <div>\n        <span className='ProgressBar__label'>{label}</span>\n      </div>\n      <div>\n        <div className='ProgressBar__blips'>\n          {\n            Array(valueMax).fill(true).map((blip, index) => {\n              return (\n                <span \n                  key={index}\n                  className='ProgressBar__blips__blip' \n                  style={{backgroundColor: valueCurrent > index ? colorFilled : colorEmpty }}\n                />\n              )\n            })\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction CharacterCard ({actor, game}) {\n  return (\n    <div className='CharacterCard'>\n      <Portrait actor={actor}/>\n      <div>\n        <NamePlate actor={actor}/>\n        <ProgressBar \n          label='Action Points'\n          attributePath='energy'\n          attributePathMax='speed'\n          colorFilled='#ff9926'\n          unit={100}\n          actor={actor} \n        />\n        <ProgressBar \n          label='Health Points'\n          attributePath='durability'\n          attributePathMax='durabilityMax'\n          colorFilled='#dc322f'\n          unit={1}\n          actor={actor} \n        />\n        <ProgressBar \n          label='Upgrade Points'\n          attributePath='upgrade_points'\n          attributePathMax='upgrade_points'\n          colorFilled='#3e7dc9'\n          unit={1}\n          actor={actor} \n        />\n        <StatusEffects actor={actor} />\n      </div>\n      <div>\n        {/* <ActionBar keymap={game.visibleKeymap} game={game} /> */}\n        <ActionBar keymap={actor.getKeymap()} game={game} />\n      </div>\n    </div>\n  )\n}\n\nexport default CharacterCard;\n","import React from 'react';\nimport CharacterCard from './CharacterCard';\nimport * as _ from 'lodash';\n\nconst PlayerInformation = ({game}) => {\n  const actors = game.engine.actors.filter((actor) => actor.entityTypes.includes('PRESENTING_UI')).filter((actor) => actor.presentingUI)\n  return (\n    <div className=\"PlayerInformation Information UI\">\n      <div className='CharacterCard_Container'>\n        {\n          actors.map((actor, index) => <CharacterCard key={index} actor={actor} game={game} />)\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default PlayerInformation;","import React from 'react';\nimport Button from './Button';\n\nclass Inventory extends React.Component {\n  render() {\n    return (\n      <div className=\"Inventory UI\">\n        {\n          this.props.inventory && (\n            <div>\n              <div className='flow-text'>Inventory</div>\n              <div>\n                {\n                  this.props.inventory.map((slot, index) => {\n                    return (\n                      <Button key={index} onClick={() => null}>\n                        {`${slot.itemType} | x ${slot.items.length}`}\n                      </Button>\n                    )\n                  })\n                }\n              </div>\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Inventory;","import React from 'react';\n\nfunction Message (props) {\n  return (\n    <div\n      className='Message'\n      style={{\n        color: props.color,\n        backgroundColor: props.backgroundColor,\n        borderColor: props.color,\n      }}\n    >\n      {props.children}\n    </div>\n  )\n}\n\nclass Messages extends React.Component {\n  render() {\n    return (\n      <div className=\"Messages UI\">\n        <div className='flow-text center'>Messages</div>\n        {\n          this.props.messages && (\n            this.props.messages.map((message, index) => {\n              return (\n                <Message \n                  key={index} \n                  color={message.type.color}\n                  backgroundColor={message.type.backgroundColor}\n                >\n                  {`${message.text}`}\n                </Message>\n              )\n            })\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Messages;","import React from 'react';\nimport * as _ from 'lodash';\n\nfunction InfoBlocks(props) {\n  return (\n    <div>\n      {\n        _.map(_.get(props.game, 'mode.infoBlocks', {}), (value, key) => {\n          return (\n            <div key={key} className='Instructions__block Instructions__block--Jacinto'>\n              {value.text}\n            </div>\n          )\n        })\n      } \n    </div>\n  )\n}\n\nexport default InfoBlocks;\n","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nexport class EquipItemFromContainer extends Base {\n  // entities can only equip items from their container/inventory\n  constructor({ item, ...args }) {\n    super({ ...args });\n    this.item = item;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (this.item.equipmentType) {\n      let itemInSlot = this.actor.getItemInSlot(this.item.equipmentType);\n      if (itemInSlot) {\n        this.actor.addToContainer(itemInSlot);\n        this.actor.unequip(itemInSlot);\n      }\n      this.actor.removeFromContainer(this.item);\n      this.actor.equip(this.item.equipmentType, this.item);\n      this.game.addMessage(`${this.actor.name} equips ${this.item.name}.`, MESSAGE_TYPE.ACTION);\n      success = true;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import React from 'react';\nimport {\n  GiCrosshair,\n  GiBullets,\n  GiBackwardTime,\n  GiBarbedArrow,\n  GiBurningDot,\n} from \"react-icons/gi\";\nimport {EquipItemFromContainer} from '../../Actions/EquipItemFromContainer';\nimport {STAT_RENDERERS} from '../../Modes/Jacinto/theme';\n\nfunction StatBlock({stat}) {\n  const {getIcon, value, name} = stat;\n  const character = stat.renderer.sprite ? stat.renderer.sprite : stat.renderer.character\n  return (\n    <div \n      className=\"StatBlock\" \n      style={{\n        backgroundColor: stat.renderer.background,\n        color: stat.renderer.foreground,\n        borderColor: stat.renderer.foreground,\n        fontFamily: 'scroll-o-script',\n        width: stat.value !== null ? 'auto' : 20,\n      }}\n      title={name}\n    >\n      {\n        getIcon ? getIcon() : `${character}`\n      }\n      <span>&nbsp;{value}</span>\n    </div>\n  )\n}\n\nconst EquipmentCard = (props) => {\n  const {\n    game,\n    player,\n    data,\n  } = props;\n  const {\n    item,\n    equipped,\n    amount,\n    equipable,\n  } = data;\n\n  let needsReload = false;\n\n  let onClick = () => null;\n  if (equipable) {\n    const action = new EquipItemFromContainer({\n      item,\n      game,\n      energyCost: 0,\n      actor: player,\n      label: `Equip ${item.name}`,\n    });\n    onClick = () => {\n      game.refocus();\n      action.setAsNextAction();\n      game.engine.start();\n    }\n  }\n\n  let stats = [];\n  if (amount) {\n    stats.push({\n      name: 'amount left',\n      value: amount,\n      renderer: STAT_RENDERERS.amount,\n    })\n  }\n  if (item.hasOwnProperty('attackRange')) {\n    stats.push({\n      name: 'attack range',\n      value: item['attackRange'],\n      renderer: STAT_RENDERERS.attackRange,\n      getIcon: () => <GiBarbedArrow />,\n    })\n  }\n  if (item.hasOwnProperty('magazine')) {\n    stats.push({\n      name: 'shots before reload',\n      value: item.magazine,\n      renderer: STAT_RENDERERS.magazine,\n      getIcon: () => <GiBullets />,\n    })\n    if (item.magazine <= 0) {\n      needsReload = true;\n    }\n  }\n  if (item.hasOwnProperty('baseRangedAccuracy')) {\n    stats.push({\n      name: 'base accuracy',\n      value: `${Math.round(item['baseRangedAccuracy'] * 100)}%`,\n      renderer: STAT_RENDERERS.baseRangedAccuracy,\n      getIcon: () => <GiCrosshair />,\n    })\n  }\n  if (item.hasOwnProperty('baseRangedDamage')) {\n    stats.push({\n      name: 'base damage',\n      value: item['baseRangedDamage'],\n      renderer: STAT_RENDERERS.baseRangedDamage,\n      getIcon: () => <GiBurningDot />,\n    })\n  }\n  if (item.hasOwnProperty('attackDamage')) {\n    stats.push({\n      name: 'base melee damage',\n      value: item['attackDamage'],\n      renderer: STAT_RENDERERS.meleeDamage,\n    })\n  }\n  \n  return (\n    <div \n      className={`EquipmentCard ${equipped ? 'EquipmentCard--selected' : ''}`} \n      onClick={() => game.refocus()}\n    >\n      {needsReload && (\n        <div\n          className=\"EquipmentCard__reload_overlay\"\n          onClick={onClick}\n        >\n          <div className=\"EquipmentCard__reload_overlay__text\">Needs Reload</div>\n          <div className=\"EquipmentCard__reload_overlay__text\"><GiBackwardTime /></div>\n        </div>\n      )}\n      <div\n        className=\"EquipmentCard__item\"\n        onClick={onClick}\n      >\n        <div className=\"EquipmentCard__item__label\">\n          {item.name}\n        </div>\n        <div className=\"EquipmentCard__item__content\" style={item.renderer && {\n          backgroundColor: item.renderer.background,\n          color: item.renderer.color,\n          borderColor: item.renderer.color,\n        }}>\n          {item.renderer.sprite ? item.renderer.sprite : item.renderer.character}\n        </div>\n      </div>\n      <div className=\"EquipmentCard__item__stats\">\n        {\n          stats.map((stat, i) => {\n            return (\n              <StatBlock\n                key={`${i}-${stat.name}-resource-block`}\n                stat={stat}\n              />\n            )\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\nclass Equipment extends React.Component {\n  render() {\n    if (!this.props.player) return null;\n    const player = this.props.player;\n    const game = this.props.game;\n    let items = [];\n    player.equipment.forEach((slot) => {\n      if (slot.item) {\n        items.push({\n          item: slot.item,\n          equipped: true,\n        });\n      }\n    });\n    player.container.forEach((slot) => {\n      if (slot.items.length) {\n        const item = slot.items[0];\n        // disallow duplicates\n        if (items.filter((data) => data.item.name === item.name).length === 0) {\n          const equipable = item.entityTypes.includes('EQUIPABLE');\n          const amount = equipable ? null : slot.items.length;\n          items.push({\n            item,\n            amount,\n            equipable,\n            equipped: false,\n          })\n        }\n      }\n    });\n    return (\n      <div className=\"Equipment UI\">\n        {\n          <div>\n            <div className='flow-text'>Equipment</div>\n            <div>\n              {\n                items.map((item, index) => {\n                  return (\n                    <EquipmentCard \n                      key={index}\n                      game={game} \n                      player={player} \n                      data={item} \n                    />\n                  )\n                })\n              }\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default Equipment;","import React from 'react';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nfunction HelpContent() {\n  return (\n    <div className=\"Jacinto_Help\">\n      <div className=\"modal-content\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <div className=\"Jacinto_Help__section_header\">Goal</div>\n            <div className=\"Jacinto_Help__section_body\">\n              Defend Jacinto, the last human bastion on Sera. Move block by block and clear the city of \n              <span className=\"red-text\">&nbsp;Grubs</span> until you can locate and defeat their leader, \n              <span className=\"red-text\">&nbsp;Skorge</span>.\n            </div>\n          </div>\n          <div className=\"col s12 m6\">\n            <div className=\"Jacinto_Help__section_header\">Hints</div>\n            <div className=\"Jacinto_Help__section_body\">\n              <div>Destroy <span className=\"red-text\">Emergence Holes</span> ASAP.</div>\n              <div>Spend <span className=\"blue-text\">Upgrade Points</span>.</div>\n              <div>Weapon <span className=\"blue-text\">accuracy</span> decreases over distance.</div>\n              <div><span className=\"blue-text\">Grenades</span> can destroy walls as well as grubs, but be wary.</div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <div className=\"Jacinto_Help__section_header\">Controls</div>\n            <div className=\"Jacinto_Help__section_body\">\n              <div>Movement: WASD</div>\n              <div>Actions: click or key press</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default HelpContent;","import React from 'react';\nimport HelpContent from './HelpContent';\n\nfunction Help(props) {\n  React.useLayoutEffect(() => {\n    var elems = document.querySelectorAll(`#${props.id}`);\n    window.M.Modal.init(elems)\n  })\n  return (\n    <div id={props.id} className=\"modal\">\n      <HelpContent />\n      <div className=\"modal-footer\">\n        <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Close</a>\n      </div>\n    </div>\n  )\n}\n\nexport default Help;","import React from 'react';\nimport { SCREENS } from './constants';\nimport * as Engine from '../Engine/engine';\nimport * as Game from '../game';\nimport Instructions from '../UI/Instructions';\nimport Information from '../UI/Information';\nimport PlayerInformation from '../UI/Entity/PlayerInformation';\nimport Inventory from '../UI/Inventory';\n// import KeymapUI from '../UI/Keymap';\nimport KeymapUI from '../UI/ActionBar';\nimport Messages from '../UI/Messages';\nimport InfoBlocks from '../UI/InfoBlocks';\nimport Equipment from '../UI/Jacinto/Equipment';\nimport Help from '../UI/Jacinto/Help';\n\nclass Level extends React.Component {\n  constructor(props) {\n    super(props);\n    let ENGINE = new Engine.Engine({});\n    let game = new Game.Game({ \n      engine: ENGINE, \n      getSelectedCharacter: () => this.props.selectedCharacter.initialize(ENGINE),\n      mode: this.props.selectedMode.class,\n    })\n    this.state = {\n      game: game,\n      activeTab: 0,\n      spriteMode: game.spriteMode,\n    };\n    this.presserRef = React.createRef();\n  }\n\n  async componentDidMount() {\n    this.state.game.initialize(this.presserRef, document)\n    this.state.game['backToTitle'] = () => this.props.setActiveScreen(SCREENS.TITLE);\n    this.state.game['toLose'] = () => {\n      this.props.setActiveScreen(SCREENS.LOSE)\n    };\n    this.state.game['toWin'] = () => {\n      this.props.setActiveScreen(SCREENS.WIN)\n    };\n    this.state.game['refocus'] = () => this.refocus();\n    this.state.game.updateReact = (newGameState) => { this.setState({game: newGameState}) }\n    this.state.game.engine.start()\n  }\n\n  refocus () {\n    if (this.presserRef) this.presserRef.current.focus();\n  }\n\n  toggleSpriteMode () {\n    this.state.game.spriteMode = !this.state.game.spriteMode;\n    this.state.game.draw();\n    this.refocus();\n    this.setState({ spriteMode: this.state.game.spriteMode})\n  }\n\n  render() {\n    return (\n      <div className=\"Level\">\n        <div className='row'>\n          <div className='col s10'>\n            <div className='game_display_container'>\n              {Game.DisplayElement(this.presserRef, Game.handleKeyPress, this.state.game.engine)}\n            </div>\n            <Help id=\"jacinto_help\" />\n            <PlayerInformation game={this.state.game} />\n            {/* <Information game={this.state.game} /> */}\n            <Instructions game={this.state.game} spriteMode={this.state.game.spriteMode} setActiveScreen={this.props.setActiveScreen} toggleSpriteMode={this.toggleSpriteMode.bind(this)} />\n          </div>\n          <div className='col s2'>\n            <Equipment game={this.state.game} player={this.state.game.getFirstPlayer()} />\n            <InfoBlocks game={this.state.game} />\n            {/* <Messages messages={this.state.game.messages.slice(-5).reverse()} /> */}\n            {/* <Inventory inventory={this.state.game.visibleInventory} /> */}\n          </div>\n          {/* <div className='col s2'> */}\n          {/* </div> */}\n          {/* <button className='btn' onClick={() => this.props.setActiveScreen(SCREENS.TITLE)}>Quit</button> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Level;\n","import React from 'react';\nimport {\n  GiCog,\n  GiStarSkull,\n} from \"react-icons/gi\";\nimport { SCREENS } from './constants';\nimport HelpContent from '../UI/Jacinto/HelpContent';\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          className=\"Title__content\"\n          style={{\n\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: '#07111Dff',\n            // backgroundImage: `url(\"${window.PUBLIC_URL}/icons/512x512.png\")`,\n            // backgroundRepeat: 'no-repeat',\n            // backgroundPosition: 'center',\n            // backgroundPositionY: '10px'\n\n          }}\n        >\n          <HelpContent />\n          <h2 className=\"Title__header\"><GiCog/></h2>\n          <button\n            style={{\n              margin: 'initial',\n            }}\n            className={`CharacterSelect__button btn btn-main`}\n            onClick={() => {\n              this.props.setActiveScreen(SCREENS.CHARACTER_SELECT)\n            }}\n          >\n            Defend Jacinto\n          </button>\n          <h2 className=\"Title__header\"><GiStarSkull /></h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;","import React from 'react';\nimport {\n  GiStarSkull,\n} from \"react-icons/gi\";\nimport { SCREENS } from './constants';\n\n\nclass Lose extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          className=\"Title__content\"\n          style={{\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: '#222',\n          }}\n        >\n          <h2 className=\"Title__header\">\n            <GiStarSkull />\n            <GiStarSkull />\n            <GiStarSkull />\n          </h2>\n          <button\n            style={{\n              margin: 'initial',\n            }}\n            className={`CharacterSelect__button btn btn-main`}\n            onClick={() => window.location.reload()}\n          >\n            Restart\n          </button>\n          <h2 className=\"Title__header\">\n            <GiStarSkull />\n            <GiStarSkull />\n            <GiStarSkull />\n          </h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Lose;","import React from 'react';\nimport {\n  GiCog,\n} from \"react-icons/gi\";\n\nclass Win extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          className=\"Title__content\"\n          style={{\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: '#3e7dc9',\n          }}\n        >\n          <h2 className=\"Title__header\">\n            <GiCog />\n            <GiCog />\n            <GiCog />\n          </h2>\n          <button\n            style={{\n              margin: 'initial',\n            }}\n            className={`CharacterSelect__button btn btn-main`}\n            onClick={() => window.location.reload()}\n          >\n            Victory\n          </button>\n          <h2 className=\"Title__header\">\n            <GiCog />\n            <GiCog />\n            <GiCog />\n          </h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Win;","import React from 'react';\nimport { SCREENS } from '../Screen/constants';\n\nconst CharacterSelect = (props) => {\n  return (\n    <div className='CharacterSelect'>\n      {\n        props.characters.map((character, index) => {\n          let color = '';\n          if (props.selectedCharacter) {\n            color = props.selectedCharacter.name === character.name ? 'red' : ''\n          }\n\n          return (\n            <button\n              key={index}\n              className={`CharacterSelect__button btn btn-main`}\n              onClick={() => {\n                props.setSelectedCharacter(character)\n                props.setActiveScreen(SCREENS.LEVEL)\n              }}\n            >\n              Play as {character.name}\n            </button>\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default CharacterSelect;","import React from 'react';\nimport {\n  GiCog,\n  GiStarSkull,\n} from \"react-icons/gi\";\nimport { SCREENS } from './constants';\nimport CharacterSelect from '../UI/CharacterSelect';\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          className=\"Title__content\"\n          style={{\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: '#07111Dff',\n          }}\n        >\n          <h2 className=\"Title__header\"><GiCog/></h2>\n          <CharacterSelect \n            characters={this.props.characters} \n            selectedCharacter={this.props.selectedCharacter} \n            setSelectedCharacter={this.props.setSelectedCharacter}\n            setActiveScreen={this.props.setActiveScreen}\n          />\n          <h2 className=\"Title__header\"><GiStarSkull /></h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;","import React from 'react';\nimport { SCREENS } from '../Screen/constants';\n\nconst ModeSelect = (props) => {\n  return (\n    <div className='CharacterSelect'>\n      {\n        props.modes.map((mode, index) => {\n          let color = '';\n          if (props.selectedMode) {\n            color = props.selectedMode.name === mode.name ? 'red' : ''\n          }\n\n          return (\n            <button\n              key={index}\n              style={{\n                position: 'relative',\n                top: '280px'\n              }}\n              className={`CharacterSelect__button btn btn-main`}\n              onClick={() => {\n                console.log(mode);\n                \n                props.setSelectedMode(mode)\n                props.setActiveScreen(SCREENS.CHARACTER_SELECT)\n              }}\n            >\n              {mode.name}\n            </button>\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default ModeSelect;","import Level from './Level';\nimport Title from './Title';\nimport Lose from './Lose';\nimport Win from './Win';\nimport CharacterSelect from './CharacterSelect';\nimport ModeSelect from './ModeSelect';\n\nexport default {\n  Level,\n  Title,\n  Win,\n  Lose,\n  CharacterSelect,\n  ModeSelect,\n}","import React from 'react';\nimport { SCREENS } from './constants';\nimport ModeSelect from '../UI/ModeSelect';\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          style={{\n\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: 'rgb(4, 49, 61)',\n            backgroundImage: `url(\"${window.PUBLIC_URL}/fire_man_blue.jpg\")`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundPositionY: '10px'\n\n          }}\n        >\n          <ModeSelect \n            modes={this.props.modes} \n            selectedMode={this.props.selectedMode} \n            setSelectedMode={this.props.setSelectedMode}\n            setActiveScreen={this.props.setActiveScreen}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;","import { Base } from './Base';\nexport class GoToPreviousKeymap extends Base {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.label = 'Close';\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    this.actor.goToPreviousKeymap();\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { PlaceActor } from './PlaceActor';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\nimport { TYPE } from '../items';\nimport { DIRECTIONS, ENERGY_THRESHOLD } from '../constants';\nimport { getPositionInDirection, getPointsWithinRadius } from '../../helper';\n\nexport class PrepareDirectionalThrow extends Base {\n  constructor({ \n    passThroughEnergyCost = ENERGY_THRESHOLD, \n    passThroughRequiredResources = [],\n    projectileType = TYPE.DIRECTIONAL_KUNAI,\n    ...args \n  }) {\n    super({ ...args });\n    this.passThroughEnergyCost = passThroughEnergyCost;\n    this.passThroughRequiredResources = passThroughRequiredResources;\n    this.projectileType = projectileType;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n\n    let projectile = this.actor.contains(this.projectileType);\n    if (!projectile) return {\n      success: false,\n      alternative: null,\n    };\n\n    projectile.game = this.game;\n    projectile.pos = {\n      x: this.actor.pos.x,\n      y: this.actor.pos.y,\n    };\n\n    const pos = this.actor.getPosition();\n    // tackle in 4 directions a sfar as the actor has energy\n    let cursor_positions = [];\n    [\n      DIRECTIONS.N,\n      DIRECTIONS.S,\n      DIRECTIONS.E,\n      DIRECTIONS.W,\n    ].forEach((direction, i) => {\n      Array(projectile.range + 1).fill('').forEach((none, distance) => {\n        if (distance > 0) {\n          const endPosition = getPositionInDirection(pos, direction.map((dir) => dir * (distance)))\n          cursor_positions.push(endPosition)\n          if (distance === projectile.range) {\n            const circlePositions = getPointsWithinRadius(endPosition, 3)\n            cursor_positions = cursor_positions.concat(circlePositions)\n          }\n        }\n      })\n    });\n\n    this.actor.activateCursor(cursor_positions)\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n      onAfter: () => this.actor.deactivateCursor(),\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n      \n      w: () => { \n        return new PlaceActor({\n          targetPos: {...projectile.pos},\n          actor: this.actor,\n          game: this.game,\n          entity: projectile,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'throw N',\n          onBefore: () => {\n            projectile.direction = DIRECTIONS.N;\n          },\n          onSuccess: () => {\n            this.actor.deactivateCursor()\n            this.actor.removeFromContainer(projectile);\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      d: () => { \n        return new PlaceActor({\n          targetPos: {...projectile.pos},\n          actor: this.actor,\n          game: this.game,\n          entity: projectile,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'throw E',\n          onBefore: () => {\n            projectile.direction = DIRECTIONS.E;\n          },\n          onSuccess: () => {\n            this.actor.deactivateCursor()\n            this.actor.removeFromContainer(projectile);\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      s: () => { \n        return new PlaceActor({\n          targetPos: {...projectile.pos},\n          actor: this.actor,\n          game: this.game,\n          entity: projectile,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'throw S',\n          onBefore: () => {\n            projectile.direction = DIRECTIONS.S;\n          },\n          onSuccess: () => {\n            this.actor.deactivateCursor()\n            this.actor.removeFromContainer(projectile);\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      a: () => { \n        return new PlaceActor({\n          targetPos: {...projectile.pos},\n          actor: this.actor,\n          game: this.game,\n          entity: projectile,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'throw W',\n          onBefore: () => {\n            projectile.direction = DIRECTIONS.W;\n          },\n          onSuccess: () => {\n            this.actor.deactivateCursor()\n            this.actor.removeFromContainer(projectile);\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n    };\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import * as _ from 'lodash';\nimport { Base } from './Base';\nimport * as Helper from '../../helper';\nimport {THEMES} from '../constants';\n\nexport class MoveRangedAttackCursor extends Base {\n  constructor({ direction, range, targetPos = null, availablePositions = [], ...args }) {\n    super({ ...args });\n    this.direction = direction;\n    this.range = range;\n    this.targetPos = targetPos;\n    this.availablePositions = availablePositions;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n\n  isInRange (targetPos) {\n    return _.find(this.availablePositions, {x: targetPos.x, y: targetPos.y});\n  }\n\n  isInRangeV1 (targetPos) {\n    const initiatedFrom = this.actor.getPosition();\n    const path = Helper.calculateStraightPath(initiatedFrom, targetPos);\n    return this.range ? path.length <= this.range : true;\n  }\n\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (!this.targetPos && !this.direction) {\n      return {success, alternative}\n    }\n    let targetPos = this.targetPos;\n    if (!this.targetPos) {\n      targetPos = Helper.getPositionInDirection(this.actor.getCursorPositions()[0], this.direction);\n    }\n    // const pathIsNotBlocked = path.reduce((acc, curr) => acc && this.game.rangedCursorCanOccupyPosition(curr), true);\n    // if (this.isInRange(targetPos) && pathIsNotBlocked && this.game.rangedCursorCanOccupyPosition(targetPos, this.actor)) {\n    // if (this.isInRange(targetPos) && this.game.rangedCursorCanOccupyPosition(targetPos, this.actor)) {\n    if (this.isInRange(targetPos)) {\n      this.actor.moveCursorToPosition(targetPos);\n      success = true;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nexport class Reload extends Base {\n  constructor({ message, messageType = MESSAGE_TYPE.INFORMATION, ...args }) {\n    super({ ...args });\n    this.processDelay = 0;\n  }\n  perform() {\n    const success = this.actor.reload();\n    this.game.addMessage(`${this.actor.name} says \"RELOADING\"`, MESSAGE_TYPE.INFORMATION);\n    return {\n      success,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { Say } from './Say';\nimport { Reload } from './Reload';\nimport SOUNDS from '../sounds';\nimport * as Constant from '../constants';\nimport * as Helper from '../../helper';\n\nexport class MultiTargetRangedAttack extends Base {\n  constructor({ targetPositions, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPositions = targetPositions;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (!this.actor.entityTypes.includes('RANGED_ATTACKING')) {\n      return {\n        success: true,\n        alternative: new Say({\n          message: `Ooh I don\\'t know how to attack`,\n          game: this.game,\n          actor: this.actor,\n        }),\n      };\n    }\n    const weapons = this.actor.getEquipedWeapons();\n    if (weapons.length > 0) {\n      if (weapons[0].magazine <= 0) {\n        return {\n          success: true,\n          alternative: new Reload({\n            game: this.game,\n            actor: this.actor,\n            energyCost: Constant.ENERGY_THRESHOLD,\n          }),\n        };\n      }\n    }\n    let particlePath = [];\n    let particlePos = { x: this.actor.pos.x, y: this.actor.pos.y };\n    let renderer = this.particleTemplate.renderer;\n    this.targetPositions.forEach((targetPos) => {\n      let [attackSuccess, hit] = this.actor.rangedAttack(targetPos);\n      particlePath.push(targetPos);\n      if (attackSuccess) {\n        success = true;\n        if (!hit) {\n          SOUNDS.release_0.play();\n          success = true;\n          this.addParticle(\n            1,\n            { ...targetPos },\n            { x: 0, y: 0 },\n            Constant.PARTICLE_TEMPLATES.fail.renderer,\n          );\n        } else {\n          const sound = Helper.getRandomInArray([SOUNDS.chop_0, SOUNDS.chop_1]);\n          sound.play();\n          this.addParticle(\n            particlePath.length + 1,\n            particlePos,\n            null,\n            renderer,\n            Constant.PARTICLE_TYPE.path,\n            particlePath\n          );\n        }\n      }\n    });\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { MoveRangedAttackCursor } from './MoveRangedAttackCursor';\nimport { MultiTargetRangedAttack } from './MultiTargetRangedAttack';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\nimport { DIRECTIONS, ENERGY_THRESHOLD, THEMES, EQUIPMENT_TYPES } from '../constants';\nimport * as Helper from '../../helper';\nimport {find} from 'lodash';\n\nexport class PrepareRangedAttack extends Base {\n  constructor({ \n    passThroughEnergyCost = ENERGY_THRESHOLD, \n    passThroughRequiredResources = [], \n    ...args \n  }) {\n    super({ ...args });\n    this.passThroughEnergyCost = passThroughEnergyCost;\n    this.passThroughRequiredResources = passThroughRequiredResources;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n\n  updateCursors(pathAnimations, initiatedFrom) {\n    const cursorPositions = this.actor.getCursorPositions();\n    const path = Helper.calculateStraightPath(initiatedFrom, this.actor.getCursorPositions()[0]);\n    // removing visible path from last action\n    pathAnimations.forEach((anim) => {\n      this.game.display.removeAnimation(anim.id);\n    })\n    \n    // adding visible path to new cursor position\n    path.slice(1).forEach((pathPos) => {\n      if (!find(cursorPositions, {x: pathPos.x, y: pathPos.y})) {\n        const animation = this.game.display.addAnimation(this.game.display.animationTypes.BLINK_TILE, { x: pathPos.x, y: pathPos.y, color: THEMES.SOLARIZED.base3 })\n        pathAnimations.push(animation);\n      }\n    })\n\n    // modifying target curso color based on change to hit\n    cursorPositions.forEach((pos, i) => {\n      const chance = this.actor.getRangedAttackChance(pos);\n      if (chance <= 0) {\n        this.actor.updateCursoNode(i, [\n          {key: 'fill', value: 'transparent'}, \n          {key: 'stroke', value: 'white'}, \n        ]);\n      }\n      if (chance > 0 && chance <= 0.5) {\n        this.actor.updateCursoNode(i, [\n          {key: 'fill', value: THEMES.SOLARIZED.red}, \n          {key: 'stroke', value: 'transparent'}, \n        ]);\n      }\n      if (chance > 0.5 && chance <= 0.7) {\n        this.actor.updateCursoNode(i, [\n          {key: 'fill', value: THEMES.SOLARIZED.yellow}, \n          {key: 'stroke', value: 'transparent'}, \n        ]);\n      }\n      if (chance >= 0.7) {\n        this.actor.updateCursoNode(i, [\n          {key: 'fill', value: THEMES.SOLARIZED.green}, \n          {key: 'stroke', value: 'transparent'}, \n        ]);\n      }\n    })\n  }\n\n  perform() {\n    const pos = this.actor.getPosition();\n    const range = this.actor.getAttackRange();\n    const equippedWeapon = this.actor.getItemInSlot(EQUIPMENT_TYPES.HAND)\n\n    const pathAnimations = [];\n    const rangeAnims = []\n    const deactivateAnimations = (anims) => anims.forEach((anim) => {\n      this.game.display.removeAnimation(anim.id);\n    })\n\n    const positionsInRange = Helper.getPointsWithinRadius(pos, range);\n\n    let targets = [];\n    let targetIndex = 0;\n    positionsInRange.forEach((position) => {\n      // rangeAnims.push(this.game.display.addAnimation(1, {\n      //   x: position.x,\n      //   y: position.y,\n      //   color: THEMES.SOLARIZED.blue\n      // }))\n      let tile = this.game.map[Helper.coordsToString(position)];\n      if (tile) {\n        // const validTargets = Helper.getDestructableEntities(tile.entities);\n        const validTargets = tile.entities.filter((actor) => actor['faction'] === 'LOCUST');\n        let newTarget = validTargets.length ? validTargets[0] : null;\n        if (newTarget) {\n          targets.push(newTarget);\n        }\n      }\n    })\n\n    let positions = [];\n    if (targets.length) {\n      positions.push(targets[0].getPosition());\n      if (targets.length > 1) targetIndex = 1;\n    } else {\n      positions.push({...pos})\n    }\n\n    if (equippedWeapon) positions = equippedWeapon.getPositionsInShape(positions[0]);\n\n    this.actor.activateCursor(positions);\n    this.updateCursors(pathAnimations, pos);\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n      onAfter: () => {\n        this.actor.deactivateCursor()\n        deactivateAnimations(pathAnimations)\n        deactivateAnimations(rangeAnims)\n      },\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n      \n      e: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'Next Target',\n          targetPos: targets.length ? targets[targetIndex].getPosition() : null,\n          range,\n          availablePositions: positionsInRange,\n          onSuccess: () => {\n            targetIndex = (targetIndex + 1) % targets.length;\n            this.updateCursors(pathAnimations, pos);\n          },\n        })\n      },\n      q: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'Previous Target',\n          targetPos: targets.length ? targets[targetIndex].getPosition() : null,\n          range,\n          availablePositions: positionsInRange,\n          onSuccess: () => {\n            if (targetIndex === 0) {\n              targetIndex = targets.length - 1\n            } else {\n              targetIndex -= 1\n            }\n            this.updateCursors(pathAnimations, pos);\n          }\n        })\n      },\n      w: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move N',\n          direction: DIRECTIONS.N,\n          range,\n          availablePositions: positionsInRange,\n          onSuccess: () => {\n            this.updateCursors(pathAnimations, pos);\n          }\n        })\n      },\n      a: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move W',\n          direction: DIRECTIONS.W,\n          range,\n          availablePositions: positionsInRange,\n          onSuccess: () => {\n            this.updateCursors(pathAnimations, pos);\n          }\n        })\n      },\n      s: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move S',\n          direction: DIRECTIONS.S,\n          range,\n          availablePositions: positionsInRange,\n          onSuccess: () => {\n            this.updateCursors(pathAnimations, pos);\n          }\n        })\n      },\n      d: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move E',\n          direction: DIRECTIONS.E,\n          range,\n          availablePositions: positionsInRange,\n          onSuccess: () => {\n            this.updateCursors(pathAnimations, pos);\n          }\n        })\n      },\n      f: () => { \n        return new MultiTargetRangedAttack({\n          label: 'Fire',\n          targetPositions:  [...this.actor.getCursorPositions()],\n          game: this.game,\n          actor: this.actor,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            deactivateAnimations(pathAnimations);\n            deactivateAnimations(rangeAnims);\n            this.actor.setNextAction(goToPreviousKeymap);\n          }\n        })\n      },\n    };\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import { Base } from './Base';\nimport { EquipItemFromContainer } from './EquipItemFromContainer';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\n\n\nexport class OpenInventory extends Base {\n  constructor({ \n    ...args \n  }) {\n    super({ ...args });\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    this.game.visibleInventory = this.actor.container;\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n    };\n\n    this.actor.container.forEach((slot, index) => {\n      const item = slot.items[0];\n      keymap[index] = () => new EquipItemFromContainer({\n        item,\n        game: this.game,\n        actor: this.actor,\n        label: `Equip ${item.name}`,\n        energyCost: 0,\n        onSuccess: () => {\n          this.game.visibleInventory = null\n          this.actor.setNextAction(goToPreviousKeymap);\n        },\n      });\n    })\n\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import * as Helper from '../../helper';\nimport { Base } from './Base';\nimport SOUNDS from '../sounds';\n\nexport class Upgrade extends Base {\n  constructor({ upgrade, ...args }) {\n    super({ ...args });\n    this.upgrade = upgrade;\n    this.particleTemplate = {\n      renderer: {\n        sprite: '',\n        character: '^',\n        color: 'white',\n        background: '#3e7dc9',\n      }\n    };\n  }\n  perform() {\n    let success = false;\n    if (this.actor.upgrade(this.upgrade)) {\n      success = true;\n      let positions = Helper.getPointsOnCircumference(this.actor.pos.x, this.actor.pos.y, 5);\n      positions.forEach((pos) => {\n        this.addParticle(4, { ...pos }, {\n          x: -1 * Math.sign(pos.x - this.actor.pos.x),\n          y: -1 * Math.sign(pos.y - this.actor.pos.y)\n        });\n      });\n      SOUNDS.save.play();\n    }\n    return {\n      success,\n      alternative: null,\n    };\n  }\n}\n;\n","import {ActionResource} from './ActionResource';\n\nexport class UpgradeResource extends ActionResource {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.name = 'Upgrade Points';\n    this.actorResourcePath = 'upgrade_points';\n    this.renderer = { color: 'white', background: '#3e7dc9', character: '^', sprite: '' }\n  }\n}","import { Base } from './Base';\nimport { Say } from './Say';\nimport { Upgrade } from './Upgrade';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\nimport { UpgradeResource } from './ActionResources/UpgradeResource';\n\nexport class OpenUpgrades extends Base {\n  constructor({ \n    ...args \n  }) {\n    super({ ...args });\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n    };\n\n    this.actor.upgrade_tree.forEach((upgrade, index) => {\n      keymap[index] = () => new Upgrade({\n        // message: upgrade.name,\n        upgrade,\n        game: this.game,\n        actor: this.actor,\n        label: `${upgrade.name}`,\n        energyCost: 0,\n        requiredResources: [new UpgradeResource({getResourceCost: () => upgrade.cost })],\n        onSuccess: () => {\n          this.actor.setNextAction(goToPreviousKeymap);\n        },\n      });\n    })\n\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nimport * as Helper from '../../helper';\nimport SOUNDS from '../sounds';\n\nexport class PickupAllItems extends Base {\n  constructor({ ...args }) {\n    super({ ...args });\n  }\n  perform() {\n    let success = false;\n    const items = this.game.map[Helper.coordsToString(this.actor.pos)].entities.filter((e) => e.id !== this.actor.id);\n    if (items.length) {\n      // const item = Helper.getRandomInArray(items);\n      items.forEach((item) => {\n        this.game.addMessage(`${this.actor.name} picks up ${item.name}.`, MESSAGE_TYPE.ACTION);\n        this.actor.addToContainer(item);\n        let entities = this.game.map[Helper.coordsToString(this.actor.pos)].entities;\n        this.game.map[Helper.coordsToString(this.actor.pos)].entities = entities.filter((it) => it.id !== item.id);\n        success = true;\n      });\n      SOUNDS.grab_0.play();\n    }\n    return {\n      success,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport * as Helper from '../../helper'\n\nexport class AddStatusEffect extends Base {\n  constructor({ effect, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.effect = effect;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = this.game.engine.addStatusEffect(this.effect);\n    let positions = Helper.getPointsOnCircumference(this.actor.pos.x, this.actor.pos.y, 4);\n    positions.forEach((pos) => {\n      this.addParticle(3, { ...pos }, {\n        x: -1 * Math.sign(pos.x - this.actor.pos.x),\n        y: -1 * Math.sign(pos.y - this.actor.pos.y)\n      });\n    });\n    return {\n      success,\n      alternative: null,\n    };\n  }\n}\n;\n","export class Base {\n  constructor({ \n    game, \n    actor, \n    name = 'Effect', \n    lifespan = 100,\n    stepInterval = 100,\n    allowDuplicates = true,\n    onStart = () => null,\n    onStep = () => null,\n    onStop = () => null,\n    renderer = {background: 'green', color: 'white', character: '*'}\n  }) {\n    this.game = game\n    this.actor = actor\n    this.name = name\n    this.lifespan = lifespan\n    this.timeToLive = lifespan\n    this.stepInterval = stepInterval\n    this.allowDuplicates = allowDuplicates\n    this.timeSinceLastStep = 0;\n    this.onStart = onStart\n    this.onStep = onStep\n    this.onStop = onStop\n    this.renderer = renderer\n  }\n}","import {Base} from './Base';\n\nexport class MeleeDamage extends Base {\n  constructor({buffValue = 1, ...args}) {\n    super({ ...args });\n    this.name = 'Melee Damage';\n    this.allowDuplicates = false\n    this['actor_background'] = this.actor.renderer.background;\n    this['attackDamage'] = this.actor.attackDamage;\n    this.renderer = {\n      color: '#424242',\n      background: '#e6e6e6',\n      character: ''\n    };\n    this.onStart = () => {\n      this.actor.attackDamage += buffValue;\n    }\n    this.onStop = () => {\n      this.actor.attackDamage = this['attackDamage'];\n    }\n  }\n}","// import deps\nimport * as Constant from '../constants';\nimport { Player } from '../Entities/index';\nimport { ContainerSlot } from '../Entities/Containing';\nimport {Say} from '../Actions/Say';\nimport {Move} from '../Actions/Move';\nimport {PrepareDirectionalThrow} from '../Actions/PrepareDirectionalThrow';\nimport {PrepareRangedAttack} from '../Actions/PrepareRangedAttack';\nimport {OpenInventory} from '../Actions/OpenInventory';\nimport {OpenUpgrades} from '../Actions/OpenUpgrades';\nimport {Upgrade} from '../Entities/Upgradable';\nimport {PickupAllItems} from '../Actions/PickupAllItems';\nimport { Lancer } from '../Items/Weapons/Lancer';\nimport { Snub } from '../Items/Weapons/Snub';\nimport { Grenade } from '../Items/Weapons/Grenade';\nimport { Ammo } from '../Items/Pickups/Ammo';\nimport {COLORS} from '../Modes/Jacinto/theme';\nimport { Reload } from '../Actions/Reload';\nimport { AddStatusEffect } from '../Actions/AddStatusEffect';\nimport {MeleeDamage} from '../StatusEffects/MeleeDamage';\n\n\nexport default function (engine) {\n  const lancer = Lancer(engine);\n  // define keymap\n  const keymap = (engine, actor) => {\n    return {\n      Escape: () => new Say({\n        label: 'Pass',\n        message: 'pass turn...',\n        game: engine.game,\n        actor,\n        interrupt: true,\n        energyCost: 0,\n      }),\n      w: () => {\n        const direction = Constant.DIRECTIONS.N;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      s: () => {\n        const direction = Constant.DIRECTIONS.S;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      a: () => {\n        const direction = Constant.DIRECTIONS.W;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      d: () => {\n        const direction = Constant.DIRECTIONS.E;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      p: () => new Say({\n        label: 'Stay',\n        message: 'standing still...',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      f: () => new PrepareRangedAttack({\n        label: 'Fire Weapon',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n        passThroughRequiredResources: [],\n      }),\n      r: () => new Reload({\n        label: 'Reload',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      i: () => new OpenInventory({\n        label: 'Inventory',\n        game: engine.game,\n        actor,\n      }),\n      // o: () => new OpenEquipment({\n      //   label: 'Equipment',\n      //   game: engine.game,\n      //   actor,\n      // }),\n      u: () => new OpenUpgrades({\n        label: 'Upgrade',\n        game: engine.game,\n        actor,\n      }),\n      g: () => new PickupAllItems({\n        label: 'Pickup',\n        game: engine.game,\n        actor,\n      }),\n      t: () => new PrepareDirectionalThrow({\n        label: 'Grenade',\n        projectileType: 'Grenade',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      c: () => new AddStatusEffect({\n        label: 'Rev Lancer Chainsaw',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        effect: new MeleeDamage({\n          buffValue: 12,\n          game: engine.game,\n          actor: lancer, // should be weapon\n          lifespan: Constant.ENERGY_THRESHOLD * 3,\n          stepInterval: Constant.ENERGY_THRESHOLD,\n        }),\n        particleTemplate: {\n          renderer: {\n            color: '#424242',\n            background: '#e6e6e6',\n            character: ''\n          },\n        },\n      })\n    };\n  }\n  // instantiate class\n  \n  const durability = 10;\n  let actor = new Player({\n    pos: { x: 23, y: 7 },\n    renderer: {\n      sprite: '',\n      character: 'G',\n      color: COLORS.base3,\n      background: COLORS.cog2,\n    },\n    name: 'The Scout',\n    actions: [],\n    speed: Constant.ENERGY_THRESHOLD * 8,\n    durability,\n    attackDamage: 0,\n    baseRangedAccuracy: 0,\n    baseRangedDamage: 0,\n    upgrade_points: 0,\n    upgrade_tree: [\n      Upgrade({\n        cost: 1,\n        name: '+1 Health',\n        activate: (actor) => {\n          actor.durabilityMax += 1\n          actor.increaseDurability(1)\n        },\n      }),\n      Upgrade({\n        cost: 1,\n        name: '+10% Lancer Accuracy',\n        activate: (actor) => (lancer.baseRangedAccuracy += 0.1),\n      }),\n      Upgrade({\n        cost: 2,\n        name: '+1 Actions',\n        activate: (actor) => {\n          actor.speed += Constant.ENERGY_THRESHOLD;\n          actor.energy += Constant.ENERGY_THRESHOLD;\n        },\n        // removeOnActivate: true,\n      }),\n      Upgrade({\n        cost: 3,\n        name: 'Full Health',\n        canUpgrade: (actor) => actor.durability < actor.durabilityMax,\n        activate: (actor) => (actor.increaseDurability(actor.durabilityMax - actor.durability)),\n      }),\n    ],\n    equipment: Constant.EQUIPMENT_LAYOUTS.gear(),\n    game: engine.game,\n    presentingUI: true,\n    faction: 'COG',\n    initializeKeymap: keymap,\n  })\n\n  // add default items to container\n  const ammo = Array(30).fill('').map(() => Ammo(engine));\n  const grenades = Array(4).fill('').map(() => Grenade(engine, 6));\n  const snub = Snub(engine);\n  actor.container = [\n    new ContainerSlot({\n      itemType: snub.name,\n      items: [snub],\n    }),\n    new ContainerSlot({\n      itemType: ammo[0].name,\n      items: ammo,\n    }),\n    new ContainerSlot({\n      itemType: grenades[0].name,\n      items: grenades,\n    }),\n  ]\n\n  actor.equip(lancer.equipmentType, lancer);\n\n  return actor;\n}","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Lancer = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Lancer',\n  passable: true,\n  attackRange: 12,\n  magazineSize: 4,\n  baseRangedAccuracy: 0.85,\n  baseRangedDamage: 2,\n  attackDamage: 2,\n  pos,\n  // shapePattern: Constant.CLONE_PATTERNS.triple_point,\n  // shapePattern: Constant.CLONE_PATTERNS.bigSquare,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'L',\n    color: COLORS.base3,\n    background: COLORS.gray,\n  },\n});\n","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Snub = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Snub',\n  passable: true,\n  attackRange: 6,\n  magazineSize: 10,\n  baseRangedAccuracy: 0.7,\n  baseRangedDamage: 1,\n  attackDamage: 1,\n  pos,\n  // shapePattern: Constant.CLONE_PATTERNS.square,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'S',\n    color: COLORS.base3,\n    background: COLORS.base01,\n  },\n});\n","import { MoveMultiple } from './MoveMultiple';\nimport { Attack } from './Attack';\nimport {ENERGY_THRESHOLD} from '../constants';\n\nexport class Tackle extends MoveMultiple {\n  constructor({ direction, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.direction = direction;\n    this.stepCount = 0;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let alternative = null;\n    let newX = this.actor.pos.x + this.direction[0];\n    let newY = this.actor.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n\n    alternative = new Attack({\n      targetPos,\n      additionalDamage: this.stepCount,\n      game: this.game,\n      actor: this.actor,\n      energyCost: 0,\n    });\n\n    if (this.actor.energy > ENERGY_THRESHOLD) {\n      const shoveSuccess = this.actor.shove(targetPos, this.direction);\n      if (shoveSuccess) {\n        this.stepCount += 1;\n        alternative = this\n        for (let i = 0; i < 3; i++) {\n          this.addParticle(1, {\n            x: this.actor.pos.x - (this.direction[0] * i),\n            y: this.actor.pos.y - (this.direction[1] * i),\n          }, { x: 0, y: 0 });\n        }\n      }\n    }\n\n    return {\n      success: true,\n      alternative,\n    };\n  }\n};\n","import { Base } from './Base';\nimport { Attack } from \"./Attack\";\nimport * as Constant from '../constants';\n\nexport class MoveMultiple extends Base {\n  constructor({ direction, stepCount, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.direction = direction;\n    this.stepCount = stepCount;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let newX = this.actor.pos.x + this.direction[0];\n    let newY = this.actor.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n    if (this.stepCount > 0 && this.actor.move(targetPos)) {\n      this.stepCount -= 1;\n      this.actor.setNextAction(this);\n      success = true;\n    }\n    else {\n      success = true;\n      alternative = new Attack({\n        targetPos: targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { Tackle } from './Tackle';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\nimport { DIRECTIONS, ENERGY_THRESHOLD, PARTICLE_TEMPLATES } from '../constants';\nimport { getPositionInDirection } from '../../helper';\n\nexport class PrepareTackle extends Base {\n  constructor({ \n    passThroughEnergyCost = ENERGY_THRESHOLD, \n    passThroughRequiredResources = [], \n    ...args \n  }) {\n    super({ ...args });\n    this.passThroughEnergyCost = passThroughEnergyCost;\n    this.passThroughRequiredResources = passThroughRequiredResources;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n\n    const pos = this.actor.getPosition();\n    // tackle in 4 directions a sfar as the actor has energy\n    const cursor_positions = [];\n    [\n      DIRECTIONS.N,\n      DIRECTIONS.S,\n      DIRECTIONS.E,\n      DIRECTIONS.W,\n    ].forEach((direction, i) => {\n      Array(this.actor.energy / ENERGY_THRESHOLD).fill('').forEach((none, distance) => {\n        if (distance > 0) {\n          cursor_positions.push(\n            getPositionInDirection(pos, direction.map((dir) => dir * (distance)))\n          )\n        }\n      })\n    });\n    this.actor.activateCursor(cursor_positions)\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n      onAfter: () => this.actor.deactivateCursor(),\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n      \n      w: () => { \n        return new Tackle({\n          actor: this.actor,\n          game: this.game,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'tackle N',\n          direction: DIRECTIONS.N,\n          particleTemplate: PARTICLE_TEMPLATES.leaf,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      d: () => { \n        return new Tackle({\n          actor: this.actor,\n          game: this.game,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'tackle E',\n          direction: DIRECTIONS.E,\n          particleTemplate: PARTICLE_TEMPLATES.leaf,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      s: () => { \n        return new Tackle({\n          actor: this.actor,\n          game: this.game,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'tackle S',\n          direction: DIRECTIONS.S,\n          particleTemplate: PARTICLE_TEMPLATES.leaf,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      a: () => { \n        return new Tackle({\n          actor: this.actor,\n          game: this.game,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'tackle W',\n          direction: DIRECTIONS.W,\n          particleTemplate: PARTICLE_TEMPLATES.leaf,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n    };\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","// import deps\nimport * as Constant from '../constants';\nimport { Player } from '../Entities/index';\nimport { ContainerSlot } from '../Entities/Containing';\nimport {Say} from '../Actions/Say';\nimport {Move} from '../Actions/Move';\nimport {PrepareDirectionalThrow} from '../Actions/PrepareDirectionalThrow';\nimport {PrepareRangedAttack} from '../Actions/PrepareRangedAttack';\nimport {OpenInventory} from '../Actions/OpenInventory';\nimport {OpenUpgrades} from '../Actions/OpenUpgrades';\nimport {Upgrade} from '../Entities/Upgradable';\nimport {PickupAllItems} from '../Actions/PickupAllItems';\nimport { PrepareTackle } from '../Actions/PrepareTackle';\nimport { RetroLancer } from '../Items/Weapons/RetroLancer';\nimport { Boltok } from '../Items/Weapons/Boltok';\nimport { Snub } from '../Items/Weapons/Snub';\nimport { Grenade } from '../Items/Weapons/Grenade';\nimport { Ammo } from '../Items/Pickups/Ammo';\nimport {COLORS} from '../Modes/Jacinto/theme';\nimport { Reload } from '../Actions/Reload';\nimport { Gnasher } from '../Items/Weapons/Gnasher';\n\nexport default function (engine) {\n  // define keymap\n  const keymap = (engine, actor) => {\n    return {\n      Escape: () => new Say({\n        label: 'Pass',\n        message: 'pass turn...',\n        game: engine.game,\n        actor,\n        interrupt: true,\n        energyCost: 0,\n      }),\n      w: () => {\n        const direction = Constant.DIRECTIONS.N;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      s: () => {\n        const direction = Constant.DIRECTIONS.S;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      a: () => {\n        const direction = Constant.DIRECTIONS.W;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      d: () => {\n        const direction = Constant.DIRECTIONS.E;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      p: () => new Say({\n        label: 'Stay',\n        message: 'standing still...',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      f: () => new PrepareRangedAttack({\n        label: 'Fire Weapon',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n        passThroughRequiredResources: [],\n      }),\n      r: () => new Reload({\n        label: 'Reload',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      i: () => new OpenInventory({\n        label: 'Inventory',\n        game: engine.game,\n        actor,\n      }),\n      // o: () => new OpenEquipment({\n      //   label: 'Equipment',\n      //   game: engine.game,\n      //   actor,\n      // }),\n      u: () => new OpenUpgrades({\n        label: 'Upgrade',\n        game: engine.game,\n        actor,\n      }),\n      g: () => new PickupAllItems({\n        label: 'Pickup',\n        game: engine.game,\n        actor,\n      }),\n      t: () => new PrepareDirectionalThrow({\n        label: 'Grenade',\n        projectileType: 'Grenade',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      c: () => new PrepareTackle({\n        label: 'Bayonet Charge',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n      }),\n    };\n  }\n  // instantiate class\n  const primary = RetroLancer(engine);\n  const durability = 20;\n  let actor = new Player({\n    pos: { x: 23, y: 7 },\n    renderer: {\n      sprite: '',\n      character: 'G',\n      color: COLORS.base3,\n      background: COLORS.cog2,\n    },\n    name: 'The Veteran',\n    speed: Constant.ENERGY_THRESHOLD * 4,\n    durability,\n    baseRangedAccuracy: 0,\n    baseRangedDamage: 0,\n    attackDamage: 0,\n    upgrade_points: 0,\n    upgrade_tree: [\n      Upgrade({\n        cost: 1,\n        name: '+1 Health',\n        activate: (actor) => {\n          actor.durabilityMax += 1\n          actor.increaseDurability(1)\n        },\n      }),\n      Upgrade({\n        cost: 1,\n        name: '+2 Melee Damage',\n        activate: (actor) => (primary.attackDamage += 2),\n      }),\n      Upgrade({\n        cost: 3,\n        name: 'Full Health',\n        canUpgrade: (actor) => actor.durability < actor.durabilityMax,\n        activate: (actor) => (actor.increaseDurability(actor.durabilityMax - actor.durability)),\n      }),\n    ],\n    equipment: Constant.EQUIPMENT_LAYOUTS.gear(),\n    game: engine.game,\n    presentingUI: true,\n    faction: 'COG',\n    initializeKeymap: keymap,\n  })\n\n  // add default items to container\n  const ammo = Array(10).fill('').map(() => Ammo(engine));\n  const grenades = Array(2).fill('').map(() => Grenade(engine, 6));\n  const secondary = Gnasher(engine);\n  actor.container = [\n    new ContainerSlot({\n      itemType: secondary.name,\n      items: [secondary],\n    }),\n    new ContainerSlot({\n      itemType: ammo[0].name,\n      items: ammo,\n    }),\n    new ContainerSlot({\n      itemType: grenades[0].name,\n      items: grenades,\n    }),\n  ]\n\n  actor.equip(primary.equipmentType, primary);\n\n  return actor;\n}","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const RetroLancer = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Retro Lancer',\n  passable: true,\n  attackRange: 10,\n  magazineSize: 3,\n  baseRangedAccuracy: 0.7,\n  baseRangedDamage: 2,\n  attackDamage: 6,\n  pos,\n  // shapePattern: Constant.CLONE_PATTERNS.triple_point,\n  // shapePattern: Constant.CLONE_PATTERNS.bigSquare,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'R',\n    color: COLORS.base3,\n    background: COLORS.cog1,\n  },\n});\n","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Gnasher = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Gnasher',\n  passable: true,\n  attackRange: 4,\n  magazineSize: 2,\n  baseRangedAccuracy: 0.9,\n  baseRangedDamage: 3,\n  attackDamage: 0,\n  pos,\n  shapePattern: Constant.CLONE_PATTERNS.square,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'G',\n    color: COLORS.base03,\n    background: COLORS.green,\n  },\n});\n","// import deps\nimport * as Constant from '../constants';\nimport { UpgradeResource } from '../Actions/ActionResources/UpgradeResource';\nimport { Player } from '../Entities/index';\nimport { ContainerSlot } from '../Entities/Containing';\nimport {Say} from '../Actions/Say';\nimport {Move} from '../Actions/Move';\nimport {PrepareDirectionalThrow} from '../Actions/PrepareDirectionalThrow';\nimport {PrepareRangedAttack} from '../Actions/PrepareRangedAttack';\nimport {OpenInventory} from '../Actions/OpenInventory';\nimport {OpenUpgrades} from '../Actions/OpenUpgrades';\nimport {Upgrade} from '../Entities/Upgradable';\nimport {PickupAllItems} from '../Actions/PickupAllItems';\nimport { Longshot } from '../Items/Weapons/Longshot';\nimport { Boltok } from '../Items/Weapons/Boltok';\nimport { Grenade } from '../Items/Weapons/Grenade';\nimport { Ammo } from '../Items/Pickups/Ammo';\nimport {COLORS} from '../Modes/Jacinto/theme';\nimport { Reload } from '../Actions/Reload';\nimport { AddSprintStatusEffect } from '../Actions/AddSprintStatusEffect';\n\nexport default function (engine) {\n  // define keymap\n  const keymap = (engine, actor) => {\n    return {\n      Escape: () => new Say({\n        label: 'Pass',\n        message: 'pass turn...',\n        game: engine.game,\n        actor,\n        interrupt: true,\n        energyCost: 0,\n      }),\n      w: () => {\n        const direction = Constant.DIRECTIONS.N;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      s: () => {\n        const direction = Constant.DIRECTIONS.S;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      a: () => {\n        const direction = Constant.DIRECTIONS.W;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      d: () => {\n        const direction = Constant.DIRECTIONS.E;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      p: () => new Say({\n        label: 'Stay',\n        message: 'standing still...',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      f: () => new PrepareRangedAttack({\n        label: 'Fire Weapon',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n        passThroughRequiredResources: [],\n      }),\n      r: () => new Reload({\n        label: 'Reload',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      i: () => new OpenInventory({\n        label: 'Inventory',\n        game: engine.game,\n        actor,\n      }),\n      u: () => new OpenUpgrades({\n        label: 'Upgrade',\n        game: engine.game,\n        actor,\n      }),\n      g: () => new PickupAllItems({\n        label: 'Pickup',\n        game: engine.game,\n        actor,\n      }),\n      t: () => new PrepareDirectionalThrow({\n        label: 'Grenade',\n        projectileType: 'Grenade',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      // c: () => new AddSprintStatusEffect({\n      //   label: 'Sprint',\n      //   game: engine.game,\n      //   actor,\n      //   speedBuff: Constant.ENERGY_THRESHOLD * 10,\n      //   requiredResources: [\n      //     new UpgradeResource({ getResourceCost: () => 1 }),\n      //   ],\n      // }),\n    };\n  }\n  // instantiate class\n  const primary = Longshot(engine);\n  const secondary = Boltok(engine);\n  const durability = 12;\n  let actor = new Player({\n    pos: { x: 23, y: 7 },\n    renderer: {\n      sprite: '',\n      character: 'G',\n      color: COLORS.base3,\n      background: COLORS.cog2,\n    },\n    name: 'The Stranded',\n    speed: Constant.ENERGY_THRESHOLD * 6,\n    durability,\n    baseRangedAccuracy: 0,\n    baseRangedDamage: 0,\n    attackDamage: 0,\n    upgrade_points: 0,\n    upgrade_tree: [\n      Upgrade({\n        cost: 1,\n        name: '+1 Health',\n        activate: (actor) => {\n          actor.durabilityMax += 1\n          actor.increaseDurability(1)\n        },\n      }),\n      Upgrade({\n        cost: 1,\n        name: '+5% Longshot Accuracy',\n        activate: (actor) => (primary.baseRangedAccuracy += 0.05),\n      }),\n      Upgrade({\n        cost: 1,\n        name: '+5% Boltok Accuracy',\n        activate: (actor) => (secondary.baseRangedAccuracy += 0.05),\n      }),\n      Upgrade({\n        cost: 1,\n        name: 'Craft 3 Grenades',\n        activate: (actor) => {\n          Array(3).fill('').map(() => actor.addToContainer(Grenade(engine, 6)));\n        },\n      }),\n      Upgrade({\n        cost: 3,\n        name: 'Full Health',\n        canUpgrade: (actor) => actor.durability < actor.durabilityMax,\n        activate: (actor) => (actor.increaseDurability(actor.durabilityMax - actor.durability)),\n      }),\n    ],\n    equipment: Constant.EQUIPMENT_LAYOUTS.gear(),\n    game: engine.game,\n    presentingUI: true,\n    faction: 'COG',\n    initializeKeymap: keymap,\n  })\n\n  // add default items to container\n  const ammo = Array(20).fill('').map(() => Ammo(engine));\n  const grenades = Array(2).fill('').map(() => Grenade(engine, 6));\n  actor.container = [\n    new ContainerSlot({\n      itemType: secondary.name,\n      items: [secondary],\n    }),\n    new ContainerSlot({\n      itemType: ammo[0].name,\n      items: ammo,\n    }),\n    new ContainerSlot({\n      itemType: grenades[0].name,\n      items: grenades,\n    }),\n  ]\n\n  actor.equip(primary.equipmentType, primary);\n\n  return actor;\n}","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Longshot = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Longshot',\n  passable: true,\n  attackRange: 20,\n  magazineSize: 1,\n  baseRangedAccuracy: 1,\n  baseRangedDamage: 10,\n  attackDamage: 0,\n  pos,\n  // shapePattern: Constant.CLONE_PATTERNS.triple_point,\n  // shapePattern: Constant.CLONE_PATTERNS.bigSquare,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'L',\n    color: COLORS.base1,\n    background: COLORS.base04,\n  },\n});\n","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Boltok = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Boltok',\n  passable: true,\n  attackRange: 4,\n  magazineSize: 2,\n  baseRangedAccuracy: 0.8,\n  baseRangedDamage: 3,\n  attackDamage: 1,\n  pos,\n  // shapePattern: Constant.CLONE_PATTERNS.square,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'B',\n    color: COLORS.base3,\n    background: COLORS.locust0,\n  },\n});\n","import The_Scout from './GearLight';\nimport The_Veteran from './GearHeavy';\nimport The_Stranded from './GearStranded';\n\nlet Characters = () => {\n  return {\n    The_Scout,\n    The_Veteran,\n    The_Stranded,\n  }\n}\n\nexport default Characters;","import React from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport { SCREENS } from './Screen/constants';\nimport Screens from './Screen/index';\nimport Characters from './Characters/index';\nimport Modes from './Modes/index';\nimport SOUNDS from './sounds';\n\nclass Nystrum extends React.Component {\n  constructor() {\n    super();\n    let characterKey = Characters();\n    let characters = Object.keys(characterKey).map((key, i) => {\n      return {\n        initialize: characterKey[key],\n        selected: false,\n        name: key.split('_').join(' '),\n      }\n    });\n\n    let modes = Object.keys(Modes).map((key, i) => {\n      return {\n        class: Modes[key],\n        selected: false,\n        name: key.split('_').join(' '),\n      }\n    });\n\n    this.state = {\n      activeScreen: SCREENS.TITLE,\n      characters,\n      modes,\n      selectedCharacter: null,\n      selectedMode: modes[0],\n    };\n  }\n\n  setActiveScreen (activeScreen) {\n    if (activeScreen === SCREENS.TITLE) {\n      Object.keys(SOUNDS).forEach(key => {\n        SOUNDS[key].stop();\n      });\n    }\n    this.setState({activeScreen})\n  }\n\n  setSelectedCharacter (character) {\n    this.setState({selectedCharacter: {...character}})\n  }\n\n  setSelectedMode (mode) {\n    this.setState({selectedMode: mode})\n  }\n\n  getActiveScreen () {\n    const characterScreen = <Screens.CharacterSelect \n      key={SCREENS.CHARACTER_SELECT} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n      />\n      const titleScreen = <Screens.Title \n      key={SCREENS.TITLE} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n    />\n    const loseScreen = <Screens.Lose \n      key={SCREENS.LOSE} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n    />\n    const winScreen = <Screens.Win \n      key={SCREENS.WIN} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n    />\n    const levelScreen = <Screens.Level \n      key={SCREENS.LEVEL} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      selectedMode={this.state.selectedMode}\n    />\n\n    switch (this.state.activeScreen) {\n      case SCREENS.CHARACTER_SELECT:\n        return characterScreen\n      case SCREENS.TITLE:\n        return titleScreen\n      case SCREENS.LOSE:\n        return loseScreen\n      case SCREENS.WIN:\n        return winScreen\n      case SCREENS.LEVEL:\n        return levelScreen\n      default:\n        return titleScreen\n    }\n  }\n\n  render() {\n    const activeScreen = this.getActiveScreen();\n    return (\n      <div className=\"Nystrum\">\n        <ReactCSSTransitionGroup\n          transitionName=\"fade\"\n          transitionAppear={true}\n          transitionEnter={true}\n          transitionLeave={true}\n          transitionAppearTimeout={500}\n          transitionEnterTimeout={500}\n          transitionLeaveTimeout={300}\n        >\n          { activeScreen }\n        </ReactCSSTransitionGroup>\n      </div>\n    );\n  }\n}\n\nexport default Nystrum;\n","import React from 'react';\nimport './App.css';\nimport Nystrum from './nystrum/Nystrum';\n\nfunction App() {\n  return (\n    <div className=\"App container-fluid\">\n      <Nystrum />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}