{"version":3,"sources":["nystrum/Screen/constants.js","helper.js","nystrum/Entities/Entity.js","nystrum/constants.js","nystrum/Actions/ActionResources/ActionResource.js","nystrum/Actions/ActionResources/EnergyResource.js","nystrum/Actions/Base.js","nystrum/Actions/DestroySelf.js","nystrum/Actions/EngineCrank.js","nystrum/Entities/Parent.js","nystrum/Display/konvaCustom.js","nystrum/message.js","nystrum/Entities/Attacking.js","nystrum/Entities/RangedAttacking.js","nystrum/Entities/Equipable.js","nystrum/Entities/Acting.js","nystrum/Entities/Rendering.js","nystrum/Entities/Containing.js","nystrum/sounds.js","nystrum/Entities/Playing.js","nystrum/Entities/helper.js","nystrum/Actions/Say.js","nystrum/Actions/Attack.js","nystrum/Actions/Move.js","nystrum/Actions/ThrowProjectile.js","nystrum/Actions/SelfDestructiveAttack.js","nystrum/Actions/ProjectileMove.js","nystrum/Entities/DirectionalProjecting.js","nystrum/Actions/Shove.js","nystrum/Actions/ThrowProjectileGas.js","nystrum/Entities/Chasing.js","nystrum/Actions/PlaceActor.js","nystrum/Entities/Draggable.js","nystrum/Entities/Pushable.js","nystrum/Maps/helper.js","nystrum/items.js","nystrum/Entities/Destructable.js","nystrum/Entities/Burnable.js","nystrum/Entities/Exploding.js","nystrum/Entities/HasKeymap.js","nystrum/Entities/Upgradable.js","nystrum/Entities/HasFaction.js","nystrum/Entities/UsesCover.js","nystrum/Entities/index.js","nystrum/Entities/UI.js","nystrum/Entities/Speaking.js","nystrum/Entities/Helpless.js","nystrum/Entities/Covering.js","nystrum/Entities/DirectionalPushing.js","nystrum/Entities/RangedChasing.js","nystrum/Entities/PresentingUI.js","nystrum/Entities/HasTargetingCursor.js","nystrum/Entities/Dragging.js","nystrum/Entities/Charging.js","nystrum/Entities/Signing.js","nystrum/Entities/Equiping.js","nystrum/Entities/Cloning.js","nystrum/Entities/HasShapePattern.js","nystrum/Entities/DestructiveProjecting.js","nystrum/Entities/GaseousDestructiveProjecting.js","nystrum/Entities/Gaseous.js","nystrum/Entities/Spreading.js","nystrum/Entities/Spawning.js","nystrum/Entities/IsParticle.js","nystrum/Engine/engine.js","nystrum/Maps/generator.js","nystrum/Modes/default.js","nystrum/Modes/Jacinto/theme.js","nystrum/Items/Pickups/Ammo.js","nystrum/Items/Weapons/Grenade.js","nystrum/Modes/index.js","nystrum/Modes/Jacinto/jacinto.js","nystrum/game.js","nystrum/UI/Instructions.js","nystrum/UI/Button.js","nystrum/UI/Information.js","nystrum/UI/Tooltip.js","nystrum/UI/ActionBar.js","nystrum/UI/Entity/CharacterCard.js","nystrum/UI/Entity/PlayerInformation.js","nystrum/UI/Inventory.js","nystrum/UI/Messages.js","nystrum/UI/InfoBlocks.js","nystrum/Actions/EquipItemFromContainer.js","nystrum/UI/Jacinto/Equipment.js","nystrum/UI/Jacinto/HelpContent.js","nystrum/UI/Jacinto/Help.js","nystrum/Screen/Level.js","nystrum/Screen/Title.js","nystrum/Screen/Lose.js","nystrum/Screen/Win.js","nystrum/UI/CharacterSelect.js","nystrum/Screen/CharacterSelect.js","nystrum/UI/ModeSelect.js","nystrum/Screen/index.js","nystrum/Screen/ModeSelect.js","nystrum/Actions/GoToPreviousKeymap.js","nystrum/Actions/PrepareDirectionalThrow.js","nystrum/Actions/MoveRangedAttackCursor.js","nystrum/Actions/Reload.js","nystrum/Actions/MultiTargetRangedAttack.js","nystrum/Actions/PrepareRangedAttack.js","nystrum/Actions/OpenInventory.js","nystrum/Actions/Upgrade.js","nystrum/Actions/ActionResources/UpgradeResource.js","nystrum/Actions/OpenUpgrades.js","nystrum/Actions/PickupAllItems.js","nystrum/Actions/AddStatusEffect.js","nystrum/StatusEffects/Base.js","nystrum/StatusEffects/MeleeDamage.js","nystrum/Characters/GearLight.js","nystrum/Items/Weapons/Lancer.js","nystrum/Items/Weapons/Snub.js","nystrum/Actions/Tackle.js","nystrum/Actions/MoveMultiple.js","nystrum/Actions/PrepareTackle.js","nystrum/Characters/GearHeavy.js","nystrum/Items/Weapons/RetroLancer.js","nystrum/Items/Weapons/Gnasher.js","nystrum/Characters/GearStranded.js","nystrum/Items/Weapons/Longshot.js","nystrum/Items/Weapons/Boltok.js","nystrum/Characters/index.js","nystrum/Nystrum.js","App.js","serviceWorker.js","index.js"],"names":["SCREENS","delay","timeDelayed","Promise","resolve","setTimeout","clamp","value","min","max","Math","getRandomInArray","array","floor","random","length","getRandomIntInclusive","ceil","coordsAreEqual","pos_one","pos_two","x","y","coordsToString","coords","isPassableDefault","game","tile","map","tileKey","type","passable","calculatePath","targetPos","currentPos","topology","isPassable","isPassableCallback","astar","ROT","AStar","path","compute","push","slice","lerp_point","p0","p1","t","lerp","start","end","calculateStraightPath","p","points","N","dx","dy","abs","diagonal_distance","step","round","getPositionInDirection","pos","direction","calculatePathWithRange","range","getRandomPos","keys","Object","key","split","coordinates","parseInt","text","getDestructableEntities","entites","filter","entity","hasOwnProperty","getGranularity","radius","pow","getPointsOnCircumference","centerX","centerY","r","n","list","i","cos","PI","sin","getPointsWithinRadius","position","positions","yspan","acos","Entity","name","id","uuid","this","entityTypes","active","COLORS","THEMES","base03","base02","base01","base00","base0","base1","base2","base3","yellow","orange","red","magenta","violet","blue","cyan","green","TILE_KEY","background","foreground","character","sprite","animation","DIRECTIONS","NE","W","NW","SW","S","SE","E","NONE","EQUIPMENT_TYPES","EQUIPMENT_LAYOUTS","item","CLONE_PATTERNS","point","x_offset","y_offset","taken","triple_point","spread","verticalLine","smallSquare","square","bigSquare","circle","Helper","PARTICLE_TEMPLATES","default","renderer","color","fail","succede","damage","leaf","water","PARTICLE_TYPE","ActionResource","getResourceCost","actorResourcePath","actorResourceGetter","actorResourceSetter","EnergyResource","args","Base","actor","label","hidden","energyCost","processDelay","particles","particleTemplate","Constant","onBefore","onAfter","onSuccess","onFailure","interrupt","requiredResources","life","particle","Particle","energy","setNextAction","_","resource","actorVariable","canPay","listPayableResources","resourceCost","success","alternative","DestroySelf","destroy","EngineCrank","engine","console","log","Parent","superclass","children","CrankEngine","concat","isInitialized","child","entities","e","actors","draw","includes","forEach","destroyChild","canAttack","bind","placeActorOnMap","addActor","initialize","ANIMATION_TYPES","DEFAULT","BLINK_TILE","SOLID_TILE","BLINK_BOX","Animation","display","lifeTime","node","frame","timeDiff","getActive","removeAnimation","ExampleAnimation","BlinkTile","lerpDirection","rectAttributes","attrs","tileWidth","tileOffset","tileGutter","tileHeight","offsetX","offsetY","width","height","fill","transformsEnabled","perfectDrawEnabled","listening","shadowForStrokeEnabled","rect","Konva","Rect","animationLayer","add","opacity","BlinkBox","stroke","strokeWidth","Display","containerId","stage","layer","animations","animationLoop","animationTypes","document","d","getElementById","displayContainer","createElement","appendChild","Stage","container","Layer","hitGraphEnabled","update","isRunning","stop","display_element","offsetWidth","mapWidth","mapHeight","anim","Group","strokeEnabled","Text","fontSize","fontFamily","align","verticalAlign","batchDraw","MESSAGE_TYPE","INFORMATION","backgroundColor","ACTION","DANGER","STATUS_EFFECT","ERROR","Message","Attacking","attackDamage","additional","targets","target","getAttackDamage","equipment","slot","addMessage","decreaseDurability","RangedAttacking","attackRange","baseRangedAccuracy","baseRangedDamage","magazineSize","magazine","weaponAccuracy","getRangedWeaponAccuracy","coverDebuff","getRangedAttackCoverDebuff","distanceDebuff","getRangedAttackDistanceDebuff","result","getPosition","reduce","acc","curr","entitiesProvidingCover","coverModifer","getCoveredByIds","accuracyModifer","getAttackRange","accuracy","getRangedAttackChance","getRangedWeaponDamage","getRangedAttackDamage","getEquipedWeapons","weapon","reloaded","amount","ammo","contains","removeFromContainer","additionalDamage","additionalAccuracy","hit","attackChance","hitChance","useAmmo","canRangedAttack","Equipable","equipmentType","Acting","actions","speed","action","Rendering","currentFrame","canOccupyPosition","targetTile","pushable","newPos","move","ContainerSlot","itemType","items","Containing","slots","index","findIndex","createSlot","it","splice","fire_0","Howl","src","window","PUBLIC_URL","volume","loop","fire_1","scream_0","scream_1","scream_2","water_0","water_1","chop_0","chop_1","equip_0","equip_1","explosion_0","save","lose","grab_0","release_0","Playing","keymap","nextAction","destroyEntity","removeStatusEffectByActorId","Say","message","messageType","Attack","attack","SOUNDS","play","addParticle","Move","ThrowProjectile","move_result","shift","SelfDestructiveAttack","damageToSelf","decreaseDurabilityWithoutDefense","ProjectileMove","DirectionalProjecting","setActorToPrevious","Shove","shove","ThrowProjectileGas","Chasing","targetEntity","PlaceActor","forcePlacement","addActorAsNext","Draggable","draggable","Pushable","addTileZone","origin","j","addTileToMap","tileType","numberOfAnimationFrames","tileData","tileHasTag","tag","getTileFromMap","TYPE","directionalKunai","DirectionalProjectile","Destructable","durability","defense","onDestroy","durabilityMax","actorSprite","actorCharacter","getDefense","current","newDurability","updateActorRenderer","Burnable","canBurn","willResetCanBurn","Exploding","flammability","explosivity","Array","FireSpread","timeToSpread","spreadCount","fire","structure","explode","enflame","HasKeymap","initializeKeymap","keymapStack","addKeymap","newKeymap","unshift","ignoredKeys","getKeymap","removeKeymap","Upgrade","activate","canUpgrade","cost","removeOnActivate","HasFaction","faction","UsesCover","coverAnimations","showCoverAnimations","coveredBy","tiles","newTile","Boolean","coverAnimated","isProvidingCover","newAnimation","addAnimation","removeCoverAnimations","removeCoveredBy","setCoverAnimations","CoverWall","pipe","initiatedBy","messages","saved","damageModifer","providesCover","Bandit","RangedBandit","getProjectile","pathToCheck","inPath","throwDirection","sign","projectile","createPath","targetInPath","movePath","Player","presentingUI","cursorIsActive","cursorPositions","setCursorPositions","setCursorIsActive","resetAnimations","removeAnimations","getCursorPositions","addAnimations","currentPositions","xDelta","yDelta","newPositons","distance","arg","draggedEntity","lastPos","moveSuccess","drag","charge","chargeMax","signHistory","itemName","slotName","find","foundSlot","cloneLimit","clones","clone","c","super__destroy","cloneArgs","cloneDeep","reinitializeKeymap","destroyClone","attribute","upgrade_points","upgrade_tree","upgrade","newTree","currUpgrade","RangedWeapon","shapePattern","initialPosition","Ammo","Grenade","owner_id","isClone","cloneCount","clonePattern","offset","cloneDeepWith","referencePos","timeToSpreadMax","spreadCountMax","adjacentPositions","adjacentPos","kill","MapHelper","tileExists","notBurnt","EmergenceHole","getSpawnedEntity","nextPos","getNextPos","Engine","statusEffects","currentActor","gainEnergy","hasEnoughEnergy","getAction","perform","getFirstPlayer","acting","timePassed","getEnergyCost","canPayRequiredResources","payRequiredResources","processActionFX","shouldAutoRun","processStatusEffects","sortActorsByEnergy","processV2","setVisibleKeymap","updateMode","updateReact","visibleKeymap","sort","a","b","newEffect","allowDuplicates","effect","onStart","onStop","actorId","lifespan","timeToLive","timeSinceLastStep","stepInterval","onStep","removeDeadStatusEffects","actionSuccess","removeActorFromMap","removeDeadParticles","process","mode","addCorridors","floorPlan","unitSize","relativeCornerCoords","currentUnit","currentUnitPosition","getUnitPosition","currentUnitRelativeCornerCoord","getNeighboringUnitsFromFloorPlan","neigbor","nextUnitPosition","nextUnitRelativeCornerCoord","digCorridor","neighbors","getNeighboringPoints","unit","corridorDirection","corridorPosition","hasDoor","createFloorPlan","createRoomInFloorPlan","newUnit","getNeighboringUnit","unitAlreadyExists","unitExists","pnt","existingUnits","floorPlanPos","mapOffsetX","mapOffsetY","eightWay","createUnit","size","border","newPosition","Mode","data","infoBlocks","progressBars","merge","tags","STAT_RENDERERS","AmmoEntity","GrenadeEntity","require","Jacinto","createVerticalRoadGoingNorthAndSouth","createVerticalRoad","createVerticalRoadGoingNorth","fromY","createVerticalRoadGoingSouth","level","highestLevel","turnCount","dataByLevel","enemies","emergenceHoles","ammoLoot","grenadeLoot","mainRoadY","createHorizontalRoad","numberOfVerticalRoads","generateRoad","numberOfBuildings","groundTiles","getEmptyGroundTileKeys","posXY","coord","unitCount","unitPosition","didCreate","generateBuilding","createEmptyLevel","initializeMapTiles","setWaveData","createCityBlockLevel","floorTiles","placePlayersInSafeZone","player","enemyName","getEmptyTileKeys","addEmerenceHole","addAmmoLoot","addGrenadeLoot","createOrUpdateInfoBlock","resetCoverAnimations","checkCoverAnimations","updateUI","hasWon","toWin","hasLost","toLose","reset","initializeGameData","levelComplete","nextLevel","setLevel","nextLevelData","playerOnExit","playerIsOnExit","enemiesDefeated","activateExitTiles","players","getPlayers","spawnPosition","banditStats","getBanditStats","entityClass","chance","Item","createAmmoStack","box","banditLevels","Game","entityMap","entityDictionary","mapInitialized","tileMap","cameraWidth","cameraHeight","getSelectedCharacter","spriteMode","Flume","MAP_WIDTH","MAP_HEIGHT","placed","randomlyPlaceActorOnMap","ac","digger","Arena","freeCells","create","hasImpassableEntity","fullMap","referencePosition","renderWidth","renderHeight","fullWidth","fullHeight","renderPaddingX","renderPaddingY","parts","finalX","finalY","callback","getRenderMap","getPlayerPosition","tileRenderer","nextFrame","animateTile","renderedEntities","animateEntity","processTileMap","createTile","updateTile","getRenderer","getEntityRenderer","getTileRenderer","isPlaced","placeActorsOnMap","presserRef","show","focus","selectedCharacter","initializeMode","initializeUI","handleKeyPress","event","code","setAsNextAction","Instructions","infoHeader","props","className","onClick","location","reload","toggleSpriteMode","data-target","React","Component","Button","Tooltip","title","ResourceBlock","superScript","style","borderColor","ActionBar","entries","reqs","refocus","req","numBlocks","Portrait","StatusEffect","StatusEffects","getStatusEffectsByActorId","NamePlate","ProgressBar","colorFilled","colorEmpty","attributePathMax","attributePath","valueMax","valueCurrent","blip","CharacterCard","PlayerInformation","InfoBlocks","EquipItemFromContainer","itemInSlot","getItemInSlot","addToContainer","unequip","equip","StatBlock","stat","getIcon","EquipmentCard","equipped","needsReload","equipable","stats","meleeDamage","Equipment","HelpContent","Help","useLayoutEffect","elems","querySelectorAll","M","Modal","init","href","Level","ENGINE","selectedMode","class","state","activeTab","createRef","setActiveScreen","newGameState","setState","ref","onKeyDown","tabIndex","Title","margin","Lose","Win","CharacterSelect","characters","setSelectedCharacter","ModeSelect","modes","top","setSelectedMode","backgroundImage","backgroundRepeat","backgroundPosition","backgroundPositionY","GoToPreviousKeymap","goToPreviousKeymap","PrepareDirectionalThrow","passThroughEnergyCost","passThroughRequiredResources","projectileType","cursor_positions","none","endPosition","dir","circlePositions","activateCursor","deactivateCursor","Escape","w","s","setKeymap","MoveRangedAttackCursor","availablePositions","initiatedFrom","moveCursorToPosition","Reload","MultiTargetRangedAttack","targetPositions","weapons","particlePath","particlePos","rangedAttack","attackSuccess","PrepareRangedAttack","pathAnimations","pathPos","updateCursoNode","equippedWeapon","rangeAnims","deactivateAnimations","anims","positionsInRange","pose","targetIndex","validTargets","newTarget","getPositionsInShape","updateCursors","q","f","OpenInventory","visibleInventory","UpgradeResource","OpenUpgrades","PickupAllItems","AddStatusEffect","addStatusEffect","MeleeDamage","buffValue","lancer","Lancer","increaseDurability","newX","newY","u","g","grenades","snub","Snub","Tackle","stepCount","PrepareTackle","primary","RetroLancer","secondary","Gnasher","Longshot","Boltok","Characters","The_Scout","The_Veteran","The_Stranded","Nystrum","characterKey","selected","join","Modes","activeScreen","characterScreen","Screen","titleScreen","loseScreen","winScreen","levelScreen","getActiveScreen","transitionName","transitionAppear","transitionEnter","transitionLeave","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","App","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e63b0387.chunk.js","sourcesContent":["export const SCREENS = {\n  TITLE: 'Title',\n  LEVEL: 'Level',\n  LOSE: 'Lose',\n  WIN: 'Win',\n  CHARACTER_SELECT: 'CharacterSelect',\n  MODE_SELECT: 'ModeSelect',\n}","import * as ROT from 'rot-js';\n\nexport const delay = (timeDelayed = 100) => {\n  // return;\n  if (timeDelayed <= 0) return;\n  return new Promise(resolve => setTimeout(resolve, timeDelayed));\n}\n\nexport const clamp = (value, min, max) => {\n  return Math.min(Math.max(value, min), max);\n};\n\nexport const getRandomInArray = (array) => {\n  return array[Math.floor(Math.random() * array.length)];\n}\n\nexport const getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nexport const getRandomIntInclusive = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport const coordsAreEqual = (pos_one, pos_two) => pos_one.x === pos_two.x && pos_one.y === pos_two.y\n\nexport const coordsToString = (coords) => `${coords.x},${coords.y}`\n\nconst isPassableDefault = (game) => (x, y) => {\n  const tile = game.map[x + \",\" + y];\n  if (tile) {\n    return (game.tileKey[tile.type].passable);\n  } else {\n    return false\n  }\n}\n\nexport const calculatePath = (game, targetPos, currentPos, topology = 4, isPassable = isPassableDefault) => {\n  let map = game.map\n  let isPassableCallback = isPassable(game);\n  let astar = new ROT.Path.AStar(targetPos.x, targetPos.y, isPassableCallback, { topology });\n  let path = [];\n  astar.compute(currentPos.x, currentPos.y, function (x, y) {\n    path.push({ x, y })\n  });\n\n  return path.slice(1);\n}\n\nconst diagonal_distance = (p0, p1) => {\n  let dx = p1.x - p0.x, dy = p1.y - p0.y;\n  return Math.max(Math.abs(dx), Math.abs(dy));\n}\n\nconst round_point = (p) => {\n  return {x: Math.round(p.x), y: Math.round(p.y)};\n}\n\nconst lerp_point = (p0, p1, t) => {\n  return {\n    x: lerp(p0.x, p1.x, t),\n    y: lerp(p0.y, p1.y, t)\n  };\n}\n\nconst lerp = (start, end, t) => {\n  return start + t * (end - start);\n}\n\nexport const calculateStraightPath = (p0, p1) => {\n  let points = [];\n  let N = diagonal_distance(p0, p1);\n  for (let step = 0; step < N; step++) {\n    let t = N === 0 ? 0.0 : step / N;\n    points.push(round_point(lerp_point(p0, p1, t)));\n  }\n  return points;\n}\n\nexport const getPositionInDirection = (pos, direction) => {\n  return {x: pos.x + direction[0], y: pos.y + direction[1]}\n}\n\nexport const calculatePathWithRange = (game, targetPos, currentPos, topology, range) => {\n  let path = calculatePath(game, targetPos, currentPos, topology);\n  return path.slice(0, range + 1);\n}\n\nexport const getRandomPos = (map) => {\n  let keys = Object.keys(map);\n  let key = getRandomInArray(keys).split(',');\n  let pos = { x: parseInt(key[0]), y: parseInt(key[1])}\n  return {coordinates: pos, text: key}\n}\n\nexport const getDestructableEntities = (entites) => {\n  return entites.filter((entity) => entity.hasOwnProperty('durability'));\n}\n\nexport const filterEntitiesByType = (entites, type) => {\n  return entites.filter((entity) => entity.entityTypes.includes(type));\n}\n\nconst getGranularity = (radius) => {\n  let result = (2 / 3) * (Math.pow(radius, 3) - (9 * Math.pow(radius, 2)) + (32 * radius) - 18)\n  return result\n}\n\nexport const getNeighboringTiles = (map, pos) => {\n  const neigborPositions = [\n    { x: 0, y: 1},\n    { x: 1, y: 1},\n    { x: 1, y: 0},\n    { x: 1, y: -1},\n    { x: 0, y: -1},\n    { x: -1, y: -1},\n    { x: -1, y: 0},\n    { x: -1, y: 1},\n  ];\n\n  return neigborPositions.map((point) => {\n    const newPos = { x: pos.x + point.x, y: pos.y + point.y};\n    let newTile = map[coordsToString(newPos)];\n    if (newTile) {\n      return newTile\n    }\n  }).filter((item) => Boolean(item));\n}\n\nexport const getPointsOnCircumference = (centerX = 0, centerY = 0, r = 3) => {\n  const n = getGranularity(r);\n  let list = [];\n  for (let i = 0; i < n; i++) {\n    let x = Math.round(centerX + (Math.cos(2 * Math.PI / n * i) * r))\n    let y = Math.round(centerY + (Math.sin(2 * Math.PI / n * i) * r))\n    list.push({ x, y });\n  }\n  return list\n}\n\nexport const getPointsWithinRadius = (position, radius) => {\n  let positions = [];\n  for (let x = position.x - radius; x < position.x + radius; x++) {\n    let yspan = Math.round(radius * Math.sin(Math.acos((position.x - x) / radius)));\n    for (let y = position.y - yspan; y < position.y + yspan; y++) {\n      positions.push({x, y})\n    }\n  }\n  return positions;\n}\n\nexport const getPositionsFromStructure = (structure, initialPosition) => {\n  return structure.positions.map((slot) => {\n    let position = {\n      x: initialPosition.x + slot.x + structure.x_offset,\n      y: initialPosition.y + slot.y + structure.y_offset\n    }\n    return position\n  })\n}\n","import uuid from 'uuid/v1';\nexport class Entity {\n  constructor({ game = null, passable = false, name = 'nameless' }) {\n    let id = uuid();\n    this.entityTypes = ['Entity'];\n    this.id = id;\n    this.name = name;\n    this.game = game;\n    this.passable = passable;\n    this.active = true;\n  }\n}\n","import * as Helper from '../helper'\n\nexport const ENERGY_THRESHOLD = 100;\n\nexport const COLORS = {\n  black_1: '#424242',\n  gray_1: '#262d37',\n  gray_2: '#606b79',\n  gray_4: '#B7C3CD',\n  gray_5: '#CED5DD',\n  green_1: '#1d533c',\n  green_2: '#227743',\n  green_3: '#2d9c59',\n  red_4: '#D82D33',\n  red_5: '#E16264',\n  purple_3: '#c45ffd',\n}\n\nexport const THEMES = {\n  NARUTO: {\n    gaara: '#603030',\n    rock_lee: '#155859',\n  },\n  SOLARIZED: {\n    base03: '#002b36',\n    base02: '#073642',\n    base01: '#586e75',\n    base00: '#657b83',\n    base0: '#839496',\n    base1: '#93a1a1',\n    base2: '#eee8d5',\n    base3: '#fdf6e3',\n    yellow: '#b58900',\n    orange: '#cb4b16',\n    red: '#dc322f',\n    magenta: '#d33682',\n    violet: '#6c71c4',\n    blue: '#268bd2',\n    cyan: '#2aa198',\n    green: '#859900',\n  },\n  JACINTO: {\n    // base1: '#07111Dff',\n    base1: '#0B0B0Bff',\n    base2: '#5A7178ff',\n    base3: '#B6ACA3ff',\n    base4: '#EDF6F1ff',\n    cog1: '#2d5fc9',\n    cog2: '#18c0f8',\n    cog3: '#86C8E4ff',\n    // locust2: '#E19D3Fff',\n    locust1: '#96641Dff',\n    locust2: '#F89339ff',\n    locust3: '#E7C898ff',\n    flesh1: '#833139ff',\n    flesh2: '#CC7468ff',\n    flesh3: '#DDA78Fff',\n    gray: '#6D7886ff',\n    red: '#C7141Cff',\n    yellow: '#b58900',\n    green: '#859900',\n  },\n}\n\nexport const NPC_NAME = 'Helpless Citizen';\nexport const PLAYER_NAME = 'Fire Fighter';\n\nexport const TILE_KEY = {\n  'GROUND': {\n    background: THEMES.SOLARIZED.base03,\n    foreground: THEMES.SOLARIZED.base01,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'FLOOR': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base0,\n    character: '',\n    passable: true,\n  },\n  'SAFE_FLOOR': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base0,\n    character: '',\n    passable: true,\n  },\n  'BURNT': {\n    background: THEMES.SOLARIZED.base03,\n    foreground: THEMES.SOLARIZED.red,\n    character: 'X',\n    sprite: '',\n    passable: true,\n    animation: [\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'X', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'x', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'X', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.orange, character: 'x', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.orange, character: 'X', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.yellow, character: 'x', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'X', sprite: '', passable: true, },\n    ]\n  },\n  'WET': {\n    background: THEMES.SOLARIZED.base03,\n    foreground: THEMES.SOLARIZED.blue,\n    character: '=',\n    sprite: '',\n    passable: true,\n    animation: [\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '=', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '~', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '=', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.base0, character: '~', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.base1, character: '=', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.base1, character: '~', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '=', sprite: '', passable: true, },\n    ]\n  },\n  'WALL': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base2,\n    character: '#',\n    sprite: '',\n    passable: false,\n  },\n  'DOOR': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base0,\n    character: '+',\n    sprite: '',\n    passable: true,\n  },\n  'SAFE': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.green,\n    character: '+',\n    sprite: '',\n    passable: true,\n  },\n\n  'WATER': {\n    animation: [\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#8aa', character: '▒', passable: false, },\n      { background: '#424242', foreground: '#8aa', character: '▓', passable: false, },\n    ],\n    background: '#9dc3d3',\n    character: '░',\n    passable: false,\n  },\n}\n\nexport const HAND_SIGNS = {\n  Power: {\n    type: 'Power',\n    name: 'Rin',\n    description: 'Strength of mind, body, spirit',\n  },\n  Energy: {\n    type: 'Energy',\n    name: 'Pyo',\n    description: 'energy direction',\n  },\n  Harmony: {\n    type: 'Harmony',\n    name: 'To',\n    description: 'one- ness with the universe or self',\n  },\n  Healing: {\n    type: 'Healing',\n    name: 'Sha',\n    description: 'of self and others',\n  },\n  Intuition: {\n    type: 'Intuition',\n    name: 'Kai',\n    description: 'premonition of danger, feeling others intent',\n  },\n  Awareness: {\n    type: 'Awareness',\n    name: 'Jin',\n    description: 'feeling thoughts of others, perhaps hiding your own',\n  },\n  Dimension: {\n    type: 'Dimension',\n    name: 'Retsu',\n    description: 'control of time and space',\n  },\n  Creation: {\n    type: 'Creation',\n    name: 'Zai',\n    description: 'understanding nature',\n  },\n  Absolute: {\n    type: 'Absolute',\n    name: 'Zen',\n    description: 'enlightenment',\n  }, \n}\n\nexport const DIRECTIONS = {\n  N: [0, -1],\n  NE: [1, -1],\n  W: [-1, 0],\n  NW: [-1, -1],\n  SW: [-1, 1],\n  S: [0, 1],\n  SE: [1, 1],\n  E: [1, 0],\n  NONE: [0, 0],\n}\n\nexport const getDirectionKey = (direction) => {\n  let directionString = `${direction}`;\n  let keys = Object.keys(DIRECTIONS);\n  let result = false\n  keys.forEach((key) => {\n    if (`${DIRECTIONS[key]}` === directionString) {\n      result = key\n    }\n  })\n  return result\n}\n\nexport const EQUIPMENT_TYPES = {\n  HEAD: 'HEAD',\n  TORSO: 'TORSO',\n  BACK: 'BACK',\n  HAND: 'HAND',\n  FEET: 'FEET',\n  GENERIC: 'GENERIC',\n}\n\nexport const EQUIPMENT_LAYOUTS = {\n  human: () => {\n    return [\n      {type: EQUIPMENT_TYPES.HEAD, name: 'head', item: null},\n      {type: EQUIPMENT_TYPES.TORSO, name: 'torso', item: null},\n      {type: EQUIPMENT_TYPES.BACK, name: 'back', item: null},\n      {type: EQUIPMENT_TYPES.HAND, name: 'left_hand', item: null},\n      {type: EQUIPMENT_TYPES.HAND, name: 'right_hand', item: null},\n      {type: EQUIPMENT_TYPES.FEET, name: 'feet', item: null},\n    ]\n  },\n  limited: () => {\n    return [\n      {type: EQUIPMENT_TYPES.GENERIC, name: 'slot_1', item: null},\n      {type: EQUIPMENT_TYPES.GENERIC, name: 'slot_2', item: null},\n    ]\n  },\n  gear: () => {\n    return [\n      { type: EQUIPMENT_TYPES.HAND, name: 'weapon', item: null },\n      // { type: EQUIPMENT_TYPES.TORSO, name: 'ammo', item: null },\n    ]\n  }\n}\n\nexport const CLONE_PATTERNS = {\n  point: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n    ]\n  },\n  triple_point: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 0, taken: false, },\n    ]\n  },\n  spread: {\n    x_offset: 1,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 1, y: 2, taken: false, },\n      { x: 1, y: -2, taken: false, },\n    ]\n  },\n  verticalLine: {\n    x_offset: 1,\n    y_offset: 1,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n    ]\n  },\n  smallSquare: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n    ]\n  },\n  square: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 1, y: -1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: -1, y: -1, taken: false, },\n      { x: -1, y: 0, taken: false, },\n      { x: -1, y: 1, taken: false, },\n    ]\n  },\n  bigSquare: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 1, y: -1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: -1, y: -1, taken: false, },\n      { x: -1, y: 0, taken: false, },\n      { x: -1, y: 1, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 2, y: 2, taken: false, },\n      { x: 2, y: 0, taken: false, },\n      { x: 2, y: -2, taken: false, },\n      { x: 0, y: -2, taken: false, },\n      { x: -2, y: -2, taken: false, },\n      { x: -2, y: 0, taken: false, },\n      { x: -2, y: 2, taken: false, },\n    ],\n  },\n  circle: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      ...Helper.getPointsOnCircumference(0, 0, 2),\n      ...Helper.getPointsOnCircumference(0, 0, 3)\n    ]\n  },\n}\n\nexport const PARTICLE_TEMPLATES = {\n  default: {\n    renderer: {\n      character: '*',\n      color: 'black',\n      background: 'white',\n    }\n  },\n  fail: {\n    renderer: {\n      character: 'x',\n      color: 'black',\n      background: 'red',\n    }\n  },\n  succede: {\n    renderer: {\n      character: 'x',\n      color: THEMES.SOLARIZED.base3,\n      background: THEMES.SOLARIZED.green,\n    }\n  },\n  damage: {\n    renderer: {\n      character: '*',\n      color: 'darkred',\n      background: 'red',\n    }\n  },\n  leaf: {\n    renderer: {\n      character: '✤',\n      color: '#36635b',\n      background: '#F0D8C0',\n    }\n  },\n  water: {\n    renderer: {\n      character: '~',\n      color: THEMES.SOLARIZED.base3,\n      background: THEMES.SOLARIZED.blue,\n    }\n  },\n}\n\nexport const PARTICLE_TYPE = {\n  directional: 0,\n  path: 1,\n}\n\nexport const ALPHABET = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];","export class ActionResource {\n  constructor({\n    name = 'Resource',\n    getResourceCost = () => null,\n    actorResourcePath = null,\n    actorResourceGetter = null,\n    actorResourceSetter = null,\n    renderer = {background: 'transparent', color: 'black', character: '*'}\n  }) {\n    this.name = name;\n    this.getResourceCost = getResourceCost;\n    this.actorResourcePath = actorResourcePath;\n    this.actorResourceGetter = actorResourceGetter;\n    this.actorResourceSetter = actorResourceSetter;\n    this.renderer = renderer;\n  }\n}\n","import {ActionResource} from './ActionResource';\n\nexport class EnergyResource extends ActionResource {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.name = 'Energy';\n    this.actorResourcePath = 'energy';\n    this.renderer = { color: 'black', background: '#ff9926', character: '8', sprite: '' }\n  }\n}","import * as _ from 'lodash';\nimport { Particle } from '../Entities/index';\nimport * as Constant from '../constants';\nimport {EnergyResource} from './ActionResources/EnergyResource';\n\nexport class Base {\n  constructor({ \n    game,\n    actor,\n    label = 'action label',\n    hidden = false,\n    energyCost = Constant.ENERGY_THRESHOLD, \n    processDelay = 50, \n    particles = [], \n    renderer = null, \n    particleTemplate = Constant.PARTICLE_TEMPLATES.default, \n    onBefore = () => null, \n    onAfter = () => null, \n    onSuccess = () => null, \n    onFailure = () => null, \n    interrupt = false, \n    requiredResources = [],\n  }) {\n    this.actor = actor;\n    this.game = game;\n    this.label = label;\n    this.hidden = hidden;\n    this.energyCost = energyCost;\n    this.processDelay = processDelay;\n    this.particles = particles;\n    this.renderer = renderer;\n    this.particleTemplate = particleTemplate;\n    this.onBefore = onBefore;\n    this.onAfter = onAfter;\n    this.onSuccess = onSuccess;\n    this.onFailure = onFailure;\n    this.interrupt = interrupt;\n    this.requiredResources = [new EnergyResource({ getResourceCost: () => this.energyCost }), ...requiredResources];\n  }\n\n  addParticle(\n    life, \n    pos, \n    direction, \n    renderer = { ...this.particleTemplate.renderer }, \n    type = Constant.PARTICLE_TYPE.directional, \n    path = null\n  ) {\n    let particle = new Particle({\n      game: this.game,\n      name: 'particle',\n      passable: true,\n      life,\n      pos,\n      direction,\n      energy: 100,\n      renderer,\n      type,\n      path,\n    });\n    this.particles.push(particle);\n  }\n\n  removeDeadParticles() {\n    this.particles = this.particles.filter((particle) => particle.life > 0);\n  }\n\n  setAsNextAction() {\n    this.actor.setNextAction(this);\n  }\n\n  getEnergyCost() {\n    return _.find(this.requiredResources, {name: 'Energy'}).getResourceCost();\n  }\n\n  getRequiredResourceName() {\n    return _.map(this.requiredResources, 'name');\n  }\n\n  listPayableResources() {\n    return _.map(this.requiredResources, (resource) => {\n      const getResourceCost = resource.getResourceCost; \n      const actorResourcePath = resource.actorResourcePath; \n      const actorResourceGetter = resource.actorResourceGetter;\n\n      const actorVariable = _.get(this.actor, actorResourcePath, null);\n      \n      let canPay = false;\n      // if the actor has provided a setter for this variable, use that \n      if (_.get(this.actor, actorResourceGetter, null) !== null) {\n        canPay = this.actor[actorResourceGetter]() >= getResourceCost();\n      } else if (actorVariable !== null) {\n        // else if the actor has a path to the appropriate variable, get that value and set it manually\n        canPay = actorVariable >= getResourceCost();\n      }\n\n      return {\n        canPay,\n        ...resource\n      }\n    })\n  }\n\n  canPayRequiredResources() {\n    return !_.find(this.listPayableResources(), {'canPay': false});\n  }\n\n  payRequiredResources() {\n    _.each(this.requiredResources, (resource) => {\n      const getResourceCost = resource.getResourceCost;\n      const actorResourcePath = resource.actorResourcePath;\n      const actorResourceSetter = resource.actorResourceSetter;\n      \n      const actorVariable = _.get(this.actor, actorResourcePath, null);\n      const resourceCost = getResourceCost();\n      // if the actor has provided a setter for this variable, use that \n      if (_.get(this.actor, actorResourceSetter, null)) {\n        this.actor[actorResourceSetter](actorVariable - resourceCost)\n        return true;\n      }\n\n      // else if the actor has a path to the appropriate variable, get that value and set it manually\n      if (actorVariable) {\n        this.actor[actorResourcePath] -= resourceCost;\n        return true;\n        // return _.set(this.actor, actorResourcePath, actorVariable - getResourceCost());\n      }\n      return false;\n    })\n  }\n  \n  perform() {\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n\n}","import { Base } from './Base';\nexport class DestroySelf extends Base {\n  constructor({ processDelay = 0, ...args }) {\n    super({ ...args });\n    this.processDelay = processDelay;\n  }\n  perform() {\n    // console.log(`${this.actor.name} is self-destructing`);\n    this.actor.energy -= this.energyCost;\n    this.actor.destroy();\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { DestroySelf } from './DestroySelf';\nimport * as Constant from '../constants';\n\nexport class EngineCrank extends Base {\n  constructor({ engine, ...args }) {\n    super({ ...args });\n    this.engine = engine;\n  }\n  async perform() {\n    let success = true;\n    let alternative = null;\n    console.log(`${this.actor.name} is cranking its engine.`);\n    try {\n      await this.engine.start();\n      this.actor.energy -= this.energyCost;\n    }\n    catch (error) {\n      console.log('EngineCrank');\n      console.log(error);\n      alternative = new DestroySelf({\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { CrankEngine } from '../Engine/engine';\nimport { EngineCrank } from '../Actions/EngineCrank';\n\nexport const Parent = superclass => class extends superclass {\n  constructor({ children = [], engine = new CrankEngine({}), ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('PARENT');\n    this.children = children;\n    this.engine = engine;\n    this.isInitialized = false;\n  }\n  destroyChild(child) {\n    child.energy = 0;\n    let tile = this.game.map[Helper.coordsToString(child.pos)];\n    this.game.map[Helper.coordsToString(child.pos)].entities = tile.entities.filter((e) => e.id !== child.id);\n    this.engine.actors = this.engine.actors.filter((e) => e.id !== child.id);\n    this.game.draw();\n  }\n  canAttack(entity) {\n    const childIds = this.children.map((child) => child.id);\n    return !childIds.includes(entity.id);\n  }\n  initialize() {\n    this.isInitialized = true;\n    this.engine.game = this.game;\n    this.engine.actors = this.children;\n    this.engine.actors.forEach((actor) => {\n      actor.game = this.game;\n      actor.destroy = () => { this.destroyChild(actor); };\n      actor.canAttack = this.canAttack.bind(this);\n      // actor.canAttack = (entity) => {this.canAttack(entity)};\n      this.game.placeActorOnMap(actor);\n      this.engine.addActor(actor);\n      this.game.draw();\n    });\n  }\n  getAction(game) {\n    // crank engine one turn\n    if (!this.isInitialized) {\n      this.initialize();\n    }\n    let result = new EngineCrank({\n      game,\n      actor: this,\n      engine: this.engine,\n      energyCost: Constant.ENERGY_THRESHOLD,\n      processDelay: 10\n    });\n    return result;\n  }\n};\n","import Konva from 'konva';\nimport uuid from 'uuid/v1';\nimport * as Helper from '../../helper';\n\nexport const ANIMATION_TYPES = {\n  DEFAULT: 0,\n  BLINK_TILE: 1,\n  SOLID_TILE: 2,\n  BLINK_BOX: 3,\n}\n\nclass Animation {\n  constructor({display}) {\n    const id = uuid();\n    this.id = id;\n    this.lifeTime = 0;\n    this.active = true;\n    this.display = display;\n    this.node = null;\n  }\n\n  getActive () {\n    return false;\n  }\n\n  initialize () {\n    return;\n  }\n\n  update (frame) {\n    this.lifeTime += frame.timeDiff;\n    this.active = this.getActive();\n    if (!this.active) {\n      this.display.removeAnimation(this.id);\n    }\n  }\n}\n\nclass ExampleAnimation extends Animation {\n  constructor({...args}) {\n    super({...args})\n  }\n\n  getActive () {\n    if (this.lifeTime > 500) {\n      return false;\n    }\n    return true;\n  }\n}\n\nclass BlinkTile extends Animation {\n  constructor({\n    x,\n    y,\n    lerpDirection = -1,\n    color = '#fff',\n    rectAttributes = {},\n    ...args\n  }) {\n    super({ ...args });\n    this.x = x;\n    this.y = y;\n    this.lerpDirection = lerpDirection;\n    this.color = color;\n    this.rectAttributes = rectAttributes\n  }\n\n  getActive () {\n    return this.active;\n  }\n\n  initialize () {\n    this.active = true;\n    const attrs = {\n      name: 'rect',\n      x: (this.display.tileWidth * this.x) + (this.display.tileOffset + this.display.tileGutter),\n      y: (this.display.tileHeight * this.y) + (this.display.tileOffset + this.display.tileGutter),\n      offsetX: this.display.tileWidth / -4,\n      offsetY: this.display.tileHeight / -4,\n      width: this.display.tileWidth / 2,\n      height: this.display.tileHeight / 2,\n      fill: this.color,\n      // strokeEnabled: false,\n      // for optimization\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n      ...this.rectAttributes,\n    };\n    let rect = new Konva.Rect(attrs);\n    this.display.animationLayer.add(rect);\n    this.node = rect;\n    super.initialize();\n  }\n\n  update (frame) {\n    let opacity = this.node.opacity();\n    if (opacity >= 1) this.lerpDirection = -1;\n    if (opacity <= 0) this.lerpDirection = 1;\n    opacity += (0.030 * this.lerpDirection)\n    this.node.opacity(Helper.clamp(opacity, 0, 1))\n    super.update(frame);\n  }\n  \n}\n\nexport class BlinkBox extends BlinkTile {\n  constructor({...args}) {\n    super({ ...args });\n    this.rectAttributes = {\n      fill: 'transparent',\n      stroke: args.color,\n      strokeWidth: 5,\n      offsetX: 0,\n      offsetY: 0,\n      width: this.display.tileWidth,\n      height: this.display.tileHeight,\n    }\n  }\n}\n\nexport class Display {\n  constructor({\n    containerId = null,\n    width = 100,\n    height = 100,\n    tileWidth = 10,\n    tileHeight = 10,\n    tileGutter = 0,\n    tileOffset = 10,\n    game = null,\n  }) {\n    this.containerId = containerId;\n    this.width = width;\n    this.height = height;\n    this.tileWidth = tileWidth;\n    this.tileHeight = tileHeight;\n    this.tileGutter = tileGutter;\n    this.tileOffset = tileOffset;\n    this.stage = null;\n    this.layer = null;\n    this.animationLayer = null;\n    this.animations = [];\n    this.animationLoop = null;\n    this.game = game;\n    this.animationTypes = ANIMATION_TYPES;\n  }\n\n  initialize (document) {\n    let d = document.getElementById(this.containerId)\n    let displayContainer = document.createElement('div');\n    d.appendChild(displayContainer);\n\n    // this.adjustContentToScreen(d);\n    \n    this.stage = new Konva.Stage({\n      container: 'display',   // id of container <div>\n      width: this.width,\n      height: this.height\n    });\n\n    \n    // setting up main tile map layer\n    this.layer = new Konva.Layer({\n      hitGraphEnabled: false,\n    });\n    \n    this.stage.add(this.layer);\n    \n    // setting up animation layer\n    this.animationLayer = new Konva.Layer({});\n    this.stage.add(this.animationLayer);\n    let animationLoop = new Konva.Animation((frame) => {\n      this.animations.forEach((animation) => animation.update(frame))\n      // Stop animation updates if no animations to process\n      if (this.animations.length <= 0) {\n        if (this.animationLoop) {\n          if (this.animationLoop.isRunning()) {\n            this.animationLoop.stop();\n          }\n        }\n      }\n    }, this.animationLayer);\n    this.animationLoop = animationLoop;\n    animationLoop.start();\n  }\n\n  adjustContentToScreen (display_element) {\n    const DEVICE_WIDTH = display_element.offsetWidth;\n    const value = (DEVICE_WIDTH - this.tileOffset) / this.game.mapWidth;\n    this.tileWidth = Math.floor(value);\n    this.tileHeight = this.tileWidth;\n    this.width = ((this.game.mapWidth - 1) * this.tileWidth) + this.tileOffset;\n    this.height = (this.game.mapHeight * this.tileHeight) + this.tileOffset;\n  }\n\n  addAnimation (type, args) {\n    let animation;\n    switch (type) {\n      case ANIMATION_TYPES.SOLID_TILE:\n        animation = new ExampleAnimation({display: this, ...args})\n        break;\n      case ANIMATION_TYPES.BLINK_TILE:\n        animation = new BlinkTile({display: this, ...args})\n        break;\n      case ANIMATION_TYPES.BLINK_BOX:\n        animation = new BlinkBox({display: this, ...args})\n        break;\n      case ANIMATION_TYPES.DEFAULT:\n      default:\n        animation = new Animation({ display: this, ...args})\n        break;\n    }\n    animation.initialize();\n    this.animations.push(animation)\n    if (!this.animationLoop.isRunning()) this.animationLoop.start();\n    return animation\n  }\n\n  removeAnimation (id) {\n    this.animations = this.animations.filter((anim) => {\n      if (anim.id !== id) return true;\n      // if anim is being removed, remove associated nodes and shapes too\n      anim.node.destroy();\n      return false;\n    });\n  }\n\n  updateAnimation (id) {\n    this.animations = this.animations.map((anim) => {\n      if (anim.id === id) {\n        console.log(anim);\n      }\n      return anim;\n    });\n  }\n\n  updateTile(tile, character, foreground, background) {\n    // child[0] is the rectangle\n    // child[1] is the text\n    if (tile) {\n      tile.children[0].fill(background);\n      tile.children[1].fill(foreground);\n      tile.children[1].text(character);\n    }\n  }\n\n  createTile(x, y, character, foreground, background, layer = 'layer') {\n    const actual_x = (this.tileWidth * x) + (this.tileOffset + this.tileGutter);\n    const actual_y = (this.tileHeight * y) + (this.tileOffset + this.tileGutter);\n    let node = new Konva.Group({\n      id: `${x},${y}`,\n      x: (this.tileWidth * x) + (this.tileOffset + this.tileGutter),\n      y: (this.tileHeight * y) + (this.tileOffset + this.tileGutter),\n      width: this.tileWidth,\n      height: this.tileHeight,\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n    });\n\n    let rect = new Konva.Rect({\n      name: 'rect',\n      width: this.tileWidth,\n      height: this.tileHeight,\n      fill: background,\n      strokeEnabled: false,\n      // for optimization\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n    });\n\n    let text = new Konva.Text({\n      name: 'text',\n      text: character,\n      width: this.tileWidth,\n      height: this.tileHeight,\n      fontSize: this.tileWidth - 4,\n      fontFamily: 'scroll-o-script',\n      fill: foreground,\n      align: 'center',\n      verticalAlign: 'middle',\n      // for optimization\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n    });\n\n    node.add(rect);\n    node.add(text);\n    this.layer.add(node);\n    return node;\n  }\n\n  getAbsoultueX(x) {\n    return (this.tileWidth * x) + (this.tileOffset + this.tileGutter)\n  }\n\n  getAbsoultueY(y) {\n    return (this.tileWidth * y) + (this.tileOffset + this.tileGutter)\n  }\n\n  getTilesWide (width, tileOffset, tileWidth) {\n    return Math.floor((width - tileOffset) / tileWidth)\n  }\n  \n  getTilesHigh(height, tileOffset, tileHeight) {\n    return Math.floor((height - tileOffset) / tileHeight)\n  }\n\n  getTilesAcrossOnScreen () { return Math.floor(this.width / this.tileWidth)}\n  getTilesDownOnScreen () { return Math.floor(this.height / this.tileHeight)}\n\n  draw () {\n    this.layer.batchDraw();\n  }\n}","import { COLORS, THEMES } from './constants';\nimport uuid from 'uuid/v1';\n\nexport const MESSAGE_TYPE = {\n  INFORMATION: {\n    color: COLORS.gray_4,\n    backgroundColor: COLORS.black_1,\n  },\n  ACTION: {\n    color: COLORS.gray_2,\n    backgroundColor: COLORS.gray_5,\n  },\n  DANGER: {\n    color: COLORS.red_5,\n    backgroundColor: COLORS.black_1,\n  },\n  STATUS_EFFECT: {\n    color: THEMES.SOLARIZED.base3,\n    backgroundColor: THEMES.SOLARIZED.violet,\n  },\n  ERROR: {\n    color: THEMES.SOLARIZED.base3,\n    backgroundColor: THEMES.SOLARIZED.yellow,\n  },\n}\n\nexport class Message {\n  constructor({ text = '', type = MESSAGE_TYPE.INFORMATION }) {\n    let id = uuid();\n    this.id = id;\n    this.text = text;\n    this.type = type;\n  }\n}","import { MESSAGE_TYPE } from '../message';\nimport * as Helper from '../../helper';\n\nexport const Attacking = superclass => class extends superclass {\n  constructor({ attackDamage = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('ATTACKING');\n    this.attackDamage = attackDamage;\n  }\n  getAttackDamage(additional = 0) {\n\n    return this.attackDamage + additional;\n  }\n  canAttack(entity) {\n    return true;\n  }\n  attack(targetPos, additional = 0) {\n    let success = false;\n    let tile = this.game.map[Helper.coordsToString(targetPos)];\n    if (!tile) {\n      return success;\n    }\n    let targets = Helper.getDestructableEntities(tile.entities);\n    if (targets.length > 0) {\n      let target = targets[0];\n      if (this.canAttack(target)) {\n        let damage = this.getAttackDamage(additional);\n        if (this.entityTypes.includes('EQUIPING')) {\n          this.equipment.forEach((slot) => {\n            if (slot.item) {\n              if (slot.item.entityTypes.includes('ATTACKING')) {\n                damage += slot.item.getAttackDamage();\n              }\n            }\n          });\n        }\n        this.game.addMessage(`${this.name} does ${damage} to ${target.name}`, MESSAGE_TYPE.DANGER);\n        target.decreaseDurability(damage);\n        success = true;\n      }\n    }\n    return success;\n  }\n};\n","import { MESSAGE_TYPE } from '../message';\nimport * as Helper from '../../helper';\n\nexport const RangedAttacking = superclass => class extends superclass {\n  constructor({ attackRange = 0, baseRangedAccuracy = 0, baseRangedDamage = 0, magazineSize = 0, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('RANGED_ATTACKING');\n    this.attackRange = attackRange;\n    this.baseRangedAccuracy = baseRangedAccuracy;\n    this.baseRangedDamage = baseRangedDamage;\n    this.magazineSize = magazineSize;\n    this.magazine = magazineSize;\n  }\n\n  getRangedAttackChance(targetPos = null) {\n    const weaponAccuracy = this.getRangedWeaponAccuracy();\n    const coverDebuff = targetPos ? this.getRangedAttackCoverDebuff(targetPos) : 0;\n    const distanceDebuff = targetPos ? this.getRangedAttackDistanceDebuff(targetPos) : 0;\n    const result = this.baseRangedAccuracy + weaponAccuracy + coverDebuff + distanceDebuff;\n    return result;\n  }\n\n  getRangedAttackCoverDebuff(targetPos) {\n    const path = Helper.calculateStraightPath(this.getPosition(), targetPos);\n    const coverAccuracyModifer = path.reduce((acc, curr) => {\n      let tile = this.game.map[Helper.coordsToString(curr)];\n      // if targeting throuh a wall, the shot is modified by -100%\n      if (['WALL'].includes(tile.type)) return acc - 1;\n      let entitiesProvidingCover = Helper.filterEntitiesByType(tile.entities, 'COVERING');\n      let coverModifer = 0;\n      // only counts the first entity cover modifer in a tile\n      if (entitiesProvidingCover.length > 0) {\n        // if covering entity is in use by this actor, ignore it's modifer\n        if (this.entityTypes.includes('USES_COVER')) {\n          if (this.getCoveredByIds().includes(entitiesProvidingCover[0].id)) {\n            return acc;\n          }\n        }\n        coverModifer = entitiesProvidingCover[0].accuracyModifer;\n      }\n      return acc + coverModifer;\n    }, 0);\n    return coverAccuracyModifer;\n  }\n\n  getRangedAttackDistanceDebuff(targetPos) {\n    const distanceToTarget = Helper.calculatePath(this.game, targetPos, this.getPosition(), 8).length;\n    return -1 * (distanceToTarget / (this.getAttackRange() * 3))\n  }\n\n  getAttackRange() {\n    let range = this.attackRange;\n    if (this.entityTypes.includes('EQUIPING')) {\n      this.equipment.forEach((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('RANGED_ATTACKING')) {\n            range += slot.item.attackRange;\n          }\n        }\n      });\n    }\n    return range;\n  }\n\n  getRangedWeaponAccuracy() {\n    let accuracy = 0;\n    if (this.entityTypes.includes('EQUIPING')) {\n      this.equipment.forEach((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('RANGED_ATTACKING')) {\n            accuracy += slot.item.getRangedAttackChance();\n          }\n        }\n      });\n    }\n    return accuracy;\n  }\n\n  getRangedAttackDamage(additional = 0) {\n\n    return this.baseRangedDamage + this.getRangedWeaponDamage() + additional;\n  }\n\n  getRangedWeaponDamage() {\n    let damage = 0;\n    if (this.entityTypes.includes('EQUIPING')) {\n      this.equipment.forEach((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('RANGED_ATTACKING')) {\n            damage += slot.item.getRangedAttackDamage();\n          }\n        }\n      });\n    }\n    return damage;\n  }\n\n  canRangedAttack(entity) {\n    return true;\n  }\n\n  getEquipedWeapons() {\n    if (this.entityTypes.includes('EQUIPING')) {\n      return this.equipment.map((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('RANGED_ATTACKING')) {\n            return slot.item;\n          }\n        }\n      });\n    }\n    return [];\n  }\n\n  useAmmo() {\n    this.getEquipedWeapons().forEach((weapon) => weapon.magazine = Math.max(0, weapon.magazine - 1));\n  }\n\n  reload () {\n    let reloaded = false;\n    if (this.entityTypes.includes('CONTAINING')) {\n      this.getEquipedWeapons().forEach((weapon) => {\n        const amount = weapon.magazineSize - weapon.magazine;\n        for (let i = 0; i < amount; i++) {\n          let ammo = this.contains('Ammo');\n          if (ammo) {\n            this.removeFromContainer(ammo);\n            weapon.magazine += 1;\n            reloaded = true;\n          }\n        }\n      });\n    }\n    return reloaded;\n  }\n\n  rangedAttack(targetPos, additionalDamage = 0, additionalAccuracy = 0) {\n    let success = false;\n    let hit = false;\n    let tile = this.game.map[Helper.coordsToString(targetPos)];\n    if (!tile) {\n      return [success, hit];\n    }\n    let targets = Helper.getDestructableEntities(tile.entities);\n    if (targets.length > 0) {\n      const attackChance = this.getRangedAttackChance(targetPos);\n      const hitChance = attackChance + additionalAccuracy;\n      hit = Math.random() < hitChance;\n      // TODO: trigger hit and miss animations\n      this.useAmmo();\n      if (!hit) {\n        success = true;\n        return [success, hit];\n      }\n      let target = targets[0];\n      if (this.canRangedAttack(target)) {\n        let damage = this.getRangedAttackDamage(additionalDamage);\n        this.game.addMessage(`${this.name} does ${damage} to ${target.name}`, MESSAGE_TYPE.DANGER);\n        target.decreaseDurability(damage);\n        success = true;\n      }\n    }\n    return [success, hit];\n  }\n};\n","import * as Constant from '../constants';\n\nexport const Equipable = superclass => class extends superclass {\n  constructor({ name = 'nameless', equipmentType = Constant.EQUIPMENT_TYPES.HAND, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('EQUIPABLE');\n    this.name = name;\n    this.equipmentType = equipmentType;\n  }\n};\n","import * as Helper from '../../helper';\n\nexport const Acting = superclass => class extends superclass {\n  constructor({ actions = [], speed = 100, energy = 0, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('ACTING');\n    this.actions = actions;\n    this.speed = speed;\n    this.energy = speed;\n  }\n  getAction() {\n    let action = Helper.getRandomInArray(this.actions);\n    if (action) {\n      return action;\n    }\n  }\n  gainEnergy(value = this.speed) {\n    this.energy += value;\n  }\n  hasEnoughEnergy() {\n    return this.energy > 0;\n  }\n};\n","import * as Helper from '../../helper';\n\nexport const Rendering = superclass => class extends superclass {\n  constructor({ pos = { x: 0, y: 0 }, renderer, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('RENDERING');\n    this.pos = pos;\n    this.renderer = { ...renderer };\n    this.currentFrame = 0;\n  }\n\n  getRenderer() {\n    return this.renderer\n  }\n\n  getPosition() {\n    return this.pos;\n  }\n  move(targetPos) {\n    let success = false;\n    if (this.game.canOccupyPosition(targetPos, this)) {\n      let tile = this.game.map[Helper.coordsToString(this.pos)];\n      this.game.map[Helper.coordsToString(this.pos)] = { ...tile, entities: tile.entities.filter((e) => e.id !== this.id) };\n      this.pos = targetPos;\n      this.game.map[Helper.coordsToString(targetPos)].entities.push(this);\n      success = true;\n    }\n    return success;\n  }\n  shove(targetPos, direction) {\n    let success = false;\n    let targetTile = this.game.map[Helper.coordsToString(targetPos)];\n    if (targetTile) {\n      targetTile.entities.map((entity) => {\n        if (entity.entityTypes.includes('PUSHABLE')) {\n          if (!entity.passable && entity.pushable) {\n            let newX = entity.pos.x + direction[0];\n            let newY = entity.pos.y + direction[1];\n            let newPos = { x: newX, y: newY };\n            entity.move(newPos);\n          }\n        }\n      });\n    }\n    success = this.move(targetPos);\n    return success;\n  }\n};\n","export class ContainerSlot {\n  constructor({ itemType, items }) {\n    this.itemType = itemType;\n    this.items = items;\n  }\n}\n\nexport const Containing = superclass => class extends superclass {\n  constructor({ container = [], ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CONTAINING');\n    this.container = container;\n  }\n  createSlot(item) {\n    let slot = new ContainerSlot({\n      itemType: item.name,\n      items: [item],\n    });\n    this.container.push(slot);\n  }\n  contains(itemType) {\n    let container = this.container;\n    let slots = container.filter((slot) => slot.itemType === itemType);\n    return slots.length > 0 ? slots[0].items[0] : false;\n  }\n  addToContainer(item) {\n    const index = this.container.findIndex((slot) => slot.itemType === item.name);\n    if (index >= 0) {\n      this.container[index].items.push(item);\n    }\n    else {\n      this.createSlot(item);\n    }\n  }\n  removeFromContainer(item) {\n    this.container.forEach((slot, index) => {\n      slot.items = slot.items.filter((it) => it.id !== item.id);\n      if (!slot.items.length)\n        this.container.splice(index, 1);\n    });\n  }\n};\n","import { Howl, Howler } from 'howler';\n\nexport default {\n  fire_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/fire-00.mp3'],\n    volume: 0.5,\n    loop: true,\n  }),\n  fire_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/fire-01.mp3'],\n    volume: 0.05,\n    loop: true,\n  }),\n  scream_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/scream-00.wav']\n  }),\n  scream_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/scream-01.wav']\n  }),\n  scream_2: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/scream-02.wav']\n  }),\n  water_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/water-04.wav']\n  }),\n  water_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/water-05.wav']\n  }),\n  chop_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/chop-00.wav']\n  }),\n  chop_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/chop-01.wav']\n  }),\n  equip_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/equip-00.wav']\n  }),\n  equip_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/equip-01.wav']\n  }),\n  explosion_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/explosion-00.wav'],\n    volume: 0.2,\n  }),\n  save: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/save.wav'],\n  }),\n  lose: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/lose-00.wav'],\n  }),\n  grab_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/grab-00.wav'],\n  }),\n  release_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/grab-01.wav'],\n  }),\n}","export const Playing = superclass => class extends superclass {\n  constructor({ keymap = {}, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('PLAYING');\n    this.nextAction = null;\n    this.keymap = keymap;\n  }\n  setNextAction(action) {\n    this.nextAction = action;\n  }\n  getAction() {\n    let action = this.nextAction;\n    this.nextAction = null;\n    return action;\n  }\n};\n","import * as Helper from '../../helper';\n\nexport const destroyEntity = (entity) => {\n  entity.energy = 0;\n  if (entity.pos) {\n    let tile = entity.game.map[Helper.coordsToString(entity.pos)];\n    entity.game.map[Helper.coordsToString(entity.pos)].entities = tile.entities.filter((e) => e.id !== entity.id);\n  }\n  // entity.game.engine.actors = entity.game.engine.actors.filter((e) => e.id !== entity.id);\n  entity.game.engine.removeStatusEffectByActorId(entity.id);\n  entity.game.draw()\n  entity.active = false;\n}","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nexport class Say extends Base {\n  constructor({ message, messageType = MESSAGE_TYPE.INFORMATION, processDelay = 50, ...args }) {\n    super({ ...args });\n    this.message = message;\n    this.messageType = messageType;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    this.game.addMessage(`${this.actor.name} says \"${this.message}\"`, this.messageType);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import SOUNDS from '../sounds';\nimport { Base } from './Base';\nimport { Say } from './Say';\nimport * as Helper from '../../helper';\nimport * as Constant from '../constants';\n\nexport class Attack extends Base {\n  constructor({ targetPos, additionalDamage = 0, processDelay = 100, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.additionalDamage = additionalDamage;\n    this.processDelay = processDelay;\n    this.particleTemplate = Constant.PARTICLE_TEMPLATES.damage;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (!this.actor.entityTypes.includes('ATTACKING')) {\n      return {\n        success: true,\n        alternative: new Say({\n          message: `Ooh I don\\'t know how to attack`,\n          game: this.game,\n          actor: this.actor,\n          energyCost: 0,\n        }),\n      };\n    }\n    success = this.actor.attack(this.targetPos, this.additionalDamage);\n    if (success) {\n      const sound = Helper.getRandomInArray([SOUNDS.chop_0, SOUNDS.chop_1]);\n      sound.play();\n      this.addParticle(1, { ...this.targetPos }, { x: 0, y: 0 });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { Attack } from \"./Attack\";\n\nexport class Move extends Base {\n  constructor({ targetPos, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let moveSuccess = this.actor.move(this.targetPos);\n    if (moveSuccess) {\n      success = true;\n    } else {\n      success = true;\n      alternative = new Attack({\n        targetPos: this.targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: 0\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Move } from './Move';\nimport { DestroySelf } from './DestroySelf';\nimport * as Constant from '../constants';\n\nexport class ThrowProjectile extends Move {\n  constructor({ ...args }) {\n    super({ ...args });\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    this.actor.passable = false;\n    let move_result = super.perform();\n    if (move_result.success) {\n      this.actor.path.shift();\n      success = true;\n    }\n    if (this.actor.path.length === 0) {\n      success = true;\n      alternative = new DestroySelf({\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n      });\n    }\n    if (move_result.alternative) {\n      let attackSuccess = this.actor.attack(this.targetPos);\n      if (attackSuccess) {\n        alternative = new DestroySelf({\n          game: this.game,\n          actor: this.actor,\n          energyCost: Constant.ENERGY_THRESHOLD,\n          processDelay: 0,\n        });\n      }\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n","import { Attack } from './Attack';\nexport class SelfDestructiveAttack extends Attack {\n  constructor({ damageToSelf, ...args }) {\n    super({ ...args });\n    this.damageToSelf = damageToSelf;\n    this.onSuccess = () => {\n      console.log('Self destruct success');\n      this.actor.decreaseDurabilityWithoutDefense(damageToSelf);\n    };\n    this.onFailure = () => {\n      console.log('Self destruct fails');\n      this.actor.destroy();\n    };\n  }\n}\n","import { Base } from './Base';\nimport { SelfDestructiveAttack } from \"./SelfDestructiveAttack\";\nimport * as Constant from '../constants';\n\nexport class ProjectileMove extends Base {\n  constructor({ targetPos, damageToSelf = 1, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.processDelay = processDelay;\n    this.damageToSelf = damageToSelf;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let moveSuccess = this.actor.move(this.targetPos);\n    if (moveSuccess) {\n      this.actor.energy -= this.energyCost;\n      success = true;\n    }\n    else {\n      success = true;\n      alternative = new SelfDestructiveAttack({\n        targetPos: this.targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        damageToSelf: this.damageToSelf,\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import * as Constant from '../constants';\nimport { ProjectileMove } from '../Actions/ProjectileMove';\nimport { DestroySelf } from '../Actions/DestroySelf';\n\nexport const DirectionalProjecting = superclass => class extends superclass {\n  constructor({ path = false, direction = { x: 0, y: 0 }, attackDamage = 1, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DIRECTIONAL_PROJECTING');\n    this.path = path;\n    this.direction = direction;\n    this.attackDamage = attackDamage;\n    this.range = range;\n  }\n  createPath(game) {\n    let path = [];\n    for (let i = 1; i < this.range + 1; i++) {\n      path.push({\n        x: this.pos.x + (this.direction[0] * i),\n        y: this.pos.y + (this.direction[1] * i)\n      });\n    }\n    this.path = path;\n  }\n  getAction(game) {\n    let result = null;\n    let newX = this.pos.x + this.direction[0];\n    let newY = this.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n    this.passable = false;\n    if (this.range > 0) {\n      result = new ProjectileMove({\n        targetPos: targetPos,\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        damageToSelf: 1,\n        onSuccess: () => this.range -= 1,\n        onAfter: () => {\n          if (this.energy <= 100) {\n            game.engine.setActorToPrevious();\n          }\n        }\n      });\n    }\n    else {\n      result = new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: 0\n      });\n    }\n    return result;\n  }\n};\n","import { Base } from './Base';\nimport { Attack } from \"./Attack\";\nimport * as Constant from '../constants';\n\nexport class Shove extends Base {\n  constructor({ targetPos, direction, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.direction = direction;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let moveSuccess = this.actor.shove(this.targetPos, this.direction);\n    if (moveSuccess) {\n      this.actor.energy -= this.energyCost;\n      success = true;\n    }\n    else {\n      success = true;\n      alternative = new Attack({\n        targetPos: this.targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Move } from './Move';\nimport { DestroySelf } from './DestroySelf';\nimport * as Constant from '../constants';\n\nexport class ThrowProjectileGas extends Move {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.processDelay = 0;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    this.actor.passable = false;\n    let move_result = super.perform();\n    if (move_result.success) {\n      this.actor.path.shift();\n      success = true;\n    }\n    if (this.actor.path.length === 0) {\n      success = true;\n      alternative = new DestroySelf({\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n      });\n    }\n    if (move_result.alternative) {\n      this.actor.attack(this.targetPos);\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { Move } from '../Actions/Move';\nimport { Say } from '../Actions/Say';\n\nexport const Chasing = superclass => class extends superclass {\n  constructor({ targetEntity = null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CHASING');\n    this.targetEntity = targetEntity;\n  }\n  getAction(game) {\n    if (this.targetEntity) {\n      let path = Helper.calculatePath(game, this.targetEntity.pos, this.pos);\n      let targetPos = path.length > 0 ? path[0] : this.pos;\n      return new Move({\n        targetPos,\n        game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    } else {\n      return new Say({\n        message: 'Where are they?',\n        game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n  }\n};\n","import { Base } from './Base';\nimport * as Helper from '../../helper';\n\nexport class PlaceActor extends Base {\n  constructor({ targetPos, entity, interrupt = true, forcePlacement = false, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.entity = entity;\n    this.interrupt = interrupt;\n    this.forcePlacement = forcePlacement;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    // let canPlace = true;\n    // if (!this.game.canOccupyPosition(this.targetPos, this.entity)) canPlace = false;\n    // if (this.entity.entityTypes.includes('PARENT')) {\n    //   this.entity.children.forEach((child) => {\n    //     console.log(child.pos);\n    //     if (!this.game.canOccupyPosition(child.pos, child)) canPlace = false;\n    //   })\n    // }\n    // if (canPlace) {\n    //   this.entity.pos = this.targetPos;\n    //   this.game.engine.addActorAsPrevious(this.entity);\n    //   this.game.engine.start(); // should this be used outside of engine?\n    //   success = true;      \n    // }\n    let canOccupyPosition = this.forcePlacement ? true : this.game.canOccupyPosition(this.targetPos, this.entity);\n    const tile = this.game.map[Helper.coordsToString(this.targetPos)];\n    if (canOccupyPosition && tile) {\n      this.entity.pos = this.targetPos;\n      tile.entities.push(this.entity);\n      // this.game.engine.addActorAsPrevious(this.entity);\n      // this.game.engine.addActor(this.entity);\n      this.game.engine.addActorAsNext(this.entity);\n      // this.interrupt = true;\n      // this.game.engine.start(); // BUGGED - should this be used outside of engine?\n      success = true;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","export const Draggable = superclass => class extends superclass {\n  constructor({ draggable = true, ...args }) {\n    super({ ...args });\n    this.draggable = draggable;\n    this.entityTypes = this.entityTypes.concat('DRAGGABLE');\n  }\n};\n","export const Pushable = superclass => class extends superclass {\n  constructor({ pushable = true, ...args }) {\n    super({ ...args });\n    this.pushable = pushable;\n    this.entityTypes = this.entityTypes.concat('PUSHABLE');\n  }\n};\n","import * as _ from 'lodash';\nimport * as Helper from '../../helper';\n\nexport const addTileZone = (tileKey, origin = { x: 0, y: 0 }, height = 3, width = 3, type = 'GROUND', map, mapHeight, mapWidth) => {\n  for (let i = 0; i < mapHeight; i++) {\n    for (let j = 0; j < mapWidth; j++) {\n      if (i >= origin.y && i <= origin.y + (height - 1) && j >= origin.x && j <= origin.x + (width - 1)) {\n        const key = `${j},${i}`\n        addTileToMap({map, key, tileKey, tileType: type})\n      }\n    }\n  }\n}\n\nexport const addTileToMap = ({map, key, tileKey, tileType, entities = []}) => {\n  const numberOfAnimationFrames = _.get(tileKey[tileType], 'animation.length', 0);\n  const currentFrame = Helper.getRandomInt(0, numberOfAnimationFrames);\n  const tileData = {\n    type: tileType,\n    currentFrame,\n    entities,\n    tileKey,\n  };\n  map[key] = tileData;\n\n  return tileData;\n}\n\nexport const tileHasTag = ({tile, tag}) => {\n  const tags = _.get(tile.tileKey[tile.type], 'tags', []);\n  return tags.includes(tag);\n}\n\nexport const getTileFromMap = ({map, position}) => map[Helper.coordsToString(position)];","import * as Constant from './constants';\nimport {\n  DestructiveCloudProjectileV2,\n  DestructiveProjectile,\n  DirectionalProjectile,\n  MovingWall,\n  DestructiveCloudProjectile,\n  Weapon,\n  Armor,\n} from './Entities/index';\n\nexport const TYPE = {\n  KUNAI: 'Kunai',\n  DIRECTIONAL_KUNAI: 'Directional Kunai',\n  SWORD: 'Sword',\n  AXE: 'Axe',\n  ARMOR: 'Armor',\n  WATER_GUN: 'Water Gun',\n  BARRIER: 'Barrier',\n}\n\nconst createProjectileCloud = ({ \n  engine, \n  actor, \n  targetPos, \n  throwDirection,\n  speed,\n  structureType,\n  createProjectile,\n}) => {\n  let structure = Constant.CLONE_PATTERNS[structureType];\n\n  let children = structure.positions.map((slot) => {\n    let position = {\n      x: actor.pos.x + slot.x + (throwDirection.x * structure.x_offset),\n      y: actor.pos.y + slot.y + (throwDirection.y * structure.y_offset)\n    }\n    \n    let targetPosition = {\n      x: targetPos.x + slot.x,\n      y: targetPos.y + slot.y,\n    }\n\n    return createProjectile(engine, position, targetPosition);\n  })\n\n  return new DestructiveCloudProjectileV2({\n    game: engine.game,\n    passable: true,\n    speed,\n    children,\n  })\n}\n\nconst createProjectileSingularity = ({ \n  engine, \n  actor, \n  targetPos, \n  speed,\n  structureType,\n  createProjectile,\n}) => {\n  let structure = Constant.CLONE_PATTERNS[structureType];\n\n  let children = structure.positions.map((slot) => {\n    let position = {\n      x: targetPos.x + slot.x + structure.x_offset,\n      y: targetPos.y + slot.y + structure.y_offset\n    }\n\n    let targetPosition = {\n      x: targetPos.x,\n      y: targetPos.y,\n    }\n\n    return createProjectile(engine, position, targetPosition);\n\n  })\n\n  return new DestructiveCloudProjectileV2({\n    game: engine.game,\n    passable: true,\n    speed,\n    children,\n  })\n}\n\nconst createProjectileBurst = ({ \n  engine, \n  actor, \n  targetPos, \n  speed,\n  structureType,\n  createProjectile,\n}) => {\n  let structure = Constant.CLONE_PATTERNS[structureType];\n\n  let children = structure.positions.map((slot) => {\n    let position = {\n      x: targetPos.x + structure.x_offset,\n      y: targetPos.y + structure.y_offset\n    }\n\n    let targetPosition = {\n      x: targetPos.x + slot.x,\n      y: targetPos.y + slot.y,\n    }\n\n    return createProjectile(engine, position, targetPosition);\n\n  })\n\n  return new DestructiveCloudProjectileV2({\n    game: engine.game,\n    passable: true,\n    speed,\n    children,\n  })\n}\n\nexport const sandTomb = ({\n  engine,\n  actor,\n  targetPos,\n}) => createProjectileSingularity({\n  engine,\n  actor,\n  targetPos,\n  speed: 100,\n  structureType: 'circle',\n  createProjectile: sandTombPart,\n})\n\nexport const sandBurst = ({\n  engine,\n  actor,\n  targetPos,\n}) => createProjectileBurst({\n  engine,\n  actor,\n  targetPos,\n  speed: 500,\n  structureType: 'circle',\n  createProjectile: sandTombPart,\n})\n\nexport const sandWallPulse = ({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n}) => createProjectileCloud({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n  speed: 500,\n  structureType: 'smallSquare',\n  createProjectile: movingSandWall,\n})\n\nexport const kunaiCloud = ({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n}) => createProjectileCloud({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n  speed: 500,\n  structureType: 'square',\n  createProjectile: kunai,\n})\n\nexport const fireballCloud = ({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n}) => createProjectileCloud({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n  speed: 500,\n  structureType: 'square',\n  createProjectile: fireball,\n})\n\nexport const kunai = (engine, pos, targetPos) => new DestructiveProjectile({\n  game: engine.game,\n  targetPos,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    character: '>',\n    color: 'white',\n    background: '',\n    animation: [\n      { background: '', color: 'white', character: '>', },\n      { background: '', color: 'white', character: 'v', },\n      { background: '', color: 'white', character: '<', },\n      { background: '', color: 'white', character: '^', },\n      { background: '', color: 'white', character: '>', },\n    ],\n  },\n  name: TYPE.KUNAI,\n  speed: 600,\n  energy: 0,\n  range: 30,\n})\n\nexport const directionalKunai = (engine, pos, direction, range) => new DirectionalProjectile({\n  game: engine.game,\n  direction,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    character: '>',\n    color: 'white',\n    background: '',\n    animation: [\n      { background: 'lightgrey', color: 'grey', character: '>', },\n      { background: 'lightgrey', color: 'grey', character: 'v', },\n      { background: 'lightgrey', color: 'grey', character: '<', },\n      { background: 'lightgrey', color: 'grey', character: '^', },\n      { background: 'lightgrey', color: 'grey', character: '>', },\n    ],\n  },\n  name: TYPE.DIRECTIONAL_KUNAI,\n  speed: 600,\n  energy: 0,\n  range,\n})\n\nexport const movingSandWall = (engine, pos, targetPos, range) => new MovingWall({\n  game: engine.game,\n  passable: false,\n  pos: { x: pos.x, y: pos.y },\n  targetPos,\n  renderer: {\n    // character: '>',\n    character: ']',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.KUNAI,\n  // name: TYPE.BARRIER,\n  durability: 3,\n  range,\n  speed: 300,\n})\n\nexport const sandShuriken = (engine, pos, direction, range) => new DirectionalProjectile({\n  game: engine.game,\n  direction,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '✦️',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.DIRECTIONAL_KUNAI,\n  speed: 600,\n  energy: 0,\n  range,\n})\n\nexport const sandTombPart = (engine, pos, targetPos) => new DestructiveProjectile({\n  game: engine.game,\n  targetPos,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '✦️',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.KUNAI,\n  speed: 600,\n  energy: 0,\n  range: 30,\n})\n\nexport const fireball = (engine, pos, targetPos) => new DestructiveProjectile({\n  game: engine.game,\n  targetPos,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '🔥',\n    color: 'wheat',\n    background: 'tomato',\n  },\n  name: TYPE.KUNAI,\n  speed: 100,\n  energy: 0,\n  range: 30,\n})\n\nexport const fireballGas = (engine, actor, targetPos) => {\n  return new DestructiveCloudProjectile({\n    game: engine.game,\n    owner_id: actor ? actor.id : null,\n    targetPos,\n    passable: true,\n    pos: actor ? { x: actor.pos.x, y: actor.pos.y } : null,\n    renderer: {\n      // character: '@',\n      character: '🔥',\n      color: 'wheat',\n      background: 'tomato',\n    },\n    name: TYPE.KUNAI,\n    speed: 100,\n    range: 10,\n    clonePattern: Constant.CLONE_PATTERNS.bigSquare,\n    // clonePattern: Constant.CLONE_PATTERNS.square,\n  })\n}\n\nexport const waterball = (engine, actor, targetPos) => new DestructiveCloudProjectile({\n  game: engine.game,\n  owner_id: actor ? actor.id : null,\n  targetPos,\n  passable: true,\n  pos: actor ? { x: actor.pos.x, y: actor.pos.y } : null,\n  renderer: {\n    // character: '~',\n    character: '🌊',\n    color: 'silver',\n    background: 'lightslategrey',\n  },\n  name: TYPE.KUNAI,\n  speed: 800,\n  range: 10,\n  clonePattern: Constant.CLONE_PATTERNS.bigSquare,\n  // clonePattern: Constant.CLONE_PATTERNS.square,\n})\n\nexport const sword = (engine) => new Weapon({\n  game: engine.game,\n  name: TYPE.SWORD,\n  passable: true,\n  attackDamage: 1,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    // character: '|',\n    character: '🗡️',\n    color: 'white',\n    background: '',\n  },\n})\n\nexport const axe = (engine) => new Weapon({\n  game: engine.game,\n  name: TYPE.AXE,\n  passable: true,\n  attackDamage: 5,\n  equipmentType: Constant.EQUIPMENT_TYPES.GENERIC,\n  renderer: {\n    character: 'a',\n    sprite: '',\n    color: 'white',\n    background: '',\n  },\n})\n\nexport const waterGun = (engine) => new Weapon({\n  game: engine.game,\n  name: TYPE.WATER_GUN,\n  passable: true,\n  attackDamage: 0,\n  equipmentType: Constant.EQUIPMENT_TYPES.GENERIC,\n  renderer: {\n    character: 'w',\n    sprite: '',\n    color: Constant.THEMES.SOLARIZED.blue,\n    background: '',\n  },\n})\n\nexport const fireJacket = (engine) => new Armor({\n  game: engine.game,\n  name: 'Fire Jacket',\n  passable: true,\n  defense: 1,\n  equipmentType: Constant.EQUIPMENT_TYPES.GENERIC,\n  renderer: {\n    character: 'J',\n    sprite: '',\n    color: Constant.THEMES.SOLARIZED.magenta,\n    background: '',\n  },\n})\n\nexport const test = (engine, pos) => new Weapon({\n  game: engine.game,\n  name: TYPE.SWORD,\n  passable: true,\n  attackDamage: 1,\n  pos,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    // character: '|',\n    character: '🗡️',\n    color: 'white',\n    background: 'lightsteelblue',\n  },\n})\n","import { destroyEntity } from './helper';\nexport const Destructable = superclass => class extends superclass {\n  constructor({ durability = 1, defense = 0, onDestroy = () => null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DESTRUCTABLE');\n    this.durability = durability;\n    this.durabilityMax = durability;\n    this.defense = defense;\n    this.onDestroy = onDestroy;\n    this.actorSprite = this.renderer.sprite\n    this.actorCharacter = this.renderer.character\n  }\n  getDefense() {\n    let defense = this.defense;\n    // add in reducer to get defense stats of all equpiment\n    if (this.entityTypes.includes('EQUIPING')) {\n      this.equipment.forEach((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('DESTRUCTABLE')) {\n            defense += slot.item.getDefense();\n          }\n        }\n      });\n    }\n    return defense;\n  }\n  decreaseDurabilityWithoutDefense(value) {\n    this.durability -= value;\n    if (this.durability <= 0) {\n      this.onDestroy(this);\n      this.destroy();\n    }\n  }\n  decreaseDurability(value) {\n    const current = this.durability;\n    const newDurability = current - (value - this.getDefense());\n    this.durability = Math.min(current, newDurability);\n    this.updateActorRenderer();\n    if (this.durability <= 0) {\n      this.onDestroy(this);\n      this.destroy();\n    }\n  }\n  increaseDurability(value) {\n    this.durability += value;\n    this.updateActorRenderer();\n  }\n  updateActorRenderer() {\n    if (this.durability === this.durabilityMax) {\n      this.renderer.sprite = this.actorSprite;\n      this.renderer.character = this.actorCharacter;\n    } else {\n      this.renderer.sprite = this.durability;\n      this.renderer.character = this.durability;\n    }\n    this.game.draw();\n  }\n  destroy() {\n    destroyEntity(this);\n  }\n};\n","export const Burnable = superclass => class extends superclass {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('BURNABLE');\n    this.canBurn = true;\n    this.willResetCanBurn = false;\n  }\n  resetCanBurn() {\n    this.willResetCanBurn = false;\n    this.canBurn = true;\n  }\n  burn() {\n    if (this.canBurn) {\n      this.decreaseDurability(2);\n      return true;\n    }\n    return false;\n  }\n};\n","import SOUNDS from '../sounds';\nimport { FireSpread } from './index';\nimport * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport {MESSAGE_TYPE} from '../message';\n\nexport const Exploding = superclass => class extends superclass {\n  constructor({ flammability = 1, explosivity = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('EXPLODING');\n    this.flammability = flammability;\n    this.explosivity = explosivity;\n  }\n  enflame() {\n    // create num of fireSpreads\n    const fires = Array(this.flammability).fill('').map((item) => {\n      return new FireSpread({\n        name: 'Pyro',\n        pos: { ...this.pos },\n        game: this.game,\n        renderer: {\n          character: '*',\n          color: Constant.THEMES.SOLARIZED.base3,\n          background: Constant.THEMES.SOLARIZED.red,\n        },\n        timeToSpread: 1,\n        spreadCount: 1,\n        durability: 1,\n        attackDamage: 1,\n        speed: 100,\n      });\n    });\n    fires.forEach((fire) => {\n      // add them to map\n      this.game.placeActorOnMap(fire);\n      // add them to engine\n      this.game.engine.addActor(fire);\n    });\n  }\n  explode() {\n    const positions = Helper.getPointsWithinRadius({ x: 0, y: 0 }, this.explosivity)\n    let structure = {\n      x_offset: 0,\n      y_offset: 0,\n      positions\n    };\n    structure.positions.forEach((slot) => {\n      let position = {\n        x: this.pos.x + slot.x + structure.x_offset,\n        y: this.pos.y + slot.y + structure.y_offset\n      };\n      const tile = this.game.map[Helper.coordsToString(position)];\n      if (tile) {\n        tile.type = 'BURNT';\n        let targets = Helper.getDestructableEntities(tile.entities.filter(\n          (entity) => entity.id !== this.id\n        ));\n        if (targets.length > 0) {\n          // let target = targets[0];\n          targets.forEach((target) => {\n            let damage = this['attackDamage'] ? this.attackDamage : this.explosivity;\n            this.game.addMessage(`${this.name} does ${damage} to ${target.name}`, MESSAGE_TYPE.DANGER);\n            target.decreaseDurability(damage);\n          })\n        }\n      }\n    });\n    if (this.explosivity > 0)\n      SOUNDS.explosion_0.play();\n    // this.game.draw(); //may not need draw here\n  }\n  destroy() {\n    this.explode();\n    this.enflame();\n    super.destroy();\n  }\n};\n","import * as _ from 'lodash';\n\nexport const HasKeymap = superclass => class extends superclass {\n  constructor({ initializeKeymap, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HAS_KEYMAP');\n    this.keymapStack = [];\n    this.initializeKeymap = initializeKeymap;\n    const keymap = initializeKeymap(this.game.engine, this);\n    this.addKeymap(keymap);\n  }\n\n  getKeymap () {\n    return _.get(this.keymapStack, '0', null);\n  }\n\n  addKeymap (newKeymap) {\n    this.keymapStack.unshift(newKeymap);\n  }\n\n  removeKeymap () {\n    this.keymapStack.shift();\n  }\n\n  reinitializeKeymap (ignoredKeys = []) {\n    this.keymapStack = [];\n    const keymap = this.initializeKeymap(this.game.engine, this);\n    ignoredKeys.forEach((key) => delete keymap[key])\n    this.addKeymap(keymap);\n  }\n\n  setKeymap (newKeymap) {\n    this.addKeymap(newKeymap);\n    return this.getKeymap;\n  }\n\n  goToPreviousKeymap () {\n    this.removeKeymap();\n    return this.getKeymap();\n  }\n};\n","export const Upgrade = ({\n  activate = (actor) => null,\n  canUpgrade = (actor) => true,\n  cost = 1,\n  name = 'upgrade',\n  removeOnActivate = false,\n}) => {\n  return {\n    activate,\n    canUpgrade,\n    cost,\n    name,\n    removeOnActivate,\n  }\n}\n\nexport const Upgradable = superclass => class extends superclass {\n  constructor({ upgrade_points = 0, upgrade_tree = [], ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('UPGRADABLE');\n    this.upgrade_points = upgrade_points;\n    this.upgrade_tree = upgrade_tree;\n  }\n\n  upgrade (upgrade) {\n    if (upgrade.canUpgrade(this)) {\n      upgrade.activate(this);\n      if (upgrade.removeOnActivate) {\n        const newTree = this.upgrade_tree.filter((currUpgrade) => currUpgrade.name !== upgrade.name);\n        this.upgrade_tree = newTree;\n      }\n      return true;\n    }\n    return false;\n  }\n};\n","export const HasFaction = superclass => class extends superclass {\n  constructor({ faction = null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HAS_FACTION');\n    this.faction = faction;\n  }\n};\n","import { ANIMATION_TYPES } from '../Display/konvaCustom';\nimport * as Helper from '../../helper';\nexport const UsesCover = superclass => class extends superclass {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('USES_COVER');\n    this.coverAnimations = [];\n    this.showCoverAnimations = true;\n    this.coveredBy = [];\n  }\n\n  getCoveredByIds () {\n    return this.coveredBy.map((entity) => entity.id);\n  }\n\n  setCoverAnimations () {\n    // check neigbors\n    if (!this.showCoverAnimations) return;\n    const tiles = Helper.getNeighboringTiles(this.game.map, this.getPosition());\n    let coverAnimated = false;\n    tiles.forEach((tile) => {\n      if (tile.entities.length) {\n        const entity = tile.entities[0];\n        if (entity.entityTypes.includes('COVERING')) {\n          if (entity.isProvidingCover()) {\n            const position = entity.getPosition();\n            const newAnimation = this.game.display.addAnimation(\n              ANIMATION_TYPES.BLINK_BOX,\n              {\n                x: position.x,\n                y: position.y,\n                color: '#3e7dc9'\n              }\n            );\n            this.coverAnimations.push(newAnimation);\n            coverAnimated = true;\n            this.coveredBy.push(entity);\n          }\n        }\n      }\n    });\n    if (coverAnimated) {\n      //animate covered actor\n      const position = this.getPosition();\n      const newAnimation = this.game.display.addAnimation(\n        ANIMATION_TYPES.BLINK_BOX,\n        {\n          x: position.x,\n          y: position.y,\n          color: '#3e7dc9'\n        }\n      );\n      this.coverAnimations.push(newAnimation);\n    }\n  }\n\n  removeCoverAnimations () {\n    if (this.coverAnimations.length) {\n      this.coverAnimations.forEach((animation) => {\n        this.game.display.removeAnimation(animation.id);\n      })\n      this.coverAnimations = [];\n    }\n  }\n\n  removeCoveredBy () {\n    this.coveredBy = [];\n  }\n\n  resetCoverAnimations() {\n    this.removeCoverAnimations();\n    this.removeCoveredBy();\n    this.setCoverAnimations();\n  }\n\n  destroy() {\n    this.showCoverAnimations = false;\n    this.removeCoverAnimations();\n    this.removeCoveredBy();\n    super.destroy();\n  }\n\n};\n","import pipe from 'lodash/fp/pipe';\nimport { Entity } from './Entity';\nimport { Parent } from './Parent';\nimport { PresentingUI } from './PresentingUI';\nimport { HasInnerGates } from './HasInnerGates';\nimport { UI } from './UI';\nimport {HasTargetingCursor} from './HasTargetingCursor';\nimport {HasShapePattern} from './HasShapePattern';\nimport { Attacking } from './Attacking';\nimport { RangedAttacking } from './RangedAttacking';\nimport { Equipable } from './Equipable';\nimport { Acting } from './Acting';\nimport { Rendering } from './Rendering';\nimport { Containing } from './Containing';\nimport { Equiping } from './Equiping';\nimport { Charging } from './Charging';\nimport { Signing } from './Signing';\nimport { Playing } from './Playing';\nimport { Cloning } from './Cloning';\nimport { Covering } from './Covering';\nimport { DestructiveProjecting } from './DestructiveProjecting';\nimport { DirectionalProjecting } from './DirectionalProjecting';\nimport { DirectionalPushing } from './DirectionalPushing';\nimport { GaseousDestructiveProjecting } from './GaseousDestructiveProjecting';\nimport { Gaseous } from './Gaseous';\nimport { Chasing } from './Chasing';\nimport { RangedChasing } from './RangedChasing';\nimport { Dragging } from './Dragging';\nimport { Draggable } from './Draggable';\nimport { Pushable } from './Pushable';\nimport { Spreading } from './Spreading';\nimport { Spawning } from './Spawning';\nimport { Destructable } from './Destructable';\nimport { IsParticle } from './IsParticle';\nimport { Speaking } from './Speaking';\nimport { Burnable } from './Burnable';\nimport { Exploding } from './Exploding';\nimport { Helpless } from './Helpless';\nimport { HasKeymap } from './HasKeymap';\nimport { Upgradable } from './Upgradable';\nimport { HasFaction } from './HasFaction';\nimport { UsesCover } from './UsesCover';\n\nexport const UI_Actor = pipe(\n  Acting,\n  Rendering,\n  Playing,\n  HasKeymap,\n  UI\n)(Entity);\n\nexport const Actor = pipe(\n  Acting,\n  Rendering\n)(Entity);\n\nexport const Speaker = pipe(\n  Acting,\n  Rendering,\n  Destructable,\n  Speaking,\n  Draggable,\n  Pushable,\n  Burnable,\n  Helpless,\n)(Entity);\n\nexport const Wall = pipe(\n  Rendering,\n  Destructable,\n)(Entity);\n\nexport const CoverWall = pipe(\n  Rendering,\n  Covering,\n  Destructable,\n)(Entity);\n\nexport const Debris = pipe(\n  Rendering,\n  Containing,\n  Draggable,\n  Burnable,\n  Destructable,\n  Exploding,\n  Pushable,\n)(Entity);\n\nexport const MovingWall = pipe(\n  Acting,\n  Rendering,\n  // Pushing,\n  DirectionalPushing,\n  Destructable,\n)(Entity);\n\nexport const Chaser = pipe(\n  Acting,\n  Rendering,\n  Chasing,\n  Destructable\n)(Entity);\n\nexport const Bandit = pipe(\n  Acting,\n  Rendering,\n  Chasing,\n  Destructable,\n  Attacking,\n  Pushable,\n  HasFaction,\n  UsesCover,\n)(Entity);\n\nexport const RangedBandit = pipe(\n  Acting,\n  Rendering,\n  RangedChasing,\n  Destructable,\n  Attacking,\n  Pushable,\n  HasFaction,\n  UsesCover,\n)(Entity);\n\nexport const Player = pipe(\n  Acting,\n  Rendering,\n  PresentingUI,\n  HasTargetingCursor,\n  HasKeymap,\n  Dragging,\n  Charging,\n  Signing,\n  Containing,\n  Equiping,\n  Attacking,\n  RangedAttacking,\n  Destructable,\n  Cloning,\n  Playing,\n  Burnable,\n  Upgradable,\n  HasFaction,\n  UsesCover,\n)(Entity);\n\nexport const Weapon = pipe(\n  Rendering,\n  Equipable,\n  Attacking\n)(Entity);\n\nexport const RangedWeapon = pipe(\n  Rendering,\n  Equipable,\n  RangedAttacking,\n  Attacking,\n  HasShapePattern,\n)(Entity);\n\nexport const Armor = pipe(\n  Rendering,\n  Equipable,\n  Destructable,\n)(Entity);\n\nexport const Ammo = pipe(\n  Rendering,\n)(Entity);\n\nexport const DestructiveProjectile = pipe(\n  Acting,\n  Rendering,\n  Attacking,\n  DestructiveProjecting,\n  Destructable\n)(Entity);\n\nexport const DirectionalProjectile = pipe(\n  Acting,\n  Rendering,\n  Attacking,\n  DirectionalProjecting,\n  Destructable,\n)(Entity);\n\nexport const Grenade = pipe(\n  Acting,\n  Rendering,\n  Attacking,\n  DirectionalProjecting,\n  Destructable,\n  Exploding,\n)(Entity);\n\nexport const DestructiveCloudProjectile = pipe(\n  Acting,\n  Rendering,\n  Attacking,\n  GaseousDestructiveProjecting,\n  Destructable,\n  Gaseous\n)(Entity);\n\nexport const DestructiveCloudProjectileV2 = pipe(\n  Acting,\n  Destructable,\n  Parent,\n)(Entity);\n\nexport const FireSpread = pipe(\n  Acting,\n  Rendering,\n  Destructable,\n  Attacking,\n  Spreading,\n)(Entity);\n\nexport const EmergenceHole = pipe(\n  Acting,\n  Rendering,\n  Destructable,\n  Spawning,\n  HasFaction,\n)(Entity);\n\nexport const Particle = pipe(\n  Acting,\n  Rendering,\n  IsParticle,\n)(Entity);\n\nexport const ParticleEmitter = pipe(\n  Acting,\n  Destructable,\n  Parent,\n)(Entity);","export const UI = superclass => class extends superclass {\n  constructor({ initiatedBy = null, range = null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('UI');\n    this.initiatedBy = initiatedBy;\n    this.active = true;\n    this.range = range;\n  }\n  hasEnoughEnergy() {\n    return this.active;\n  }\n};\n","import { Say } from '../Actions/Say';\n\nexport const Speaking = superclass => class extends superclass {\n  constructor({ messages = ['I have nothing to say.'], messageType, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SPEAKING');\n    this.messages = messages;\n    this.messageType = messageType;\n  }\n  getAction(game) {\n    const message = this.messages.shift();\n    this.messages.push(message);\n    return new Say({\n      actor: this,\n      game,\n      message: message,\n      messageType: this.messageType,\n      processDelay: 0,\n    });\n  }\n};\n","import SOUNDS from '../sounds';\nimport * as Helper from '../../helper';\n\nexport const Helpless = superclass => class extends superclass {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HELPLESS');\n    this.saved = false;\n  }\n  save() {\n    this.saved = true;\n    SOUNDS.save.play();\n  }\n  destroy() {\n    const sound = Helper.getRandomInArray([SOUNDS.scream_0, SOUNDS.scream_1, SOUNDS.scream_2]);\n    sound.play();\n    super.destroy();\n  }\n};\n","import { ANIMATION_TYPES } from '../Display/konvaCustom';\n\nexport const Covering = superclass => class extends superclass {\n  constructor({ accuracyModifer = 0, damageModifer = 0, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('COVERING');\n    this.providesCover = true;\n    this.accuracyModifer = accuracyModifer;\n    this.damageModifer = damageModifer;\n  }\n\n  isProvidingCover () {\n    return this.providesCover && (this.accuracyModifer < 0 || this.damageModifer < 0);\n  }\n\n};\n","import * as Constant from '../constants';\nimport { Shove } from '../Actions/Shove';\nimport { DestroySelf } from '../Actions/DestroySelf';\n\nexport const DirectionalPushing = superclass => class extends superclass {\n  constructor({ path = false, direction = { x: 0, y: 0 }, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DIRECTIONAL_PUSHING');\n    this.path = path;\n    this.direction = direction;\n    this.range = range;\n  }\n  getAction(game) {\n    let result = null;\n    let newX = this.pos.x + this.direction[0];\n    let newY = this.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n    this.passable = false;\n    if (this.range > 0) {\n      result = new Shove({\n        targetPos: targetPos,\n        direction: this.direction,\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        onSuccess: () => this.range -= 1,\n      });\n    }\n    else {\n      result = new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: 0\n      });\n    }\n    return result;\n  }\n};\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper'; \nimport { PlaceActor } from '../Actions/PlaceActor';\nimport { Say } from '../Actions/Say';\nimport { Move } from '../Actions/Move';\n\nexport const RangedChasing = superclass => class extends superclass {\n  constructor({ targetEntity = null, getProjectile = () => null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('RANGED_CHASING');\n    this.targetEntity = targetEntity;\n    this.getProjectile = getProjectile;\n  }\n  targetInPath(pathToCheck, targetPos) {\n    let inPath = false;\n    pathToCheck.forEach((pos) => {\n      if (pos.x === targetPos.x && pos.y === targetPos.y) {\n        inPath = true;\n      }\n    });\n    return inPath;\n  }\n  getAction(game) {\n    if (!this.targetEntity) {\n      return new Say({\n        message: `Where are they?`,\n        game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n    let throwDirection = {\n      x: Math.sign(this.targetEntity.pos.x - this.pos.x),\n      y: Math.sign(this.targetEntity.pos.y - this.pos.y),\n    };\n    // projectile.initialize()\n    let projectile = this.getProjectile({\n      pos: {\n        x: this.pos.x,\n        y: this.pos.y,\n      },\n      targetPos: { ...this.targetEntity.pos },\n      direction: [throwDirection.x, throwDirection.y],\n      range: 10,\n    });\n    // projectile.getPath()\n    projectile.createPath(game);\n    // is target in path\n    const inPath = this.targetInPath(projectile.path, this.targetEntity.pos);\n    if (inPath) {\n      // throw\n      if (game.canOccupyPosition(projectile.pos, projectile)) {\n        return new PlaceActor({\n          targetPos: { ...projectile.pos },\n          entity: projectile,\n          game,\n          actor: this,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      }\n      return new Say({\n        message: `I'll get you with this kunai!`,\n        game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n    // if not, select target tile in range of enemy and move\n    let movePath = Helper.calculatePath(game, this.targetEntity.pos, this.pos);\n    let targetPos = movePath.length > 0 ? movePath[0] : this.pos;\n    return new Move({\n      targetPos,\n      game,\n      actor: this,\n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n  }\n};\n","export const PresentingUI = superclass => class extends superclass {\n  constructor({ presentingUI = false, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('PRESENTING_UI');\n    this.presentingUI = presentingUI;\n  }\n};\n","import * as Helper from '../../helper';\nimport { THEMES } from '../constants';\nimport { ANIMATION_TYPES } from '../Display/konvaCustom';\n\nexport const HasTargetingCursor = superclass => class extends superclass {\n  constructor({...args}) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HAS_TARGETING_CURSOR');\n    this.cursorIsActive = false;\n    this.cursorPositions = []; \n    this.animations = []; \n  }\n\n  setCursorIsActive (active = true) {\n    this.cursorIsActive = active;\n  }\n\n  activateCursor (positions) {\n    this.setCursorPositions(positions);\n    this.setCursorIsActive(true);\n    this.resetAnimations();\n  }\n\n  deactivateCursor () {\n    this.setCursorIsActive(false);\n    this.removeAnimations();\n  }\n\n  getCursorPositions () {\n    return this.cursorPositions;\n  }\n\n  setCursorPositions (positions) {\n    this.cursorPositions = positions;\n    return this.getCursorPositions();\n  }\n\n  addAnimations () {\n    const positions = this.getCursorPositions();\n    if (positions.length) {\n      // hack for visual separation\n      let lastPos = {x: null, y: null}\n      let nudge = 0;\n      // const nudgeInc = 0.2\n      positions.forEach((position) => {\n        // if (position.x == lastPos.x && position.y == lastPos.y) nudge += nudgeInc;\n        // lastPos = {...position};\n        const newAnimation = this.game.display.addAnimation(\n          ANIMATION_TYPES.BLINK_BOX, \n          {\n            x: position.x, \n            y: position.y + nudge, \n            color: THEMES.SOLARIZED.base3 \n          }\n        );\n        this.animations.push(newAnimation);\n      })\n    }\n  }\n\n  removeAnimations () {\n    if (this.animations.length) {\n      this.animations.forEach((animation) => this.game.display.removeAnimation(animation.id))\n    }\n    this.animations = [];\n  }\n\n  resetAnimations () {\n    this.removeAnimations();\n    this.addAnimations();\n  }\n\n  moveCursorToPosition (position) {\n    const currentPositions = this.getCursorPositions()\n    const xDelta = position.x - currentPositions[0].x;\n    const yDelta = position.y - currentPositions[0].y;\n    const newPositons = currentPositions.map(\n      (pos) => ({\n        x: pos.x + xDelta,\n        y: pos.y + yDelta\n      })\n    );\n    this.setCursorPositions(newPositons);\n    this.resetAnimations();\n    return newPositons;\n  }\n\n  moveCursorInDirection (direction, distance = 1) {\n    const newPositons = this.getCursorPositions().map(\n      (pos) => ({\n        x: pos.x + (direction[0] * distance),\n        y: pos.y + (direction[1] * distance)\n      })\n    );\n    this.setCursorPositions(newPositons);\n    this.resetAnimations();\n    return newPositons;\n  }\n\n  updateCursoNode (index, args) {\n    const anim = this.animations[index];\n    args.forEach((arg) => {\n      anim.node[arg.key](arg.value)\n    })\n  }\n};\n","import * as Helper from '../../helper'; \n\nexport const Dragging = superclass => class extends superclass {\n  constructor({ draggedEntity = null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DRAGGING');\n    this.draggedEntity = draggedEntity;\n  }\n  grab(pos) {\n    const tile = this.game.map[Helper.coordsToString(pos)];\n    if (!tile)\n      return false;\n    if (tile.entities.length > 0) {\n      const entity = tile.entities[0];\n      if (entity.entityTypes.includes('DRAGGABLE'))\n        if (!this.draggedEntity && entity.draggable === true) {\n          this.draggedEntity = entity;\n          return true;\n        }\n    }\n    return false;\n  }\n  release() {\n    if (!this.draggedEntity)\n      return false;\n    const draggedEntity = { ...this.draggedEntity };\n    this.draggedEntity = null;\n    return draggedEntity;\n  }\n  drag(lastPos) {\n    // update entity position\n    const pos = this.draggedEntity.pos;\n    // get tile of draged entity\n    let tile = this.game.map[Helper.coordsToString(pos)];\n    // remove dragged entity from that tile\n    this.game.map[Helper.coordsToString(pos)] = { ...tile, entities: tile.entities.filter((e) => e.id !== this.draggedEntity.id) };\n    // update dragged ent to player's position\n    this.draggedEntity.pos = lastPos;\n    // add dragged ent to new tile\n    this.game.map[Helper.coordsToString(lastPos)].entities.push(this.draggedEntity);\n  }\n  move(targetPos) {\n    const lastPos = { ...this.pos };\n    if (this.draggedEntity) {\n      const moveSuccess = super.move(targetPos);\n      if (moveSuccess) {\n        this.drag(lastPos);\n        return true;\n      }\n      return moveSuccess;\n    }\n    return super.move(targetPos);\n  }\n};\n","export const Charging = superclass => class extends superclass {\n  constructor({ charge = 2, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CHARGING');\n    this.charge = charge;\n    this.chargeMax = charge;\n  }\n  decreaseCharge(value) {\n    this.charge = Math.max(0, this.charge - value);\n  }\n  increaseCharge(value) {\n    this.charge = Math.min(this.chargeMax, this.charge + value);\n  }\n};\n","export const Signing = superclass => class extends superclass {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SIGNING');\n    this.signHistory = [];\n  }\n  addSign(sign) {\n    if (this.signHistory.length >= 4) {\n      this.signHistory.shift();\n    }\n    this.signHistory.push(sign);\n  }\n  clearSigns() {\n    this.signHistory = [];\n  }\n};\n","import SOUNDS from '../sounds';\nimport * as Constant from '../constants';\n\nexport const Equiping = superclass => class extends superclass {\n  constructor({ equipment = Constant.EQUIPMENT_LAYOUTS.human(), ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('EQUIPING');\n    this.equipment = equipment;\n  }\n  hasItemNameEquipped(itemName) {\n    const equipment = this.equipment.filter((slot) => {\n      if (slot.item) {\n        if (slot.item.name === itemName) {\n          return true;\n        }\n      }\n      return false;\n    });\n    return equipment.length > 0;\n  }\n  getItemInSlot(slotName) {\n    let openSlots = this.equipment.filter((slot) => {\n      return (slot.item === null && slot.type === slotName);\n    });\n    if (openSlots.length > 0) {\n      return false;\n    }\n    let slot = this.equipment.find((slot) => slot.type === slotName);\n    if (!slot) {\n      return false;\n    }\n    if (!slot.item) {\n      return false;\n    }\n    return slot.item;\n  }\n  equip(slotName, item) {\n    let foundSlot = false;\n    this.equipment = this.equipment.map((slot) => {\n      if (!foundSlot && slot.type === slotName && slot.item === null) {\n        slot.item = item;\n        foundSlot = true;\n        SOUNDS.equip_1.play();\n      }\n      return slot;\n    });\n    return foundSlot;\n  }\n  unequip(item) {\n    this.equipment = this.equipment.map((slot) => {\n      if (slot.item) {\n        if (slot.item.id === item.id) {\n          slot.item = null;\n          SOUNDS.equip_0.play();\n        }\n      }\n      return slot;\n    });\n  }\n};\n","import uuid from 'uuid/v1';\nimport { destroyEntity } from './helper';\nimport { cloneDeep, find } from 'lodash';\n\nexport const Cloning = superclass => class extends superclass {\n  constructor({ cloneLimit = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CLONING');\n    this.cloneLimit = cloneLimit;\n    this.clones = [];\n  }\n  // perhaps clones should have a status effect that leeches parent actor's energy or chakra\n  // status effects should be removed from engine when owner is removed.\n  destroy() {\n    // add function to override self destroy funtion \n    // if this actor dies, clones should be destroyed as well\n    if (this.clones) {\n      this.clones.map((clone) => {\n        destroyEntity(clone);\n      });\n    }\n    destroyEntity(this);\n  }\n  destroyClone(id) {\n    // overrides clone destroy function\n    // when clone is destroyed, clone count will change accordingly\n    const index = this.clones.findIndex((c) => c.id === id);\n    if (index >= 0) {\n      this.clones[index].super__destroy();\n      this.clones.splice(index, 1);\n    }\n  }\n  createClone(cloneArgs) {\n    if (this.clones.length < this.cloneLimit) {\n      let clone = cloneDeep(this);\n      clone.name = `Clone`;\n      clone.game = this.game;\n      clone.id = uuid();\n      if (clone.entityTypes.includes('HAS_KEYMAP')) {\n        const ignoredKeys = find(cloneArgs, { 'attribute': 'ignoredKeys' });\n        clone.reinitializeKeymap(ignoredKeys? ignoredKeys.value : []);\n      }\n      delete clone.clones;\n      clone['super__destroy'] = clone.destroy;\n      clone.destroy = () => { this.destroyClone(clone.id); };\n      cloneArgs.forEach((arg) => {\n        clone[arg.attribute] = arg.value;\n      });\n      if (this.game.placeActorOnMap(clone)) {\n        this.game.engine.addActorAsNext(clone);\n        this.game.draw();\n        this.clones.push(clone);\n        return true;\n      }\n      ;\n    }\n    return false;\n  }\n};\n","import {CLONE_PATTERNS} from '../constants';\nimport {getPositionsFromStructure} from '../../helper';\nexport const HasShapePattern = superclass => class extends superclass {\n  constructor({ shapePattern = CLONE_PATTERNS.point, ...args }) {\n    super({ ...args });\n    this.shapePattern = shapePattern;\n    this.entityTypes = this.entityTypes.concat('HAS_SHAPE_PATTERN');\n  }\n\n  getPositionsInShape (pos) {\n    return getPositionsFromStructure(this.shapePattern, pos);\n  }\n};\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { ThrowProjectile } from '../Actions/ThrowProjectile';\n\nexport const DestructiveProjecting = superclass => class extends superclass {\n  constructor({ path = false, targetPos = null, attackDamage = 1, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DESTRUCTIVE_PROJECTING');\n    this.path = path;\n    this.targetPos = targetPos;\n    this.attackDamage = attackDamage;\n    this.range = range;\n  }\n  createPath(game) {\n    let path = Helper.calculatePathWithRange(game, this.targetPos, this.pos, 8, this.range);\n    this.path = path;\n  }\n  getAction(game) {\n    if (!this.path) {\n      this.createPath(game);\n    }\n    let targetPos = this.path.length > 0 ? this.path[0] : this.pos;\n    let result = new ThrowProjectile({\n      targetPos,\n      game,\n      actor: this,\n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n    return result;\n  }\n};\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { ThrowProjectileGas } from '../Actions/ThrowProjectileGas';\n\nexport const GaseousDestructiveProjecting = superclass => class extends superclass {\n  constructor({ owner_id = null, path = false, targetPos = null, attackDamage = 1, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('GASEOUS_DESTRUCTIVE_PROJECTING');\n    this.path = path;\n    this.targetPos = targetPos;\n    this.attackDamage = attackDamage;\n    this.range = range;\n    this.owner_id = owner_id;\n  }\n  canAttack(entity) {\n    let success = super.canAttack();\n    if (success) {\n      success = this.owner_id === null || (entity.owner_id !== this.owner_id);\n    }\n    return success;\n  }\n  createPath(game) {\n    let path = Helper.calculatePathWithRange(game, this.targetPos, this.pos, 8, this.range);\n    this.path = path;\n  }\n  getAction(game) {\n    if (!this.path) {\n      this.createPath(game);\n    }\n    let targetPos = this.path.length > 0 ? this.path[0] : this.pos;\n    let result = new ThrowProjectileGas({\n      targetPos,\n      game,\n      actor: this,\n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n    return result;\n  }\n};\n","import uuid from 'uuid/v1';\nimport { cloneDeep, cloneDeepWith } from 'lodash';\nimport * as Constant from '../constants';\n\nexport const Gaseous = superclass => class extends superclass {\n  constructor({ isClone = false, cloneCount = 0, clonePattern = Constant.CLONE_PATTERNS.square, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('GASEOUS');\n    this.isClone = isClone;\n    this.cloneCount = cloneCount;\n    this.clonePattern = cloneDeep(clonePattern);\n  }\n  getAction(game) {\n    let offset = this.clonePattern.positions.find((pos) => !pos.taken);\n    if (!this.isClone && offset) {\n      offset.taken = true;\n      let clone = cloneDeepWith(this, (value, key) => {\n        switch (key) {\n          case 'id':\n          case 'game':\n          case 'engine':\n          case 'clones':\n            return null;\n          default:\n            return undefined;\n        }\n      });\n      clone.game = game;\n      clone.id = uuid();\n      if (this.hasOwnProperty('pos')) {\n        let referencePos = this.pos;\n        clone.pos = {\n          x: referencePos.x + offset.x,\n          y: referencePos.y + offset.y\n        };\n      }\n      if (clone.hasOwnProperty('path')) {\n        clone.path = clone.path.map((pos) => {\n          return {\n            x: pos.x + offset.x,\n            y: pos.y + offset.y\n          };\n        });\n      }\n      clone.isClone = true;\n      this.cloneCount += 1;\n      game.placeActorOnMap(clone);\n      game.engine.addActor(clone);\n      game.draw();\n    }\n    let result = super.getAction(game);\n    return result;\n  }\n};\n","import { FireSpread } from './index';\nimport * as Constant from '../constants';\nimport * as Helper from '../../helper'; \nimport * as MapHelper from '../Maps/helper'; \nimport { Say } from '../Actions/Say';\nimport { DestroySelf } from '../Actions/DestroySelf';\nimport { PlaceActor } from '../Actions/PlaceActor';\n\nexport const Spreading = superclass => class extends superclass {\n  constructor({ timeToSpread = 5, spreadCount = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SPREADING');\n    this.timeToSpreadMax = timeToSpread;\n    this.timeToSpread = timeToSpread;\n    this.spreadCountMax = spreadCount;\n    this.spreadCount = spreadCount;\n  }\n  getAction(game) {\n    // if no more spreads, then destroy\n    if (this.spreadCount <= 0) {\n      return new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n        onAfter: () => {\n          game.map[Helper.coordsToString(this.pos)].type = 'BURNT';\n        },\n      });\n    }\n    // if its time to expand again, create a new fire spread and placeActor\n    if (this.timeToSpread <= 0) {\n      // find adjacent spot to spread to\n      let adjacentPositions = [\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + 1,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + -1,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + 1,\n        },\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + -1,\n        },\n      ];\n      let adjacentPos = null;\n      let kill = 100;\n      while (kill > 0) {\n        let newPos = Helper.getRandomInArray(adjacentPositions);\n        let newTile = MapHelper.getTileFromMap({map: this.game.map, position: newPos});\n        let tileExists = Boolean(newTile);\n        let notBurnt = true;\n        let canBurn = false;\n        if (newTile) {\n          notBurnt = newTile.type !== 'BURNT';\n          canBurn = MapHelper.tileHasTag({tile: newTile, tag: 'BURNABLE'});\n        }\n        if (tileExists && notBurnt && canBurn) {\n          adjacentPos = newPos;\n          break;\n        }\n        kill -= 1;\n      }\n      if (adjacentPos) {\n        // create new fire actor and place\n        let fire = new FireSpread({\n          name: 'Pyro',\n          pos: { x: 0, y: 0 },\n          game,\n          renderer: {\n            character: '*',\n            sprite: '',\n            color: Constant.THEMES.SOLARIZED.base3,\n            background: Constant.THEMES.SOLARIZED.red,\n          },\n          timeToSpread: this.timeToSpreadMax,\n          spreadCount: this.spreadCountMax,\n          durability: this.durability,\n          attackDamage: this.attackDamage,\n          speed: this.speed,\n        });\n        this.timeToSpread = this.timeToSpreadMax;\n        this.spreadCount -= 1;\n        return new PlaceActor({\n          targetPos: adjacentPos,\n          entity: fire,\n          game,\n          actor: this,\n          interrupt: false,\n          energyCost: Constant.ENERGY_THRESHOLD,\n          processDelay: 0,\n          forcePlacement: true,\n        });\n      }\n      this.timeToSpread = this.timeToSpreadMax;\n      this.spreadCount -= 1;\n    }\n    this.timeToSpread -= 1;\n    return new Say({\n      message: 'burning',\n      game,\n      actor: this,\n      processDelay: 0,\n    });\n  }\n};\n","import { FireSpread } from './index';\nimport * as Constant from '../constants';\nimport * as Helper from '../../helper'; \nimport * as Item from '../items'; \nimport { Say } from '../Actions/Say';\nimport { DestroySelf } from '../Actions/DestroySelf';\nimport { PlaceActor } from '../Actions/PlaceActor';\n\nexport const Spawning = superclass => class extends superclass {\n  constructor({ getSpawnedEntity, timeToSpread = 5, spreadCount = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SPAWNING');\n    this.timeToSpreadMax = timeToSpread;\n    this.timeToSpread = timeToSpread;\n    this.spreadCountMax = spreadCount;\n    this.spreadCount = spreadCount;\n    this.getSpawnedEntity = getSpawnedEntity\n  }\n  getAction(game) {\n    // if no more spreads, then destroy\n    if (this.spreadCount <= 0) {\n      return new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n      });\n    }\n    // if its time to expand again, create a new fire spread and placeActor\n    if (this.timeToSpread <= 0) {\n      // find adjacent spot to spread to\n      let adjacentPositions = [\n        {\n          x: this.pos.x + 1,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + -1,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + 1,\n        },\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + -1,\n        },\n      ];\n      let adjacentPos = null;\n      let kill = 100;\n      while (kill > 0) {\n        let newPos = Helper.getRandomInArray(adjacentPositions);\n        let newTile = this.game.map[Helper.coordsToString(newPos)];\n        let tileExists = Boolean(newTile);\n        if (tileExists && game.canOccupyPosition(newPos)) {\n          adjacentPos = newPos;\n          break;\n        }\n        kill -= 1;\n      }\n      if (adjacentPos) {\n        this.timeToSpread = this.timeToSpreadMax;\n        this.spreadCount -= 1;\n        return new PlaceActor({\n          targetPos: adjacentPos,\n          entity: this.getSpawnedEntity(adjacentPos),\n          game,\n          actor: this,\n          interrupt: false,\n          energyCost: Constant.ENERGY_THRESHOLD,\n          processDelay: 0,\n          forcePlacement: true,\n        });\n      }\n      this.timeToSpread = this.timeToSpreadMax;\n      this.spreadCount -= 1;\n    }\n    this.timeToSpread -= 1;\n    return new Say({\n      message: 'boom boom',\n      game,\n      actor: this,\n      processDelay: 0,\n    });\n  }\n};\n","import * as Constant from '../constants'; \n\nexport const IsParticle = superclass => class extends superclass {\n  constructor({ pos = { x: 1, y: 1 }, direction = { x: 0, y: 0 }, life = 1, speed = 1, type = Constant.PARTICLE_TYPE.directional, path = null, ...args }) {\n    super({ ...args });\n    this.pos = pos;\n    this.direction = direction;\n    this.life = life;\n    this.speed = speed;\n    this.type = type;\n    this.path = path;\n    this.entityTypes = this.entityTypes.concat('PARTICLE');\n  }\n  getNextPos(step) {\n    switch (this.type) {\n      case Constant.PARTICLE_TYPE.directional:\n        return {\n          x: this.pos.x + (this.direction.x * this.speed) * step,\n          y: this.pos.y + (this.direction.y * this.speed) * step,\n        };\n      case Constant.PARTICLE_TYPE.path:\n        const nextPos = this.path.shift();\n        return nextPos ? { ...nextPos } : { ...this.pos };\n      default:\n        break;\n    }\n  }\n  update(step) {\n    this.life -= step;\n    if (this.life > 0) {\n      this.pos = this.getNextPos(step);\n    }\n  }\n};\n","import * as Helper from '../../helper';\nimport { Particle } from '../Entities/index';\nimport { PARTICLE_TEMPLATES } from '../constants';\n\nexport class Engine {\n  constructor({\n    statusEffects = [],\n    actors = [],\n    currentActor = 0,\n    isRunning = false,\n    game = null,\n  }) {\n    this.statusEffects = statusEffects;\n    this.actors = actors;\n    this.currentActor = currentActor;\n    this.isRunning = isRunning;\n    this.game = game;\n  }\n\n  async processV1 () { // a turn-based system using speed and round-robin\n    let actor = this.actors[this.currentActor]\n    actor.gainEnergy(actor.speed);\n    if (actor.hasEnoughEnergy()) {\n      let action = actor.getAction(this.game);\n      if (!action) { return false; } // if no action given, kick out to UI input\n      while (true) {\n        let result = action.perform();\n        this.game.draw();\n        await Helper.delay(action.processDelay);\n        if (!result.success) return false;\n        if (result.alternative === null) break;\n        action = result.alternative;\n      }\n    }\n    this.currentActor = (this.currentActor + 1) % this.actors.length;\n    return true\n  }\n\n  async processV2() { // a turn-based system using speed and Action Points\n    let actor = this.actors[this.currentActor]\n    if (this.game.getFirstPlayer() === null) return false\n    let acting = true;\n    while (acting) {\n      if (!actor) return false;\n      // if (!actor.active) return false;\n      if (!actor.active) break;\n      let timePassed = 0;\n      \n      if (actor.hasEnoughEnergy()) {\n        // if (!actor.active) break;\n        let action = actor.getAction(this.game);\n        if (!action) { return false; } // if no action given, kick out to UI input\n        timePassed += action.getEnergyCost();\n        // console.log('timePassed ', timePassed);\n        \n        // timePassed += action.energyCost;\n        while (true) {\n          let result = {\n            success: false,\n            alternative: null,\n          };\n          // if (actor.energy >= action.energyCost) { // replace with checking for all required resources\n          if (action.canPayRequiredResources()) { // replace with checking for all required resources\n            \n            action.onBefore();\n            result = await action.perform();\n            if (result.success) {\n              action.onSuccess();\n              action.payRequiredResources();\n            } else {\n              action.onFailure();\n            }\n            action.onAfter();\n          }\n          if (!await this.processActionFX(action, result.success)) {\n            if (this.shouldAutoRun()) {\n              await Helper.delay(25);\n            } else {\n              await Helper.delay(action.processDelay);\n            }\n            this.game.draw();\n          }\n          if (!actor.active) break;\n          // if (!result.success) return false;\n          if (result.alternative === null) break;\n          action = result.alternative;\n        }\n        this.processStatusEffects(timePassed);\n        if (action.interrupt) {\n          acting = false;\n          break;\n        }\n      } else {\n        actor.gainEnergy(actor.speed);\n        acting = false;\n      }\n    }\n    this.actors = this.actors.filter((actor) => actor.active)\n    this.currentActor += 1;\n    if (this.currentActor >= this.actors.length) {\n      this.currentActor = 0;\n    }\n    return true\n  }\n\n  // a turn-based system using speed and Action Points\n  // it reorders all actors by energy after every round robin\n  async processV3() { \n    let actor = this.actors[this.currentActor]\n    if (!actor) return false;\n    let timePassed = 0;\n    if (actor.hasEnoughEnergy()) {\n      let action = actor.getAction(this.game);\n      if (!action) { return false; } // if no action given, kick out to UI input\n      timePassed += action.energyCost;\n      while (true) {\n        let result = await action.perform();\n        if (!await this.processActionFX(action, result.success)) {\n            await Helper.delay(action.processDelay);\n            this.game.draw();\n        }\n        if (!result.success) return false;\n        if (result.alternative === null) break;\n        action = result.alternative;\n      }\n      this.processStatusEffects(timePassed);\n    } else {\n      actor.gainEnergy(actor.speed);\n    }\n    this.currentActor = (this.currentActor + 1) % this.actors.length;\n    if (this.currentActor === 0) this.sortActorsByEnergy();\n    return true\n  }\n\n  // TODO process that reorders actors after every action\n\n  async start() {\n    this.isRunning = true;\n    while (this.isRunning) {\n      this.isRunning = await this.processV2();\n    }\n    let actor = this.actors[this.currentActor]\n    \n    if (!actor) {\n      // this.game.backToTitle();\n      return false;\n    }\n\n    this.setVisibleKeymap(actor);\n    \n    this.game.updateMode();\n    await this.game.updateReact(this.game);\n  }\n  \n  stop() {\n    this.isRunning = false;\n  }\n\n  setVisibleKeymap (actor) {\n    if (actor.entityTypes.includes('HAS_KEYMAP')) {\n      const keymap = actor.getKeymap()\n      if (keymap) {\n        this.game.visibleKeymap = keymap;\n      }\n    }\n  }\n\n  sortActorsByEnergy () {\n    this.actors = this.actors.sort((a, b) => b.energy - a.energy);\n  }\n\n  shouldAutoRun () {\n  // if there is no player, the engine will continue to run, we don't want it to run too fast\n    const hasPlayer = this.actors.filter((actor) => actor.entityTypes.includes('PLAYING')).length\n    if (hasPlayer) return false;\n    return true;\n  }\n\n  addStatusEffect(newEffect) {\n    if (!newEffect.allowDuplicates) {\n      if (this.statusEffects.filter((effect) => (\n        effect.actor.id === newEffect.actor.id &&\n        effect.name === newEffect.name\n      )).length > 0) {\n        console.log(`${newEffect.name} cannot be applied twice to ${newEffect.actor.name}`);\n        return false;\n      };\n    }\n    newEffect.onStart();\n    this.statusEffects.push(newEffect)\n    return true;\n  }\n\n  removeStatusEffectById (id) {\n    this.statusEffects = this.statusEffects.filter((effect) => {\n      if (effect.id !== id) return true;\n      effect.onStop();\n      return false;\n    });\n  }\n  \n  removeStatusEffectByActorId (actorId) {\n    this.statusEffects = this.statusEffects.filter((effect) => {\n      if (effect.actor.id !== actorId) return true;\n      effect.onStop();\n      return false;\n    });\n  }\n\n  removeDeadStatusEffects() {\n    this.statusEffects = this.statusEffects.filter((effect) =>{\n      if (effect.lifespan >= 0 && effect.timeToLive <= 0) {\n        effect.onStop();\n        return false;\n      }\n      return true;\n    });\n  }\n\n  getStatusEffectsByActorId(actorId) {\n    return this.statusEffects.filter((effect) => effect.actor.id === actorId);\n  }\n\n  processStatusEffects (timePassed) {\n    this.statusEffects.forEach((effect) => {\n      effect.timeSinceLastStep += timePassed;\n      effect.timeToLive -= timePassed;\n      if (effect.timeSinceLastStep >= effect.stepInterval) {\n        effect.onStep();\n        effect.timeSinceLastStep = 0;\n      } \n    });\n    this.removeDeadStatusEffects();\n  }\n\n  async processActionFX (action, actionSuccess) {\n    // EASE IN\n    // let time = .8\n    // let nextT = (t) => t *= t; \n    // EASE OUT\n    // let time = .03\n    // let nextT = (t) => t * (2 - t); \n    // EASE IN OUT QUAD\n    // let time = .4\n    // let nextT = (t) => t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t; \n    // EASE IN CUBIC\n    // let time = .8\n    // let nextT = (t) => t * t * t; \n    // EASE OUT CUBIC\n    // let time = .001\n    // let nextT = (t) => (--t) * t * t + 1; \n    if (!actionSuccess) { \n      // If action is not successful, instead of running action's normal particle animation\n      // we'll show a red X on the entity that initiated the action\n      const particle = new Particle({\n        game: this.game,\n        name: 'particle',\n        passable: true,\n        pos: {...action.actor.pos},\n        renderer: PARTICLE_TEMPLATES.fail.renderer,\n      })\n      this.game.placeActorOnMap(particle);\n      this.game.draw();\n      await Helper.delay(100);\n      this.game.removeActorFromMap(particle);\n      particle.update(1);\n      this.game.draw();\n      action.removeDeadParticles(); // is this needed?\n      return true;\n    }\n\n    if (action.particles.length) {\n      while (action.particles.length > 0) {\n        action.particles.forEach((particle) => {\n          this.game.placeActorOnMap(particle);\n        })\n        this.game.draw();\n        // await Helper.delay(time * 100);\n        // await Helper.delay(time * action.processDelay);\n        await Helper.delay(action.processDelay);\n        // await Helper.delay(0);\n        action.particles.forEach((particle) => {\n          this.game.removeActorFromMap(particle);\n          particle.update(1);\n\n        })\n        this.game.draw();\n        action.removeDeadParticles();\n        // time = nextT(time);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  addActor (entity) {\n    this.actors.push(entity);\n  }\n\n  addActorAsPrevious (entity) {\n    this.actors.splice(this.currentActor, 0, entity);\n  }\n\n  addActorAsNext (entity) {\n    this.actors.splice(this.currentActor + 1, 0, entity);\n  }\n\n  setActorToPrevious (entity) {\n    this.currentActor -= 1;\n    if (this.currentActor <= -1) this.currentActor = this.actors.length - 1;\n  }\n\n  setActorToNext (entity) {\n    this.currentActor = (this.currentActor + 1) % this.actors.length;\n  }\n\n}\n\n\nexport class CrankEngine extends Engine {\n  async process() { // a turn-based system using speed and Action Points\n    let actor = this.actors[this.currentActor]\n    let acting = true;\n    while (acting) {\n      if (actor.hasEnoughEnergy()) {\n        let action = actor.getAction(this.game);\n        if (!action) { return false; } // if no action given, kick out to UI input\n        while (true) {\n          this.game.draw();\n          let result = await action.perform();\n          await Helper.delay(action.processDelay);\n          if (!result.success) return false;\n          if (result.alternative === null) break;\n          action = result.alternative;\n        }\n      } else {\n        // actor.gainEnergy(actor.speed);\n        acting = false;\n      }\n    }\n    // this.currentActor = (this.currentActor + 1) % this.actors.length;\n    this.currentActor += 1;\n    if (this.currentActor + 1 >= this.actors.length) {\n      this.currentActor = 0;\n      this.actors.forEach((actor) => actor.gainEnergy(actor.speed));\n      return false;\n    }\n    return true\n  }\n\n  async start() {\n    this.isRunning = true;\n    while (this.isRunning) {\n      this.isRunning = await this.process();\n    }\n    let actor = this.actors[this.currentActor]\n    this.setVisibleKeymap(actor);\n    // this.game.updateMode();\n    this.game.mode.update();\n    await this.game.updateReact(this.game);\n  }\n}","import * as Helper from '../../helper';\n\nexport const generate = (map, offsetX, offsetY, unitCount = 12, unitSize = 4, borderWidth = 1) => {\n  let data = {};\n  // const floorPlan = createFloorPlan(unitCount);\n  // let maxX = 0; \n  // let minX = 0; \n  // let maxY = 0; \n  // let minY = 0; \n  // floorPlan.forEach((pos) => {\n  //   if (pos.x > maxX) maxX = pos.x;\n  //   if (pos.x < minX) minX = pos.x;\n  //   if (pos.y > maxY) maxY = pos.y;\n  //   if (pos.y < minY) minY = pos.y;\n  // })\n  // const floorPlanWidth = Math.abs(maxX) + Math.abs(minX) + 1;\n  // const floorPlanHeight = Math.abs(maxY) + Math.abs(minY) + 1;\n  // console.log(floorPlanWidth);\n  // console.log(floorPlanHeight);\n  \n  let floorPlan = createFloorPlan();\n  let kill = 1000\n  while (floorPlan.length < unitCount + 1) {\n    \n    let unit = createRoomInFloorPlan(floorPlan);\n    if (unit) {\n      const unitPosition = getUnitPosition(unit, offsetX, offsetY, unitSize);\n      let didCreate = createUnit(map, unitPosition, unitSize, 0);\n      if (didCreate) floorPlan.push(unit);\n    }\n    \n    kill -= 1;\n    if (kill <= 0) break;\n  }\n\n  // removeInnerWalls(map)\n  // addDoorToOuterWalls(map)\n  // addInnerWalls(map, floorPlan.length)\n  addCorridors(map, floorPlan, offsetX, offsetY, unitSize)\n  return data;\n}\n\nconst addCorridors = (map, floorPlan, offsetX, offsetY, unitSize) => {\n  const relativeCornerCoords = [\n    {x: 1, y: 1},\n    {x: unitSize - 1, y: unitSize - 1},\n    {x: 1, y: unitSize - 1},\n    {x: unitSize - 1, y: 1},\n  ]\n  for (let i = 0; i < (floorPlan.length - 1); i++) {\n    const currentUnit = floorPlan[i];\n    let currentUnitPosition = getUnitPosition(currentUnit, offsetX, offsetY, unitSize);\n    const currentUnitRelativeCornerCoord = Helper.getRandomInArray(relativeCornerCoords)\n    currentUnitPosition.x += currentUnitRelativeCornerCoord.x;\n    currentUnitPosition.y += currentUnitRelativeCornerCoord.y;\n    \n    const neigbors = getNeighboringUnitsFromFloorPlan(floorPlan, currentUnit);\n    neigbors.forEach((neigbor) => {\n      let nextUnitPosition = getUnitPosition(neigbor, offsetX, offsetY, unitSize);\n      const nextUnitRelativeCornerCoord = currentUnitRelativeCornerCoord\n      nextUnitPosition.x += nextUnitRelativeCornerCoord.x;\n      nextUnitPosition.y += nextUnitRelativeCornerCoord.y;\n      \n      digCorridor(map, currentUnitPosition, nextUnitPosition);\n    });\n  }\n}\n\nconst getNeighboringUnitsFromFloorPlan = (floorPlan, currentUnit) => {\n  const neighbors = getNeighboringPoints(currentUnit);\n  return floorPlan.filter((unit) => {\n    return neighbors.find((coords) => coords.x === unit.x && coords.y === unit.y);\n  })\n}\n\nconst digCorridor = (map, currentUnitPosition, nextUnitPosition) => {\n    const corridorDirection = [\n      Math.sign(nextUnitPosition.x - currentUnitPosition.x),\n      Math.sign(nextUnitPosition.y - currentUnitPosition.y)\n    ]\n    let kill = 1000;\n    let corridorPosition = Helper.getPositionInDirection(currentUnitPosition, corridorDirection); \n    let hasDoor = false\n    while (!Helper.coordsAreEqual(corridorPosition, nextUnitPosition)) {\n      let tile = map[Helper.coordsToString(corridorPosition)];\n      if (tile) {\n        if (tile.type === 'WALL') {\n          if (!hasDoor) {\n            tile.type = 'DOOR'\n            hasDoor = true;\n          } else {\n            tile.type = 'FLOOR'\n          }\n        }\n      }\n      corridorPosition = Helper.getPositionInDirection(corridorPosition, corridorDirection); \n      kill -= 1;\n      if (kill <= 0) break;\n    }\n}\n\nconst createFloorPlan = () => {\n  // create origin\n  let floorPlan = [{x: 0, y: 0}];\n  return floorPlan\n}\n\nconst createRoomInFloorPlan = (floorPlan) => {\n  // randomly choose previously created unit\n  // let origin = floorPlan[floorPlan.length - 1];\n  let origin = Helper.getRandomInArray(floorPlan);\n  // randomly choose neighboring point\n  let newUnit = getNeighboringUnit(origin);\n  let unitAlreadyExists = unitExists(newUnit, floorPlan)\n  let kill = 1000\n  while (unitAlreadyExists) {\n    origin = Helper.getRandomInArray(floorPlan.filter((pnt) => !Helper.coordsAreEqual(pnt, origin)));\n    newUnit = getNeighboringUnit(origin);\n    unitAlreadyExists = unitExists(newUnit, floorPlan)\n    kill -= 1;\n    if (kill <= 0) {\n      unitAlreadyExists = false;\n      newUnit = false;\n      break;\n    }\n  }\n  \n  return newUnit\n}\n\nconst getNeighboringUnit = (origin) => Helper.getRandomInArray(getNeighboringPoints(origin))\nconst unitExists = (newUnit, existingUnits) => existingUnits.filter((unit) => unit.x === newUnit.x && unit.y === newUnit.y).length > 0;\nconst getUnitPosition = (floorPlanPos, mapOffsetX, mapOffsetY, unitSize) => {\n  return {\n    x: floorPlanPos.x + mapOffsetX + (unitSize * floorPlanPos.x),\n    y: floorPlanPos.y + mapOffsetY + (unitSize * floorPlanPos.y),\n  }\n}\n\nconst getNeighboringPoints = (origin, eightWay = false) => {\n  let neighbors = [\n    {\n      x: origin.x,\n      y: origin.y + 1\n    },\n    {\n      x: origin.x + 1,\n      y: origin.y\n    },\n    {\n      x: origin.x,\n      y: origin.y - 1\n    },\n    {\n      x: origin.x - 1,\n      y: origin.y\n    },\n  ]\n\n  if (eightWay) {\n    neighbors = neighbors.concat([\n      {\n        x: origin.x + 1,\n        y: origin.y + 1\n      },\n      {\n        x: origin.x + 1,\n        y: origin.y - 1\n      },\n      {\n        x: origin.x - 1,\n        y: origin.y - 1\n      },\n      {\n        x: origin.x - 1,\n        y: origin.y + 1\n      },\n    ])\n  }\n  return neighbors;\n}\n\nconst isCorner = (x, y, roomSize) => {\n  if (x === 0 && y === 0) return true\n  if (x === roomSize && y === roomSize) return true\n  if (x === roomSize && y === 0) return true\n  if (x === 0 && y === roomSize) return true\n  return false;\n};\n\nconst createUnit = (map, position, size, border) => {\n  // const length = size; // this will leave a border\n  // const length = size + 1; // this will close the gap\n  const length = size + 1 - border; // this will calculate using border\n\n  // prevent units from hitting map edge\n  for (let i = 0; i < length; i++) {\n    for (let j = 0; j < length; j++) {\n      const newPosition = {\n        x: position.x + i,\n        y: position.y + j,\n      }\n      let tile = map[Helper.coordsToString(newPosition)];\n      if (!tile) return false;\n      if (tile.type === 'ROAD_EDGE') return false;\n      if (tile.type === 'WALL') return false;\n      if (tile.type === 'FLOOR') return false;\n    }\n  }\n\n  for (let i = 0; i < length; i++) {\n    for (let j = 0; j < length; j++) {\n      const newPosition = {\n        x: position.x + i,\n        y: position.y + j,\n      }\n      let type = 'FLOOR';\n      if (i === 0 || i === (length - 1)) type = 'WALL';\n      if (j === 0 || j === (length - 1)) type = 'WALL';\n      let tile = map[Helper.coordsToString(newPosition)];\n      if (tile) tile.type = type;\n    }\n  }\n\n  return true;\n}\n\nconst getInnerWalls = (map, tiles) => {\n  return tiles.filter((key) => {\n    const coordArray = key.split(',').map((i) => parseInt(i));\n    const coords = {\n      x: coordArray[0],\n      y: coordArray[1],\n    }\n    const neighbors = getNeighboringPoints(coords, true).filter((point) => {\n      let t = map[Helper.coordsToString(point)];\n      if (t) {\n        if (['WALL', 'FLOOR', 'DOOR'].includes(t.type)) {\n          return true;\n        }\n      }\n      return false\n    });\n    \n    if (neighbors.length === 8) {\n      return true;\n    }\n    return false;\n  })\n}\n\nconst getOuterWalls = (map, tiles) => {\n  return tiles.filter((key) => {\n    const coordArray = key.split(',').map((i) => parseInt(i));\n    const coords = {\n      x: coordArray[0],\n      y: coordArray[1],\n    }\n    const neighbors = getNeighboringPoints(coords, true).filter((point) => {\n      let t = map[Helper.coordsToString(point)];\n      if (t) {\n        if (['WALL', 'FLOOR'].includes(t.type)) {\n          return false;\n        }\n      }\n      return true\n    });\n    \n    if (neighbors.length === 8) {\n      return false;\n    }\n    return true;\n  })\n}\n\nconst removeInnerWalls = (map) => {\n  let walls = Object.keys(map).filter((key) => {\n    return map[key].type === 'WALL';\n  })\n\n  let innerWalls = getInnerWalls(map, walls);\n\n  innerWalls.forEach((key) => {\n    map[key].type = 'FLOOR';\n  })\n}\n\nconst addDoorToOuterWalls = (map) => {\n  let walls = Object.keys(map).filter((key) => {\n    return map[key].type === 'WALL';\n  });\n\n  let outerWalls = getOuterWalls(map, walls);\n  let key = Helper.getRandomInArray(outerWalls);\n  map[key].type = 'DOOR'\n}\n\nconst addInnerWalls = (map, count = 2) => {\n  // Finding corners\n  let corners = Object.keys(map).filter((key) => {\n    const tile = map[key];\n    if (tile.type !== 'WALL') return false;\n    const coordArray = key.split(',').map((i) => parseInt(i));\n    const coords = {\n      x: coordArray[0],\n      y: coordArray[1],\n    }\n    const neighbors = getNeighboringPoints(coords, false).filter((point) => {\n      let t = map[Helper.coordsToString(point)];\n      if (t) {\n        if (['GROUND', 'GROUND_ALT', 'ROAD', 'ROAD_EDGE'].includes(t.type)) {\n          return true;\n        }\n      }\n      return false\n    });\n    if (neighbors.length === 2) return true;\n    return false\n  })\n\n  if (!corners.length) return;\n\n  // building walls\n  let wallCount = 0;\n  while (wallCount < count) {\n  // while (wallCount < corners.length) {\n  // for (let i = 0; i < count; i++) {\n    const corner = Helper.getRandomInArray(corners);\n    const coordArray = corner.split(',').map((i) => parseInt(i));\n    const coords = {\n      x: coordArray[0],\n      y: coordArray[1],\n    }\n    const wallNeighbors = getNeighboringPoints(coords, false).filter((point) => {\n      let t = map[Helper.coordsToString(point)];\n      if (t) {\n        if (['WALL'].includes(t.type)) {\n          return true;\n        }\n      }\n      return false\n    });\n    const selectedWallPos = Helper.getRandomInArray(wallNeighbors)\n    if (!selectedWallPos) continue;\n    const direction = {\n      x: Math.sign(selectedWallPos.x - coords.x),\n      y: Math.sign(selectedWallPos.y - coords.y)\n    };\n\n    let kill = 100;\n    let build = true;\n    let currentPosition = {...coords}\n    let previousFloorPositions = [];\n    while (build) {\n      currentPosition.x += direction.x;\n      currentPosition.y += direction.y;\n      let tile = map[Helper.coordsToString(currentPosition)];\n      if (!tile) break;\n      // if (tile.type === 'WALL') continue;\n      if (tile.type === 'FLOOR') {\n        tile.type = 'WALL';\n        previousFloorPositions.push({...currentPosition})\n        // console.log(previousFloorPositions.length);\n      }\n      // else if (['GROUND', 'GROUND_ALT', 'ROAD', 'ROAD_EDGE'].includes(tile.type) || (tile.type === 'WALL' && previousFloorPositions.length)) {\n      // else if (['GROUND', 'GROUND_ALT', 'ROAD', 'ROAD_EDGE'].includes(tile.type)) {\n      else if (['GROUND', 'GROUND_ALT', 'ROAD', 'ROAD_EDGE'].includes(tile.type) && previousFloorPositions.length) {\n        // go back two and make FLOOR\n        let prevPos = {\n          x: currentPosition.x - (direction.x * 2),\n          y: currentPosition.y - (direction.y * 2),\n        }\n        map[Helper.coordsToString(prevPos)].type = 'DOOR';\n        // map[Helper.coordsToString(prevPos)].type = 'FLOOR';\n        // go back one more and make FLOOR\n        prevPos = {\n          x: currentPosition.x - (direction.x * 3),\n          y: currentPosition.y - (direction.y * 3),\n        }\n        map[Helper.coordsToString(prevPos)].type = 'DOOR';\n        // map[Helper.coordsToString(prevPos)].type = 'FLOOR';\n        if (previousFloorPositions.length <= 0) {\n          //   // we need to create another wall, this one is bust\n          if (count <= 100) count += 1\n        }\n        break;\n      }\n      kill -= 1;\n      if (kill <= 0) build = false;\n    }\n    wallCount += 1;\n  }\n}","import uuid from 'uuid/v1';\nimport {merge} from 'lodash';\n\nexport class Mode {\n  constructor({\n    game = null,\n    data = {},\n  }) {\n    let id = uuid();\n    this.id = id;\n    this.game = game;\n    this.data = data;\n    this.infoBlocks = {}\n    this.progressBars = {}\n  }\n\n  initialize() {}\n\n  update() {}\n\n  createOrUpdateInfoBlock(id, value) {\n    merge(this.infoBlocks, {[id]: value})\n  }\n}","export const COLORS = {\n  base04: '#07111D',\n  base03: '#02252e',\n  // base03: '#002b36',\n  base02: '#073642',\n  base01: '#586e75',\n  base00: '#657b83',\n  // base0: '#96641D',\n  base0: '#839496',\n  base1: '#93a1a1',\n  // base2: '#E19D3F',\n  base2: '#eee8d5',\n  base3: '#fdf6e3',\n  yellow: '#b58900',\n  orange: '#cb4b16',\n  red: '#dc322f',\n  magenta: '#d33682',\n  violet: '#6c71c4',\n  blue: '#268bd2',\n  cyan: '#2aa198',\n  green: '#859900',\n  // // base1: '#07111D',\n  // base1: '#0B0B0B',\n  // base2: '#5A7178',\n  // base3: '#B6ACA3',\n  // base4: '#EDF6F1',\n  cog1: '#27295f',\n  cog2: '#3e7dc9',\n  cog3: '#18c0f8',\n  cog4: '#86C8E4',\n  locust0: '#423a18',\n  locust1: '#96641D',\n  locust2: '#E19D3F',\n  // locust2: '#F89339',\n  locust3: '#E7C898',\n  flesh1: '#833139',\n  flesh2: '#CC7468',\n  flesh3: '#DDA78F',\n  gray: '#6D7886',\n}\nexport const TILE_KEY = {\n  'GROUND': {\n    background: COLORS.base04,\n    foreground: COLORS.base02,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'GROUND_ALT': {\n    background: COLORS.base04,\n    foreground: COLORS.base02,\n    character: '',\n    sprite: '',\n    passable: true,\n  },\n  'EMERGENCE_DESTROYED': {\n    background: COLORS.base04,\n    foreground: COLORS.locust0,\n    character: '',\n    // sprite: '',\n    sprite: '',\n    passable: true,\n  },\n  'EMERGENCE_GROUND': {\n    background: COLORS.locust0,\n    foreground: COLORS.locust1,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'EMERGENCE_OUTER_GROUND': {\n    background: COLORS.locust0,\n    foreground: COLORS.locust2,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'FLOOR': {\n    background: COLORS.base02,\n    foreground: COLORS.locust1,\n    character: '',\n    passable: true,\n    tags: ['BURNABLE'],\n  },\n  'WALL': {\n    background: COLORS.locust0,\n    foreground: COLORS.locust2,\n    character: '#',\n    sprite: '',\n    passable: false,\n    tags: ['BURNABLE'],\n  },\n  'ROAD_EDGE': {\n    background: COLORS.base03,\n    foreground: COLORS.base02,\n    character: '',\n    sprite: '',\n    passable: true,\n    tags: [],\n  },\n  'ROAD': {\n    background: COLORS.base03,\n    foreground: COLORS.base02,\n    character: '=',\n    sprite: '',\n    passable: true,\n    tags: [],\n  },\n  'DOOR': {\n    background: COLORS.locust0,\n    foreground: COLORS.base1,\n    character: '+',\n    sprite: '',\n    passable: true,\n    tags: ['BURNABLE'],\n  },\n  'SAFE': {\n    background: COLORS.base04,\n    foreground: COLORS.base02,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'LOCKED_EXIT': {\n    background: COLORS.base04,\n    foreground: COLORS.base02,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'EXIT': {\n    background: COLORS.base04,\n    foreground: COLORS.green,\n    character: '>',\n    sprite: '',\n    passable: true,\n  },\n  'BURNT': {\n    background: COLORS.base03,\n    foreground: COLORS.red,\n    character: 'X',\n    sprite: '',\n    passable: true,\n    tags: ['BURNABLE'],\n    animation: [\n      { background: COLORS.base03, foreground: COLORS.yellow, character: 'X', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.yellow, character: 'x', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.red, character: 'X', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.orange, character: 'x', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.orange, character: 'X', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.red, character: 'x', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.red, character: 'X', sprite: '', passable: true, },\n    ]\n  },\n}\n\nexport const STAT_RENDERERS = {\n  'amount': {\n    background: COLORS.base04,\n    foreground: COLORS.locust2,\n    character: '',\n  },\n  'attackRange': {\n    background: COLORS.green,\n    foreground: COLORS.base3,\n    character: '==>',\n  },\n  'magazine': {\n    background: COLORS.gray,\n    foreground: COLORS.base3,\n    character: '!!',\n  },\n  'baseRangedAccuracy': {\n    background: COLORS.violet,\n    foreground: COLORS.base3,\n    character: '*',\n  },\n  'baseRangedDamage': {\n    background: COLORS.red,\n    foreground: COLORS.base3,\n    character: 'x',\n    sprite: '',\n  },\n  'meleeDamage': {\n    background: COLORS.red,\n    foreground: COLORS.base3,\n    character: 'x',\n    sprite: '',\n  },\n} \n\n// GiArcheryTarget / GiBullseye / GiCrosshair -- accuracy\n// GiBullets -- ammo\n// GiBackwardTime -- ammo / reload\n//  GiBarbedArrow - -range\n// GiBurningDot -- damage\n// GiCog\n\n/*\nSCROLL-O-Sprites\n\n\n\n\n\n\n\n \n*/","import {Ammo as AmmoEntity} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Ammo = (engine) => new AmmoEntity({\n  game: engine.game,\n  name: 'Ammo',\n  passable: true,\n  renderer: {\n    character: '||',\n    sprite: '',\n    background: COLORS.gray,\n    color: COLORS.base3,\n  },\n});","import * as Constant from '../../constants';\nimport {Grenade as GrenadeEntity} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Grenade = (engine, range) => new GrenadeEntity({\n  game: engine.game,\n  name: 'Grenade',\n  passable: true,\n  renderer: {\n    character: 'x',\n    sprite: '',\n    color: COLORS.red,\n    background: COLORS.base02,\n  },\n  flammability: 0,\n  explosivity: 3,\n  attackDamage: 10,\n  speed: Constant.ENERGY_THRESHOLD * range,\n  energy: 0,\n  range,\n})\n","import { Jacinto } from './Jacinto/jacinto'\n\nexport default {\n  Jacinto,\n}","import * as Constant from '../../constants';\nimport * as Helper from '../../../helper';\nimport * as Item from '../../items';\nimport * as MapHelper from '../../Maps/helper';\nimport { generate as generateBuilding } from '../../Maps/generator';\nimport { CoverWall, Debris, Bandit, RangedBandit, EmergenceHole } from '../../Entities/index';\nimport { MESSAGE_TYPE } from '../../message';\nimport { Mode } from '../default';\nimport SOUNDS from '../../sounds';\nimport * as _ from 'lodash';\nimport {COLORS, TILE_KEY} from './theme';\nimport { Ammo } from '../../Items/Pickups/Ammo';\nimport { Grenade } from '../../Items/Weapons/Grenade';\nconst MAP_DATA = require('../../Maps/castle.json');\n\nexport class Jacinto extends Mode {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.data = {\n      level: 1,\n      highestLevel: null,\n      turnCount: 0,\n    };\n    this.dataByLevel = [\n      {\n        enemies: Array(4).fill('Grub'),\n        emergenceHoles: 2,\n        ammoLoot: 2,\n        grenadeLoot: 1,\n      },\n      {\n        enemies: Array(6).fill('Grub'),\n        emergenceHoles: 3,\n        ammoLoot: 1,\n        grenadeLoot: 0,\n      },\n      {\n        enemies: Array(12).fill('Grub'),\n        emergenceHoles: 0,\n        ammoLoot: 3,\n        grenadeLoot: 1,\n      },\n      {\n        enemies: [],\n        emergenceHoles: 5,\n        ammoLoot: 2,\n        grenadeLoot: 0,\n      },\n      {\n        enemies: Array(10).fill('Grub'),\n        emergenceHoles: 4,\n        ammoLoot: 1,\n        grenadeLoot: 0,\n      },\n      {\n        enemies: [],\n        emergenceHoles: 12,\n        ammoLoot: 20,\n        grenadeLoot: 5,\n      },\n      {\n        enemies: [...Array(4).fill('Grub'), 'Skorge'],\n        emergenceHoles: 6,\n        ammoLoot: 20,\n        grenadeLoot: 2,\n      },\n    ]\n  }\n\n  createHorizontalRoad (y, length, x = 0) {\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      { x, y},\n      4,\n      length,\n      'ROAD_EDGE',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      { x, y: y + 1},\n      2,\n      length,\n      'ROAD',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n  }\n\n  createVerticalRoad (x, length, y = 0) {\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      { x, y },\n      length,\n      3,\n      'ROAD_EDGE',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      { x: x + 1, y },\n      length,\n      1,\n      'ROAD',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n  }\n\n  createVerticalRoadGoingNorthAndSouth = () => (x) => this.createVerticalRoad(x, this.game.mapHeight);\n  createVerticalRoadGoingNorth = (fromY) => (x) => this.createVerticalRoad(x, (fromY) + 1);\n  createVerticalRoadGoingSouth = (fromY) => (x) => this.createVerticalRoad(x, (this.game.mapHeight - fromY) - 1, (fromY) + 1);\n\n  createCityBlockLevel () {\n    // Generates the main road\n    const mainRoadY = this.game.mapHeight / 4\n    this.createHorizontalRoad(mainRoadY, this.game.mapWidth)\n\n    // Generates roads to run the height of the map\n    const numberOfVerticalRoads = Helper.getRandomIntInclusive(0, 5);\n    // const numberOfVerticalRoads = 0;\n    Array(numberOfVerticalRoads).fill('').forEach(() => {\n      const x = Helper.getRandomIntInclusive(0, this.game.mapWidth);\n      const generateRoad = Helper.getRandomInArray([\n        this.createVerticalRoadGoingNorth(mainRoadY),\n        this.createVerticalRoadGoingSouth(mainRoadY),\n        this.createVerticalRoadGoingNorthAndSouth(mainRoadY),\n      ]);\n      generateRoad(x)\n    })\n\n    const numberOfBuildings = Helper.getRandomIntInclusive(0, 10);\n    // const numberOfBuildings = 4;\n    Array(numberOfBuildings).fill('').forEach(() => {\n      let groundTiles = this.getEmptyGroundTileKeys()\n      let pos = Helper.getRandomInArray(groundTiles);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      const unitCount = Helper.getRandomIntInclusive(1, 6);\n      // const unitCount = 4\n      const unitSize = Helper.getRandomInArray([3, 4, 6]);\n      generateBuilding(this.game.map, posXY[0], posXY[1], unitCount, unitSize);\n    })\n  }\n\n  initialize () {\n    super.initialize();\n    this.game.tileKey = TILE_KEY\n    this.game.createEmptyLevel();\n    this.game.initializeMapTiles();\n    // this.game.createCustomLevel(MAP_DATA);\n\n    this.setWaveData();\n\n    // Generates a safe zone on left-hand edge of map for player to start\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      { x: 0, y: 0 },\n      this.game.mapHeight,\n      1,\n      'SAFE',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    \n    this.createCityBlockLevel();\n\n    let floorTiles = Object.keys(this.game.map).filter((key) => this.game.map[key].type === 'FLOOR')\n    let groundTiles = Object.keys(this.game.map).filter((key) => this.game.map[key].type === 'GROUND')\n\n    this.placePlayersInSafeZone();\n    const player = this.game.getFirstPlayer();\n    if (player) player.upgrade_points += 1;\n\n    this.data.enemies.forEach((enemyName) => {\n      let pos = Helper.getRandomInArray(this.getEmptyGroundTileKeys());\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this[`add${enemyName}`]({ x: posXY[0], y: posXY[1] });\n    })\n\n    // for (let index = 0; index < 40; index++) {\n    //   let pos = Helper.getRandomInArray(groundTiles);\n    //   if (!pos) break;\n    //   let posXY = pos.split(',').map((coord) => parseInt(coord));\n    //   this.addCover({ x: posXY[0], y: posXY[1] });\n    // }\n\n    // adding emergence holes\n    for (let index = 0; index < this.data.emergenceHoles; index++) {\n      let pos = Helper.getRandomInArray(this.getEmptyTileKeys());\n      if (!pos) break;\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addEmerenceHole({ x: posXY[0], y: posXY[1] });\n    }\n\n    // adding  ammo loot\n    for (let index = 0; index < this.data.ammoLoot; index++) {\n      let pos = Helper.getRandomInArray(floorTiles);\n      if (!pos) break;\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addAmmoLoot({ x: posXY[0], y: posXY[1] });\n    }\n\n    // adding  grenade loot\n    for (let index = 0; index < this.data.grenadeLoot; index++) {\n      let pos = Helper.getRandomInArray(floorTiles);\n      if (!pos) break;\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addGrenadeLoot({ x: posXY[0], y: posXY[1] });\n    }\n  }\n\n  // TODO curry these funcs\n  getEmptyTileKeys (keys = Object.keys(this.game.map)) {\n    return keys.filter((key) => !!!this.game.map[key].entities.length)\n  }\n\n  getEmptyGroundTileKeys (keys = Object.keys(this.game.map)) {\n    return this.getEmptyTileKeys(keys).filter((key) => this.game.map[key].type === 'GROUND')\n  }\n\n  getEmptyFloorTileKeys (keys = Object.keys(this.game.map)) {\n    return this.getEmptyTileKeys(keys).filter((key) => this.game.map[key].type === 'FLOOR')\n  }\n\n  getPlayers () {\n    return this.game.engine.actors.filter((actor) => actor.entityTypes.includes('PLAYING'))\n  }\n\n  updateUI() {\n    this.createOrUpdateInfoBlock(\n      'gameProgress',\n      { \n        text: `${this.data.level - 1} of  ${this.dataByLevel.length} city blocks cleared.` \n      }\n    );\n  }\n\n  checkCoverAnimations() {\n    this.game.engine.actors.forEach((actor) => {\n      if (actor.entityTypes.includes('USES_COVER')) {\n        if (actor.resetCoverAnimations());\n      }\n    })\n  }\n\n  update () {\n    super.update();\n    this.checkCoverAnimations();\n    this.updateUI();\n    if (this.hasWon()) {\n      this.game.toWin()\n    }\n    if (this.hasLost()) {\n      SOUNDS.lose.play();\n      this.game.toLose();\n      this.reset();\n      this.game.initializeGameData();\n    }\n    if (this.levelComplete()) {\n      this.nextLevel();\n      this.setWaveData();\n\n      // a hack to persist player data\n      // this would persist all existing actors however\n      this.initialize();\n      // this.game.initializeGameData();\n    }\n  }\n  \n  //Extras\n  setLevel (level) {\n    this.data.level = level;\n    this.data.turnCount = 0;\n  }\n\n  nextLevel () {\n    this.setLevel(this.data.level + 1);\n  }\n\n  reset () {\n    this.setLevel(1);\n    this.initialize();\n  }\n\n  setWaveData () {\n    const level = this.data.level - 1\n    const nextLevelData = _.get(this.dataByLevel, level, {});\n    this.data = {...this.data, ...nextLevelData}\n  }\n\n  levelComplete () {\n    const playerOnExit = this.playerIsOnExit();\n    const enemiesDefeated = this.enemiesDefeated();\n    if (enemiesDefeated) {\n      this.activateExitTiles();\n    }\n    return playerOnExit && enemiesDefeated; \n  }\n\n  enemiesDefeated () {\n    return this.game.engine.actors.filter((actor) => actor['faction'] === 'LOCUST').length <= 0\n  }\n\n  hasWon () {\n    return this.data.level > this.dataByLevel.length;\n  }\n\n  hasLost () {\n    let players = this.getPlayers()\n    if (!players.length) return true;\n    else if (players.length) {\n      if (players[0].durability <= 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  addEmerenceHole(pos) {\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      {x: pos.x - 1, y: pos.y - 1},\n      3,\n      3,\n      'EMERGENCE_GROUND',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    // create new fire actor and place\n    let entity = new EmergenceHole({\n      name: 'Hole',\n      pos,\n      game: this.game,\n      passable: true,\n      renderer: {\n        character: '',\n        sprite: '',\n        color: COLORS.locust1,\n        background: COLORS.base04,\n      },\n      timeToSpread: 1,\n      spreadCount: 3,\n      durability: 1,\n      faction: 'LOCUST',\n      speed: Constant.ENERGY_THRESHOLD,\n      getSpawnedEntity: (spawnPosition) => {\n        let players = this.getPlayers()\n        let targetEntity = players[0]\n        const banditStats = this.getBanditStats();\n        let entity = new banditStats.entityClass({\n          targetEntity,\n          pos: spawnPosition,\n          renderer: banditStats.renderer,\n          name: banditStats.name,\n          game: this.game,\n          actions: [],\n          attackDamage: banditStats.attackDamage,\n          durability: banditStats.durability,\n          speed: banditStats.speed,\n          faction: 'LOCUST',\n          onDestroy: (actor) => {\n            const chance = Math.random();\n            if (chance <= 0.05) {\n              this.addAmmoLoot(actor.getPosition());\n            } else if (chance <= 0.1) {\n              this.addGrenadeLoot(actor.getPosition());\n            }\n          },\n          // directional projectile destruction breaks engine\n          getProjectile: ({ pos, targetPos, direction, range }) => Item.directionalKunai(this.game.engine, { ...pos }, direction, range)\n          // getProjectile: ({ pos, targetPos, direction, range }) => Item.kunai(game.engine, { ...pos }, { ...targetPos })\n        });\n\n        return entity\n      },\n      onDestroy: () => this.game.map[Helper.coordsToString(pos)].type = 'EMERGENCE_DESTROYED',\n    });\n\n    if (this.game.placeActorOnMap(entity)) {\n      this.game.engine.addActor(entity);\n      this.game.draw();\n    };\n  }\n\n  createAmmoStack(amount, pos) {\n    return Array(amount).fill('').map((i) => {\n      const ammo = Ammo(this.game.engine);\n      ammo.pos = pos;\n      return ammo;\n    });\n  }\n\n  addAmmoLoot (pos) {\n    this.createAmmoStack(5, pos).forEach((entity) => {\n      this.game.placeActorOnMap(entity)\n    })\n  }\n\n  addGrenadeLoot (pos) {\n    const entity = Grenade(this.game.engine, 6);\n    entity.pos = pos;\n    this.game.placeActorOnMap(entity)\n  }\n\n  addCover (\n    pos,\n    name = 'box',\n    character = '%',\n    durability = 5,\n    background = COLORS.base02,\n    color = COLORS.base01\n  ) {\n    let sprite = Helper.getRandomInArray(['', '', '', '', '', '']);\n    switch (character) {\n      case '%':\n        sprite = Helper.getRandomInArray(['', '']);\n        break;\n      case 'm':\n        sprite = Helper.getRandomInArray(['', '']);\n        break;\n      case 'H':\n        sprite = Helper.getRandomInArray(['', '']);\n        break;\n      case 'Xs':\n        sprite = ''\n        break;\n      case 'X':\n        sprite = ''\n        break;\n      case 'XL':\n        sprite = ''\n        break;\n      default:\n        sprite = '';\n        break;\n    }\n\n    let box = new CoverWall({\n      pos,\n      renderer: {\n        character,\n        sprite,\n        color,\n        background,\n      },\n      name,\n      game: this.game,\n      durability,\n      accuracyModifer: -0.3,\n      damageModifer: 0,\n    })\n\n    this.game.placeActorOnMap(box)\n  }\n  \n  getBanditStats () {\n    let banditLevels = [\n      {\n        name: 'Grub',\n        renderer: {\n          character: Helper.getRandomInArray(['g']),\n          color: COLORS.flesh2,\n          background: COLORS.flesh1,\n          sprite: '',\n          // sprite: '',\n        },\n        durability: 3,\n        attackDamage: 1,\n        speed: 100,\n        entityClass: RangedBandit\n      },\n      {\n        name: 'Grub Scout',\n        renderer: {\n          character: Helper.getRandomInArray(['s']),\n          color: COLORS.flesh1,\n          background: COLORS.flesh2,\n          sprite: '',\n          // sprite: '',\n        },\n        durability: 1,\n        attackDamage: 1,\n        speed: 500,\n        entityClass: RangedBandit\n      },\n      {\n        name: 'Wretch',\n        renderer: {\n          character: Helper.getRandomInArray(['w']),\n          color: COLORS.flesh1,\n          background: COLORS.flesh3,\n          sprite: '',\n        },\n        durability: 1,\n        attackDamage: 1,\n        speed: 500,\n        entityClass: Bandit\n      },\n      {\n        name: 'Big Grub',\n        renderer: {\n          character: Helper.getRandomInArray(['B']),\n          color: COLORS.locust2,\n          background: COLORS.flesh1,\n          sprite: '',\n        },\n        durability: 4,\n        attackDamage: 3,\n        speed: 100,\n        entityClass: Bandit\n      },\n    ]\n    return Helper.getRandomInArray(banditLevels);\n  }\n\n  addGrub (pos) {\n    let players = this.getPlayers()\n    let targetEntity = players[0]\n    const banditStats = this.getBanditStats();\n    let entity = new banditStats.entityClass({\n      targetEntity,\n      pos,\n      renderer: banditStats.renderer,\n      name: banditStats.name,\n      game: this.game,\n      actions: [],\n      attackDamage: banditStats.attackDamage,\n      durability: banditStats.durability,\n      speed: banditStats.speed,\n      faction: 'LOCUST',\n      onDestroy: (actor) => {\n        const chance = Math.random();\n        if (chance <= 0.05) {\n          this.addAmmoLoot(actor.getPosition());\n        } else if (chance <= 0.1) {\n          this.addGrenadeLoot(actor.getPosition());\n        }\n      },\n      // directional projectile destruction breaks engine\n      getProjectile: ({ pos, targetPos, direction, range }) => Item.directionalKunai(this.game.engine, { ...pos }, direction, range)\n      // getProjectile: ({ pos, targetPos, direction, range }) => Item.kunai(game.engine, { ...pos }, { ...targetPos })\n    })\n    if (this.game.placeActorOnMap(entity)) {\n      this.game.engine.addActor(entity);\n      // this.game.draw();\n    };\n  }\n  \n  addSkorge (pos) {\n    let players = this.getPlayers()\n    let targetEntity = players[0]\n    let entity = new Bandit({\n      targetEntity,\n      pos,\n      renderer: {\n        sprite: '',\n        character: 'S',\n        color: COLORS.flesh1,\n        background: COLORS.base04,\n      },\n      name: 'Skorge',\n      game: this.game,\n      attackDamage: 8,\n      durability: 40,\n      speed: Constant.ENERGY_THRESHOLD * 5,\n      faction: 'LOCUST',\n      // directional projectile destruction breaks engine\n      // getProjectile: ({ pos, targetPos, direction, range }) => Item.directionalKunai(this.game.engine, { ...pos }, direction, range)\n      // getProjectile: ({ pos, targetPos, direction, range }) => Item.kunai(game.engine, { ...pos }, { ...targetPos })\n    })\n    if (this.game.placeActorOnMap(entity)) {\n      this.game.engine.addActor(entity);\n    };\n  }\n\n  placePlayersInSafeZone () {\n    let players = this.getPlayers()\n    const keys = Object.keys(this.game.map).filter((key) => this.game.map[key].type == 'SAFE');\n    players.forEach((player) => {\n      const key = keys.shift();\n      if (key) {\n        const position = {\n          x: parseInt(key.split(',')[0]),\n          y: parseInt(key.split(',')[1]),\n        }\n        player.pos = {x: position.x, y: player.pos.y};\n        this.game.placeActorOnMap(player)\n      }\n    })\n  }\n\n  playerIsOnExit() {\n    const player = this.game.getFirstPlayer();\n    if (player) {\n      const tile = this.game.map[Helper.coordsToString(player.pos)];\n      if (tile.type === 'EXIT') {\n        return true;\n      }\n    }\n    return false\n  }\n\n  activateExitTiles() {\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      { x: this.game.mapWidth - 3, y: 0 },\n      this.game.mapHeight,\n      3,\n      'EXIT',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n  }\n\n}\n","import React from 'react';\nimport * as ROT from 'rot-js';\nimport * as _ from 'lodash';\nimport * as Constant from './constants';\nimport * as Helper from '../helper';\nimport * as Message from './message';\nimport { Display } from './Display/konvaCustom';\nimport Mode from './Modes/index';\nimport * as MapHelper from './Maps/helper';\n\n// const MAP_DATA = require('./Maps/castle.json');\n// const SOLANGE = require('./Data/solange.json');\n\nconst MAP_WIDTH = 50;\nconst MAP_HEIGHT = 25;\n\nconst TILE_OFFSET = 0;\n\nconst TILE_WIDTH = 26;\nconst TILE_HEIGHT = TILE_WIDTH;\n\nconst canvasWidth = (MAP_WIDTH * TILE_WIDTH) + TILE_OFFSET;\nconst canvasHeight = (MAP_HEIGHT * TILE_HEIGHT) + TILE_OFFSET;\n\nexport class Game {\n  constructor({\n    engine = null,\n    map = {},\n    entityMap = {},\n    entityDictionary = {},\n    mapInitialized = false,\n    tileMap = {},\n    mapWidth = MAP_WIDTH,\n    mapHeight = MAP_HEIGHT,\n    cameraWidth = MAP_WIDTH,\n    cameraHeight = MAP_HEIGHT,\n    tileWidth = TILE_WIDTH,\n    tileHeight = TILE_HEIGHT,\n    tileOffset = TILE_OFFSET,\n    getSelectedCharacter = () => false,\n    spriteMode = true,\n    tileKey = Constant.TILE_KEY,\n    mode = Mode.Flume,\n    messages = [],\n  }) {\n    this.engine = engine;\n    this.map = map;\n    this.entityMap = entityMap;\n    this.entityDictionary = entityDictionary;\n    this.mapInitialized = mapInitialized;\n    this.tileMap = tileMap;\n    this.mapWidth = mapWidth;\n    this.mapHeight = mapHeight;\n    this.cameraWidth = cameraWidth;\n    this.cameraHeight = cameraHeight;\n    this.tileWidth = tileWidth;\n    this.tileHeight = tileHeight;\n    this.tileOffset = tileOffset;\n    this.display = new Display({\n      containerId: 'display',\n      width: canvasWidth,\n      height: canvasHeight,\n      tileWidth: tileWidth,\n      tileHeight: tileHeight,\n      tileOffset: tileOffset,\n      game: this,\n    });\n    this.spriteMode = spriteMode;\n    this.tileKey = tileKey;\n    this.mode = new mode({game: this});\n    this.messages = messages;\n    this.getSelectedCharacter = getSelectedCharacter;\n  }\n\n  initializeMode () {\n    this.mode.initialize();\n  }\n  \n  updateMode () { // this is run every game turn\n    this.mode.update();\n  }\n\n  randomlyPlaceActorOnMap(actor) {\n    let kill = 0;\n    let placed = false;\n    while (!placed) {\n      let pos = Helper.getRandomPos(this.map).coordinates\n      if (this.canOccupyPosition(pos, actor)) {\n        let tile = this.map[Helper.coordsToString(pos)]\n        actor.pos = { ...pos }\n        tile.entities.push(actor);\n        placed = true;\n      }\n      kill += 1;\n      if (kill >= 100) {\n        placed = true;\n      }\n    }\n    return placed;\n  }\n\n  randomlyPlaceAllActorsOnMap() {\n    this.engine.actors.forEach((actor) => {\n      this.randomlyPlaceActorOnMap(actor);\n    })\n  }\n\n  placeActorsOnMap() {\n    this.engine.actors.forEach((actor) => {\n      let tile = this.map[Helper.coordsToString(actor.pos)]\n      if (tile) {\n        tile.entities.push(actor);\n      } else {\n        console.log(`could not place ${actor.id}: ${actor.name} on map`);\n      }\n    })\n  }\n\n  placeActorOnMap(actor) {\n    let tile = this.map[Helper.coordsToString(actor.pos)]\n    if (tile) {\n      tile.entities.push(actor);\n      return true\n    } else {\n      console.log(`could not place ${actor.id}: ${actor.name} on map`);\n      return false\n    }\n  }\n\n  removeActorFromMap (actor) {\n    let tile = this.map[Helper.coordsToString(actor.pos)]\n    if (!tile) return false;\n    this.map[Helper.coordsToString(actor.pos)].entities = tile.entities.filter((ac) => ac.id !== actor.id);\n    return true;\n  }\n\n  createLevel () {\n    let digger = new ROT.Map.Arena(this.mapWidth, this.mapHeight);\n    // let digger = new ROT.Map.Rogue();\n    // let digger = new ROT.Map.DividedMaze();\n    // let digger = new ROT.Map.EllerMaze();\n    // let digger = new ROT.Map.Cellular();\n    // let digger = new ROT.Map.Digger(this.mapWidth, this.mapHeight);\n    // let digger = new ROT.Map.IceyMaze();\n    // let digger = new ROT.Map.Uniform();\n    let freeCells = [];\n    let digCallback = function (x, y, value) {      \n      let key = x + \",\" + y;\n      let type = 'GROUND';\n      if (value) { \n        type = 'WALL';\n        // type = 'WATER';\n      }\n      MapHelper.addTileToMap({map: this.map, key, tileKey: this.tileKey, tileType: type})\n      freeCells.push(key);\n    }\n    digger.create(digCallback.bind(this));\n  }\n\n  createEmptyLevel () {\n    for (let i = 0; i < this.mapHeight; i ++) {\n      for (let j = 0; j < this.mapWidth; j ++) {\n        const key = `${j},${i}`\n        // let type = 'GROUND';\n        let type = Helper.getRandomInArray(['GROUND', 'GROUND_ALT', 'GROUND_ALT', 'GROUND_ALT']);\n        MapHelper.addTileToMap({map: this.map, key, tileKey: this.tileKey, tileType: type})\n      }\n    }\n  }\n\n  createCustomLevel (data) {\n    Object.keys(data.tiles).forEach((key, i) => {\n      const tile = data.tiles[key];\n      let type = tile.data.type;\n      if (!type) {\n        type = 'GROUND';\n      }\n      MapHelper.addTileToMap({map: this.map, key, tileKey: this.tileKey, tileType: type})\n    })\n  }\n\n  canOccupyPosition (pos, entity = {passable: false}) {\n    let result = false;\n    let targetTile = this.map[Helper.coordsToString(pos)];\n    if (targetTile) {\n      let hasImpassableEntity = targetTile.entities.filter((entity) => !entity.passable).length > 0;\n      if (!hasImpassableEntity || entity.passable) {\n        let tile = this.map[Helper.coordsToString(pos)];\n        if (this.tileKey[tile.type].passable) {\n          result = true;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  rangedCursorCanOccupyPosition (pos, entity = {passable: false}) {\n    let result = false;\n    let targetTile = this.map[Helper.coordsToString(pos)];\n    if (targetTile) {\n      let tile = this.map[Helper.coordsToString(pos)];\n      if (this.tileKey[tile.type].passable) {\n        result = true;\n      }\n    }\n\n    return result;\n  }\n\n  cursorCanOccupyPosition(pos) {\n    let result = false;\n    let targetTile = this.map[Helper.coordsToString(pos)];\n    if (targetTile) {\n      result = true;\n    }\n\n    return result;\n  }\n\n  show (document) {\n    this.display.initialize(document)\n  }\n\n  getRenderMap(fullMap, referencePosition, renderWidth, renderHeight, fullWidth, fullHeight) { \n    // create an object with only tile keys that should be rendered (around player)\n    // renderWidth/Height measured in tiles\n    // reference positon usually based on player pos\n    // position from fullMap key should be translated to 0,0 based on referencePos\n    \n    const renderPaddingX = Math.floor((renderWidth / 2));\n    const renderPaddingY = Math.floor((renderHeight / 2));\n    let offsetX = 0;\n    let offsetY = 0;\n    if (referencePosition) {\n      offsetX = referencePosition.x - renderPaddingX;\n      offsetY = referencePosition.y - renderPaddingY;\n    }\n    offsetX = Helper.clamp(offsetX, 0, fullWidth - renderWidth);\n    offsetY = Helper.clamp(offsetY, 0, fullHeight - renderHeight);\n    \n    let result = {}\n    for (let key in fullMap) {\n      let parts = key.split(\",\");\n      let x = parseInt(parts[0]);\n      let y = parseInt(parts[1]);\n      let finalX = x - offsetX;\n      let finalY = y - offsetY;\n      if (finalX >= 0 && finalX <= renderWidth) {\n        if (finalY >= 0 && finalY <= renderHeight) {\n          result[`${finalX},${finalY}`] = fullMap[key]\n        }\n      }\n    }\n    return result\n  }\n\n  processTileMap (callback) {\n    // const map = this.map;\n    // const map = this.getRenderMap(this.map, this.getPlayerPosition(), this.mapWidth, this.mapHeight);\n    // const map = this.getRenderMap(this.map, this.getPlayerPosition(), 50, 25, this.mapWidth, this.mapHeight);\n    const map = this.getRenderMap(this.map, this.getPlayerPosition(), this.cameraWidth, this.cameraHeight, this.mapWidth, this.mapHeight);\n    for (let key in map) {\n      let parts = key.split(\",\");\n      let x = parseInt(parts[0]);\n      let y = parseInt(parts[1]);\n      let tile = map[key];\n      // let { foreground, background } = this.tileKey[tile.type]\n      // Proto code to handle tile animations\n      let tileRenderer = this.tileKey[tile.type]\n      let nextFrame = this.animateTile(tile, tileRenderer);\n      let character = nextFrame.character;\n      let foreground = nextFrame.foreground;\n      let background = nextFrame.background;\n      \n      const renderedEntities = tile.entities.filter((entity) => entity.entityTypes.includes('RENDERING'))\n      if (renderedEntities.length > 0) {\n        let entity = renderedEntities[renderedEntities.length - 1]\n        nextFrame = this.animateEntity(entity);\n\n        character = nextFrame.character\n        foreground = nextFrame.foreground\n        if (nextFrame.background) {\n          background = nextFrame.background\n        }\n      }\n      callback(key, x, y, character, foreground, background);          \n    }\n  }\n\n  initializeMapTiles () {\n    if (this.mapInitialized) return false;\n    this.mapInitialized = true;\n    this.processTileMap((key, x, y, character, foreground, background) => {\n      let node = this.display.createTile(x, y, character, foreground, background);\n      this.tileMap[key] = node;\n    });\n  }\n\n  getPlayers () {\n    return this.engine.actors.filter((actor) => actor.entityTypes.includes('PLAYING'))\n  }\n\n  getFirstPlayer () {\n    const players = this.getPlayers();\n    if (players.length) return players[0]\n    return null\n  }\n\n  getPlayerPosition () {\n    const player = this.getFirstPlayer();\n    if (player) return player.getPosition();\n    return null\n  }\n  \n  draw () {\n    this.processTileMap((key, x, y, character, foreground, background) => {\n      this.display.updateTile(this.tileMap[key], character, foreground, background);\n    });\n    this.display.draw();\n  }\n\n  getEntityRenderer (renderer) {\n    // if sprite mode is on and the renderer has a sprite defined, use that\n    if (this.spriteMode && renderer.hasOwnProperty('sprite')) {\n      return {...renderer, character: renderer.sprite, foreground: renderer.color}\n      // return {character: renderer.sprite, foreground: renderer.background, background: ''}\n    }\n    // else us the ascii character\n    return {...renderer, foreground: renderer.color}\n  }\n\n  getTileRenderer (renderer) {\n    // if sprite mode is on and the renderer has a sprite defined, use that\n    if (this.spriteMode && renderer.hasOwnProperty('sprite')) {\n      return {...renderer, character: renderer.sprite}\n    }\n    // else us the ascii character\n    return renderer\n  }\n  \n  animateEntity (entity) {\n    let renderer = entity.getRenderer();\n    let { character, foreground, background } = this.getEntityRenderer(renderer)\n    if (renderer.animation) {\n      let frame = this.getEntityRenderer(renderer.animation[entity.currentFrame]);\n      character = frame.character;\n      foreground = frame.foreground;\n      background = frame.background;\n      entity.currentFrame = (entity.currentFrame + 1) % renderer.animation.length;\n    }\n    return {character, foreground, background}\n  }\n\n  animateTile (tile, renderer) {\n    let {character, foreground, background} = this.getTileRenderer(renderer)\n    if (renderer.animation) {\n      let frame = this.getTileRenderer(renderer.animation[tile.currentFrame]);\n      character = frame.character\n      foreground = frame.foreground;\n      background = frame.background;\n      tile.currentFrame = (tile.currentFrame + 1) % renderer.animation.length;\n    }\n    return {character, foreground, background}\n  }\n\n  addActor (actor, engine = this.engine) {\n    let isPlaced = this.placeActorOnMap(actor); // replace with placeActorOnMap\n    if (!isPlaced) { return false }\n    engine.actors.push(actor);\n    this.draw();\n    return true\n  }\n\n  placeAndDrawActor (actor) {\n    this.placeActorsOnMap(); // replace with placeActorOnMap\n    this.draw();\n  }\n\n  removeActor (actor) {\n    this.engine.actors = this.engine.actors.filter((ac) => ac.id !== actor.id);\n    // this.engine.currentActor = this.engine.actors.length - 1; // should remove need for this line\n    // this.engine.currentActor = (this.engine.currentActor) % this.engine.actors.length;\n    // this.engine.currentActor = (this.engine.currentActor + 1) % this.engine.actors.length;\n    this.removeActorFromMap(actor);\n    this.draw();\n  }\n\n  initializeUI (presserRef, document) {\n    this.show(document);\n    presserRef.current.focus();\n  }\n\n  initializeGameData () {\n    this.engine.game = this;\n    const selectedCharacter = this.getSelectedCharacter();\n    this.engine.actors = [selectedCharacter];\n    this.engine.actors.forEach((actor) => {\n      actor.game = this;\n    });\n    // this.createEmptyLevel();\n    // this.initializeMapTiles();\n    this.initializeMode();\n    this.draw();\n  }\n\n  initialize (presserRef, document) {\n    this.initializeUI(presserRef, document);\n    this.initializeGameData();\n    // hack to register sprite mode\n    setTimeout(() => {\n      this.spriteMode = false;\n      this.draw()\n    }, 500)\n    setTimeout(() => {\n      this.spriteMode = true;\n      this.draw()\n    }, 500)\n    // end hack\n  }\n\n  addMessage (text, type) {\n    const message = new Message.Message({text, type})\n    this.messages.push(message);\n  }\n}\n\n\n/************************** UI ********************************/\nexport const handleKeyPress = (event, engine) => {\n  if (!engine.isRunning) {\n    let actor = engine.actors[engine.currentActor];\n    let keymap = null;\n    try {\n      keymap = actor.getKeymap();\n    } catch (e) {\n      console.log('keypress error');\n      console.log(e);\n    }\n    if (keymap) {\n      let code = event.key;\n      if (!(code in keymap)) { return; }\n      const getAction = keymap[code];\n      const action = getAction();\n      // const action = keymap[code];\n      action.setAsNextAction();\n      engine.start();\n    }\n  }\n  return;\n}\n\nexport const DisplayElement = (presserRef, handleKeyPress, engine) => {\n  return (\n    <div\n      id='display'\n      ref={presserRef}\n      onKeyDown={(event) => handleKeyPress(event, engine)}\n      // onKeyUp={(event) => handleKeyPress(event, engine)}\n      tabIndex='0'\n    />\n  )\n}\n/************************** UI ********************************/\n","import React from 'react';\nimport { SCREENS } from '../Screen/constants';\nimport * as _ from 'lodash';\n\nclass Instructions extends React.Component {\n  render() {\n    const infoHeader = _.get(this.props.game, 'mode.infoHeader', null);\n    const infoBlocks = _.get(this.props.game, 'mode.infoBlocks', {});\n\n    return (\n      <div className=\"Instructions UI\">\n        {infoHeader && (<p className='flow-text'>{infoHeader}</p>)}\n        <div className='flow-text'>\n          <div \n            className='Instructions__block'\n            // onClick={() => this.props.setActiveScreen(SCREENS.TITLE)}\n            onClick={() => window.location.reload()}\n          >\n            <button className='btn btn-main'>\n              Restart\n            </button>\n          </div>\n          <div \n            className='Instructions__block'\n            onClick={() => this.props.toggleSpriteMode()}\n          >\n            <button className='btn btn-main'>\n              {\n                this.props.spriteMode ? (\n                  'ASCII mode'\n                ) : (\n                  'Sprite mode'\n                )\n              }\n            </button>\n          </div>\n          <div\n            className='Instructions__block'\n          >\n            <button data-target=\"jacinto_help\" className='btn btn-main modal-trigger'>\n              Help\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Instructions;","import React from 'react';\n\nfunction Button(props) {\n  let color = props['color'];\n  if (!color) color = 'grey';\n  return (\n    <button\n      onClick={props.onClick}\n      className={`Button btn ${color}`}\n    >\n      {props.children}  \n    </button>\n  )\n}\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\n\nclass Information extends React.Component {\n  render() {\n    let data = [\n      {\n        label: 'Wave',\n        value: `Current: ${this.props.game.mode.data.level}, Highest: ${this.props.game.mode.data.highestLevel}`,\n      },\n    ];\n\n    data = data.concat(\n      [\n        ...this.props.game.engine.actors.map((actor, index) => {\n          let result = {\n            label: actor.name,\n            // value: index,\n            value: `HP: ${actor.durability}, En/Sp: ${actor.energy}/${actor.speed}`,\n          };\n          if (index === this.props.game.engine.currentActor) {\n            result['color'] = 'red';\n          }\n          return result;\n        })\n      ]\n    )\n\n    return (\n      <div className=\"Information UI\">\n        {\n          data && (\n            data.map((item, index) => {\n              return (\n                <Button key={index} color={item['color']} onClick={() => null}>\n                  {`${item.label}: ${item.value}`}\n                </Button>\n              )\n            })\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Information;","import React from 'react';\n\nfunction Tooltip ({title = 'Effect', text = '', children}) {\n  return (\n    <div className=\"Tooltip\">\n      {children}\n      <div className=\"top\">\n        <h3>{title}</h3>\n        <p>{text}</p>\n        <i></i>\n      </div>\n    </div>\n  )\n}\n\nexport default Tooltip;\n","import React from 'react';\nimport * as _ from 'lodash';\nimport Tooltip from './Tooltip';\n\nfunction ResourceBlock({ resource, superScript, canPay }) {\n  const character = resource.renderer.sprite ? resource.renderer.sprite : resource.renderer.character\n  return (\n    <div className=\"ResourceBlock\" style={{\n      backgroundColor: canPay ? resource.renderer.background : '#616161',\n      color: canPay ? resource.renderer.color : '#bdbdbd',\n      borderColor: canPay ? resource.renderer.color : '#bdbdbd',\n      fontFamily: 'scroll-o-script',\n      width: superScript ? 'auto' : 20,\n    }}>\n      {`${superScript ? superScript + ' ' : ''}${character}`}\n    </div>\n  )\n}\n\nclass ActionBar extends React.Component {\n  render() {\n    return (  \n      <div className=\"ActionBar\">\n        <div className=\"CharacterActions\">\n          {\n            \n            this.props.keymap && (\n              Object.entries(this.props.keymap).map(([key, getAction], index) => {\n                const action = getAction();\n                const hidden = _.get(action, 'hidden', false);\n                const renderer = _.get(action, 'renderer', null);\n                const reqs = action.listPayableResources();\n\n                if (!hidden) {\n                  return (\n                    <Tooltip\n                      key={`${index}-label`}\n                      title={action.label}\n                      text={action.label + ` ${action.actor.name}`}\n                    >\n                      <div \n                        className=\"CharacterActions__item\"\n                        onClick={() => {\n                          action.setAsNextAction();\n                          if (!this.props.game.engine.isRunning) this.props.game.engine.start();\n                          this.props.game.refocus();\n                        }}\n                      >\n                        <div className=\"CharacterActions__item__label\">\n                          {key}\n                        </div>\n                        <div className=\"CharacterActions__item__content\" style={renderer && {\n                          backgroundColor: renderer.background,\n                          color: renderer.color,\n                          borderColor: renderer.color,\n                        }}>\n                          {action.label}\n                        </div>\n                        <div className=\"CharacterActions__item__resources\">\n                          {\n                            reqs.map((req, i) => {\n                              const numBlocks = req.getResourceCost();\n                              return numBlocks > 0 && (\n                                <ResourceBlock\n                                  key={`${i}-${req.name}-resource-block`}\n                                  superScript={numBlocks}\n                                  resource={req}\n                                  canPay={req.canPay}\n                                />\n                              )\n                            })\n                          }\n                        </div>\n                      </div>\n                    </Tooltip>\n                  )\n                }\n              })\n            )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ActionBar;","import React from 'react';\nimport * as _ from 'lodash';\nimport Tooltip from '../Tooltip';\nimport ActionBar from '../ActionBar';\n\nfunction Portrait ({actor}) {\n  return (\n    <div className=\"Portrait\" style={{\n      backgroundColor: actor.renderer.background, \n      color: actor.renderer.color,\n      borderColor: actor.renderer.color,\n    }}>\n      {actor.renderer.sprite ? actor.renderer.sprite : actor.renderer.character}\n    </div>\n  )\n}\n\nfunction StatusEffect ({effect}) {\n  return (\n    <div className=\"StatusEffects__effect\" style={{\n      backgroundColor: effect.renderer.background, \n      color: effect.renderer.color,\n      borderColor: effect.renderer.color,\n    }}>\n      {effect.renderer.sprite ? effect.renderer.sprite : effect.renderer.character}\n    </div>\n  )\n}\n\nfunction StatusEffects ({actor}) {\n  return (\n    <div className=\"StatusEffects\">\n      {\n        actor.game.engine.getStatusEffectsByActorId(actor.id).map((effect, i) => {\n          return (\n            <Tooltip \n              key={i}\n              title={effect.name}\n              text={effect.name}\n            >\n              <StatusEffect effect={effect} />\n            </Tooltip>\n          )\n        })\n      }\n    </div>\n  )\n}\n\nfunction NamePlate ({actor}) {\n  return (\n    <div className=\"NamePlate\">\n      {actor.name}\n    </div>\n  )\n}\n\nfunction ProgressBar ({\n  actor, \n  label, \n  colorFilled = 'red',\n  colorEmpty = 'gray',\n  attributePathMax, \n  attributePath, \n  unit,\n}) {\n  const valueMax = _.get(actor, attributePathMax, 0) / unit;\n  const valueCurrent = _.get(actor, attributePath, 0) / unit;\n  return (\n    <div className=\"ProgressBar\">\n      <div>\n        <span className='ProgressBar__label'>{label}</span>\n      </div>\n      <div>\n        <div className='ProgressBar__blips'>\n          {\n            Array(valueMax).fill(true).map((blip, index) => {\n              return (\n                <span \n                  key={index}\n                  className='ProgressBar__blips__blip' \n                  style={{backgroundColor: valueCurrent > index ? colorFilled : colorEmpty }}\n                />\n              )\n            })\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction CharacterCard ({actor, game}) {\n  return (\n    <div className='CharacterCard'>\n      <Portrait actor={actor}/>\n      <div>\n        <NamePlate actor={actor}/>\n        <ProgressBar \n          label='Action Points'\n          attributePath='energy'\n          attributePathMax='speed'\n          colorFilled='#ff9926'\n          unit={100}\n          actor={actor} \n        />\n        <ProgressBar \n          label='Health Points'\n          attributePath='durability'\n          attributePathMax='durabilityMax'\n          colorFilled='#dc322f'\n          unit={1}\n          actor={actor} \n        />\n        <ProgressBar \n          label='Upgrade Points'\n          attributePath='upgrade_points'\n          attributePathMax='upgrade_points'\n          colorFilled='#3e7dc9'\n          unit={1}\n          actor={actor} \n        />\n        <StatusEffects actor={actor} />\n      </div>\n      <div>\n        {/* <ActionBar keymap={game.visibleKeymap} game={game} /> */}\n        <ActionBar keymap={actor.getKeymap()} game={game} />\n      </div>\n    </div>\n  )\n}\n\nexport default CharacterCard;\n","import React from 'react';\nimport CharacterCard from './CharacterCard';\nimport * as _ from 'lodash';\n\nconst PlayerInformation = ({game}) => {\n  const actors = game.engine.actors.filter((actor) => actor.entityTypes.includes('PRESENTING_UI')).filter((actor) => actor.presentingUI)\n  return (\n    <div className=\"PlayerInformation Information UI\">\n      <div className='CharacterCard_Container'>\n        {\n          actors.map((actor, index) => <CharacterCard key={index} actor={actor} game={game} />)\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default PlayerInformation;","import React from 'react';\nimport Button from './Button';\n\nclass Inventory extends React.Component {\n  render() {\n    return (\n      <div className=\"Inventory UI\">\n        {\n          this.props.inventory && (\n            <div>\n              <div className='flow-text'>Inventory</div>\n              <div>\n                {\n                  this.props.inventory.map((slot, index) => {\n                    return (\n                      <Button key={index} onClick={() => null}>\n                        {`${slot.itemType} | x ${slot.items.length}`}\n                      </Button>\n                    )\n                  })\n                }\n              </div>\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Inventory;","import React from 'react';\n\nfunction Message (props) {\n  return (\n    <div\n      className='Message'\n      style={{\n        color: props.color,\n        backgroundColor: props.backgroundColor,\n        borderColor: props.color,\n      }}\n    >\n      {props.children}\n    </div>\n  )\n}\n\nclass Messages extends React.Component {\n  render() {\n    return (\n      <div className=\"Messages UI\">\n        <div className='flow-text center'>Messages</div>\n        {\n          this.props.messages && (\n            this.props.messages.map((message, index) => {\n              return (\n                <Message \n                  key={index} \n                  color={message.type.color}\n                  backgroundColor={message.type.backgroundColor}\n                >\n                  {`${message.text}`}\n                </Message>\n              )\n            })\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Messages;","import React from 'react';\nimport * as _ from 'lodash';\n\nfunction InfoBlocks(props) {\n  return (\n    <div>\n      {\n        _.map(_.get(props.game, 'mode.infoBlocks', {}), (value, key) => {\n          return (\n            <div key={key} className='Instructions__block Instructions__block--Jacinto'>\n              {value.text}\n            </div>\n          )\n        })\n      } \n    </div>\n  )\n}\n\nexport default InfoBlocks;\n","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nexport class EquipItemFromContainer extends Base {\n  // entities can only equip items from their container/inventory\n  constructor({ item, ...args }) {\n    super({ ...args });\n    this.item = item;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (this.item.equipmentType) {\n      let itemInSlot = this.actor.getItemInSlot(this.item.equipmentType);\n      if (itemInSlot) {\n        this.actor.addToContainer(itemInSlot);\n        this.actor.unequip(itemInSlot);\n      }\n      this.actor.removeFromContainer(this.item);\n      this.actor.equip(this.item.equipmentType, this.item);\n      this.game.addMessage(`${this.actor.name} equips ${this.item.name}.`, MESSAGE_TYPE.ACTION);\n      success = true;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import React from 'react';\nimport {\n  GiCrosshair,\n  GiBullets,\n  GiBackwardTime,\n  GiBarbedArrow,\n  GiBurningDot,\n} from \"react-icons/gi\";\nimport {EquipItemFromContainer} from '../../Actions/EquipItemFromContainer';\nimport {STAT_RENDERERS} from '../../Modes/Jacinto/theme';\n\nfunction StatBlock({stat}) {\n  const {getIcon, value, name} = stat;\n  const character = stat.renderer.sprite ? stat.renderer.sprite : stat.renderer.character\n  return (\n    <div \n      className=\"StatBlock\" \n      style={{\n        backgroundColor: stat.renderer.background,\n        color: stat.renderer.foreground,\n        borderColor: stat.renderer.foreground,\n        fontFamily: 'scroll-o-script',\n        width: stat.value !== null ? 'auto' : 20,\n      }}\n      title={name}\n    >\n      {\n        getIcon ? getIcon() : `${character}`\n      }\n      <span>&nbsp;{value}</span>\n    </div>\n  )\n}\n\nconst EquipmentCard = (props) => {\n  const {\n    game,\n    player,\n    data,\n  } = props;\n  const {\n    item,\n    equipped,\n    amount,\n    equipable,\n  } = data;\n\n  let needsReload = false;\n\n  let onClick = () => null;\n  if (equipable) {\n    const action = new EquipItemFromContainer({\n      item,\n      game,\n      energyCost: 0,\n      actor: player,\n      label: `Equip ${item.name}`,\n    });\n    onClick = () => {\n      game.refocus();\n      action.setAsNextAction();\n      game.engine.start();\n    }\n  }\n\n  let stats = [];\n  if (amount) {\n    stats.push({\n      name: 'amount left',\n      value: amount,\n      renderer: STAT_RENDERERS.amount,\n    })\n  }\n  if (item.hasOwnProperty('attackRange')) {\n    stats.push({\n      name: 'attack range',\n      value: item['attackRange'],\n      renderer: STAT_RENDERERS.attackRange,\n      getIcon: () => <GiBarbedArrow />,\n    })\n  }\n  if (item.hasOwnProperty('magazine')) {\n    stats.push({\n      name: 'shots before reload',\n      value: item.magazine,\n      renderer: STAT_RENDERERS.magazine,\n      getIcon: () => <GiBullets />,\n    })\n    if (item.magazine <= 0) {\n      needsReload = true;\n    }\n  }\n  if (item.hasOwnProperty('baseRangedAccuracy')) {\n    stats.push({\n      name: 'base accuracy',\n      value: `${Math.round(item['baseRangedAccuracy'] * 100)}%`,\n      renderer: STAT_RENDERERS.baseRangedAccuracy,\n      getIcon: () => <GiCrosshair />,\n    })\n  }\n  if (item.hasOwnProperty('baseRangedDamage')) {\n    stats.push({\n      name: 'base damage',\n      value: item['baseRangedDamage'],\n      renderer: STAT_RENDERERS.baseRangedDamage,\n      getIcon: () => <GiBurningDot />,\n    })\n  }\n  if (item.hasOwnProperty('attackDamage')) {\n    stats.push({\n      name: 'base melee damage',\n      value: item['attackDamage'],\n      renderer: STAT_RENDERERS.meleeDamage,\n    })\n  }\n  \n  return (\n    <div \n      className={`EquipmentCard ${equipped ? 'EquipmentCard--selected' : ''}`} \n      onClick={() => game.refocus()}\n    >\n      {needsReload && (\n        <div\n          className=\"EquipmentCard__reload_overlay\"\n          onClick={onClick}\n        >\n          <div className=\"EquipmentCard__reload_overlay__text\">Needs Reload</div>\n          <div className=\"EquipmentCard__reload_overlay__text\"><GiBackwardTime /></div>\n        </div>\n      )}\n      <div\n        className=\"EquipmentCard__item\"\n        onClick={onClick}\n      >\n        <div className=\"EquipmentCard__item__label\">\n          {item.name}\n        </div>\n        <div className=\"EquipmentCard__item__content\" style={item.renderer && {\n          backgroundColor: item.renderer.background,\n          color: item.renderer.color,\n          borderColor: item.renderer.color,\n        }}>\n          {item.renderer.sprite ? item.renderer.sprite : item.renderer.character}\n        </div>\n      </div>\n      <div className=\"EquipmentCard__item__stats\">\n        {\n          stats.map((stat, i) => {\n            return (\n              <StatBlock\n                key={`${i}-${stat.name}-resource-block`}\n                stat={stat}\n              />\n            )\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\nclass Equipment extends React.Component {\n  render() {\n    if (!this.props.player) return null;\n    const player = this.props.player;\n    const game = this.props.game;\n    let items = [];\n    player.equipment.forEach((slot) => {\n      if (slot.item) {\n        items.push({\n          item: slot.item,\n          equipped: true,\n        });\n      }\n    });\n    player.container.forEach((slot) => {\n      if (slot.items.length) {\n        const item = slot.items[0];\n        // disallow duplicates\n        if (items.filter((data) => data.item.name === item.name).length === 0) {\n          const equipable = item.entityTypes.includes('EQUIPABLE');\n          const amount = equipable ? null : slot.items.length;\n          items.push({\n            item,\n            amount,\n            equipable,\n            equipped: false,\n          })\n        }\n      }\n    });\n    return (\n      <div className=\"Equipment UI\">\n        {\n          <div>\n            <div className='flow-text'>Equipment</div>\n            <div>\n              {\n                items.map((item, index) => {\n                  return (\n                    <EquipmentCard \n                      key={index}\n                      game={game} \n                      player={player} \n                      data={item} \n                    />\n                  )\n                })\n              }\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default Equipment;","import React from 'react';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nfunction HelpContent() {\n  return (\n    <div className=\"Jacinto_Help\">\n      <div className=\"modal-content\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <div className=\"Jacinto_Help__section_header\">Goal</div>\n            <div className=\"Jacinto_Help__section_body\">\n              Defend Jacinto, the last human bastion on Sera. Move block by block and clear the city of \n              <span className=\"red-text\">&nbsp;Grubs</span> until you can locate and defeat their leader, \n              <span className=\"red-text\">&nbsp;Skorge</span>.\n            </div>\n          </div>\n          <div className=\"col s12 m6\">\n            <div className=\"Jacinto_Help__section_header\">Hints</div>\n            <div className=\"Jacinto_Help__section_body\">\n              <div>Destroy <span className=\"red-text\">Emergence Holes</span> ASAP.</div>\n              <div>Spend <span className=\"blue-text\">Upgrade Points</span>.</div>\n              <div>Weapon <span className=\"blue-text\">accuracy</span> decreases over distance.</div>\n              <div><span className=\"blue-text\">Grenades</span> can destroy walls as well as grubs, but be wary.</div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <div className=\"Jacinto_Help__section_header\">Controls</div>\n            <div className=\"Jacinto_Help__section_body\">\n              <div>Movement: WASD</div>\n              <div>Actions: click or key press</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default HelpContent;","import React from 'react';\nimport HelpContent from './HelpContent';\n\nfunction Help(props) {\n  React.useLayoutEffect(() => {\n    var elems = document.querySelectorAll(`#${props.id}`);\n    window.M.Modal.init(elems)\n  })\n  return (\n    <div id={props.id} className=\"modal\">\n      <HelpContent />\n      <div className=\"modal-footer\">\n        <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Close</a>\n      </div>\n    </div>\n  )\n}\n\nexport default Help;","import React from 'react';\nimport { SCREENS } from './constants';\nimport * as Engine from '../Engine/engine';\nimport * as Game from '../game';\nimport Instructions from '../UI/Instructions';\nimport Information from '../UI/Information';\nimport PlayerInformation from '../UI/Entity/PlayerInformation';\nimport Inventory from '../UI/Inventory';\n// import KeymapUI from '../UI/Keymap';\nimport KeymapUI from '../UI/ActionBar';\nimport Messages from '../UI/Messages';\nimport InfoBlocks from '../UI/InfoBlocks';\nimport Equipment from '../UI/Jacinto/Equipment';\nimport Help from '../UI/Jacinto/Help';\n\nclass Level extends React.Component {\n  constructor(props) {\n    super(props);\n    let ENGINE = new Engine.Engine({});\n    let game = new Game.Game({ \n      engine: ENGINE, \n      getSelectedCharacter: () => this.props.selectedCharacter.initialize(ENGINE),\n      mode: this.props.selectedMode.class,\n    })\n    this.state = {\n      game: game,\n      activeTab: 0,\n      spriteMode: game.spriteMode,\n    };\n    this.presserRef = React.createRef();\n  }\n\n  async componentDidMount() {\n    this.state.game.initialize(this.presserRef, document)\n    this.state.game['backToTitle'] = () => this.props.setActiveScreen(SCREENS.TITLE);\n    this.state.game['toLose'] = () => {\n      this.props.setActiveScreen(SCREENS.LOSE)\n    };\n    this.state.game['toWin'] = () => {\n      this.props.setActiveScreen(SCREENS.WIN)\n    };\n    this.state.game['refocus'] = () => this.refocus();\n    this.state.game.updateReact = (newGameState) => { this.setState({game: newGameState}) }\n    this.state.game.engine.start()\n  }\n\n  refocus () {\n    if (this.presserRef) this.presserRef.current.focus();\n  }\n\n  toggleSpriteMode () {\n    this.state.game.spriteMode = !this.state.game.spriteMode;\n    this.state.game.draw();\n    this.refocus();\n    this.setState({ spriteMode: this.state.game.spriteMode})\n  }\n\n  render() {\n    return (\n      <div className=\"Level\">\n        <div className='row'>\n          <div className='col s10'>\n            <div className='game_display_container'>\n              {Game.DisplayElement(this.presserRef, Game.handleKeyPress, this.state.game.engine)}\n            </div>\n            <Help id=\"jacinto_help\" />\n            <PlayerInformation game={this.state.game} />\n            {/* <Information game={this.state.game} /> */}\n            <Instructions game={this.state.game} spriteMode={this.state.game.spriteMode} setActiveScreen={this.props.setActiveScreen} toggleSpriteMode={this.toggleSpriteMode.bind(this)} />\n          </div>\n          <div className='col s2'>\n            <Equipment game={this.state.game} player={this.state.game.getFirstPlayer()} />\n            <InfoBlocks game={this.state.game} />\n            {/* <Messages messages={this.state.game.messages.slice(-5).reverse()} /> */}\n            {/* <Inventory inventory={this.state.game.visibleInventory} /> */}\n          </div>\n          {/* <div className='col s2'> */}\n          {/* </div> */}\n          {/* <button className='btn' onClick={() => this.props.setActiveScreen(SCREENS.TITLE)}>Quit</button> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Level;\n","import React from 'react';\nimport {\n  GiCog,\n  GiStarSkull,\n} from \"react-icons/gi\";\nimport { SCREENS } from './constants';\nimport HelpContent from '../UI/Jacinto/HelpContent';\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          className=\"Title__content\"\n          style={{\n\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: '#07111Dff',\n            // backgroundImage: `url(\"${window.PUBLIC_URL}/icons/512x512.png\")`,\n            // backgroundRepeat: 'no-repeat',\n            // backgroundPosition: 'center',\n            // backgroundPositionY: '10px'\n\n          }}\n        >\n          <HelpContent />\n          <h2 className=\"Title__header\"><GiCog/></h2>\n          <button\n            style={{\n              margin: 'initial',\n            }}\n            className={`CharacterSelect__button btn btn-main`}\n            onClick={() => {\n              this.props.setActiveScreen(SCREENS.CHARACTER_SELECT)\n            }}\n          >\n            Defend Jacinto\n          </button>\n          <h2 className=\"Title__header\"><GiStarSkull /></h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;","import React from 'react';\nimport {\n  GiStarSkull,\n} from \"react-icons/gi\";\nimport { SCREENS } from './constants';\n\n\nclass Lose extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          className=\"Title__content\"\n          style={{\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: '#222',\n          }}\n        >\n          <h2 className=\"Title__header\">\n            <GiStarSkull />\n            <GiStarSkull />\n            <GiStarSkull />\n          </h2>\n          <button\n            style={{\n              margin: 'initial',\n            }}\n            className={`CharacterSelect__button btn btn-main`}\n            onClick={() => window.location.reload()}\n          >\n            Restart\n          </button>\n          <h2 className=\"Title__header\">\n            <GiStarSkull />\n            <GiStarSkull />\n            <GiStarSkull />\n          </h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Lose;","import React from 'react';\nimport {\n  GiCog,\n} from \"react-icons/gi\";\n\nclass Win extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          className=\"Title__content\"\n          style={{\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: '#3e7dc9',\n          }}\n        >\n          <h2 className=\"Title__header\">\n            <GiCog />\n            <GiCog />\n            <GiCog />\n          </h2>\n          <button\n            style={{\n              margin: 'initial',\n            }}\n            className={`CharacterSelect__button btn btn-main`}\n            onClick={() => window.location.reload()}\n          >\n            Victory\n          </button>\n          <h2 className=\"Title__header\">\n            <GiCog />\n            <GiCog />\n            <GiCog />\n          </h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Win;","import React from 'react';\nimport { SCREENS } from '../Screen/constants';\n\nconst CharacterSelect = (props) => {\n  return (\n    <div className='CharacterSelect'>\n      {\n        props.characters.map((character, index) => {\n          let color = '';\n          if (props.selectedCharacter) {\n            color = props.selectedCharacter.name === character.name ? 'red' : ''\n          }\n\n          return (\n            <button\n              key={index}\n              className={`CharacterSelect__button btn btn-main`}\n              onClick={() => {\n                props.setSelectedCharacter(character)\n                props.setActiveScreen(SCREENS.LEVEL)\n              }}\n            >\n              Play as {character.name}\n            </button>\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default CharacterSelect;","import React from 'react';\nimport {\n  GiCog,\n  GiStarSkull,\n} from \"react-icons/gi\";\nimport { SCREENS } from './constants';\nimport CharacterSelect from '../UI/CharacterSelect';\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          className=\"Title__content\"\n          style={{\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: '#07111Dff',\n          }}\n        >\n          <h2 className=\"Title__header\"><GiCog/></h2>\n          <CharacterSelect \n            characters={this.props.characters} \n            selectedCharacter={this.props.selectedCharacter} \n            setSelectedCharacter={this.props.setSelectedCharacter}\n            setActiveScreen={this.props.setActiveScreen}\n          />\n          <h2 className=\"Title__header\"><GiStarSkull /></h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;","import React from 'react';\nimport { SCREENS } from '../Screen/constants';\n\nconst ModeSelect = (props) => {\n  return (\n    <div className='CharacterSelect'>\n      {\n        props.modes.map((mode, index) => {\n          let color = '';\n          if (props.selectedMode) {\n            color = props.selectedMode.name === mode.name ? 'red' : ''\n          }\n\n          return (\n            <button\n              key={index}\n              style={{\n                position: 'relative',\n                top: '280px'\n              }}\n              className={`CharacterSelect__button btn btn-main`}\n              onClick={() => {\n                console.log(mode);\n                \n                props.setSelectedMode(mode)\n                props.setActiveScreen(SCREENS.CHARACTER_SELECT)\n              }}\n            >\n              {mode.name}\n            </button>\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default ModeSelect;","import Level from './Level';\nimport Title from './Title';\nimport Lose from './Lose';\nimport Win from './Win';\nimport CharacterSelect from './CharacterSelect';\nimport ModeSelect from './ModeSelect';\n\nexport default {\n  Level,\n  Title,\n  Win,\n  Lose,\n  CharacterSelect,\n  ModeSelect,\n}","import React from 'react';\nimport { SCREENS } from './constants';\nimport ModeSelect from '../UI/ModeSelect';\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          style={{\n\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: 'rgb(4, 49, 61)',\n            backgroundImage: `url(\"${window.PUBLIC_URL}/fire_man_blue.jpg\")`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundPositionY: '10px'\n\n          }}\n        >\n          <ModeSelect \n            modes={this.props.modes} \n            selectedMode={this.props.selectedMode} \n            setSelectedMode={this.props.setSelectedMode}\n            setActiveScreen={this.props.setActiveScreen}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;","import { Base } from './Base';\nexport class GoToPreviousKeymap extends Base {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.label = 'Close';\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    this.actor.goToPreviousKeymap();\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { PlaceActor } from './PlaceActor';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\nimport { TYPE } from '../items';\nimport { DIRECTIONS, ENERGY_THRESHOLD } from '../constants';\nimport { getPositionInDirection, getPointsWithinRadius } from '../../helper';\n\nexport class PrepareDirectionalThrow extends Base {\n  constructor({ \n    passThroughEnergyCost = ENERGY_THRESHOLD, \n    passThroughRequiredResources = [],\n    projectileType = TYPE.DIRECTIONAL_KUNAI,\n    ...args \n  }) {\n    super({ ...args });\n    this.passThroughEnergyCost = passThroughEnergyCost;\n    this.passThroughRequiredResources = passThroughRequiredResources;\n    this.projectileType = projectileType;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n\n    let projectile = this.actor.contains(this.projectileType);\n    if (!projectile) return {\n      success: false,\n      alternative: null,\n    };\n\n    projectile.game = this.game;\n    projectile.pos = {\n      x: this.actor.pos.x,\n      y: this.actor.pos.y,\n    };\n\n    const pos = this.actor.getPosition();\n    // tackle in 4 directions a sfar as the actor has energy\n    let cursor_positions = [];\n    [\n      DIRECTIONS.N,\n      DIRECTIONS.S,\n      DIRECTIONS.E,\n      DIRECTIONS.W,\n    ].forEach((direction, i) => {\n      Array(projectile.range + 1).fill('').forEach((none, distance) => {\n        if (distance > 0) {\n          const endPosition = getPositionInDirection(pos, direction.map((dir) => dir * (distance)))\n          cursor_positions.push(endPosition)\n          if (distance === projectile.range) {\n            const circlePositions = getPointsWithinRadius(endPosition, 3)\n            cursor_positions = cursor_positions.concat(circlePositions)\n          }\n        }\n      })\n    });\n\n    this.actor.activateCursor(cursor_positions)\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n      onAfter: () => this.actor.deactivateCursor(),\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n      \n      w: () => { \n        return new PlaceActor({\n          targetPos: {...projectile.pos},\n          actor: this.actor,\n          game: this.game,\n          entity: projectile,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'throw N',\n          onBefore: () => {\n            projectile.direction = DIRECTIONS.N;\n          },\n          onSuccess: () => {\n            this.actor.deactivateCursor()\n            this.actor.removeFromContainer(projectile);\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      d: () => { \n        return new PlaceActor({\n          targetPos: {...projectile.pos},\n          actor: this.actor,\n          game: this.game,\n          entity: projectile,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'throw E',\n          onBefore: () => {\n            projectile.direction = DIRECTIONS.E;\n          },\n          onSuccess: () => {\n            this.actor.deactivateCursor()\n            this.actor.removeFromContainer(projectile);\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      s: () => { \n        return new PlaceActor({\n          targetPos: {...projectile.pos},\n          actor: this.actor,\n          game: this.game,\n          entity: projectile,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'throw S',\n          onBefore: () => {\n            projectile.direction = DIRECTIONS.S;\n          },\n          onSuccess: () => {\n            this.actor.deactivateCursor()\n            this.actor.removeFromContainer(projectile);\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      a: () => { \n        return new PlaceActor({\n          targetPos: {...projectile.pos},\n          actor: this.actor,\n          game: this.game,\n          entity: projectile,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'throw W',\n          onBefore: () => {\n            projectile.direction = DIRECTIONS.W;\n          },\n          onSuccess: () => {\n            this.actor.deactivateCursor()\n            this.actor.removeFromContainer(projectile);\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n    };\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import * as _ from 'lodash';\nimport { Base } from './Base';\nimport * as Helper from '../../helper';\nimport {THEMES} from '../constants';\n\nexport class MoveRangedAttackCursor extends Base {\n  constructor({ direction, range, targetPos = null, availablePositions = [], ...args }) {\n    super({ ...args });\n    this.direction = direction;\n    this.range = range;\n    this.targetPos = targetPos;\n    this.availablePositions = availablePositions;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (!this.targetPos && !this.direction) {\n      return {success, alternative}\n    }\n    const initiatedFrom = this.actor.getPosition();\n    let targetPos = this.targetPos;\n    if (!this.targetPos) {\n      targetPos = Helper.getPositionInDirection(this.actor.getCursorPositions()[0], this.direction);\n    }\n    const path = Helper.calculateStraightPath(initiatedFrom, targetPos);\n    // const isInRange = this.range ? path.length <= this.range : true;\n    const isInRange = _.find(this.availablePositions, {x: targetPos.x, y: targetPos.y});\n    // const pathIsNotBlocked = path.reduce((acc, curr) => acc && this.game.rangedCursorCanOccupyPosition(curr), true);\n    // if (isInRange && pathIsNotBlocked && this.game.rangedCursorCanOccupyPosition(targetPos, this.actor)) {\n    if (isInRange) {\n      this.actor.moveCursorToPosition(targetPos);\n      success = true;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nexport class Reload extends Base {\n  constructor({ message, messageType = MESSAGE_TYPE.INFORMATION, ...args }) {\n    super({ ...args });\n    this.processDelay = 0;\n  }\n  perform() {\n    const success = this.actor.reload();\n    this.game.addMessage(`${this.actor.name} says \"RELOADING\"`, MESSAGE_TYPE.INFORMATION);\n    return {\n      success,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { Say } from './Say';\nimport { Reload } from './Reload';\nimport SOUNDS from '../sounds';\nimport * as Constant from '../constants';\nimport * as Helper from '../../helper';\n\nexport class MultiTargetRangedAttack extends Base {\n  constructor({ targetPositions, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPositions = targetPositions;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (!this.actor.entityTypes.includes('RANGED_ATTACKING')) {\n      return {\n        success: true,\n        alternative: new Say({\n          message: `Ooh I don\\'t know how to attack`,\n          game: this.game,\n          actor: this.actor,\n        }),\n      };\n    }\n    const weapons = this.actor.getEquipedWeapons();\n    if (weapons.length > 0) {\n      if (weapons[0].magazine <= 0) {\n        return {\n          success: true,\n          alternative: new Reload({\n            game: this.game,\n            actor: this.actor,\n            energyCost: Constant.ENERGY_THRESHOLD,\n          }),\n        };\n      }\n    }\n    let particlePath = [];\n    let particlePos = { x: this.actor.pos.x, y: this.actor.pos.y };\n    let renderer = this.particleTemplate.renderer;\n    this.targetPositions.forEach((targetPos) => {\n      let [attackSuccess, hit] = this.actor.rangedAttack(targetPos);\n      particlePath.push(targetPos);\n      if (attackSuccess) {\n        success = true;\n        if (!hit) {\n          SOUNDS.release_0.play();\n          success = true;\n          this.addParticle(\n            1,\n            { ...targetPos },\n            { x: 0, y: 0 },\n            Constant.PARTICLE_TEMPLATES.fail.renderer,\n          );\n        } else {\n          const sound = Helper.getRandomInArray([SOUNDS.chop_0, SOUNDS.chop_1]);\n          sound.play();\n          this.addParticle(\n            particlePath.length + 1,\n            particlePos,\n            null,\n            renderer,\n            Constant.PARTICLE_TYPE.path,\n            particlePath\n          );\n        }\n      }\n    });\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { MoveRangedAttackCursor } from './MoveRangedAttackCursor';\nimport { MultiTargetRangedAttack } from './MultiTargetRangedAttack';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\nimport { DIRECTIONS, ENERGY_THRESHOLD, THEMES, EQUIPMENT_TYPES } from '../constants';\nimport * as Helper from '../../helper';\nimport {find} from 'lodash';\n\nexport class PrepareRangedAttack extends Base {\n  constructor({ \n    passThroughEnergyCost = ENERGY_THRESHOLD, \n    passThroughRequiredResources = [], \n    ...args \n  }) {\n    super({ ...args });\n    this.passThroughEnergyCost = passThroughEnergyCost;\n    this.passThroughRequiredResources = passThroughRequiredResources;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n\n  updateCursors(pathAnimations, initiatedFrom) {\n    const cursorPositions = this.actor.getCursorPositions();\n    const path = Helper.calculateStraightPath(initiatedFrom, this.actor.getCursorPositions()[0]);\n    // removing visible path from last action\n    pathAnimations.forEach((anim) => {\n      this.game.display.removeAnimation(anim.id);\n    })\n    \n    // adding visible path to new cursor position\n    path.slice(1).forEach((pathPos) => {\n      if (!find(cursorPositions, {x: pathPos.x, y: pathPos.y})) {\n        const animation = this.game.display.addAnimation(this.game.display.animationTypes.BLINK_TILE, { x: pathPos.x, y: pathPos.y, color: THEMES.SOLARIZED.base3 })\n        pathAnimations.push(animation);\n      }\n    })\n\n    // modifying target curso color based on change to hit\n    cursorPositions.forEach((pos, i) => {\n      const chance = this.actor.getRangedAttackChance(pos);\n      if (chance <= 0) {\n        this.actor.updateCursoNode(i, [\n          {key: 'fill', value: 'transparent'}, \n          {key: 'stroke', value: 'white'}, \n        ]);\n      }\n      if (chance > 0 && chance <= 0.5) {\n        this.actor.updateCursoNode(i, [\n          {key: 'fill', value: THEMES.SOLARIZED.red}, \n          {key: 'stroke', value: 'transparent'}, \n        ]);\n      }\n      if (chance > 0.5 && chance <= 0.7) {\n        this.actor.updateCursoNode(i, [\n          {key: 'fill', value: THEMES.SOLARIZED.yellow}, \n          {key: 'stroke', value: 'transparent'}, \n        ]);\n      }\n      if (chance >= 0.7) {\n        this.actor.updateCursoNode(i, [\n          {key: 'fill', value: THEMES.SOLARIZED.green}, \n          {key: 'stroke', value: 'transparent'}, \n        ]);\n      }\n    })\n  }\n\n  perform() {\n    const pos = this.actor.getPosition();\n    const range = this.actor.getAttackRange();\n    const equippedWeapon = this.actor.getItemInSlot(EQUIPMENT_TYPES.HAND)\n\n    const pathAnimations = [];\n    const rangeAnims = []\n    const deactivateAnimations = (anims) => anims.forEach((anim) => {\n      this.game.display.removeAnimation(anim.id);\n    })\n\n    const positionsInRange = Helper.getPointsWithinRadius(pos, range).filter((pose) => (pose.x !== pos.x || pose.y !== pos.y));\n\n    let targets = [];\n    let targetIndex = 0;\n    positionsInRange.forEach((position) => {\n      // rangeAnims.push(this.game.display.addAnimation(1, {\n      //   x: position.x,\n      //   y: position.y,\n      //   color: THEMES.SOLARIZED.blue\n      // }))\n      let tile = this.game.map[Helper.coordsToString(position)];\n      if (tile) {\n        // const validTargets = Helper.getDestructableEntities(tile.entities);\n        const validTargets = tile.entities.filter((actor) => actor['faction'] === 'LOCUST');\n        let newTarget = validTargets.length ? validTargets[0] : null;\n        if (newTarget) {\n          targets.push(newTarget);\n        }\n      }\n    })\n\n    let positions = [];\n    if (targets.length) {\n      positions.push(targets[0].getPosition());\n      if (targets.length > 1) targetIndex = 1;\n    } else {\n      positions.push({...pos})\n    }\n\n    if (equippedWeapon) positions = equippedWeapon.getPositionsInShape(positions[0]);\n\n    this.actor.activateCursor(positions);\n    this.updateCursors(pathAnimations, pos);\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n      onAfter: () => {\n        this.actor.deactivateCursor()\n        deactivateAnimations(pathAnimations)\n        deactivateAnimations(rangeAnims)\n      },\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n      \n      e: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'Next Target',\n          targetPos: targets.length ? targets[targetIndex].getPosition() : null,\n          range,\n          availablePositions: positionsInRange,\n          onSuccess: () => {\n            targetIndex = (targetIndex + 1) % targets.length;\n            this.updateCursors(pathAnimations, pos);\n          },\n        })\n      },\n      q: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'Previous Target',\n          targetPos: targets.length ? targets[targetIndex].getPosition() : null,\n          range,\n          availablePositions: positionsInRange,\n          onSuccess: () => {\n            if (targetIndex === 0) {\n              targetIndex = targets.length - 1\n            } else {\n              targetIndex -= 1\n            }\n            this.updateCursors(pathAnimations, pos);\n          }\n        })\n      },\n      w: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move N',\n          direction: DIRECTIONS.N,\n          range,\n          availablePositions: positionsInRange,\n          onSuccess: () => {\n            this.updateCursors(pathAnimations, pos);\n          }\n        })\n      },\n      a: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move W',\n          direction: DIRECTIONS.W,\n          range,\n          availablePositions: positionsInRange,\n          onSuccess: () => {\n            this.updateCursors(pathAnimations, pos);\n          }\n        })\n      },\n      s: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move S',\n          direction: DIRECTIONS.S,\n          range,\n          availablePositions: positionsInRange,\n          onSuccess: () => {\n            this.updateCursors(pathAnimations, pos);\n          }\n        })\n      },\n      d: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move E',\n          direction: DIRECTIONS.E,\n          range,\n          availablePositions: positionsInRange,\n          onSuccess: () => {\n            this.updateCursors(pathAnimations, pos);\n          }\n        })\n      },\n      f: () => { \n        return new MultiTargetRangedAttack({\n          label: 'Fire',\n          targetPositions:  [...this.actor.getCursorPositions()],\n          game: this.game,\n          actor: this.actor,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            deactivateAnimations(pathAnimations);\n            deactivateAnimations(rangeAnims);\n            this.actor.setNextAction(goToPreviousKeymap);\n          }\n        })\n      },\n    };\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import { Base } from './Base';\nimport { EquipItemFromContainer } from './EquipItemFromContainer';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\n\n\nexport class OpenInventory extends Base {\n  constructor({ \n    ...args \n  }) {\n    super({ ...args });\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    this.game.visibleInventory = this.actor.container;\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n    };\n\n    this.actor.container.forEach((slot, index) => {\n      const item = slot.items[0];\n      keymap[index] = () => new EquipItemFromContainer({\n        item,\n        game: this.game,\n        actor: this.actor,\n        label: `Equip ${item.name}`,\n        energyCost: 0,\n        onSuccess: () => {\n          this.game.visibleInventory = null\n          this.actor.setNextAction(goToPreviousKeymap);\n        },\n      });\n    })\n\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import * as Helper from '../../helper';\nimport { Base } from './Base';\nimport SOUNDS from '../sounds';\n\nexport class Upgrade extends Base {\n  constructor({ upgrade, ...args }) {\n    super({ ...args });\n    this.upgrade = upgrade;\n    this.particleTemplate = {\n      renderer: {\n        sprite: '',\n        character: '^',\n        color: 'white',\n        background: '#3e7dc9',\n      }\n    };\n  }\n  perform() {\n    let success = false;\n    if (this.actor.upgrade(this.upgrade)) {\n      success = true;\n      let positions = Helper.getPointsOnCircumference(this.actor.pos.x, this.actor.pos.y, 5);\n      positions.forEach((pos) => {\n        this.addParticle(4, { ...pos }, {\n          x: -1 * Math.sign(pos.x - this.actor.pos.x),\n          y: -1 * Math.sign(pos.y - this.actor.pos.y)\n        });\n      });\n      SOUNDS.save.play();\n    }\n    return {\n      success,\n      alternative: null,\n    };\n  }\n}\n;\n","import {ActionResource} from './ActionResource';\n\nexport class UpgradeResource extends ActionResource {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.name = 'Upgrade Points';\n    this.actorResourcePath = 'upgrade_points';\n    this.renderer = { color: 'white', background: '#3e7dc9', character: '^', sprite: '' }\n  }\n}","import { Base } from './Base';\nimport { Say } from './Say';\nimport { Upgrade } from './Upgrade';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\nimport { UpgradeResource } from './ActionResources/UpgradeResource';\n\nexport class OpenUpgrades extends Base {\n  constructor({ \n    ...args \n  }) {\n    super({ ...args });\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n    };\n\n    this.actor.upgrade_tree.forEach((upgrade, index) => {\n      keymap[index] = () => new Upgrade({\n        // message: upgrade.name,\n        upgrade,\n        game: this.game,\n        actor: this.actor,\n        label: `${upgrade.name}`,\n        energyCost: 0,\n        requiredResources: [new UpgradeResource({getResourceCost: () => upgrade.cost })],\n        onSuccess: () => {\n          this.actor.setNextAction(goToPreviousKeymap);\n        },\n      });\n    })\n\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nimport * as Helper from '../../helper';\nimport SOUNDS from '../sounds';\n\nexport class PickupAllItems extends Base {\n  constructor({ ...args }) {\n    super({ ...args });\n  }\n  perform() {\n    let success = false;\n    const items = this.game.map[Helper.coordsToString(this.actor.pos)].entities.filter((e) => e.id !== this.actor.id);\n    if (items.length) {\n      // const item = Helper.getRandomInArray(items);\n      items.forEach((item) => {\n        this.game.addMessage(`${this.actor.name} picks up ${item.name}.`, MESSAGE_TYPE.ACTION);\n        this.actor.addToContainer(item);\n        let entities = this.game.map[Helper.coordsToString(this.actor.pos)].entities;\n        this.game.map[Helper.coordsToString(this.actor.pos)].entities = entities.filter((it) => it.id !== item.id);\n        success = true;\n      });\n      SOUNDS.grab_0.play();\n    }\n    return {\n      success,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport * as Helper from '../../helper'\n\nexport class AddStatusEffect extends Base {\n  constructor({ effect, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.effect = effect;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = this.game.engine.addStatusEffect(this.effect);\n    let positions = Helper.getPointsOnCircumference(this.actor.pos.x, this.actor.pos.y, 4);\n    positions.forEach((pos) => {\n      this.addParticle(3, { ...pos }, {\n        x: -1 * Math.sign(pos.x - this.actor.pos.x),\n        y: -1 * Math.sign(pos.y - this.actor.pos.y)\n      });\n    });\n    return {\n      success,\n      alternative: null,\n    };\n  }\n}\n;\n","export class Base {\n  constructor({ \n    game, \n    actor, \n    name = 'Effect', \n    lifespan = 100,\n    stepInterval = 100,\n    allowDuplicates = true,\n    onStart = () => null,\n    onStep = () => null,\n    onStop = () => null,\n    renderer = {background: 'green', color: 'white', character: '*'}\n  }) {\n    this.game = game\n    this.actor = actor\n    this.name = name\n    this.lifespan = lifespan\n    this.timeToLive = lifespan\n    this.stepInterval = stepInterval\n    this.allowDuplicates = allowDuplicates\n    this.timeSinceLastStep = 0;\n    this.onStart = onStart\n    this.onStep = onStep\n    this.onStop = onStop\n    this.renderer = renderer\n  }\n}","import {Base} from './Base';\n\nexport class MeleeDamage extends Base {\n  constructor({buffValue = 1, ...args}) {\n    super({ ...args });\n    this.name = 'Melee Damage';\n    this.allowDuplicates = false\n    this['actor_background'] = this.actor.renderer.background;\n    this['attackDamage'] = this.actor.attackDamage;\n    this.renderer = {\n      color: '#424242',\n      background: '#e6e6e6',\n      character: ''\n    };\n    this.onStart = () => {\n      this.actor.attackDamage += buffValue;\n    }\n    this.onStop = () => {\n      this.actor.attackDamage = this['attackDamage'];\n    }\n  }\n}","// import deps\nimport * as Constant from '../constants';\nimport { Player } from '../Entities/index';\nimport { ContainerSlot } from '../Entities/Containing';\nimport {Say} from '../Actions/Say';\nimport {Move} from '../Actions/Move';\nimport {PrepareDirectionalThrow} from '../Actions/PrepareDirectionalThrow';\nimport {PrepareRangedAttack} from '../Actions/PrepareRangedAttack';\nimport {OpenInventory} from '../Actions/OpenInventory';\nimport {OpenUpgrades} from '../Actions/OpenUpgrades';\nimport {Upgrade} from '../Entities/Upgradable';\nimport {PickupAllItems} from '../Actions/PickupAllItems';\nimport { Lancer } from '../Items/Weapons/Lancer';\nimport { Snub } from '../Items/Weapons/Snub';\nimport { Grenade } from '../Items/Weapons/Grenade';\nimport { Ammo } from '../Items/Pickups/Ammo';\nimport {COLORS} from '../Modes/Jacinto/theme';\nimport { Reload } from '../Actions/Reload';\nimport { AddStatusEffect } from '../Actions/AddStatusEffect';\nimport {MeleeDamage} from '../StatusEffects/MeleeDamage';\n\n\nexport default function (engine) {\n  const lancer = Lancer(engine);\n  // define keymap\n  const keymap = (engine, actor) => {\n    return {\n      Escape: () => new Say({\n        label: 'Pass',\n        message: 'pass turn...',\n        game: engine.game,\n        actor,\n        interrupt: true,\n        energyCost: 0,\n      }),\n      w: () => {\n        const direction = Constant.DIRECTIONS.N;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      s: () => {\n        const direction = Constant.DIRECTIONS.S;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      a: () => {\n        const direction = Constant.DIRECTIONS.W;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      d: () => {\n        const direction = Constant.DIRECTIONS.E;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      p: () => new Say({\n        label: 'Stay',\n        message: 'standing still...',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      f: () => new PrepareRangedAttack({\n        label: 'Fire Weapon',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n        passThroughRequiredResources: [],\n      }),\n      r: () => new Reload({\n        label: 'Reload',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      i: () => new OpenInventory({\n        label: 'Inventory',\n        game: engine.game,\n        actor,\n      }),\n      // o: () => new OpenEquipment({\n      //   label: 'Equipment',\n      //   game: engine.game,\n      //   actor,\n      // }),\n      u: () => new OpenUpgrades({\n        label: 'Upgrade',\n        game: engine.game,\n        actor,\n      }),\n      g: () => new PickupAllItems({\n        label: 'Pickup',\n        game: engine.game,\n        actor,\n      }),\n      t: () => new PrepareDirectionalThrow({\n        label: 'Grenade',\n        projectileType: 'Grenade',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      c: () => new AddStatusEffect({\n        label: 'Rev Lancer Chainsaw',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        effect: new MeleeDamage({\n          buffValue: 12,\n          game: engine.game,\n          actor: lancer, // should be weapon\n          lifespan: Constant.ENERGY_THRESHOLD * 3,\n          stepInterval: Constant.ENERGY_THRESHOLD,\n        }),\n        particleTemplate: {\n          renderer: {\n            color: '#424242',\n            background: '#e6e6e6',\n            character: ''\n          },\n        },\n      })\n    };\n  }\n  // instantiate class\n  \n  const durability = 10;\n  let actor = new Player({\n    pos: { x: 23, y: 7 },\n    renderer: {\n      sprite: '',\n      character: 'G',\n      color: COLORS.base3,\n      background: COLORS.cog2,\n    },\n    name: 'The Scout',\n    actions: [],\n    speed: Constant.ENERGY_THRESHOLD * 8,\n    durability,\n    attackDamage: 0,\n    baseRangedAccuracy: 0,\n    baseRangedDamage: 0,\n    upgrade_points: 0,\n    upgrade_tree: [\n      Upgrade({\n        cost: 1,\n        name: '+1 Health',\n        activate: (actor) => {\n          actor.durabilityMax += 1\n          actor.increaseDurability(1)\n        },\n      }),\n      Upgrade({\n        cost: 1,\n        name: '+10% Lancer Accuracy',\n        activate: (actor) => (lancer.baseRangedAccuracy += 0.1),\n      }),\n      Upgrade({\n        cost: 2,\n        name: '+1 Actions',\n        activate: (actor) => {\n          actor.speed += Constant.ENERGY_THRESHOLD;\n          actor.energy += Constant.ENERGY_THRESHOLD;\n        },\n        // removeOnActivate: true,\n      }),\n      Upgrade({\n        cost: 3,\n        name: 'Full Health',\n        canUpgrade: (actor) => actor.durability < actor.durabilityMax,\n        activate: (actor) => (actor.increaseDurability(actor.durabilityMax - actor.durability)),\n      }),\n    ],\n    equipment: Constant.EQUIPMENT_LAYOUTS.gear(),\n    game: engine.game,\n    presentingUI: true,\n    faction: 'COG',\n    initializeKeymap: keymap,\n  })\n\n  // add default items to container\n  const ammo = Array(30).fill('').map(() => Ammo(engine));\n  const grenades = Array(4).fill('').map(() => Grenade(engine, 6));\n  const snub = Snub(engine);\n  actor.container = [\n    new ContainerSlot({\n      itemType: snub.name,\n      items: [snub],\n    }),\n    new ContainerSlot({\n      itemType: ammo[0].name,\n      items: ammo,\n    }),\n    new ContainerSlot({\n      itemType: grenades[0].name,\n      items: grenades,\n    }),\n  ]\n\n  actor.equip(lancer.equipmentType, lancer);\n\n  return actor;\n}","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Lancer = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Lancer',\n  passable: true,\n  attackRange: 12,\n  magazineSize: 4,\n  baseRangedAccuracy: 0.85,\n  baseRangedDamage: 2,\n  attackDamage: 2,\n  pos,\n  // shapePattern: Constant.CLONE_PATTERNS.triple_point,\n  // shapePattern: Constant.CLONE_PATTERNS.bigSquare,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'L',\n    color: COLORS.base3,\n    background: COLORS.gray,\n  },\n});\n","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Snub = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Snub',\n  passable: true,\n  attackRange: 6,\n  magazineSize: 10,\n  baseRangedAccuracy: 0.7,\n  baseRangedDamage: 1,\n  attackDamage: 1,\n  pos,\n  // shapePattern: Constant.CLONE_PATTERNS.square,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'S',\n    color: COLORS.base3,\n    background: COLORS.base01,\n  },\n});\n","import { MoveMultiple } from './MoveMultiple';\nimport { Attack } from './Attack';\nimport {ENERGY_THRESHOLD} from '../constants';\n\nexport class Tackle extends MoveMultiple {\n  constructor({ direction, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.direction = direction;\n    this.stepCount = 0;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let alternative = null;\n    let newX = this.actor.pos.x + this.direction[0];\n    let newY = this.actor.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n\n    alternative = new Attack({\n      targetPos,\n      additionalDamage: this.stepCount,\n      game: this.game,\n      actor: this.actor,\n      energyCost: 0,\n    });\n\n    if (this.actor.energy > ENERGY_THRESHOLD) {\n      const shoveSuccess = this.actor.shove(targetPos, this.direction);\n      if (shoveSuccess) {\n        this.stepCount += 1;\n        alternative = this\n        for (let i = 0; i < 3; i++) {\n          this.addParticle(1, {\n            x: this.actor.pos.x - (this.direction[0] * i),\n            y: this.actor.pos.y - (this.direction[1] * i),\n          }, { x: 0, y: 0 });\n        }\n      }\n    }\n\n    return {\n      success: true,\n      alternative,\n    };\n  }\n};\n","import { Base } from './Base';\nimport { Attack } from \"./Attack\";\nimport * as Constant from '../constants';\n\nexport class MoveMultiple extends Base {\n  constructor({ direction, stepCount, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.direction = direction;\n    this.stepCount = stepCount;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let newX = this.actor.pos.x + this.direction[0];\n    let newY = this.actor.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n    if (this.stepCount > 0 && this.actor.move(targetPos)) {\n      this.stepCount -= 1;\n      this.actor.setNextAction(this);\n      success = true;\n    }\n    else {\n      success = true;\n      alternative = new Attack({\n        targetPos: targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { Tackle } from './Tackle';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\nimport { DIRECTIONS, ENERGY_THRESHOLD, PARTICLE_TEMPLATES } from '../constants';\nimport { getPositionInDirection } from '../../helper';\n\nexport class PrepareTackle extends Base {\n  constructor({ \n    passThroughEnergyCost = ENERGY_THRESHOLD, \n    passThroughRequiredResources = [], \n    ...args \n  }) {\n    super({ ...args });\n    this.passThroughEnergyCost = passThroughEnergyCost;\n    this.passThroughRequiredResources = passThroughRequiredResources;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n\n    const pos = this.actor.getPosition();\n    // tackle in 4 directions a sfar as the actor has energy\n    const cursor_positions = [];\n    [\n      DIRECTIONS.N,\n      DIRECTIONS.S,\n      DIRECTIONS.E,\n      DIRECTIONS.W,\n    ].forEach((direction, i) => {\n      Array(this.actor.energy / ENERGY_THRESHOLD).fill('').forEach((none, distance) => {\n        if (distance > 0) {\n          cursor_positions.push(\n            getPositionInDirection(pos, direction.map((dir) => dir * (distance)))\n          )\n        }\n      })\n    });\n    this.actor.activateCursor(cursor_positions)\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n      onAfter: () => this.actor.deactivateCursor(),\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n      \n      w: () => { \n        return new Tackle({\n          actor: this.actor,\n          game: this.game,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'tackle N',\n          direction: DIRECTIONS.N,\n          particleTemplate: PARTICLE_TEMPLATES.leaf,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      d: () => { \n        return new Tackle({\n          actor: this.actor,\n          game: this.game,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'tackle E',\n          direction: DIRECTIONS.E,\n          particleTemplate: PARTICLE_TEMPLATES.leaf,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      s: () => { \n        return new Tackle({\n          actor: this.actor,\n          game: this.game,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'tackle S',\n          direction: DIRECTIONS.S,\n          particleTemplate: PARTICLE_TEMPLATES.leaf,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      a: () => { \n        return new Tackle({\n          actor: this.actor,\n          game: this.game,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'tackle W',\n          direction: DIRECTIONS.W,\n          particleTemplate: PARTICLE_TEMPLATES.leaf,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n    };\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","// import deps\nimport * as Constant from '../constants';\nimport { Player } from '../Entities/index';\nimport { ContainerSlot } from '../Entities/Containing';\nimport {Say} from '../Actions/Say';\nimport {Move} from '../Actions/Move';\nimport {PrepareDirectionalThrow} from '../Actions/PrepareDirectionalThrow';\nimport {PrepareRangedAttack} from '../Actions/PrepareRangedAttack';\nimport {OpenInventory} from '../Actions/OpenInventory';\nimport {OpenUpgrades} from '../Actions/OpenUpgrades';\nimport {Upgrade} from '../Entities/Upgradable';\nimport {PickupAllItems} from '../Actions/PickupAllItems';\nimport { PrepareTackle } from '../Actions/PrepareTackle';\nimport { RetroLancer } from '../Items/Weapons/RetroLancer';\nimport { Boltok } from '../Items/Weapons/Boltok';\nimport { Snub } from '../Items/Weapons/Snub';\nimport { Grenade } from '../Items/Weapons/Grenade';\nimport { Ammo } from '../Items/Pickups/Ammo';\nimport {COLORS} from '../Modes/Jacinto/theme';\nimport { Reload } from '../Actions/Reload';\nimport { Gnasher } from '../Items/Weapons/Gnasher';\n\nexport default function (engine) {\n  // define keymap\n  const keymap = (engine, actor) => {\n    return {\n      Escape: () => new Say({\n        label: 'Pass',\n        message: 'pass turn...',\n        game: engine.game,\n        actor,\n        interrupt: true,\n        energyCost: 0,\n      }),\n      w: () => {\n        const direction = Constant.DIRECTIONS.N;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      s: () => {\n        const direction = Constant.DIRECTIONS.S;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      a: () => {\n        const direction = Constant.DIRECTIONS.W;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      d: () => {\n        const direction = Constant.DIRECTIONS.E;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      p: () => new Say({\n        label: 'Stay',\n        message: 'standing still...',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      f: () => new PrepareRangedAttack({\n        label: 'Fire Weapon',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n        passThroughRequiredResources: [],\n      }),\n      r: () => new Reload({\n        label: 'Reload',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      i: () => new OpenInventory({\n        label: 'Inventory',\n        game: engine.game,\n        actor,\n      }),\n      // o: () => new OpenEquipment({\n      //   label: 'Equipment',\n      //   game: engine.game,\n      //   actor,\n      // }),\n      u: () => new OpenUpgrades({\n        label: 'Upgrade',\n        game: engine.game,\n        actor,\n      }),\n      g: () => new PickupAllItems({\n        label: 'Pickup',\n        game: engine.game,\n        actor,\n      }),\n      t: () => new PrepareDirectionalThrow({\n        label: 'Grenade',\n        projectileType: 'Grenade',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      c: () => new PrepareTackle({\n        label: 'Bayonet Charge',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n      }),\n    };\n  }\n  // instantiate class\n  const primary = RetroLancer(engine);\n  const durability = 20;\n  let actor = new Player({\n    pos: { x: 23, y: 7 },\n    renderer: {\n      sprite: '',\n      character: 'G',\n      color: COLORS.base3,\n      background: COLORS.cog2,\n    },\n    name: 'The Veteran',\n    speed: Constant.ENERGY_THRESHOLD * 4,\n    durability,\n    baseRangedAccuracy: 0,\n    baseRangedDamage: 0,\n    attackDamage: 0,\n    upgrade_points: 0,\n    upgrade_tree: [\n      Upgrade({\n        cost: 1,\n        name: '+1 Health',\n        activate: (actor) => {\n          actor.durabilityMax += 1\n          actor.increaseDurability(1)\n        },\n      }),\n      Upgrade({\n        cost: 1,\n        name: '+2 Melee Damage',\n        activate: (actor) => (primary.attackDamage += 2),\n      }),\n      Upgrade({\n        cost: 3,\n        name: 'Full Health',\n        canUpgrade: (actor) => actor.durability < actor.durabilityMax,\n        activate: (actor) => (actor.increaseDurability(actor.durabilityMax - actor.durability)),\n      }),\n    ],\n    equipment: Constant.EQUIPMENT_LAYOUTS.gear(),\n    game: engine.game,\n    presentingUI: true,\n    faction: 'COG',\n    initializeKeymap: keymap,\n  })\n\n  // add default items to container\n  const ammo = Array(10).fill('').map(() => Ammo(engine));\n  const grenades = Array(2).fill('').map(() => Grenade(engine, 6));\n  const secondary = Gnasher(engine);\n  actor.container = [\n    new ContainerSlot({\n      itemType: secondary.name,\n      items: [secondary],\n    }),\n    new ContainerSlot({\n      itemType: ammo[0].name,\n      items: ammo,\n    }),\n    new ContainerSlot({\n      itemType: grenades[0].name,\n      items: grenades,\n    }),\n  ]\n\n  actor.equip(primary.equipmentType, primary);\n\n  return actor;\n}","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const RetroLancer = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Retro Lancer',\n  passable: true,\n  attackRange: 10,\n  magazineSize: 3,\n  baseRangedAccuracy: 0.7,\n  baseRangedDamage: 2,\n  attackDamage: 6,\n  pos,\n  // shapePattern: Constant.CLONE_PATTERNS.triple_point,\n  // shapePattern: Constant.CLONE_PATTERNS.bigSquare,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'R',\n    color: COLORS.base3,\n    background: COLORS.cog1,\n  },\n});\n","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Gnasher = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Gnasher',\n  passable: true,\n  attackRange: 4,\n  magazineSize: 2,\n  baseRangedAccuracy: 0.9,\n  baseRangedDamage: 3,\n  attackDamage: 0,\n  pos,\n  shapePattern: Constant.CLONE_PATTERNS.square,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'G',\n    color: COLORS.base03,\n    background: COLORS.green,\n  },\n});\n","// import deps\nimport * as Constant from '../constants';\nimport { UpgradeResource } from '../Actions/ActionResources/UpgradeResource';\nimport { Player } from '../Entities/index';\nimport { ContainerSlot } from '../Entities/Containing';\nimport {Say} from '../Actions/Say';\nimport {Move} from '../Actions/Move';\nimport {PrepareDirectionalThrow} from '../Actions/PrepareDirectionalThrow';\nimport {PrepareRangedAttack} from '../Actions/PrepareRangedAttack';\nimport {OpenInventory} from '../Actions/OpenInventory';\nimport {OpenUpgrades} from '../Actions/OpenUpgrades';\nimport {Upgrade} from '../Entities/Upgradable';\nimport {PickupAllItems} from '../Actions/PickupAllItems';\nimport { Longshot } from '../Items/Weapons/Longshot';\nimport { Boltok } from '../Items/Weapons/Boltok';\nimport { Grenade } from '../Items/Weapons/Grenade';\nimport { Ammo } from '../Items/Pickups/Ammo';\nimport {COLORS} from '../Modes/Jacinto/theme';\nimport { Reload } from '../Actions/Reload';\nimport { AddSprintStatusEffect } from '../Actions/AddSprintStatusEffect';\n\nexport default function (engine) {\n  // define keymap\n  const keymap = (engine, actor) => {\n    return {\n      Escape: () => new Say({\n        label: 'Pass',\n        message: 'pass turn...',\n        game: engine.game,\n        actor,\n        interrupt: true,\n        energyCost: 0,\n      }),\n      w: () => {\n        const direction = Constant.DIRECTIONS.N;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      s: () => {\n        const direction = Constant.DIRECTIONS.S;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      a: () => {\n        const direction = Constant.DIRECTIONS.W;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      d: () => {\n        const direction = Constant.DIRECTIONS.E;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      p: () => new Say({\n        label: 'Stay',\n        message: 'standing still...',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      f: () => new PrepareRangedAttack({\n        label: 'Fire Weapon',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n        passThroughRequiredResources: [],\n      }),\n      r: () => new Reload({\n        label: 'Reload',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      i: () => new OpenInventory({\n        label: 'Inventory',\n        game: engine.game,\n        actor,\n      }),\n      u: () => new OpenUpgrades({\n        label: 'Upgrade',\n        game: engine.game,\n        actor,\n      }),\n      g: () => new PickupAllItems({\n        label: 'Pickup',\n        game: engine.game,\n        actor,\n      }),\n      t: () => new PrepareDirectionalThrow({\n        label: 'Grenade',\n        projectileType: 'Grenade',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      // c: () => new AddSprintStatusEffect({\n      //   label: 'Sprint',\n      //   game: engine.game,\n      //   actor,\n      //   speedBuff: Constant.ENERGY_THRESHOLD * 10,\n      //   requiredResources: [\n      //     new UpgradeResource({ getResourceCost: () => 1 }),\n      //   ],\n      // }),\n    };\n  }\n  // instantiate class\n  const primary = Longshot(engine);\n  const secondary = Boltok(engine);\n  const durability = 12;\n  let actor = new Player({\n    pos: { x: 23, y: 7 },\n    renderer: {\n      sprite: '',\n      character: 'G',\n      color: COLORS.base3,\n      background: COLORS.cog2,\n    },\n    name: 'The Stranded',\n    speed: Constant.ENERGY_THRESHOLD * 6,\n    durability,\n    baseRangedAccuracy: 0,\n    baseRangedDamage: 0,\n    attackDamage: 0,\n    upgrade_points: 0,\n    upgrade_tree: [\n      Upgrade({\n        cost: 1,\n        name: '+1 Health',\n        activate: (actor) => {\n          actor.durabilityMax += 1\n          actor.increaseDurability(1)\n        },\n      }),\n      Upgrade({\n        cost: 1,\n        name: '+5% Longshot Accuracy',\n        activate: (actor) => (primary.baseRangedAccuracy += 0.05),\n      }),\n      Upgrade({\n        cost: 1,\n        name: '+5% Boltok Accuracy',\n        activate: (actor) => (secondary.baseRangedAccuracy += 0.05),\n      }),\n      Upgrade({\n        cost: 1,\n        name: 'Craft 3 Grenades',\n        activate: (actor) => {\n          Array(3).fill('').map(() => actor.addToContainer(Grenade(engine, 6)));\n        },\n      }),\n      Upgrade({\n        cost: 3,\n        name: 'Full Health',\n        canUpgrade: (actor) => actor.durability < actor.durabilityMax,\n        activate: (actor) => (actor.increaseDurability(actor.durabilityMax - actor.durability)),\n      }),\n    ],\n    equipment: Constant.EQUIPMENT_LAYOUTS.gear(),\n    game: engine.game,\n    presentingUI: true,\n    faction: 'COG',\n    initializeKeymap: keymap,\n  })\n\n  // add default items to container\n  const ammo = Array(20).fill('').map(() => Ammo(engine));\n  const grenades = Array(2).fill('').map(() => Grenade(engine, 6));\n  actor.container = [\n    new ContainerSlot({\n      itemType: secondary.name,\n      items: [secondary],\n    }),\n    new ContainerSlot({\n      itemType: ammo[0].name,\n      items: ammo,\n    }),\n    new ContainerSlot({\n      itemType: grenades[0].name,\n      items: grenades,\n    }),\n  ]\n\n  actor.equip(primary.equipmentType, primary);\n\n  return actor;\n}","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Longshot = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Longshot',\n  passable: true,\n  attackRange: 20,\n  magazineSize: 1,\n  baseRangedAccuracy: 1,\n  baseRangedDamage: 10,\n  attackDamage: 0,\n  pos,\n  // shapePattern: Constant.CLONE_PATTERNS.triple_point,\n  // shapePattern: Constant.CLONE_PATTERNS.bigSquare,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'L',\n    color: COLORS.base1,\n    background: COLORS.base04,\n  },\n});\n","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Boltok = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Boltok',\n  passable: true,\n  attackRange: 4,\n  magazineSize: 2,\n  baseRangedAccuracy: 0.8,\n  baseRangedDamage: 3,\n  attackDamage: 1,\n  pos,\n  // shapePattern: Constant.CLONE_PATTERNS.square,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'B',\n    color: COLORS.base3,\n    background: COLORS.locust0,\n  },\n});\n","import The_Scout from './GearLight';\nimport The_Veteran from './GearHeavy';\nimport The_Stranded from './GearStranded';\n\nlet Characters = () => {\n  return {\n    The_Scout,\n    The_Veteran,\n    The_Stranded,\n  }\n}\n\nexport default Characters;","import React from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport { SCREENS } from './Screen/constants';\nimport Screens from './Screen/index';\nimport Characters from './Characters/index';\nimport Modes from './Modes/index';\nimport SOUNDS from './sounds';\n\nclass Nystrum extends React.Component {\n  constructor() {\n    super();\n    let characterKey = Characters();\n    let characters = Object.keys(characterKey).map((key, i) => {\n      return {\n        initialize: characterKey[key],\n        selected: false,\n        name: key.split('_').join(' '),\n      }\n    });\n\n    let modes = Object.keys(Modes).map((key, i) => {\n      return {\n        class: Modes[key],\n        selected: false,\n        name: key.split('_').join(' '),\n      }\n    });\n\n    this.state = {\n      activeScreen: SCREENS.TITLE,\n      characters,\n      modes,\n      selectedCharacter: null,\n      selectedMode: modes[0],\n    };\n  }\n\n  setActiveScreen (activeScreen) {\n    if (activeScreen === SCREENS.TITLE) {\n      Object.keys(SOUNDS).forEach(key => {\n        SOUNDS[key].stop();\n      });\n    }\n    this.setState({activeScreen})\n  }\n\n  setSelectedCharacter (character) {\n    this.setState({selectedCharacter: {...character}})\n  }\n\n  setSelectedMode (mode) {\n    this.setState({selectedMode: mode})\n  }\n\n  getActiveScreen () {\n    const characterScreen = <Screens.CharacterSelect \n      key={SCREENS.CHARACTER_SELECT} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n      />\n      const titleScreen = <Screens.Title \n      key={SCREENS.TITLE} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n    />\n    const loseScreen = <Screens.Lose \n      key={SCREENS.LOSE} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n    />\n    const winScreen = <Screens.Win \n      key={SCREENS.WIN} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n    />\n    const levelScreen = <Screens.Level \n      key={SCREENS.LEVEL} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      selectedMode={this.state.selectedMode}\n    />\n\n    switch (this.state.activeScreen) {\n      case SCREENS.CHARACTER_SELECT:\n        return characterScreen\n      case SCREENS.TITLE:\n        return titleScreen\n      case SCREENS.LOSE:\n        return loseScreen\n      case SCREENS.WIN:\n        return winScreen\n      case SCREENS.LEVEL:\n        return levelScreen\n      default:\n        return titleScreen\n    }\n  }\n\n  render() {\n    const activeScreen = this.getActiveScreen();\n    return (\n      <div className=\"Nystrum\">\n        <ReactCSSTransitionGroup\n          transitionName=\"fade\"\n          transitionAppear={true}\n          transitionEnter={true}\n          transitionLeave={true}\n          transitionAppearTimeout={500}\n          transitionEnterTimeout={500}\n          transitionLeaveTimeout={300}\n        >\n          { activeScreen }\n        </ReactCSSTransitionGroup>\n      </div>\n    );\n  }\n}\n\nexport default Nystrum;\n","import React from 'react';\nimport './App.css';\nimport Nystrum from './nystrum/Nystrum';\n\nfunction App() {\n  return (\n    <div className=\"App container-fluid\">\n      <Nystrum />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}