{"version":3,"sources":["nystrum/Screen/constants.js","helper.js","nystrum/Entities/Entity.js","nystrum/constants.js","nystrum/Actions/ActionResources/ActionResource.js","nystrum/Actions/ActionResources/EnergyResource.js","nystrum/Actions/Base.js","nystrum/Actions/DestroySelf.js","nystrum/Actions/EngineCrank.js","nystrum/Entities/Parent.js","nystrum/Display/konvaCustom.js","nystrum/Entities/HasTargetingCursor.js","nystrum/message.js","nystrum/Entities/Attacking.js","nystrum/Maps/helper.js","nystrum/Entities/RangedAttacking.js","nystrum/Entities/Equipable.js","nystrum/Entities/Acting.js","nystrum/Entities/Rendering.js","nystrum/Entities/Containing.js","nystrum/sounds.js","nystrum/Entities/Equiping.js","nystrum/Entities/Playing.js","nystrum/Entities/helper.js","nystrum/Actions/Say.js","nystrum/Actions/Attack.js","nystrum/Actions/MoveOrAttack.js","nystrum/Actions/ThrowProjectile.js","nystrum/Actions/SelfDestructiveAttack.js","nystrum/Actions/ProjectileMove.js","nystrum/Entities/DirectionalProjecting.js","nystrum/Actions/Shove.js","nystrum/Actions/ThrowProjectileGas.js","nystrum/Entities/Chasing.js","nystrum/Actions/PlaceActor.js","nystrum/Entities/Draggable.js","nystrum/Entities/Pushable.js","nystrum/items.js","nystrum/Entities/Destructable.js","nystrum/Entities/Burnable.js","nystrum/Entities/Exploding.js","nystrum/Entities/HasKeymap.js","nystrum/Entities/Upgradable.js","nystrum/Entities/HasFaction.js","nystrum/Entities/UsesCover.js","nystrum/Entities/AI/Behaviors/Behavior.js","nystrum/Entities/index.js","nystrum/Entities/UI.js","nystrum/Entities/Speaking.js","nystrum/Entities/Helpless.js","nystrum/Entities/Covering.js","nystrum/Entities/DirectionalPushing.js","nystrum/Entities/AI/CyclesBehaviors.js","nystrum/Entities/RangedChasing.js","nystrum/Entities/PresentingUI.js","nystrum/Entities/Dragging.js","nystrum/Entities/Charging.js","nystrum/Entities/Signing.js","nystrum/Entities/Cloning.js","nystrum/Entities/HasShapePattern.js","nystrum/Entities/DestructiveProjecting.js","nystrum/Entities/GaseousDestructiveProjecting.js","nystrum/Entities/Gaseous.js","nystrum/Entities/Spreading.js","nystrum/Entities/Spawning.js","nystrum/Entities/IsParticle.js","nystrum/Engine/engine.js","nystrum/Maps/generator.js","nystrum/Modes/Jacinto/theme.js","nystrum/Maps/coverGenerator.js","nystrum/Modes/default.js","nystrum/Items/Pickups/Ammo.js","nystrum/Items/Weapons/Grenade.js","nystrum/Actions/MultiTargetAttack.js","nystrum/Entities/AI/Behaviors/ExecuteAttack.js","nystrum/Actions/Move.js","nystrum/Entities/AI/Behaviors/MoveTowardsCover.js","nystrum/Entities/AI/Behaviors/MoveTowardsEnemy.js","nystrum/Entities/AI/Behaviors/TelegraphAttack.js","nystrum/Entities/AI/Behaviors/TelegraphRangedAttack.js","nystrum/Entities/AI/Behaviors/Wait.js","nystrum/Items/Weapons/Gnasher.js","nystrum/Items/Weapons/HammerBurst.js","nystrum/Modes/Jacinto/Actors/Grubs.js","nystrum/Modes/Jacinto/jacinto.js","nystrum/Modes/index.js","nystrum/game.js","nystrum/UI/Instructions.js","nystrum/UI/Button.js","nystrum/UI/Information.js","nystrum/UI/Tooltip.js","nystrum/UI/ActionBar.js","nystrum/UI/Entity/CharacterCard.js","nystrum/UI/Entity/PlayerInformation.js","nystrum/UI/Inventory.js","nystrum/UI/Messages.js","nystrum/UI/InfoBlocks.js","nystrum/Actions/EquipItemFromContainer.js","nystrum/UI/Jacinto/Equipment.js","nystrum/UI/Jacinto/HelpContent.js","nystrum/UI/Jacinto/Help.js","nystrum/Screen/Level.js","nystrum/Screen/Title.js","nystrum/Screen/Lose.js","nystrum/Screen/Win.js","nystrum/UI/CharacterSelect.js","nystrum/Screen/CharacterSelect.js","nystrum/UI/ModeSelect.js","nystrum/Screen/index.js","nystrum/Screen/ModeSelect.js","nystrum/Actions/GoToPreviousKeymap.js","nystrum/Actions/PrepareDirectionalThrow.js","nystrum/Actions/MoveRangedAttackCursor.js","nystrum/Actions/Reload.js","nystrum/Actions/MultiTargetRangedAttack.js","nystrum/Actions/PrepareRangedAttack.js","nystrum/Actions/OpenInventory.js","nystrum/Actions/Upgrade.js","nystrum/Actions/ActionResources/UpgradeResource.js","nystrum/Actions/OpenUpgrades.js","nystrum/Actions/PickupAllItems.js","nystrum/Actions/AddStatusEffect.js","nystrum/StatusEffects/Base.js","nystrum/StatusEffects/MeleeDamage.js","nystrum/Characters/GearLight.js","nystrum/Items/Weapons/Lancer.js","nystrum/Items/Weapons/Snub.js","nystrum/Actions/Tackle.js","nystrum/Actions/MoveMultiple.js","nystrum/Actions/PrepareTackle.js","nystrum/Characters/GearHeavy.js","nystrum/Items/Weapons/RetroLancer.js","nystrum/Characters/GearStranded.js","nystrum/Items/Weapons/Longshot.js","nystrum/Items/Weapons/Boltok.js","nystrum/Characters/index.js","nystrum/Nystrum.js","App.js","serviceWorker.js","index.js"],"names":["SCREENS","delay","timeDelayed","Promise","resolve","setTimeout","clamp","value","min","max","Math","getRandomInArray","array","floor","random","length","getRandomIntInclusive","ceil","coordsAreEqual","pos_one","pos_two","x","y","coordsToString","coords","isTilePassable","game","tile","map","tileKey","type","passable","isTileAndEntitiesPassable","sourceEntityPos","tileIsPassable","entities","entitiesArePassable","every","entity","calculatePath","targetPos","currentPos","topology","isPassable","isPassableCallback","astar","ROT","AStar","path","compute","push","slice","calculatePathAroundObstacles","gameObject","calculateStraightPath","p0","p1","points","N","diagonal_distance","step","t","round_point","lerp_point","dx","dy","abs","p","round","lerp","start","end","getPositionInDirection","pos","direction","calculatePathWithRange","range","getRandomPos","keys","Object","key","split","coordinates","parseInt","text","getDestructableEntities","entites","filter","hasOwnProperty","getGranularity","radius","pow","getPointsOnCircumference","centerX","centerY","r","n","list","i","cos","PI","sin","getPointsWithinRadius","position","positions","yspan","acos","getPositionsFromStructure","structure","initialPosition","slot","x_offset","y_offset","Entity","name","id","uuid","this","entityTypes","active","COLORS","THEMES","base03","base02","base01","base00","base0","base1","base2","base3","yellow","orange","red","magenta","violet","blue","cyan","green","TILE_KEY","background","foreground","character","sprite","animation","DIRECTIONS","NE","W","NW","SW","S","SE","E","NONE","EQUIPMENT_TYPES","EQUIPMENT_LAYOUTS","item","CLONE_PATTERNS","point","taken","triple_point","spread","verticalLine","smallSquare","square","clover","filledClover","bigSquare","circle","Helper","PARTICLE_TEMPLATES","default","renderer","color","fail","succede","damage","leaf","water","PARTICLE_TYPE","ActionResource","getResourceCost","actorResourcePath","actorResourceGetter","actorResourceSetter","EnergyResource","args","Base","actor","label","hidden","energyCost","processDelay","particles","particleTemplate","Constant","onBefore","onAfter","onSuccess","onFailure","interrupt","requiredResources","life","particle","Particle","energy","setNextAction","_","resource","actorVariable","canPay","listPayableResources","resourceCost","success","alternative","DestroySelf","destroy","EngineCrank","engine","console","log","Parent","superclass","children","CrankEngine","concat","isInitialized","child","e","actors","draw","includes","forEach","destroyChild","canAttack","bind","placeActorOnMap","addActor","initialize","ANIMATION_TYPES","DEFAULT","BLINK_TILE","SOLID_TILE","BLINK_BOX","Animation","display","lifeTime","node","frame","timeDiff","getActive","removeAnimation","ExampleAnimation","BlinkTile","lerpDirection","rectAttributes","attrs","tileWidth","tileOffset","tileGutter","tileHeight","offsetX","offsetY","width","height","fill","transformsEnabled","perfectDrawEnabled","listening","shadowForStrokeEnabled","rect","Konva","Rect","animationLayer","add","opacity","BlinkBox","stroke","strokeWidth","Display","containerId","stage","layer","animations","animationLoop","animationTypes","document","d","getElementById","displayContainer","createElement","appendChild","Stage","container","Layer","hitGraphEnabled","update","isRunning","stop","display_element","offsetWidth","mapWidth","mapHeight","anim","Group","strokeEnabled","Text","fontSize","fontFamily","align","verticalAlign","batchDraw","HasTargetingCursor","cursorIsActive","cursorPositions","setCursorPositions","setCursorIsActive","resetAnimations","removeAnimations","getCursorPositions","newAnimation","addAnimation","addAnimations","currentPositions","xDelta","yDelta","newPositons","distance","index","arg","MESSAGE_TYPE","INFORMATION","backgroundColor","ACTION","DANGER","STATUS_EFFECT","ERROR","Message","Attacking","attackDamage","additional","targets","target","getAttackDamage","equipment","addMessage","decreaseDurability","addTileZone","origin","j","addTileToMap","tileType","numberOfAnimationFrames","tileData","currentFrame","tileHasTag","tag","getTileFromMap","RangedAttacking","attackRange","baseRangedAccuracy","baseRangedDamage","magazineSize","magazine","weaponAccuracy","getRangedWeaponAccuracy","coverDebuff","getRangedAttackCoverDebuff","distanceDebuff","getRangedAttackDistanceDebuff","result","getPosition","reduce","acc","curr","MapHelper","entitiesProvidingCover","coverModifer","getCoveredByIds","accuracyModifer","getAttackRange","accuracy","getRangedAttackChance","getRangedWeaponDamage","getRangedAttackDamage","getEquipedWeapons","weapon","reloaded","amount","ammo","contains","removeFromContainer","additionalDamage","additionalAccuracy","hit","attackChance","hitChance","useAmmo","canRangedAttack","Equipable","equipmentType","Acting","actions","speed","action","Rendering","canOccupyPosition","targetTile","pushable","newPos","move","ContainerSlot","itemType","items","Containing","slots","findIndex","createSlot","it","splice","fire_0","Howl","src","window","PUBLIC_URL","volume","loop","fire_1","scream_0","scream_1","scream_2","water_0","water_1","chop_0","chop_1","equip_0","equip_1","explosion_0","save","lose","grab_0","release_0","Equiping","itemName","slotName","find","foundSlot","SOUNDS","play","Playing","keymap","nextAction","destroyEntity","removeStatusEffectByActorId","Say","message","messageType","Attack","attack","addParticle","MoveOrAttack","ThrowProjectile","move_result","shift","SelfDestructiveAttack","damageToSelf","decreaseDurabilityWithoutDefense","ProjectileMove","DirectionalProjecting","setActorToPrevious","Shove","shove","ThrowProjectileGas","Chasing","targetEntity","PlaceActor","forcePlacement","addActorAsNext","Draggable","draggable","Pushable","TYPE","Destructable","durability","defense","onDestroy","durabilityMax","actorSprite","actorCharacter","getDefense","current","newDurability","updateActorRenderer","Burnable","canBurn","willResetCanBurn","Exploding","flammability","explosivity","Array","FireSpread","timeToSpread","spreadCount","fire","explode","enflame","HasKeymap","initializeKeymap","keymapStack","addKeymap","newKeymap","unshift","ignoredKeys","getKeymap","removeKeymap","Upgrade","activate","canUpgrade","cost","removeOnActivate","HasFaction","faction","enemyFactions","UsesCover","coverAnimations","showCoverAnimations","coveredBy","coverEntities","covers","tiles","newTile","Boolean","coverAnimated","isProvidingCover","removeCoverAnimations","removeCoveredBy","setCoverAnimations","Behavior","repeat","repeated","constructActionClassAndParams","actionClass","actionParams","getDefaultActionParams","CoverWall","pipe","initiatedBy","messages","saved","damageModifer","providesCover","JacintoAI","behaviors","behavior","activeBehaviorIndex","selectedBehavior","isValid","shouldRepeat","nexIndex","nextBehaviorIndex","setBehaviorIndex","setNextBehaviorIndex","killLoopAt","shouldCycleToNextBehavior","reset","selectNextBehavior","getAction","getDefaultAction","Player","getProjectile","pathToCheck","inPath","throwDirection","sign","projectile","createPath","targetInPath","movePath","presentingUI","draggedEntity","lastPos","moveSuccess","drag","charge","chargeMax","signHistory","cloneLimit","clones","clone","c","super__destroy","cloneArgs","cloneDeep","reinitializeKeymap","destroyClone","attribute","upgrade_points","upgrade_tree","upgrade","newTree","currUpgrade","RangedWeapon","shapePattern","Ammo","Grenade","owner_id","isClone","cloneCount","clonePattern","offset","cloneDeepWith","referencePos","timeToSpreadMax","spreadCountMax","adjacentPositions","adjacentPos","kill","tileExists","notBurnt","EmergenceHole","getSpawnedEntity","nextPos","getNextPos","Engine","statusEffects","currentActor","gainEnergy","hasEnoughEnergy","perform","getFirstPlayer","acting","timePassed","getEnergyCost","canPayRequiredResources","payRequiredResources","processActionFX","shouldAutoRun","processStatusEffects","sortActorsByEnergy","processV2","setVisibleKeymap","updateMode","updateReact","visibleKeymap","sort","a","b","newEffect","allowDuplicates","effect","onStart","onStop","actorId","lifespan","timeToLive","timeSinceLastStep","stepInterval","onStep","removeDeadStatusEffects","actionSuccess","removeActorFromMap","removeDeadParticles","process","mode","addCorridors","floorPlan","unitSize","relativeCornerCoords","currentUnit","currentUnitPosition","getUnitPosition","currentUnitRelativeCornerCoord","getNeighboringUnitsFromFloorPlan","neigbor","nextUnitPosition","nextUnitRelativeCornerCoord","digCorridor","neighbors","getNeighboringPoints","unit","corridorDirection","corridorPosition","hasDoor","tileIsWall","createFloorPlan","createRoomInFloorPlan","newUnit","getNeighboringUnit","unitAlreadyExists","unitExists","pnt","existingUnits","floorPlanPos","mapOffsetX","mapOffsetY","eightWay","createUnit","size","border","newPosition","tags","STAT_RENDERERS","SHAPES","horizontalLine","southEastVerticalL","southWestVerticalL","northWestVerticalL","northEastVerticalL","southEastHorizontalL","southWestHorizontalL","northEastHorizontalL","northWestHorizontalL","shapeChanceTable","generate","shape","box","generateCoverBlock","generateRandom","Mode","data","infoBlocks","progressBars","merge","AmmoEntity","GrenadeEntity","MultiTargetAttack","targetPositions","particlePath","particlePos","attackSuccess","ExecuteAttack","Move","MoveTowardsCover","targetCover","isCovered","currentClosest","getCoverEntities","getDistanceToTarget","cover","moveToPosition","findClosestCover","MoveTowardsEnemy","currentClosestEnemy","getEnemies","enemy","findClosestEnemy","TelegraphAttack","attackPattern","getTargetPosition","activateCursor","updateAllCursorNodes","TelegraphRangedAttack","accuracyToAttackThreshold","findClosestEnemyInRange","distanceToEnemy","equippedWeapon","getEquippedWeapon","targetPosition","getPositionsInShape","Wait","Gnasher","HammerBurst","addWretch","addGrubToMapWithStats","GRUB_STATS","wretch","addDrone","drone","addHunter","hunter","addScion","scion","addSkorge","addRandomGrub","addEntityToMapWithStatsUsingCreator","createRandomBasicGrub","addRandomBasicGrubToMap","Behaviors","loadout","equipmentCreators","inventoryCreators","creator","skorge","createBaseGrubStats","chance","addAmmoLoot","addGrenadeLoot","createStats","createNewJacintoAIEntity","params","entityParams","createInventorySlot","equipmentPiece","equip","equipAndFillInventory","stats","createGrubWithStats","entityCreator","require","Jacinto","createVerticalRoadGoingNorthAndSouth","createVerticalRoad","createVerticalRoadGoingNorth","fromY","createVerticalRoadGoingSouth","level","highestLevel","turnCount","dataByLevel","enemies","emergenceHoles","ammoLoot","grenadeLoot","numberOfVerticalRoads","numberOfBuildings","mainRoadY","createHorizontalRoad","generateRoad","groundTiles","getEmptyGroundTileKeys","posXY","coord","unitCount","unitPosition","didCreate","generateBuilding","createEmptyLevel","initializeMapTiles","setWaveData","createCityBlockLevel","floorTiles","placePlayersInSafeZone","player","getEmptyTileKeys","addEmerenceHole","numberOfCoverStructures","coverEligibleTiles","CoverGenerator","enemyName","LocustActors","createOrUpdateInfoBlock","resetCoverAnimations","checkCoverAnimations","updateUI","hasWon","toWin","hasLost","toLose","initializeGameData","levelComplete","nextLevel","setLevel","nextLevelData","playerOnExit","playerIsOnExit","enemiesDefeated","activateExitTiles","players","getPlayers","spawnPosition","createAmmoStack","Game","entityMap","entityDictionary","mapInitialized","tileMap","cameraWidth","cameraHeight","getSelectedCharacter","spriteMode","Flume","MAP_WIDTH","MAP_HEIGHT","placed","randomlyPlaceActorOnMap","ac","digger","Arena","freeCells","create","hasImpassableEntity","fullMap","referencePosition","renderWidth","renderHeight","fullWidth","fullHeight","renderPaddingX","renderPaddingY","parts","finalX","finalY","callback","getRenderMap","getPlayerPosition","tileRenderer","nextFrame","animateTile","renderedEntities","animateEntity","processTileMap","createTile","updateTile","getRenderer","getEntityRenderer","getTileRenderer","isPlaced","placeActorsOnMap","presserRef","show","focus","selectedCharacter","initializeMode","initializeUI","handleKeyPress","event","code","setAsNextAction","Instructions","infoHeader","props","className","onClick","location","reload","toggleSpriteMode","data-target","React","Component","Button","Tooltip","title","ResourceBlock","superScript","style","borderColor","ActionBar","entries","reqs","refocus","req","numBlocks","Portrait","StatusEffect","StatusEffects","getStatusEffectsByActorId","NamePlate","ProgressBar","colorFilled","colorEmpty","attributePathMax","attributePath","valueMax","valueCurrent","blip","CharacterCard","PlayerInformation","Messages","InfoBlocks","EquipItemFromContainer","itemInSlot","getItemInSlot","addToContainer","unequip","StatBlock","stat","getIcon","EquipmentCard","equipped","needsReload","equipable","meleeDamage","Equipment","HelpContent","Help","useLayoutEffect","elems","querySelectorAll","M","Modal","init","href","Level","ENGINE","selectedMode","class","state","activeTab","createRef","setActiveScreen","newGameState","setState","ref","onKeyDown","tabIndex","reverse","Title","margin","Lose","Win","CharacterSelect","characters","setSelectedCharacter","ModeSelect","modes","top","setSelectedMode","backgroundImage","backgroundRepeat","backgroundPosition","backgroundPositionY","GoToPreviousKeymap","goToPreviousKeymap","PrepareDirectionalThrow","passThroughEnergyCost","passThroughRequiredResources","projectileType","cursor_positions","none","endPosition","dir","circlePositions","deactivateCursor","Escape","w","s","setKeymap","MoveRangedAttackCursor","availablePositions","initiatedFrom","isInRange","moveCursorToPosition","Reload","MultiTargetRangedAttack","weapons","rangedAttack","PrepareRangedAttack","pathAnimations","pathPos","updateCursorNode","rangeAnims","deactivateAnimations","anims","positionsInRange","targetIndex","validTargets","newTarget","updateCursors","q","f","OpenInventory","visibleInventory","UpgradeResource","OpenUpgrades","PickupAllItems","AddStatusEffect","addStatusEffect","MeleeDamage","buffValue","lancer","Lancer","increaseDurability","newX","newY","u","g","grenades","snub","Snub","Tackle","stepCount","PrepareTackle","primary","RetroLancer","secondary","Longshot","Boltok","Characters","The_Scout","The_Veteran","The_Stranded","Nystrum","characterKey","selected","join","Modes","activeScreen","characterScreen","Screen","titleScreen","loseScreen","winScreen","levelScreen","getActiveScreen","transitionName","transitionAppear","transitionEnter","transitionLeave","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","App","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8a5fef88.chunk.js","sourcesContent":["export const SCREENS = {\n  TITLE: 'Title',\n  LEVEL: 'Level',\n  LOSE: 'Lose',\n  WIN: 'Win',\n  CHARACTER_SELECT: 'CharacterSelect',\n  MODE_SELECT: 'ModeSelect',\n}","import * as ROT from 'rot-js';\n\nexport const delay = (timeDelayed = 100) => {\n  // return;\n  if (timeDelayed <= 0) return;\n  return new Promise(resolve => setTimeout(resolve, timeDelayed));\n}\n\nexport const clamp = (value, min, max) => {\n  return Math.min(Math.max(value, min), max);\n};\n\nexport const getRandomInArray = (array) => {\n  return array[Math.floor(Math.random() * array.length)];\n}\n\nexport const getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nexport const getRandomIntInclusive = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport const coordsAreEqual = (pos_one, pos_two) => pos_one.x === pos_two.x && pos_one.y === pos_two.y\n\nexport const coordsToString = (coords) => `${coords.x},${coords.y}`\n\nconst isTilePassable = (game) => (x, y) => {\n  const tile = game.map[x + \",\" + y];\n  if (tile) {\n    return (game.tileKey[tile.type].passable);\n  } else {\n    return false\n  }\n}\n\nconst isTileAndEntitiesPassable = (game, sourceEntityPos) => (x, y) => {\n  const tile = game.map[x + \",\" + y];\n  if (tile) {\n    const tileIsPassable = game.tileKey[tile.type].passable\n    if (tile.entities.length && !coordsAreEqual(sourceEntityPos, {x, y})) {\n      const entitiesArePassable = tile.entities.every((entity) => entity.passable);\n      return tileIsPassable && entitiesArePassable;\n    }\n    return tileIsPassable;\n  } else {\n    return false\n  }\n}\n\nexport const calculatePath = (game, targetPos, currentPos, topology = 4, isPassable = isTilePassable) => {\n  let map = game.map\n  let isPassableCallback = isPassable(game);\n  let astar = new ROT.Path.AStar(targetPos.x, targetPos.y, isPassableCallback, { topology });\n  let path = [];\n  astar.compute(currentPos.x, currentPos.y, function (x, y) {\n    path.push({ x, y })\n  });\n\n  return path.slice(1);\n}\n\nexport const calculatePathAroundObstacles = (\n  game, \n  targetPos, \n  currentPos, \n  topology = 4\n) => calculatePath(\n  game,\n  targetPos,\n  currentPos,\n  topology,\n  (gameObject) => isTileAndEntitiesPassable(gameObject, currentPos)\n);\n\nexport const calculateStraightPath = (p0, p1) => {\n  let points = [];\n  let N = diagonal_distance(p0, p1);\n  for (let step = 0; step < N; step++) {\n    let t = N === 0 ? 0.0 : step / N;\n    points.push(round_point(lerp_point(p0, p1, t)));\n  }\n  return points;\n}\n\nconst diagonal_distance = (p0, p1) => {\n  let dx = p1.x - p0.x, dy = p1.y - p0.y;\n  return Math.max(Math.abs(dx), Math.abs(dy));\n}\n\nconst round_point = (p) => {\n  return {x: Math.round(p.x), y: Math.round(p.y)};\n}\n\nconst lerp_point = (p0, p1, t) => {\n  return {\n    x: lerp(p0.x, p1.x, t),\n    y: lerp(p0.y, p1.y, t)\n  };\n}\n\nconst lerp = (start, end, t) => {\n  return start + t * (end - start);\n}\n\nexport const getPositionInDirection = (pos, direction) => {\n  return {x: pos.x + direction[0], y: pos.y + direction[1]}\n}\n\nexport const calculatePathWithRange = (game, targetPos, currentPos, topology, range) => {\n  let path = calculatePath(game, targetPos, currentPos, topology);\n  return path.slice(0, range + 1);\n}\n\nexport const getRandomPos = (map) => {\n  let keys = Object.keys(map);\n  let key = getRandomInArray(keys).split(',');\n  let pos = { x: parseInt(key[0]), y: parseInt(key[1])}\n  return {coordinates: pos, text: key}\n}\n\nexport const getDestructableEntities = (entites) => {\n  return entites.filter((entity) => entity.hasOwnProperty('durability'));\n}\n\nexport const filterEntitiesByType = (entites, type) => {\n  return entites.filter((entity) => entity.entityTypes.includes(type));\n}\n\nconst getGranularity = (radius) => {\n  let result = (2 / 3) * (Math.pow(radius, 3) - (9 * Math.pow(radius, 2)) + (32 * radius) - 18)\n  return result\n}\n\nexport const getNeighboringTiles = (map, pos) => {\n  const neigborPositions = [\n    { x: 0, y: 1},\n    { x: 1, y: 1},\n    { x: 1, y: 0},\n    { x: 1, y: -1},\n    { x: 0, y: -1},\n    { x: -1, y: -1},\n    { x: -1, y: 0},\n    { x: -1, y: 1},\n  ];\n\n  return neigborPositions.map((point) => {\n    const newPos = { x: pos.x + point.x, y: pos.y + point.y};\n    let newTile = map[coordsToString(newPos)];\n    if (newTile) {\n      return newTile\n    }\n  }).filter((item) => Boolean(item));\n}\n\nexport const getPointsOnCircumference = (centerX = 0, centerY = 0, r = 3) => {\n  const n = getGranularity(r);\n  let list = [];\n  for (let i = 0; i < n; i++) {\n    let x = Math.round(centerX + (Math.cos(2 * Math.PI / n * i) * r))\n    let y = Math.round(centerY + (Math.sin(2 * Math.PI / n * i) * r))\n    list.push({ x, y });\n  }\n  return list\n}\n\nexport const getPointsWithinRadius = (position, radius) => {\n  let positions = [];\n  for (let x = position.x - radius; x < position.x + radius; x++) {\n    let yspan = Math.round(radius * Math.sin(Math.acos((position.x - x) / radius)));\n    for (let y = position.y - yspan; y < position.y + yspan; y++) {\n      positions.push({x, y})\n    }\n  }\n  return positions;\n}\n\nexport const getPositionsFromStructure = (structure, initialPosition) => {\n  return structure.positions.map((slot) => {\n    let position = {\n      x: initialPosition.x + slot.x + structure.x_offset,\n      y: initialPosition.y + slot.y + structure.y_offset\n    }\n    return position\n  })\n}\n","import uuid from 'uuid/v1';\nexport class Entity {\n  constructor({ game = null, passable = false, name = 'nameless' }) {\n    let id = uuid();\n    this.entityTypes = ['Entity'];\n    this.id = id;\n    this.name = name;\n    this.game = game;\n    this.passable = passable;\n    this.active = true;\n  }\n}\n","import * as Helper from '../helper'\n\nexport const ENERGY_THRESHOLD = 100;\n\nexport const COLORS = {\n  black_1: '#424242',\n  gray_1: '#262d37',\n  gray_2: '#606b79',\n  gray_4: '#B7C3CD',\n  gray_5: '#CED5DD',\n  green_1: '#1d533c',\n  green_2: '#227743',\n  green_3: '#2d9c59',\n  red_4: '#D82D33',\n  red_5: '#E16264',\n  purple_3: '#c45ffd',\n}\n\nexport const THEMES = {\n  NARUTO: {\n    gaara: '#603030',\n    rock_lee: '#155859',\n  },\n  SOLARIZED: {\n    base03: '#002b36',\n    base02: '#073642',\n    base01: '#586e75',\n    base00: '#657b83',\n    base0: '#839496',\n    base1: '#93a1a1',\n    base2: '#eee8d5',\n    base3: '#fdf6e3',\n    yellow: '#b58900',\n    orange: '#cb4b16',\n    red: '#dc322f',\n    magenta: '#d33682',\n    violet: '#6c71c4',\n    blue: '#268bd2',\n    cyan: '#2aa198',\n    green: '#859900',\n  },\n  JACINTO: {\n    // base1: '#07111Dff',\n    base1: '#0B0B0Bff',\n    base2: '#5A7178ff',\n    base3: '#B6ACA3ff',\n    base4: '#EDF6F1ff',\n    cog1: '#2d5fc9',\n    cog2: '#18c0f8',\n    cog3: '#86C8E4ff',\n    // locust2: '#E19D3Fff',\n    locust1: '#96641Dff',\n    locust2: '#F89339ff',\n    locust3: '#E7C898ff',\n    flesh1: '#833139ff',\n    flesh2: '#CC7468ff',\n    flesh3: '#DDA78Fff',\n    gray: '#6D7886ff',\n    red: '#C7141Cff',\n    yellow: '#b58900',\n    green: '#859900',\n  },\n}\n\nexport const NPC_NAME = 'Helpless Citizen';\nexport const PLAYER_NAME = 'Fire Fighter';\n\nexport const TILE_KEY = {\n  'GROUND': {\n    background: THEMES.SOLARIZED.base03,\n    foreground: THEMES.SOLARIZED.base01,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'FLOOR': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base0,\n    character: '',\n    passable: true,\n  },\n  'SAFE_FLOOR': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base0,\n    character: '',\n    passable: true,\n  },\n  'BURNT': {\n    background: THEMES.SOLARIZED.base03,\n    foreground: THEMES.SOLARIZED.red,\n    character: 'X',\n    sprite: '',\n    passable: true,\n    animation: [\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'X', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'x', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'X', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.orange, character: 'x', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.orange, character: 'X', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.yellow, character: 'x', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'X', sprite: '', passable: true, },\n    ]\n  },\n  'WET': {\n    background: THEMES.SOLARIZED.base03,\n    foreground: THEMES.SOLARIZED.blue,\n    character: '=',\n    sprite: '',\n    passable: true,\n    animation: [\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '=', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '~', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '=', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.base0, character: '~', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.base1, character: '=', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.base1, character: '~', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '=', sprite: '', passable: true, },\n    ]\n  },\n  'WALL': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base2,\n    character: '#',\n    sprite: '',\n    passable: false,\n  },\n  'DOOR': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base0,\n    character: '+',\n    sprite: '',\n    passable: true,\n  },\n  'SAFE': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.green,\n    character: '+',\n    sprite: '',\n    passable: true,\n  },\n\n  'WATER': {\n    animation: [\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#8aa', character: '▒', passable: false, },\n      { background: '#424242', foreground: '#8aa', character: '▓', passable: false, },\n    ],\n    background: '#9dc3d3',\n    character: '░',\n    passable: false,\n  },\n}\n\nexport const HAND_SIGNS = {\n  Power: {\n    type: 'Power',\n    name: 'Rin',\n    description: 'Strength of mind, body, spirit',\n  },\n  Energy: {\n    type: 'Energy',\n    name: 'Pyo',\n    description: 'energy direction',\n  },\n  Harmony: {\n    type: 'Harmony',\n    name: 'To',\n    description: 'one- ness with the universe or self',\n  },\n  Healing: {\n    type: 'Healing',\n    name: 'Sha',\n    description: 'of self and others',\n  },\n  Intuition: {\n    type: 'Intuition',\n    name: 'Kai',\n    description: 'premonition of danger, feeling others intent',\n  },\n  Awareness: {\n    type: 'Awareness',\n    name: 'Jin',\n    description: 'feeling thoughts of others, perhaps hiding your own',\n  },\n  Dimension: {\n    type: 'Dimension',\n    name: 'Retsu',\n    description: 'control of time and space',\n  },\n  Creation: {\n    type: 'Creation',\n    name: 'Zai',\n    description: 'understanding nature',\n  },\n  Absolute: {\n    type: 'Absolute',\n    name: 'Zen',\n    description: 'enlightenment',\n  }, \n}\n\nexport const DIRECTIONS = {\n  N: [0, -1],\n  NE: [1, -1],\n  W: [-1, 0],\n  NW: [-1, -1],\n  SW: [-1, 1],\n  S: [0, 1],\n  SE: [1, 1],\n  E: [1, 0],\n  NONE: [0, 0],\n}\n\nexport const getDirectionKey = (direction) => {\n  let directionString = `${direction}`;\n  let keys = Object.keys(DIRECTIONS);\n  let result = false\n  keys.forEach((key) => {\n    if (`${DIRECTIONS[key]}` === directionString) {\n      result = key\n    }\n  })\n  return result\n}\n\nexport const EQUIPMENT_TYPES = {\n  HEAD: 'HEAD',\n  TORSO: 'TORSO',\n  BACK: 'BACK',\n  HAND: 'HAND',\n  FEET: 'FEET',\n  GENERIC: 'GENERIC',\n}\n\nexport const EQUIPMENT_LAYOUTS = {\n  human: () => {\n    return [\n      {type: EQUIPMENT_TYPES.HEAD, name: 'head', item: null},\n      {type: EQUIPMENT_TYPES.TORSO, name: 'torso', item: null},\n      {type: EQUIPMENT_TYPES.BACK, name: 'back', item: null},\n      {type: EQUIPMENT_TYPES.HAND, name: 'left_hand', item: null},\n      {type: EQUIPMENT_TYPES.HAND, name: 'right_hand', item: null},\n      {type: EQUIPMENT_TYPES.FEET, name: 'feet', item: null},\n    ]\n  },\n  limited: () => {\n    return [\n      {type: EQUIPMENT_TYPES.GENERIC, name: 'slot_1', item: null},\n      {type: EQUIPMENT_TYPES.GENERIC, name: 'slot_2', item: null},\n    ]\n  },\n  gear: () => {\n    return [\n      { type: EQUIPMENT_TYPES.HAND, name: 'weapon', item: null },\n      // { type: EQUIPMENT_TYPES.TORSO, name: 'ammo', item: null },\n    ]\n  }\n}\n\nexport const CLONE_PATTERNS = {\n  point: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n    ]\n  },\n  triple_point: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 0, taken: false, },\n    ]\n  },\n  spread: {\n    x_offset: 1,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 1, y: 2, taken: false, },\n      { x: 1, y: -2, taken: false, },\n    ]\n  },\n  verticalLine: {\n    x_offset: 1,\n    y_offset: 1,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n    ]\n  },\n  smallSquare: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n    ]\n  },\n  square: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 1, y: -1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: -1, y: -1, taken: false, },\n      { x: -1, y: 0, taken: false, },\n      { x: -1, y: 1, taken: false, },\n    ]\n  },\n  clover: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: -1, y: 0, taken: false, },\n    ]\n  },\n  filledClover: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: -1, y: 0, taken: false, },\n    ]\n  },\n  bigSquare: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 1, y: -1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: -1, y: -1, taken: false, },\n      { x: -1, y: 0, taken: false, },\n      { x: -1, y: 1, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 2, y: 2, taken: false, },\n      { x: 2, y: 0, taken: false, },\n      { x: 2, y: -2, taken: false, },\n      { x: 0, y: -2, taken: false, },\n      { x: -2, y: -2, taken: false, },\n      { x: -2, y: 0, taken: false, },\n      { x: -2, y: 2, taken: false, },\n    ],\n  },\n  circle: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      ...Helper.getPointsOnCircumference(0, 0, 2),\n      ...Helper.getPointsOnCircumference(0, 0, 3)\n    ]\n  },\n}\n\nexport const PARTICLE_TEMPLATES = {\n  default: {\n    renderer: {\n      character: '*',\n      color: 'black',\n      background: 'white',\n    }\n  },\n  fail: {\n    renderer: {\n      character: 'x',\n      color: 'black',\n      background: 'red',\n    }\n  },\n  succede: {\n    renderer: {\n      character: 'x',\n      color: THEMES.SOLARIZED.base3,\n      background: THEMES.SOLARIZED.green,\n    }\n  },\n  damage: {\n    renderer: {\n      character: '*',\n      color: 'darkred',\n      background: 'red',\n    }\n  },\n  leaf: {\n    renderer: {\n      character: '✤',\n      color: '#36635b',\n      background: '#F0D8C0',\n    }\n  },\n  water: {\n    renderer: {\n      character: '~',\n      color: THEMES.SOLARIZED.base3,\n      background: THEMES.SOLARIZED.blue,\n    }\n  },\n}\n\nexport const PARTICLE_TYPE = {\n  directional: 0,\n  path: 1,\n}\n\nexport const ALPHABET = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];","export class ActionResource {\n  constructor({\n    name = 'Resource',\n    getResourceCost = () => null,\n    actorResourcePath = null,\n    actorResourceGetter = null,\n    actorResourceSetter = null,\n    renderer = {background: 'transparent', color: 'black', character: '*'}\n  }) {\n    this.name = name;\n    this.getResourceCost = getResourceCost;\n    this.actorResourcePath = actorResourcePath;\n    this.actorResourceGetter = actorResourceGetter;\n    this.actorResourceSetter = actorResourceSetter;\n    this.renderer = renderer;\n  }\n}\n","import {ActionResource} from './ActionResource';\n\nexport class EnergyResource extends ActionResource {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.name = 'Energy';\n    this.actorResourcePath = 'energy';\n    this.renderer = { color: 'black', background: '#ff9926', character: '8', sprite: '' }\n  }\n}","import * as _ from 'lodash';\nimport { Particle } from '../Entities/index';\nimport * as Constant from '../constants';\nimport {EnergyResource} from './ActionResources/EnergyResource';\n\nexport class Base {\n  constructor({ \n    game,\n    actor,\n    label = 'action label',\n    hidden = false,\n    energyCost = Constant.ENERGY_THRESHOLD, \n    processDelay = 50, \n    particles = [], \n    renderer = null, \n    particleTemplate = Constant.PARTICLE_TEMPLATES.default, \n    onBefore = () => null, \n    onAfter = () => null, \n    onSuccess = () => null, \n    onFailure = () => null, \n    interrupt = false, \n    requiredResources = [],\n  }) {\n    this.actor = actor;\n    this.game = game;\n    this.label = label;\n    this.hidden = hidden;\n    this.energyCost = energyCost;\n    this.processDelay = processDelay;\n    this.particles = particles;\n    this.renderer = renderer;\n    this.particleTemplate = particleTemplate;\n    this.onBefore = onBefore;\n    this.onAfter = onAfter;\n    this.onSuccess = onSuccess;\n    this.onFailure = onFailure;\n    this.interrupt = interrupt;\n    this.requiredResources = [new EnergyResource({ getResourceCost: () => this.energyCost }), ...requiredResources];\n  }\n\n  addParticle(\n    life, \n    pos, \n    direction, \n    renderer = { ...this.particleTemplate.renderer }, \n    type = Constant.PARTICLE_TYPE.directional, \n    path = null\n  ) {\n    let particle = new Particle({\n      game: this.game,\n      name: 'particle',\n      passable: true,\n      life,\n      pos,\n      direction,\n      energy: 100,\n      renderer,\n      type,\n      path,\n    });\n    this.particles.push(particle);\n  }\n\n  removeDeadParticles() {\n    this.particles = this.particles.filter((particle) => particle.life > 0);\n  }\n\n  setAsNextAction() {\n    this.actor.setNextAction(this);\n  }\n\n  getEnergyCost() {\n    return _.find(this.requiredResources, {name: 'Energy'}).getResourceCost();\n  }\n\n  getRequiredResourceName() {\n    return _.map(this.requiredResources, 'name');\n  }\n\n  listPayableResources() {\n    return _.map(this.requiredResources, (resource) => {\n      const getResourceCost = resource.getResourceCost; \n      const actorResourcePath = resource.actorResourcePath; \n      const actorResourceGetter = resource.actorResourceGetter;\n\n      const actorVariable = _.get(this.actor, actorResourcePath, null);\n      \n      let canPay = false;\n      // if the actor has provided a setter for this variable, use that \n      if (_.get(this.actor, actorResourceGetter, null) !== null) {\n        canPay = this.actor[actorResourceGetter]() >= getResourceCost();\n      } else if (actorVariable !== null) {\n        // else if the actor has a path to the appropriate variable, get that value and set it manually\n        canPay = actorVariable >= getResourceCost();\n      }\n\n      return {\n        canPay,\n        ...resource\n      }\n    })\n  }\n\n  canPayRequiredResources() {\n    return !_.find(this.listPayableResources(), {'canPay': false});\n  }\n\n  payRequiredResources() {\n    _.each(this.requiredResources, (resource) => {\n      const getResourceCost = resource.getResourceCost;\n      const actorResourcePath = resource.actorResourcePath;\n      const actorResourceSetter = resource.actorResourceSetter;\n      \n      const actorVariable = _.get(this.actor, actorResourcePath, null);\n      const resourceCost = getResourceCost();\n      // if the actor has provided a setter for this variable, use that \n      if (_.get(this.actor, actorResourceSetter, null)) {\n        this.actor[actorResourceSetter](actorVariable - resourceCost)\n        return true;\n      }\n\n      // else if the actor has a path to the appropriate variable, get that value and set it manually\n      if (actorVariable) {\n        this.actor[actorResourcePath] -= resourceCost;\n        return true;\n        // return _.set(this.actor, actorResourcePath, actorVariable - getResourceCost());\n      }\n      return false;\n    })\n  }\n  \n  perform() {\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n\n}","import { Base } from './Base';\nexport class DestroySelf extends Base {\n  constructor({ processDelay = 0, ...args }) {\n    super({ ...args });\n    this.processDelay = processDelay;\n  }\n  perform() {\n    // console.log(`${this.actor.name} is self-destructing`);\n    this.actor.energy -= this.energyCost;\n    this.actor.destroy();\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { DestroySelf } from './DestroySelf';\nimport * as Constant from '../constants';\n\nexport class EngineCrank extends Base {\n  constructor({ engine, ...args }) {\n    super({ ...args });\n    this.engine = engine;\n  }\n  async perform() {\n    let success = true;\n    let alternative = null;\n    console.log(`${this.actor.name} is cranking its engine.`);\n    try {\n      await this.engine.start();\n      this.actor.energy -= this.energyCost;\n    }\n    catch (error) {\n      console.log('EngineCrank');\n      console.log(error);\n      alternative = new DestroySelf({\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { CrankEngine } from '../Engine/engine';\nimport { EngineCrank } from '../Actions/EngineCrank';\n\nexport const Parent = superclass => class extends superclass {\n  constructor({ children = [], engine = new CrankEngine({}), ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('PARENT');\n    this.children = children;\n    this.engine = engine;\n    this.isInitialized = false;\n  }\n  destroyChild(child) {\n    child.energy = 0;\n    let tile = this.game.map[Helper.coordsToString(child.pos)];\n    this.game.map[Helper.coordsToString(child.pos)].entities = tile.entities.filter((e) => e.id !== child.id);\n    this.engine.actors = this.engine.actors.filter((e) => e.id !== child.id);\n    this.game.draw();\n  }\n  canAttack(entity) {\n    const childIds = this.children.map((child) => child.id);\n    return !childIds.includes(entity.id);\n  }\n  initialize() {\n    this.isInitialized = true;\n    this.engine.game = this.game;\n    this.engine.actors = this.children;\n    this.engine.actors.forEach((actor) => {\n      actor.game = this.game;\n      actor.destroy = () => { this.destroyChild(actor); };\n      actor.canAttack = this.canAttack.bind(this);\n      // actor.canAttack = (entity) => {this.canAttack(entity)};\n      this.game.placeActorOnMap(actor);\n      this.engine.addActor(actor);\n      this.game.draw();\n    });\n  }\n  getAction(game) {\n    // crank engine one turn\n    if (!this.isInitialized) {\n      this.initialize();\n    }\n    let result = new EngineCrank({\n      game,\n      actor: this,\n      engine: this.engine,\n      energyCost: Constant.ENERGY_THRESHOLD,\n      processDelay: 10\n    });\n    return result;\n  }\n};\n","import Konva from 'konva';\nimport uuid from 'uuid/v1';\nimport * as Helper from '../../helper';\n\nexport const ANIMATION_TYPES = {\n  DEFAULT: 0,\n  BLINK_TILE: 1,\n  SOLID_TILE: 2,\n  BLINK_BOX: 3,\n}\n\nclass Animation {\n  constructor({display}) {\n    const id = uuid();\n    this.id = id;\n    this.lifeTime = 0;\n    this.active = true;\n    this.display = display;\n    this.node = null;\n  }\n\n  getActive () {\n    return false;\n  }\n\n  initialize () {\n    return;\n  }\n\n  update (frame) {\n    this.lifeTime += frame.timeDiff;\n    this.active = this.getActive();\n    if (!this.active) {\n      this.display.removeAnimation(this.id);\n    }\n  }\n}\n\nclass ExampleAnimation extends Animation {\n  constructor({...args}) {\n    super({...args})\n  }\n\n  getActive () {\n    if (this.lifeTime > 500) {\n      return false;\n    }\n    return true;\n  }\n}\n\nclass BlinkTile extends Animation {\n  constructor({\n    x,\n    y,\n    lerpDirection = -1,\n    color = '#fff',\n    rectAttributes = {},\n    ...args\n  }) {\n    super({ ...args });\n    this.x = x;\n    this.y = y;\n    this.lerpDirection = lerpDirection;\n    this.color = color;\n    this.rectAttributes = rectAttributes\n  }\n\n  getActive () {\n    return this.active;\n  }\n\n  initialize () {\n    this.active = true;\n    const attrs = {\n      name: 'rect',\n      x: (this.display.tileWidth * this.x) + (this.display.tileOffset + this.display.tileGutter),\n      y: (this.display.tileHeight * this.y) + (this.display.tileOffset + this.display.tileGutter),\n      offsetX: this.display.tileWidth / -4,\n      offsetY: this.display.tileHeight / -4,\n      width: this.display.tileWidth / 2,\n      height: this.display.tileHeight / 2,\n      fill: this.color,\n      // strokeEnabled: false,\n      // for optimization\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n      ...this.rectAttributes,\n    };\n    let rect = new Konva.Rect(attrs);\n    this.display.animationLayer.add(rect);\n    this.node = rect;\n    super.initialize();\n  }\n\n  update (frame) {\n    let opacity = this.node.opacity();\n    if (opacity >= 1) this.lerpDirection = -1;\n    if (opacity <= 0) this.lerpDirection = 1;\n    opacity += (0.030 * this.lerpDirection)\n    this.node.opacity(Helper.clamp(opacity, 0, 1))\n    super.update(frame);\n  }\n  \n}\n\nexport class BlinkBox extends BlinkTile {\n  constructor({...args}) {\n    super({ ...args });\n    this.rectAttributes = {\n      fill: 'transparent',\n      stroke: args.color,\n      strokeWidth: 5,\n      offsetX: 0,\n      offsetY: 0,\n      width: this.display.tileWidth,\n      height: this.display.tileHeight,\n    }\n  }\n}\n\nexport class Display {\n  constructor({\n    containerId = null,\n    width = 100,\n    height = 100,\n    tileWidth = 10,\n    tileHeight = 10,\n    tileGutter = 0,\n    tileOffset = 10,\n    game = null,\n  }) {\n    this.containerId = containerId;\n    this.width = width;\n    this.height = height;\n    this.tileWidth = tileWidth;\n    this.tileHeight = tileHeight;\n    this.tileGutter = tileGutter;\n    this.tileOffset = tileOffset;\n    this.stage = null;\n    this.layer = null;\n    this.animationLayer = null;\n    this.animations = [];\n    this.animationLoop = null;\n    this.game = game;\n    this.animationTypes = ANIMATION_TYPES;\n  }\n\n  initialize (document) {\n    let d = document.getElementById(this.containerId)\n    let displayContainer = document.createElement('div');\n    d.appendChild(displayContainer);\n\n    // this.adjustContentToScreen(d);\n    \n    this.stage = new Konva.Stage({\n      container: 'display',   // id of container <div>\n      width: this.width,\n      height: this.height\n    });\n\n    \n    // setting up main tile map layer\n    this.layer = new Konva.Layer({\n      hitGraphEnabled: false,\n    });\n    \n    this.stage.add(this.layer);\n    \n    // setting up animation layer\n    this.animationLayer = new Konva.Layer({});\n    this.stage.add(this.animationLayer);\n    let animationLoop = new Konva.Animation((frame) => {\n      this.animations.forEach((animation) => animation.update(frame))\n      // Stop animation updates if no animations to process\n      if (this.animations.length <= 0) {\n        if (this.animationLoop) {\n          if (this.animationLoop.isRunning()) {\n            this.animationLoop.stop();\n          }\n        }\n      }\n    }, this.animationLayer);\n    this.animationLoop = animationLoop;\n    animationLoop.start();\n  }\n\n  adjustContentToScreen (display_element) {\n    const DEVICE_WIDTH = display_element.offsetWidth;\n    const value = (DEVICE_WIDTH - this.tileOffset) / this.game.mapWidth;\n    this.tileWidth = Math.floor(value);\n    this.tileHeight = this.tileWidth;\n    this.width = ((this.game.mapWidth - 1) * this.tileWidth) + this.tileOffset;\n    this.height = (this.game.mapHeight * this.tileHeight) + this.tileOffset;\n  }\n\n  addAnimation (type, args) {\n    let animation;\n    switch (type) {\n      case ANIMATION_TYPES.SOLID_TILE:\n        animation = new ExampleAnimation({display: this, ...args})\n        break;\n      case ANIMATION_TYPES.BLINK_TILE:\n        animation = new BlinkTile({display: this, ...args})\n        break;\n      case ANIMATION_TYPES.BLINK_BOX:\n        animation = new BlinkBox({display: this, ...args})\n        break;\n      case ANIMATION_TYPES.DEFAULT:\n      default:\n        animation = new Animation({ display: this, ...args})\n        break;\n    }\n    animation.initialize();\n    this.animations.push(animation)\n    if (!this.animationLoop.isRunning()) this.animationLoop.start();\n    return animation\n  }\n\n  removeAnimation (id) {\n    this.animations = this.animations.filter((anim) => {\n      if (anim.id !== id) return true;\n      // if anim is being removed, remove associated nodes and shapes too\n      anim.node.destroy();\n      return false;\n    });\n  }\n\n  updateAnimation (id) {\n    this.animations = this.animations.map((anim) => {\n      if (anim.id === id) {\n        console.log(anim);\n      }\n      return anim;\n    });\n  }\n\n  updateTile(tile, character, foreground, background) {\n    // child[0] is the rectangle\n    // child[1] is the text\n    if (tile) {\n      tile.children[0].fill(background);\n      tile.children[1].fill(foreground);\n      tile.children[1].text(character);\n    }\n  }\n\n  createTile(x, y, character, foreground, background, layer = 'layer') {\n    const actual_x = (this.tileWidth * x) + (this.tileOffset + this.tileGutter);\n    const actual_y = (this.tileHeight * y) + (this.tileOffset + this.tileGutter);\n    let node = new Konva.Group({\n      id: `${x},${y}`,\n      x: (this.tileWidth * x) + (this.tileOffset + this.tileGutter),\n      y: (this.tileHeight * y) + (this.tileOffset + this.tileGutter),\n      width: this.tileWidth,\n      height: this.tileHeight,\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n    });\n\n    let rect = new Konva.Rect({\n      name: 'rect',\n      width: this.tileWidth,\n      height: this.tileHeight,\n      fill: background,\n      strokeEnabled: false,\n      // for optimization\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n    });\n\n    let text = new Konva.Text({\n      name: 'text',\n      text: character,\n      width: this.tileWidth,\n      height: this.tileHeight,\n      fontSize: this.tileWidth - 2,\n      fontFamily: 'scroll-o-script',\n      fill: foreground,\n      align: 'center',\n      verticalAlign: 'middle',\n      // for optimization\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n    });\n\n    node.add(rect);\n    node.add(text);\n    this.layer.add(node);\n    return node;\n  }\n\n  getAbsoultueX(x) {\n    return (this.tileWidth * x) + (this.tileOffset + this.tileGutter)\n  }\n\n  getAbsoultueY(y) {\n    return (this.tileWidth * y) + (this.tileOffset + this.tileGutter)\n  }\n\n  getTilesWide (width, tileOffset, tileWidth) {\n    return Math.floor((width - tileOffset) / tileWidth)\n  }\n  \n  getTilesHigh(height, tileOffset, tileHeight) {\n    return Math.floor((height - tileOffset) / tileHeight)\n  }\n\n  getTilesAcrossOnScreen () { return Math.floor(this.width / this.tileWidth)}\n  getTilesDownOnScreen () { return Math.floor(this.height / this.tileHeight)}\n\n  draw () {\n    this.layer.batchDraw();\n  }\n}","import { THEMES } from '../constants';\nimport { ANIMATION_TYPES } from '../Display/konvaCustom';\n\nexport const HasTargetingCursor = superclass => class extends superclass {\n  constructor({...args}) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HAS_TARGETING_CURSOR');\n    this.cursorIsActive = false;\n    this.cursorPositions = []; \n    this.animations = []; \n  }\n\n  setCursorIsActive (active = true) {\n    this.cursorIsActive = active;\n  }\n\n  activateCursor (positions) {\n    this.setCursorPositions(positions);\n    this.setCursorIsActive(true);\n    this.resetAnimations();\n  }\n\n  deactivateCursor () {\n    this.setCursorIsActive(false);\n    this.removeAnimations();\n  }\n\n  getCursorPositions () {\n    return this.cursorPositions;\n  }\n\n  setCursorPositions (positions) {\n    this.cursorPositions = positions;\n    return this.getCursorPositions();\n  }\n\n  addAnimations () {\n    const positions = this.getCursorPositions();\n    if (positions.length) {\n      // hack for visual separation\n      let lastPos = {x: null, y: null}\n      let nudge = 0;\n      // const nudgeInc = 0.2\n      positions.forEach((position) => {\n        // if (position.x == lastPos.x && position.y == lastPos.y) nudge += nudgeInc;\n        // lastPos = {...position};\n        const newAnimation = this.game.display.addAnimation(\n          ANIMATION_TYPES.BLINK_BOX, \n          {\n            x: position.x, \n            y: position.y + nudge, \n            color: THEMES.SOLARIZED.base3 \n          }\n        );\n        this.animations.push(newAnimation);\n      })\n    }\n  }\n\n  removeAnimations () {\n    if (this.animations.length) {\n      this.animations.forEach((animation) => this.game.display.removeAnimation(animation.id))\n    }\n    this.animations = [];\n  }\n\n  resetAnimations () {\n    this.removeAnimations();\n    this.addAnimations();\n  }\n\n  moveCursorToPosition (position) {\n    const currentPositions = this.getCursorPositions()\n    const xDelta = position.x - currentPositions[0].x;\n    const yDelta = position.y - currentPositions[0].y;\n    const newPositons = currentPositions.map(\n      (pos) => ({\n        x: pos.x + xDelta,\n        y: pos.y + yDelta\n      })\n    );\n    this.setCursorPositions(newPositons);\n    this.resetAnimations();\n    return newPositons;\n  }\n\n  moveCursorInDirection (direction, distance = 1) {\n    const newPositons = this.getCursorPositions().map(\n      (pos) => ({\n        x: pos.x + (direction[0] * distance),\n        y: pos.y + (direction[1] * distance)\n      })\n    );\n    this.setCursorPositions(newPositons);\n    this.resetAnimations();\n    return newPositons;\n  }\n\n  updateCursorNode (index, args) {\n    const anim = this.animations[index];\n    args.forEach((arg) => {\n      anim.node[arg.key](arg.value)\n    })\n  }\n\n  updateAllCursorNodes (args) {\n    this.getCursorPositions().forEach((pos, index) => {\n      const anim = this.animations[index];\n      args.forEach((arg) => {\n        anim.node[arg.key](arg.value)\n      })\n    })\n  }\n\n  destroy() {\n    this.removeAnimations();\n    super.destroy();\n  }\n};\n","import { COLORS, THEMES } from './constants';\nimport uuid from 'uuid/v1';\n\nexport const MESSAGE_TYPE = {\n  INFORMATION: {\n    color: COLORS.gray_4,\n    backgroundColor: COLORS.black_1,\n  },\n  ACTION: {\n    color: COLORS.gray_2,\n    backgroundColor: COLORS.gray_5,\n  },\n  DANGER: {\n    color: COLORS.red_5,\n    backgroundColor: COLORS.black_1,\n  },\n  STATUS_EFFECT: {\n    color: THEMES.SOLARIZED.base3,\n    backgroundColor: THEMES.SOLARIZED.violet,\n  },\n  ERROR: {\n    color: THEMES.SOLARIZED.base3,\n    backgroundColor: THEMES.SOLARIZED.yellow,\n  },\n}\n\nexport class Message {\n  constructor({ text = '', type = MESSAGE_TYPE.INFORMATION }) {\n    let id = uuid();\n    this.id = id;\n    this.text = text;\n    this.type = type;\n  }\n}","import { MESSAGE_TYPE } from '../message';\nimport * as Helper from '../../helper';\n\nexport const Attacking = superclass => class extends superclass {\n  constructor({ attackDamage = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('ATTACKING');\n    this.attackDamage = attackDamage;\n  }\n  getAttackDamage(additional = 0) {\n\n    return this.attackDamage + additional;\n  }\n  canAttack(entity) {\n    return true;\n  }\n  attack(targetPos, additional = 0) {\n    let success = false;\n    let tile = this.game.map[Helper.coordsToString(targetPos)];\n    if (!tile) {\n      return success;\n    }\n    let targets = Helper.getDestructableEntities(tile.entities);\n    if (targets.length > 0) {\n      let target = targets[0];\n      if (this.canAttack(target)) {\n        let damage = this.getAttackDamage(additional);\n        if (this.entityTypes.includes('EQUIPING')) {\n          this.equipment.forEach((slot) => {\n            if (slot.item) {\n              if (slot.item.entityTypes.includes('ATTACKING')) {\n                damage += slot.item.getAttackDamage();\n              }\n            }\n          });\n        }\n        this.game.addMessage(`${this.name} does ${damage} to ${target.name}`, MESSAGE_TYPE.DANGER);\n        target.decreaseDurability(damage);\n        success = true;\n      }\n    }\n    return success;\n  }\n};\n","import * as _ from 'lodash';\nimport * as Helper from '../../helper';\n\nexport const addTileZone = (tileKey, origin = { x: 0, y: 0 }, height = 3, width = 3, type = 'GROUND', map, mapHeight, mapWidth) => {\n  for (let i = 0; i < mapHeight; i++) {\n    for (let j = 0; j < mapWidth; j++) {\n      if (i >= origin.y && i <= origin.y + (height - 1) && j >= origin.x && j <= origin.x + (width - 1)) {\n        const key = `${j},${i}`\n        addTileToMap({map, key, tileKey, tileType: type})\n      }\n    }\n  }\n}\n\nexport const addTileToMap = ({map, key, tileKey, tileType, entities = []}) => {\n  const numberOfAnimationFrames = _.get(tileKey[tileType], 'animation.length', 0);\n  const currentFrame = Helper.getRandomInt(0, numberOfAnimationFrames);\n  const tileData = {\n    type: tileType,\n    currentFrame,\n    entities,\n    tileKey,\n  };\n  map[key] = tileData;\n\n  return tileData;\n}\n\nexport const tileHasTag = ({tile, tag}) => {\n  const tags = _.get(tile.tileKey[tile.type], 'tags', []);\n  return tags.includes(tag);\n}\n\nexport const tileHasAnyTags = ({tile, tags}) => {\n  const tileTags = _.get(tile.tileKey[tile.type], 'tags', []);\n  return tags.some((tag) => tileTags.includes(tag))\n}\n\nexport const getTileFromMap = ({map, position}) => map[Helper.coordsToString(position)];","import { MESSAGE_TYPE } from '../message';\nimport * as Helper from '../../helper';\nimport * as MapHelper from '../Maps/helper';\n\nexport const RangedAttacking = superclass => class extends superclass {\n  constructor({ attackRange = 0, baseRangedAccuracy = 0, baseRangedDamage = 0, magazineSize = 0, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('RANGED_ATTACKING');\n    this.attackRange = attackRange;\n    this.baseRangedAccuracy = baseRangedAccuracy;\n    this.baseRangedDamage = baseRangedDamage;\n    this.magazineSize = magazineSize;\n    this.magazine = magazineSize;\n  }\n\n  getRangedAttackChance(targetPos = null) {\n    const weaponAccuracy = this.getRangedWeaponAccuracy();\n    const coverDebuff = targetPos ? this.getRangedAttackCoverDebuff(targetPos) : 0;\n    const distanceDebuff = targetPos ? this.getRangedAttackDistanceDebuff(targetPos) : 0;\n    const result = this.baseRangedAccuracy + weaponAccuracy + coverDebuff + distanceDebuff;\n    return result;\n  }\n\n  getRangedAttackCoverDebuff(targetPos) {\n    const path = Helper.calculateStraightPath(this.getPosition(), targetPos);\n    const coverAccuracyModifer = path.reduce((acc, curr) => {\n      let tile = this.game.map[Helper.coordsToString(curr)];\n      // if targeting throuh a wall, the shot is modified by -100%\n      if (MapHelper.tileHasTag({tile, tag: 'WALL'})) return acc - 1;\n      let entitiesProvidingCover = Helper.filterEntitiesByType(tile.entities, 'COVERING');\n      let coverModifer = 0;\n      // only counts the first entity cover modifer in a tile\n      if (entitiesProvidingCover.length > 0) {\n        // if covering entity is in use by this actor, ignore it's modifer\n        if (this.entityTypes.includes('USES_COVER')) {\n          if (this.getCoveredByIds().includes(entitiesProvidingCover[0].id)) {\n            return acc;\n          }\n        }\n        coverModifer = entitiesProvidingCover[0].accuracyModifer;\n      }\n      return acc + coverModifer;\n    }, 0);\n    return coverAccuracyModifer;\n  }\n\n  getRangedAttackDistanceDebuff(targetPos) {\n    const distanceToTarget = Helper.calculatePath(this.game, targetPos, this.getPosition(), 8).length;\n    return -1 * (distanceToTarget / (this.getAttackRange() * 3))\n  }\n\n  getAttackRange() {\n    let range = this.attackRange;\n    if (this.entityTypes.includes('EQUIPING')) {\n      this.equipment.forEach((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('RANGED_ATTACKING')) {\n            range += slot.item.attackRange;\n          }\n        }\n      });\n    }\n    return range;\n  }\n\n  getRangedWeaponAccuracy() {\n    let accuracy = 0;\n    if (this.entityTypes.includes('EQUIPING')) {\n      this.equipment.forEach((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('RANGED_ATTACKING')) {\n            accuracy += slot.item.getRangedAttackChance();\n          }\n        }\n      });\n    }\n    return accuracy;\n  }\n\n  getRangedAttackDamage(additional = 0) {\n\n    return this.baseRangedDamage + this.getRangedWeaponDamage() + additional;\n  }\n\n  getRangedWeaponDamage() {\n    let damage = 0;\n    if (this.entityTypes.includes('EQUIPING')) {\n      this.equipment.forEach((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('RANGED_ATTACKING')) {\n            damage += slot.item.getRangedAttackDamage();\n          }\n        }\n      });\n    }\n    return damage;\n  }\n\n  canRangedAttack(entity) {\n    return true;\n  }\n\n  getEquipedWeapons() {\n    if (this.entityTypes.includes('EQUIPING')) {\n      const equipmentSlots = this.equipment.map((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('RANGED_ATTACKING')) {\n            return slot.item;\n          }\n        }\n      });\n      const filledSlots = equipmentSlots.filter((slot) => slot)\n      return filledSlots;\n    }\n    return [];\n  }\n\n  useAmmo() {\n    this.getEquipedWeapons().forEach((weapon) => weapon.magazine = Math.max(0, weapon.magazine - 1));\n  }\n\n  reload () {\n    let reloaded = false;\n    if (this.entityTypes.includes('CONTAINING')) {\n      this.getEquipedWeapons().forEach((weapon) => {\n        const amount = weapon.magazineSize - weapon.magazine;\n        for (let i = 0; i < amount; i++) {\n          let ammo = this.contains('Ammo');\n          if (ammo) {\n            this.removeFromContainer(ammo);\n            weapon.magazine += 1;\n            reloaded = true;\n          }\n        }\n      });\n    }\n    return reloaded;\n  }\n\n  rangedAttack(targetPos, additionalDamage = 0, additionalAccuracy = 0) {\n    let success = false;\n    let hit = false;\n    let tile = this.game.map[Helper.coordsToString(targetPos)];\n    if (!tile) {\n      return [success, hit];\n    }\n    let targets = Helper.getDestructableEntities(tile.entities);\n    if (targets.length > 0) {\n      const attackChance = this.getRangedAttackChance(targetPos);\n      const hitChance = attackChance + additionalAccuracy;\n      hit = Math.random() < hitChance;\n      // TODO: trigger hit and miss animations\n      this.useAmmo();\n      if (!hit) {\n        success = true;\n        return [success, hit];\n      }\n      let target = targets[0];\n      if (this.canRangedAttack(target)) {\n        let damage = this.getRangedAttackDamage(additionalDamage);\n        this.game.addMessage(`${this.name} does ${damage} to ${target.name}`, MESSAGE_TYPE.DANGER);\n        target.decreaseDurability(damage);\n        success = true;\n      }\n    }\n    return [success, hit];\n  }\n};\n","import * as Constant from '../constants';\n\nexport const Equipable = superclass => class extends superclass {\n  constructor({ name = 'nameless', equipmentType = Constant.EQUIPMENT_TYPES.HAND, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('EQUIPABLE');\n    this.name = name;\n    this.equipmentType = equipmentType;\n  }\n};\n","import * as Helper from '../../helper';\n\nexport const Acting = superclass => class extends superclass {\n  constructor({ actions = [], speed = 100, energy = 0, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('ACTING');\n    this.actions = actions;\n    this.speed = speed;\n    this.energy = speed;\n  }\n  getAction() {\n    let action = Helper.getRandomInArray(this.actions);\n    if (action) {\n      return action;\n    }\n  }\n  gainEnergy(value = this.speed) {\n    this.energy += value;\n  }\n  hasEnoughEnergy() {\n    return this.energy > 0;\n  }\n};\n","import * as Helper from '../../helper';\n\nexport const Rendering = superclass => class extends superclass {\n  constructor({ pos = { x: 0, y: 0 }, renderer, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('RENDERING');\n    this.pos = pos;\n    this.renderer = { ...renderer };\n    this.currentFrame = 0;\n  }\n\n  getRenderer() {\n    return this.renderer\n  }\n\n  getPosition() {\n    return this.pos;\n  }\n  move(targetPos) {\n    let success = false;\n    if (this.game.canOccupyPosition(targetPos, this)) {\n      let tile = this.game.map[Helper.coordsToString(this.pos)];\n      this.game.map[Helper.coordsToString(this.pos)] = { ...tile, entities: tile.entities.filter((e) => e.id !== this.id) };\n      this.pos = targetPos;\n      this.game.map[Helper.coordsToString(targetPos)].entities.push(this);\n      success = true;\n    }\n    return success;\n  }\n  shove(targetPos, direction) {\n    let success = false;\n    let targetTile = this.game.map[Helper.coordsToString(targetPos)];\n    if (targetTile) {\n      targetTile.entities.map((entity) => {\n        if (entity.entityTypes.includes('PUSHABLE')) {\n          if (!entity.passable && entity.pushable) {\n            let newX = entity.pos.x + direction[0];\n            let newY = entity.pos.y + direction[1];\n            let newPos = { x: newX, y: newY };\n            entity.move(newPos);\n          }\n        }\n      });\n    }\n    success = this.move(targetPos);\n    return success;\n  }\n};\n","export class ContainerSlot {\n  constructor({ itemType, items }) {\n    this.itemType = itemType;\n    this.items = items;\n  }\n}\n\nexport const Containing = superclass => class extends superclass {\n  constructor({ container = [], ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CONTAINING');\n    this.container = container;\n  }\n  createSlot(item) {\n    let slot = new ContainerSlot({\n      itemType: item.name,\n      items: [item],\n    });\n    this.container.push(slot);\n  }\n  contains(itemType) {\n    let container = this.container;\n    let slots = container.filter((slot) => slot.itemType === itemType);\n    return slots.length > 0 ? slots[0].items[0] : false;\n  }\n  addToContainer(item) {\n    const index = this.container.findIndex((slot) => slot.itemType === item.name);\n    if (index >= 0) {\n      this.container[index].items.push(item);\n    }\n    else {\n      this.createSlot(item);\n    }\n  }\n  removeFromContainer(item) {\n    this.container.forEach((slot, index) => {\n      slot.items = slot.items.filter((it) => it.id !== item.id);\n      if (!slot.items.length)\n        this.container.splice(index, 1);\n    });\n  }\n};\n","import { Howl, Howler } from 'howler';\n\nexport default {\n  fire_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/fire-00.mp3'],\n    volume: 0.5,\n    loop: true,\n  }),\n  fire_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/fire-01.mp3'],\n    volume: 0.05,\n    loop: true,\n  }),\n  scream_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/scream-00.wav']\n  }),\n  scream_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/scream-01.wav']\n  }),\n  scream_2: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/scream-02.wav']\n  }),\n  water_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/water-04.wav']\n  }),\n  water_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/water-05.wav']\n  }),\n  chop_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/chop-00.wav']\n  }),\n  chop_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/chop-01.wav']\n  }),\n  equip_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/equip-00.wav']\n  }),\n  equip_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/equip-01.wav']\n  }),\n  explosion_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/explosion-00.wav'],\n    volume: 0.2,\n  }),\n  save: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/save.wav'],\n  }),\n  lose: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/lose-00.wav'],\n  }),\n  grab_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/grab-00.wav'],\n  }),\n  release_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/grab-01.wav'],\n  }),\n}","import SOUNDS from '../sounds';\nimport * as Constant from '../constants';\n\nexport const Equiping = superclass => class extends superclass {\n  constructor({ equipment = Constant.EQUIPMENT_LAYOUTS.human(), ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('EQUIPING');\n    this.equipment = equipment;\n  }\n  hasItemNameEquipped(itemName) {\n    const equipment = this.equipment.filter((slot) => {\n      if (slot.item) {\n        if (slot.item.name === itemName) {\n          return true;\n        }\n      }\n      return false;\n    });\n    return equipment.length > 0;\n  }\n  getItemInSlot(slotName) {\n    let openSlots = this.equipment.filter((slot) => {\n      return (slot.item === null && slot.type === slotName);\n    });\n    if (openSlots.length > 0) {\n      return false;\n    }\n    let slot = this.equipment.find((slot) => slot.type === slotName);\n    if (!slot) {\n      return false;\n    }\n    if (!slot.item) {\n      return false;\n    }\n    return slot.item;\n  }\n  equip(slotName, item) {\n    let foundSlot = false;\n    this.equipment = this.equipment.map((slot) => {\n      if (!foundSlot && slot.type === slotName && slot.item === null) {\n        slot.item = item;\n        foundSlot = true;\n        SOUNDS.equip_1.play();\n      }\n      return slot;\n    });\n    return foundSlot;\n  }\n  unequip(item) {\n    this.equipment = this.equipment.map((slot) => {\n      if (slot.item) {\n        if (slot.item.id === item.id) {\n          slot.item = null;\n          SOUNDS.equip_0.play();\n        }\n      }\n      return slot;\n    });\n  }\n};\n","export const Playing = superclass => class extends superclass {\n  constructor({ keymap = {}, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('PLAYING');\n    this.nextAction = null;\n    this.keymap = keymap;\n  }\n  setNextAction(action) {\n    this.nextAction = action;\n  }\n  getAction() {\n    let action = this.nextAction;\n    this.nextAction = null;\n    return action;\n  }\n};\n","import * as Helper from '../../helper';\n\nexport const destroyEntity = (entity) => {\n  entity.energy = 0;\n  if (entity.pos) {\n    let tile = entity.game.map[Helper.coordsToString(entity.pos)];\n    entity.game.map[Helper.coordsToString(entity.pos)].entities = tile.entities.filter((e) => e.id !== entity.id);\n  }\n  // entity.game.engine.actors = entity.game.engine.actors.filter((e) => e.id !== entity.id);\n  entity.game.engine.removeStatusEffectByActorId(entity.id);\n  entity.game.draw()\n  entity.active = false;\n}","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nexport class Say extends Base {\n  constructor({ message, messageType = MESSAGE_TYPE.INFORMATION, processDelay = 50, ...args }) {\n    super({ ...args });\n    this.message = message;\n    this.messageType = messageType;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    this.game.addMessage(`${this.actor.name} says \"${this.message}\"`, this.messageType);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import SOUNDS from '../sounds';\nimport { Base } from './Base';\nimport { Say } from './Say';\nimport * as Helper from '../../helper';\nimport * as Constant from '../constants';\n\nexport class Attack extends Base {\n  constructor({ targetPos, additionalDamage = 0, processDelay = 100, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.additionalDamage = additionalDamage;\n    this.processDelay = processDelay;\n    this.particleTemplate = Constant.PARTICLE_TEMPLATES.damage;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (!this.actor.entityTypes.includes('ATTACKING')) {\n      return {\n        success: true,\n        alternative: new Say({\n          message: `Ooh I don\\'t know how to attack`,\n          game: this.game,\n          actor: this.actor,\n          energyCost: 0,\n        }),\n      };\n    }\n    success = this.actor.attack(this.targetPos, this.additionalDamage);\n    if (success) {\n      const sound = Helper.getRandomInArray([SOUNDS.chop_0, SOUNDS.chop_1]);\n      sound.play();\n      this.addParticle(1, { ...this.targetPos }, { x: 0, y: 0 });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { Attack } from \"./Attack\";\n\nexport class MoveOrAttack extends Base {\n  constructor({ targetPos, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let moveSuccess = this.actor.move(this.targetPos);\n    if (moveSuccess) {\n      success = true;\n    } else {\n      success = true;\n      alternative = new Attack({\n        targetPos: this.targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: 0\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { MoveOrAttack } from './MoveOrAttack';\nimport { DestroySelf } from './DestroySelf';\nimport * as Constant from '../constants';\n\nexport class ThrowProjectile extends MoveOrAttack {\n  constructor({ ...args }) {\n    super({ ...args });\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    this.actor.passable = false;\n    let move_result = super.perform();\n    if (move_result.success) {\n      this.actor.path.shift();\n      success = true;\n    }\n    if (this.actor.path.length === 0) {\n      success = true;\n      alternative = new DestroySelf({\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n      });\n    }\n    if (move_result.alternative) {\n      let attackSuccess = this.actor.attack(this.targetPos);\n      if (attackSuccess) {\n        alternative = new DestroySelf({\n          game: this.game,\n          actor: this.actor,\n          energyCost: Constant.ENERGY_THRESHOLD,\n          processDelay: 0,\n        });\n      }\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n","import { Attack } from './Attack';\nexport class SelfDestructiveAttack extends Attack {\n  constructor({ damageToSelf, ...args }) {\n    super({ ...args });\n    this.damageToSelf = damageToSelf;\n    this.onSuccess = () => {\n      console.log('Self destruct success');\n      this.actor.decreaseDurabilityWithoutDefense(damageToSelf);\n    };\n    this.onFailure = () => {\n      console.log('Self destruct fails');\n      this.actor.destroy();\n    };\n  }\n}\n","import { Base } from './Base';\nimport { SelfDestructiveAttack } from \"./SelfDestructiveAttack\";\nimport * as Constant from '../constants';\n\nexport class ProjectileMove extends Base {\n  constructor({ targetPos, damageToSelf = 1, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.processDelay = processDelay;\n    this.damageToSelf = damageToSelf;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let moveSuccess = this.actor.move(this.targetPos);\n    if (moveSuccess) {\n      this.actor.energy -= this.energyCost;\n      success = true;\n    }\n    else {\n      success = true;\n      alternative = new SelfDestructiveAttack({\n        targetPos: this.targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        damageToSelf: this.damageToSelf,\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import * as Constant from '../constants';\nimport { ProjectileMove } from '../Actions/ProjectileMove';\nimport { DestroySelf } from '../Actions/DestroySelf';\n\nexport const DirectionalProjecting = superclass => class extends superclass {\n  constructor({ path = false, direction = { x: 0, y: 0 }, attackDamage = 1, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DIRECTIONAL_PROJECTING');\n    this.path = path;\n    this.direction = direction;\n    this.attackDamage = attackDamage;\n    this.range = range;\n  }\n  createPath(game) {\n    let path = [];\n    for (let i = 1; i < this.range + 1; i++) {\n      path.push({\n        x: this.pos.x + (this.direction[0] * i),\n        y: this.pos.y + (this.direction[1] * i)\n      });\n    }\n    this.path = path;\n  }\n  getAction(game) {\n    let result = null;\n    let newX = this.pos.x + this.direction[0];\n    let newY = this.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n    this.passable = false;\n    if (this.range > 0) {\n      result = new ProjectileMove({\n        targetPos: targetPos,\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        damageToSelf: 1,\n        onSuccess: () => this.range -= 1,\n        onAfter: () => {\n          if (this.energy <= 100) {\n            game.engine.setActorToPrevious();\n          }\n        }\n      });\n    }\n    else {\n      result = new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: 0\n      });\n    }\n    return result;\n  }\n};\n","import { Base } from './Base';\nimport { Attack } from \"./Attack\";\nimport * as Constant from '../constants';\n\nexport class Shove extends Base {\n  constructor({ targetPos, direction, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.direction = direction;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let moveSuccess = this.actor.shove(this.targetPos, this.direction);\n    if (moveSuccess) {\n      this.actor.energy -= this.energyCost;\n      success = true;\n    }\n    else {\n      success = true;\n      alternative = new Attack({\n        targetPos: this.targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { MoveOrAttack } from './MoveOrAttack';\nimport { DestroySelf } from './DestroySelf';\nimport * as Constant from '../constants';\n\nexport class ThrowProjectileGas extends MoveOrAttack {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.processDelay = 0;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    this.actor.passable = false;\n    let move_result = super.perform();\n    if (move_result.success) {\n      this.actor.path.shift();\n      success = true;\n    }\n    if (this.actor.path.length === 0) {\n      success = true;\n      alternative = new DestroySelf({\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n      });\n    }\n    if (move_result.alternative) {\n      this.actor.attack(this.targetPos);\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { MoveOrAttack } from '../Actions/MoveOrAttack';\nimport { Say } from '../Actions/Say';\n\nexport const Chasing = superclass => class extends superclass {\n  constructor({ targetEntity = null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CHASING');\n    this.targetEntity = targetEntity;\n  }\n  getAction(game) {\n    if (this.targetEntity) {\n      let path = Helper.calculatePath(game, this.targetEntity.pos, this.pos);\n      let targetPos = path.length > 0 ? path[0] : this.pos;\n      return new MoveOrAttack({\n        targetPos,\n        game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    } else {\n      return new Say({\n        message: 'Where are they?',\n        game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n  }\n};\n","import { Base } from './Base';\nimport * as Helper from '../../helper';\n\nexport class PlaceActor extends Base {\n  constructor({ targetPos, entity, interrupt = true, forcePlacement = false, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.entity = entity;\n    this.interrupt = interrupt;\n    this.forcePlacement = forcePlacement;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    // let canPlace = true;\n    // if (!this.game.canOccupyPosition(this.targetPos, this.entity)) canPlace = false;\n    // if (this.entity.entityTypes.includes('PARENT')) {\n    //   this.entity.children.forEach((child) => {\n    //     console.log(child.pos);\n    //     if (!this.game.canOccupyPosition(child.pos, child)) canPlace = false;\n    //   })\n    // }\n    // if (canPlace) {\n    //   this.entity.pos = this.targetPos;\n    //   this.game.engine.addActorAsPrevious(this.entity);\n    //   this.game.engine.start(); // should this be used outside of engine?\n    //   success = true;      \n    // }\n    let canOccupyPosition = this.forcePlacement ? true : this.game.canOccupyPosition(this.targetPos, this.entity);\n    const tile = this.game.map[Helper.coordsToString(this.targetPos)];\n    if (canOccupyPosition && tile) {\n      this.entity.pos = this.targetPos;\n      tile.entities.push(this.entity);\n      // this.game.engine.addActorAsPrevious(this.entity);\n      // this.game.engine.addActor(this.entity);\n      this.game.engine.addActorAsNext(this.entity);\n      // this.interrupt = true;\n      // this.game.engine.start(); // BUGGED - should this be used outside of engine?\n      success = true;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","export const Draggable = superclass => class extends superclass {\n  constructor({ draggable = true, ...args }) {\n    super({ ...args });\n    this.draggable = draggable;\n    this.entityTypes = this.entityTypes.concat('DRAGGABLE');\n  }\n};\n","export const Pushable = superclass => class extends superclass {\n  constructor({ pushable = true, ...args }) {\n    super({ ...args });\n    this.pushable = pushable;\n    this.entityTypes = this.entityTypes.concat('PUSHABLE');\n  }\n};\n","import * as Constant from './constants';\nimport {\n  DestructiveCloudProjectileV2,\n  DestructiveProjectile,\n  DirectionalProjectile,\n  MovingWall,\n  DestructiveCloudProjectile,\n  Weapon,\n  Armor,\n} from './Entities/index';\n\nexport const TYPE = {\n  KUNAI: 'Kunai',\n  DIRECTIONAL_KUNAI: 'Directional Kunai',\n  SWORD: 'Sword',\n  AXE: 'Axe',\n  ARMOR: 'Armor',\n  WATER_GUN: 'Water Gun',\n  BARRIER: 'Barrier',\n}\n\nconst createProjectileCloud = ({ \n  engine, \n  actor, \n  targetPos, \n  throwDirection,\n  speed,\n  structureType,\n  createProjectile,\n}) => {\n  let structure = Constant.CLONE_PATTERNS[structureType];\n\n  let children = structure.positions.map((slot) => {\n    let position = {\n      x: actor.pos.x + slot.x + (throwDirection.x * structure.x_offset),\n      y: actor.pos.y + slot.y + (throwDirection.y * structure.y_offset)\n    }\n    \n    let targetPosition = {\n      x: targetPos.x + slot.x,\n      y: targetPos.y + slot.y,\n    }\n\n    return createProjectile(engine, position, targetPosition);\n  })\n\n  return new DestructiveCloudProjectileV2({\n    game: engine.game,\n    passable: true,\n    speed,\n    children,\n  })\n}\n\nconst createProjectileSingularity = ({ \n  engine, \n  actor, \n  targetPos, \n  speed,\n  structureType,\n  createProjectile,\n}) => {\n  let structure = Constant.CLONE_PATTERNS[structureType];\n\n  let children = structure.positions.map((slot) => {\n    let position = {\n      x: targetPos.x + slot.x + structure.x_offset,\n      y: targetPos.y + slot.y + structure.y_offset\n    }\n\n    let targetPosition = {\n      x: targetPos.x,\n      y: targetPos.y,\n    }\n\n    return createProjectile(engine, position, targetPosition);\n\n  })\n\n  return new DestructiveCloudProjectileV2({\n    game: engine.game,\n    passable: true,\n    speed,\n    children,\n  })\n}\n\nconst createProjectileBurst = ({ \n  engine, \n  actor, \n  targetPos, \n  speed,\n  structureType,\n  createProjectile,\n}) => {\n  let structure = Constant.CLONE_PATTERNS[structureType];\n\n  let children = structure.positions.map((slot) => {\n    let position = {\n      x: targetPos.x + structure.x_offset,\n      y: targetPos.y + structure.y_offset\n    }\n\n    let targetPosition = {\n      x: targetPos.x + slot.x,\n      y: targetPos.y + slot.y,\n    }\n\n    return createProjectile(engine, position, targetPosition);\n\n  })\n\n  return new DestructiveCloudProjectileV2({\n    game: engine.game,\n    passable: true,\n    speed,\n    children,\n  })\n}\n\nexport const sandTomb = ({\n  engine,\n  actor,\n  targetPos,\n}) => createProjectileSingularity({\n  engine,\n  actor,\n  targetPos,\n  speed: 100,\n  structureType: 'circle',\n  createProjectile: sandTombPart,\n})\n\nexport const sandBurst = ({\n  engine,\n  actor,\n  targetPos,\n}) => createProjectileBurst({\n  engine,\n  actor,\n  targetPos,\n  speed: 500,\n  structureType: 'circle',\n  createProjectile: sandTombPart,\n})\n\nexport const sandWallPulse = ({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n}) => createProjectileCloud({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n  speed: 500,\n  structureType: 'smallSquare',\n  createProjectile: movingSandWall,\n})\n\nexport const kunaiCloud = ({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n}) => createProjectileCloud({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n  speed: 500,\n  structureType: 'square',\n  createProjectile: kunai,\n})\n\nexport const fireballCloud = ({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n}) => createProjectileCloud({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n  speed: 500,\n  structureType: 'square',\n  createProjectile: fireball,\n})\n\nexport const kunai = (engine, pos, targetPos) => new DestructiveProjectile({\n  game: engine.game,\n  targetPos,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    character: '>',\n    color: 'white',\n    background: '',\n    animation: [\n      { background: '', color: 'white', character: '>', },\n      { background: '', color: 'white', character: 'v', },\n      { background: '', color: 'white', character: '<', },\n      { background: '', color: 'white', character: '^', },\n      { background: '', color: 'white', character: '>', },\n    ],\n  },\n  name: TYPE.KUNAI,\n  speed: 600,\n  energy: 0,\n  range: 30,\n})\n\nexport const directionalKunai = (engine, pos, direction, range) => new DirectionalProjectile({\n  game: engine.game,\n  direction,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    character: '>',\n    color: 'white',\n    background: '',\n    animation: [\n      { background: 'lightgrey', color: 'grey', character: '>', },\n      { background: 'lightgrey', color: 'grey', character: 'v', },\n      { background: 'lightgrey', color: 'grey', character: '<', },\n      { background: 'lightgrey', color: 'grey', character: '^', },\n      { background: 'lightgrey', color: 'grey', character: '>', },\n    ],\n  },\n  name: TYPE.DIRECTIONAL_KUNAI,\n  speed: 600,\n  energy: 0,\n  range,\n})\n\nexport const movingSandWall = (engine, pos, targetPos, range) => new MovingWall({\n  game: engine.game,\n  passable: false,\n  pos: { x: pos.x, y: pos.y },\n  targetPos,\n  renderer: {\n    // character: '>',\n    character: ']',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.KUNAI,\n  // name: TYPE.BARRIER,\n  durability: 3,\n  range,\n  speed: 300,\n})\n\nexport const sandShuriken = (engine, pos, direction, range) => new DirectionalProjectile({\n  game: engine.game,\n  direction,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '✦️',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.DIRECTIONAL_KUNAI,\n  speed: 600,\n  energy: 0,\n  range,\n})\n\nexport const sandTombPart = (engine, pos, targetPos) => new DestructiveProjectile({\n  game: engine.game,\n  targetPos,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '✦️',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.KUNAI,\n  speed: 600,\n  energy: 0,\n  range: 30,\n})\n\nexport const fireball = (engine, pos, targetPos) => new DestructiveProjectile({\n  game: engine.game,\n  targetPos,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '🔥',\n    color: 'wheat',\n    background: 'tomato',\n  },\n  name: TYPE.KUNAI,\n  speed: 100,\n  energy: 0,\n  range: 30,\n})\n\nexport const fireballGas = (engine, actor, targetPos) => {\n  return new DestructiveCloudProjectile({\n    game: engine.game,\n    owner_id: actor ? actor.id : null,\n    targetPos,\n    passable: true,\n    pos: actor ? { x: actor.pos.x, y: actor.pos.y } : null,\n    renderer: {\n      // character: '@',\n      character: '🔥',\n      color: 'wheat',\n      background: 'tomato',\n    },\n    name: TYPE.KUNAI,\n    speed: 100,\n    range: 10,\n    clonePattern: Constant.CLONE_PATTERNS.bigSquare,\n    // clonePattern: Constant.CLONE_PATTERNS.square,\n  })\n}\n\nexport const waterball = (engine, actor, targetPos) => new DestructiveCloudProjectile({\n  game: engine.game,\n  owner_id: actor ? actor.id : null,\n  targetPos,\n  passable: true,\n  pos: actor ? { x: actor.pos.x, y: actor.pos.y } : null,\n  renderer: {\n    // character: '~',\n    character: '🌊',\n    color: 'silver',\n    background: 'lightslategrey',\n  },\n  name: TYPE.KUNAI,\n  speed: 800,\n  range: 10,\n  clonePattern: Constant.CLONE_PATTERNS.bigSquare,\n  // clonePattern: Constant.CLONE_PATTERNS.square,\n})\n\nexport const sword = (engine) => new Weapon({\n  game: engine.game,\n  name: TYPE.SWORD,\n  passable: true,\n  attackDamage: 1,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    // character: '|',\n    character: '🗡️',\n    color: 'white',\n    background: '',\n  },\n})\n\nexport const axe = (engine) => new Weapon({\n  game: engine.game,\n  name: TYPE.AXE,\n  passable: true,\n  attackDamage: 5,\n  equipmentType: Constant.EQUIPMENT_TYPES.GENERIC,\n  renderer: {\n    character: 'a',\n    sprite: '',\n    color: 'white',\n    background: '',\n  },\n})\n\nexport const waterGun = (engine) => new Weapon({\n  game: engine.game,\n  name: TYPE.WATER_GUN,\n  passable: true,\n  attackDamage: 0,\n  equipmentType: Constant.EQUIPMENT_TYPES.GENERIC,\n  renderer: {\n    character: 'w',\n    sprite: '',\n    color: Constant.THEMES.SOLARIZED.blue,\n    background: '',\n  },\n})\n\nexport const fireJacket = (engine) => new Armor({\n  game: engine.game,\n  name: 'Fire Jacket',\n  passable: true,\n  defense: 1,\n  equipmentType: Constant.EQUIPMENT_TYPES.GENERIC,\n  renderer: {\n    character: 'J',\n    sprite: '',\n    color: Constant.THEMES.SOLARIZED.magenta,\n    background: '',\n  },\n})\n\nexport const test = (engine, pos) => new Weapon({\n  game: engine.game,\n  name: TYPE.SWORD,\n  passable: true,\n  attackDamage: 1,\n  pos,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    // character: '|',\n    character: '🗡️',\n    color: 'white',\n    background: 'lightsteelblue',\n  },\n})\n","import { destroyEntity } from './helper';\nexport const Destructable = superclass => class extends superclass {\n  constructor({ durability = 1, defense = 0, onDestroy = () => null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DESTRUCTABLE');\n    this.durability = durability;\n    this.durabilityMax = durability;\n    this.defense = defense;\n    this.onDestroy = onDestroy;\n    this.actorSprite = this.renderer.sprite\n    this.actorCharacter = this.renderer.character\n  }\n  getDefense() {\n    let defense = this.defense;\n    // add in reducer to get defense stats of all equpiment\n    if (this.entityTypes.includes('EQUIPING')) {\n      this.equipment.forEach((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('DESTRUCTABLE')) {\n            defense += slot.item.getDefense();\n          }\n        }\n      });\n    }\n    return defense;\n  }\n  decreaseDurabilityWithoutDefense(value) {\n    this.durability -= value;\n    if (this.durability <= 0) {\n      this.onDestroy(this);\n      this.destroy();\n    }\n  }\n  decreaseDurability(value) {\n    const current = this.durability;\n    const newDurability = current - (value - this.getDefense());\n    this.durability = Math.min(current, newDurability);\n    this.updateActorRenderer();\n    if (this.durability <= 0) {\n      this.onDestroy(this);\n      this.destroy();\n    }\n  }\n  increaseDurability(value) {\n    this.durability += value;\n    this.updateActorRenderer();\n  }\n  updateActorRenderer() {\n    if (this.durability === this.durabilityMax) {\n      this.renderer.sprite = this.actorSprite;\n      this.renderer.character = this.actorCharacter;\n    } else {\n      this.renderer.sprite = this.durability;\n      this.renderer.character = this.durability;\n    }\n    this.game.draw();\n  }\n  destroy() {\n    destroyEntity(this);\n  }\n};\n","export const Burnable = superclass => class extends superclass {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('BURNABLE');\n    this.canBurn = true;\n    this.willResetCanBurn = false;\n  }\n  resetCanBurn() {\n    this.willResetCanBurn = false;\n    this.canBurn = true;\n  }\n  burn() {\n    if (this.canBurn) {\n      this.decreaseDurability(2);\n      return true;\n    }\n    return false;\n  }\n};\n","import SOUNDS from '../sounds';\nimport { FireSpread } from './index';\nimport * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport {MESSAGE_TYPE} from '../message';\n\nexport const Exploding = superclass => class extends superclass {\n  constructor({ flammability = 1, explosivity = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('EXPLODING');\n    this.flammability = flammability;\n    this.explosivity = explosivity;\n  }\n  enflame() {\n    // create num of fireSpreads\n    const fires = Array(this.flammability).fill('').map((item) => {\n      return new FireSpread({\n        name: 'Pyro',\n        pos: { ...this.pos },\n        game: this.game,\n        renderer: {\n          character: '*',\n          color: Constant.THEMES.SOLARIZED.base3,\n          background: Constant.THEMES.SOLARIZED.red,\n        },\n        timeToSpread: 1,\n        spreadCount: 1,\n        durability: 1,\n        attackDamage: 1,\n        speed: 100,\n      });\n    });\n    fires.forEach((fire) => {\n      // add them to map\n      this.game.placeActorOnMap(fire);\n      // add them to engine\n      this.game.engine.addActor(fire);\n    });\n  }\n  explode() {\n    const positions = Helper.getPointsWithinRadius({ x: 0, y: 0 }, this.explosivity)\n    let structure = {\n      x_offset: 0,\n      y_offset: 0,\n      positions\n    };\n    structure.positions.forEach((slot) => {\n      let position = {\n        x: this.pos.x + slot.x + structure.x_offset,\n        y: this.pos.y + slot.y + structure.y_offset\n      };\n      const tile = this.game.map[Helper.coordsToString(position)];\n      if (tile) {\n        tile.type = 'BURNT';\n        let targets = Helper.getDestructableEntities(tile.entities.filter(\n          (entity) => entity.id !== this.id\n        ));\n        if (targets.length > 0) {\n          // let target = targets[0];\n          targets.forEach((target) => {\n            let damage = this['attackDamage'] ? this.attackDamage : this.explosivity;\n            this.game.addMessage(`${this.name} does ${damage} to ${target.name}`, MESSAGE_TYPE.DANGER);\n            target.decreaseDurability(damage);\n          })\n        }\n      }\n    });\n    if (this.explosivity > 0)\n      SOUNDS.explosion_0.play();\n    // this.game.draw(); //may not need draw here\n  }\n  destroy() {\n    this.explode();\n    this.enflame();\n    super.destroy();\n  }\n};\n","import * as _ from 'lodash';\n\nexport const HasKeymap = superclass => class extends superclass {\n  constructor({ initializeKeymap, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HAS_KEYMAP');\n    this.keymapStack = [];\n    this.initializeKeymap = initializeKeymap;\n    const keymap = initializeKeymap(this.game.engine, this);\n    this.addKeymap(keymap);\n  }\n\n  getKeymap () {\n    return _.get(this.keymapStack, '0', null);\n  }\n\n  addKeymap (newKeymap) {\n    this.keymapStack.unshift(newKeymap);\n  }\n\n  removeKeymap () {\n    this.keymapStack.shift();\n  }\n\n  reinitializeKeymap (ignoredKeys = []) {\n    this.keymapStack = [];\n    const keymap = this.initializeKeymap(this.game.engine, this);\n    ignoredKeys.forEach((key) => delete keymap[key])\n    this.addKeymap(keymap);\n  }\n\n  setKeymap (newKeymap) {\n    this.addKeymap(newKeymap);\n    return this.getKeymap;\n  }\n\n  goToPreviousKeymap () {\n    this.removeKeymap();\n    return this.getKeymap();\n  }\n};\n","export const Upgrade = ({\n  activate = (actor) => null,\n  canUpgrade = (actor) => true,\n  cost = 1,\n  name = 'upgrade',\n  removeOnActivate = false,\n}) => {\n  return {\n    activate,\n    canUpgrade,\n    cost,\n    name,\n    removeOnActivate,\n  }\n}\n\nexport const Upgradable = superclass => class extends superclass {\n  constructor({ upgrade_points = 0, upgrade_tree = [], ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('UPGRADABLE');\n    this.upgrade_points = upgrade_points;\n    this.upgrade_tree = upgrade_tree;\n  }\n\n  upgrade (upgrade) {\n    if (upgrade.canUpgrade(this)) {\n      upgrade.activate(this);\n      if (upgrade.removeOnActivate) {\n        const newTree = this.upgrade_tree.filter((currUpgrade) => currUpgrade.name !== upgrade.name);\n        this.upgrade_tree = newTree;\n      }\n      return true;\n    }\n    return false;\n  }\n};\n","export const HasFaction = superclass => class extends superclass {\n  constructor({ faction = null, enemyFactions = [], ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HAS_FACTION');\n    this.faction = faction;\n    this.enemyFactions = enemyFactions;\n  }\n\n  getEnemies () {\n    return this.game.engine.actors\n      .filter((actor) => this.enemyFactions.includes( actor['faction']))\n  }\n};\n","import { ANIMATION_TYPES } from '../Display/konvaCustom';\nimport * as Helper from '../../helper';\nexport const UsesCover = superclass => class extends superclass {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('USES_COVER');\n    this.coverAnimations = [];\n    this.showCoverAnimations = true;\n    this.coveredBy = [];\n  }\n\n  isCovered () {\n    return this.coveredBy.length;\n  }\n\n  getCoverEntities () {\n    const keys = Object.keys(this.game.map);\n    let coverEntities = []\n    keys.forEach((key) => {\n      const tile = this.game.map[key]\n      const covers = tile.entities.filter((entity) => {\n        const hasCovers = entity.entityTypes.includes('COVERING')\n        return hasCovers;\n      })\n      coverEntities = [...coverEntities, ...covers];\n    })\n    return coverEntities;\n  }\n\n  getCoveredByIds () {\n    return this.coveredBy.map((entity) => entity.id);\n  }\n\n  setCoverAnimations () {\n    // check neigbors\n    if (!this.showCoverAnimations) return;\n    const tiles = Helper.getNeighboringTiles(this.game.map, this.getPosition());\n    let coverAnimated = false;\n    tiles.forEach((tile) => {\n      if (tile.entities.length) {\n        const entity = tile.entities[0];\n        if (entity.entityTypes.includes('COVERING')) {\n          if (entity.isProvidingCover()) {\n            const position = entity.getPosition();\n            const newAnimation = this.game.display.addAnimation(\n              ANIMATION_TYPES.BLINK_BOX,\n              {\n                x: position.x,\n                y: position.y,\n                color: '#3e7dc9'\n              }\n            );\n            this.coverAnimations.push(newAnimation);\n            coverAnimated = true;\n            this.coveredBy.push(entity);\n          }\n        }\n      }\n    });\n    if (coverAnimated) {\n      //animate covered actor\n      const position = this.getPosition();\n      const newAnimation = this.game.display.addAnimation(\n        ANIMATION_TYPES.BLINK_BOX,\n        {\n          x: position.x,\n          y: position.y,\n          color: '#3e7dc9'\n        }\n      );\n      this.coverAnimations.push(newAnimation);\n    }\n  }\n\n  removeCoverAnimations () {\n    if (this.coverAnimations.length) {\n      this.coverAnimations.forEach((animation) => {\n        this.game.display.removeAnimation(animation.id);\n      })\n      this.coverAnimations = [];\n    }\n  }\n\n  removeCoveredBy () {\n    this.coveredBy = [];\n  }\n\n  resetCoverAnimations() {\n    this.removeCoverAnimations();\n    this.removeCoveredBy();\n    this.setCoverAnimations();\n  }\n\n  destroy() {\n    this.showCoverAnimations = false;\n    this.removeCoverAnimations();\n    this.removeCoveredBy();\n    super.destroy();\n  }\n\n};\n","import { Say } from '../../../Actions/Say';\n\nexport default class Behavior {\n  constructor({ actor = null, repeat = 1 }) {\n    this.actor = actor;\n    this.repeat = repeat;\n    this.repeated = 0;\n  }\n\n  isValid () {\n    return true;\n  }\n\n  reset () {\n    this.repeated = 0;\n  }\n\n  shouldRepeat () {\n    return this.repeated < this.repeat\n  }\n\n  getDefaultActionParams() {\n    return {\n      game: this.actor.game,\n      actor: this.actor,\n      interrupt: this.repeated >= this.repeat,\n      energyCost: 0,\n    }\n  }\n\n  constructActionClassAndParams () {\n    let actionClass = Say;\n    let actionParams = {message: 'I am behaving'};\n    return [actionClass, actionParams];\n  }\n\n  getAction() {\n    const [actionClass, actionParams] = this.constructActionClassAndParams();\n    if (!actionClass || !actionParams) return null;\n    \n    return new actionClass({\n      ...this.getDefaultActionParams(),\n      ...actionParams,\n    });\n  }\n}\n","import pipe from 'lodash/fp/pipe';\nimport { Entity } from './Entity';\nimport { Parent } from './Parent';\nimport { PresentingUI } from './PresentingUI';\nimport { HasInnerGates } from './HasInnerGates';\nimport { UI } from './UI';\nimport {HasTargetingCursor} from './HasTargetingCursor';\nimport {HasShapePattern} from './HasShapePattern';\nimport { Attacking } from './Attacking';\nimport { RangedAttacking } from './RangedAttacking';\nimport { Equipable } from './Equipable';\nimport { Acting } from './Acting';\nimport { Rendering } from './Rendering';\nimport { Containing } from './Containing';\nimport { Equiping } from './Equiping';\nimport { Charging } from './Charging';\nimport { Signing } from './Signing';\nimport { Playing } from './Playing';\nimport { Cloning } from './Cloning';\nimport { Covering } from './Covering';\nimport { DestructiveProjecting } from './DestructiveProjecting';\nimport { DirectionalProjecting } from './DirectionalProjecting';\nimport { DirectionalPushing } from './DirectionalPushing';\nimport { GaseousDestructiveProjecting } from './GaseousDestructiveProjecting';\nimport { Gaseous } from './Gaseous';\nimport { Chasing } from './Chasing';\nimport { RangedChasing } from './RangedChasing';\nimport { Dragging } from './Dragging';\nimport { Draggable } from './Draggable';\nimport { Pushable } from './Pushable';\nimport { Spreading } from './Spreading';\nimport { Spawning } from './Spawning';\nimport { Destructable } from './Destructable';\nimport { IsParticle } from './IsParticle';\nimport { Speaking } from './Speaking';\nimport { Burnable } from './Burnable';\nimport { Exploding } from './Exploding';\nimport { Helpless } from './Helpless';\nimport { HasKeymap } from './HasKeymap';\nimport { Upgradable } from './Upgradable';\nimport { HasFaction } from './HasFaction';\nimport { UsesCover } from './UsesCover';\nimport { CyclesBehaviors } from './AI/CyclesBehaviors';\n\nexport const UI_Actor = pipe(\n  Acting,\n  Rendering,\n  Playing,\n  HasKeymap,\n  UI\n)(Entity);\n\nexport const Actor = pipe(\n  Acting,\n  Rendering\n)(Entity);\n\nexport const Speaker = pipe(\n  Acting,\n  Rendering,\n  Destructable,\n  Speaking,\n  Draggable,\n  Pushable,\n  Burnable,\n  Helpless,\n)(Entity);\n\nexport const Wall = pipe(\n  Rendering,\n  Destructable,\n)(Entity);\n\nexport const CoverWall = pipe(\n  Rendering,\n  Covering,\n  Destructable,\n)(Entity);\n\nexport const Debris = pipe(\n  Rendering,\n  Containing,\n  Draggable,\n  Burnable,\n  Destructable,\n  Exploding,\n  Pushable,\n)(Entity);\n\nexport const MovingWall = pipe(\n  Acting,\n  Rendering,\n  // Pushing,\n  DirectionalPushing,\n  Destructable,\n)(Entity);\n\nexport const Chaser = pipe(\n  Acting,\n  Rendering,\n  Chasing,\n  Destructable\n)(Entity);\n\nexport const JacintoAI = pipe(\n  Acting,\n  Rendering,\n  Destructable,\n  Attacking,\n  Pushable,\n  Equiping,\n  Containing,\n  RangedAttacking,\n  HasFaction,\n  UsesCover,\n  HasTargetingCursor,\n  CyclesBehaviors,\n)(Entity);\n\nexport const Bandit = pipe(\n  Acting,\n  Rendering,\n  Chasing,\n  Destructable,\n  Attacking,\n  Pushable,\n  HasFaction,\n  UsesCover,\n)(Entity);\n\nexport const RangedBandit = pipe(\n  Acting,\n  Rendering,\n  RangedChasing,\n  Destructable,\n  Attacking,\n  Pushable,\n  HasFaction,\n  UsesCover,\n)(Entity);\n\nexport const Player = pipe(\n  Acting,\n  Rendering,\n  PresentingUI,\n  HasTargetingCursor,\n  HasKeymap,\n  Dragging,\n  Charging,\n  Signing,\n  Containing,\n  Equiping,\n  Attacking,\n  RangedAttacking,\n  Destructable,\n  Cloning,\n  Playing,\n  Burnable,\n  Upgradable,\n  HasFaction,\n  UsesCover,\n)(Entity);\n\nexport const Weapon = pipe(\n  Rendering,\n  Equipable,\n  Attacking\n)(Entity);\n\nexport const RangedWeapon = pipe(\n  Rendering,\n  Equipable,\n  RangedAttacking,\n  Attacking,\n  HasShapePattern,\n)(Entity);\n\nexport const Armor = pipe(\n  Rendering,\n  Equipable,\n  Destructable,\n)(Entity);\n\nexport const Ammo = pipe(\n  Rendering,\n)(Entity);\n\nexport const DestructiveProjectile = pipe(\n  Acting,\n  Rendering,\n  Attacking,\n  DestructiveProjecting,\n  Destructable\n)(Entity);\n\nexport const DirectionalProjectile = pipe(\n  Acting,\n  Rendering,\n  Attacking,\n  DirectionalProjecting,\n  Destructable,\n)(Entity);\n\nexport const Grenade = pipe(\n  Acting,\n  Rendering,\n  Attacking,\n  DirectionalProjecting,\n  Destructable,\n  Exploding,\n)(Entity);\n\nexport const DestructiveCloudProjectile = pipe(\n  Acting,\n  Rendering,\n  Attacking,\n  GaseousDestructiveProjecting,\n  Destructable,\n  Gaseous\n)(Entity);\n\nexport const DestructiveCloudProjectileV2 = pipe(\n  Acting,\n  Destructable,\n  Parent,\n)(Entity);\n\nexport const FireSpread = pipe(\n  Acting,\n  Rendering,\n  Destructable,\n  Attacking,\n  Spreading,\n)(Entity);\n\nexport const EmergenceHole = pipe(\n  Acting,\n  Rendering,\n  Destructable,\n  Spawning,\n  HasFaction,\n)(Entity);\n\nexport const Particle = pipe(\n  Acting,\n  Rendering,\n  IsParticle,\n)(Entity);\n\nexport const ParticleEmitter = pipe(\n  Acting,\n  Destructable,\n  Parent,\n)(Entity);","export const UI = superclass => class extends superclass {\n  constructor({ initiatedBy = null, range = null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('UI');\n    this.initiatedBy = initiatedBy;\n    this.active = true;\n    this.range = range;\n  }\n  hasEnoughEnergy() {\n    return this.active;\n  }\n};\n","import { Say } from '../Actions/Say';\n\nexport const Speaking = superclass => class extends superclass {\n  constructor({ messages = ['I have nothing to say.'], messageType, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SPEAKING');\n    this.messages = messages;\n    this.messageType = messageType;\n  }\n  getAction(game) {\n    const message = this.messages.shift();\n    this.messages.push(message);\n    return new Say({\n      actor: this,\n      game,\n      message: message,\n      messageType: this.messageType,\n      processDelay: 0,\n    });\n  }\n};\n","import SOUNDS from '../sounds';\nimport * as Helper from '../../helper';\n\nexport const Helpless = superclass => class extends superclass {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HELPLESS');\n    this.saved = false;\n  }\n  save() {\n    this.saved = true;\n    SOUNDS.save.play();\n  }\n  destroy() {\n    const sound = Helper.getRandomInArray([SOUNDS.scream_0, SOUNDS.scream_1, SOUNDS.scream_2]);\n    sound.play();\n    super.destroy();\n  }\n};\n","import { ANIMATION_TYPES } from '../Display/konvaCustom';\n\nexport const Covering = superclass => class extends superclass {\n  constructor({ accuracyModifer = 0, damageModifer = 0, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('COVERING');\n    this.providesCover = true;\n    this.accuracyModifer = accuracyModifer;\n    this.damageModifer = damageModifer;\n  }\n\n  isProvidingCover () {\n    return this.providesCover && (this.accuracyModifer < 0 || this.damageModifer < 0);\n  }\n\n};\n","import * as Constant from '../constants';\nimport { Shove } from '../Actions/Shove';\nimport { DestroySelf } from '../Actions/DestroySelf';\n\nexport const DirectionalPushing = superclass => class extends superclass {\n  constructor({ path = false, direction = { x: 0, y: 0 }, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DIRECTIONAL_PUSHING');\n    this.path = path;\n    this.direction = direction;\n    this.range = range;\n  }\n  getAction(game) {\n    let result = null;\n    let newX = this.pos.x + this.direction[0];\n    let newY = this.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n    this.passable = false;\n    if (this.range > 0) {\n      result = new Shove({\n        targetPos: targetPos,\n        direction: this.direction,\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        onSuccess: () => this.range -= 1,\n      });\n    }\n    else {\n      result = new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: 0\n      });\n    }\n    return result;\n  }\n};\n","import Behavior from './Behaviors/Behavior';\nimport { Say } from '../../Actions/Say';\n\n\nexport const CyclesBehaviors = superclass => class extends superclass {\n  constructor({ \n    behaviors = [new Behavior()],\n    ...args \n  }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CYCLES_BEHAVIORS');\n    this.behaviors = behaviors.map((behavior) => {\n      behavior['actor'] = this;\n      return behavior;\n    });\n    this.activeBehaviorIndex = 0;\n  }\n\n  getActiveBehavior() {\n    return this.selectedBehavior();\n  }\n\n  selectedBehavior (){\n    return this.behaviors[this.activeBehaviorIndex]\n  }\n\n  shouldCycleToNextBehavior(behavior) {\n    return !behavior.isValid() || !behavior.shouldRepeat();\n  }\n\n  getDefaultAction() {\n    return new Say({\n      message: '*whistles*',\n      game: this.game,\n      actor: this,\n      interrupt: true,\n      energyCost: 0\n    });\n  }\n\n  setBehaviorIndex(nexIndex) {\n    this.activeBehaviorIndex = nexIndex;\n  }\n\n  setNextBehaviorIndex() {\n    const nextBehaviorIndex = (this.activeBehaviorIndex + 1) % this.behaviors.length;\n    this.setBehaviorIndex(nextBehaviorIndex);\n  }\n\n  selectNextBehavior() {\n    this.setNextBehaviorIndex();\n    return this.selectedBehavior();\n  }\n\n  getAction() {\n    let action = null;\n    let behavior = this.selectedBehavior();\n    let killLoopAt = this.behaviors.length;\n\n    while (this.shouldCycleToNextBehavior(behavior)) {\n      behavior.reset();\n      behavior = this.selectNextBehavior();\n    }\n\n    while (action === null) {\n      behavior.repeated += 1;\n      action = behavior.getAction();\n      killLoopAt -= 1;\n      if (killLoopAt >= 0) break;\n    }\n\n    if (!action) action = this.getDefaultAction();\n    return action;\n  }\n};\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper'; \nimport { PlaceActor } from '../Actions/PlaceActor';\nimport { Say } from '../Actions/Say';\nimport { MoveOrAttack } from '../Actions/MoveOrAttack';\n\nexport const RangedChasing = superclass => class extends superclass {\n  constructor({ targetEntity = null, getProjectile = () => null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('RANGED_CHASING');\n    this.targetEntity = targetEntity;\n    this.getProjectile = getProjectile;\n  }\n  targetInPath(pathToCheck, targetPos) {\n    let inPath = false;\n    pathToCheck.forEach((pos) => {\n      if (pos.x === targetPos.x && pos.y === targetPos.y) {\n        inPath = true;\n      }\n    });\n    return inPath;\n  }\n  getAction(game) {\n    if (!this.targetEntity) {\n      return new Say({\n        message: `Where are they?`,\n        game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n    let throwDirection = {\n      x: Math.sign(this.targetEntity.pos.x - this.pos.x),\n      y: Math.sign(this.targetEntity.pos.y - this.pos.y),\n    };\n    // projectile.initialize()\n    let projectile = this.getProjectile({\n      pos: {\n        x: this.pos.x,\n        y: this.pos.y,\n      },\n      targetPos: { ...this.targetEntity.pos },\n      direction: [throwDirection.x, throwDirection.y],\n      range: 10,\n    });\n    // projectile.getPath()\n    projectile.createPath(game);\n    // is target in path\n    const inPath = this.targetInPath(projectile.path, this.targetEntity.pos);\n    if (inPath) {\n      // throw\n      if (game.canOccupyPosition(projectile.pos, projectile)) {\n        return new PlaceActor({\n          targetPos: { ...projectile.pos },\n          entity: projectile,\n          game,\n          actor: this,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      }\n      return new Say({\n        message: `I'll get you with this kunai!`,\n        game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n    // if not, select target tile in range of enemy and move\n    let movePath = Helper.calculatePath(game, this.targetEntity.pos, this.pos);\n    let targetPos = movePath.length > 0 ? movePath[0] : this.pos;\n    return new MoveOrAttack({\n      targetPos,\n      game,\n      actor: this,\n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n  }\n};\n","export const PresentingUI = superclass => class extends superclass {\n  constructor({ presentingUI = false, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('PRESENTING_UI');\n    this.presentingUI = presentingUI;\n  }\n};\n","import * as Helper from '../../helper'; \n\nexport const Dragging = superclass => class extends superclass {\n  constructor({ draggedEntity = null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DRAGGING');\n    this.draggedEntity = draggedEntity;\n  }\n  grab(pos) {\n    const tile = this.game.map[Helper.coordsToString(pos)];\n    if (!tile)\n      return false;\n    if (tile.entities.length > 0) {\n      const entity = tile.entities[0];\n      if (entity.entityTypes.includes('DRAGGABLE'))\n        if (!this.draggedEntity && entity.draggable === true) {\n          this.draggedEntity = entity;\n          return true;\n        }\n    }\n    return false;\n  }\n  release() {\n    if (!this.draggedEntity)\n      return false;\n    const draggedEntity = { ...this.draggedEntity };\n    this.draggedEntity = null;\n    return draggedEntity;\n  }\n  drag(lastPos) {\n    // update entity position\n    const pos = this.draggedEntity.pos;\n    // get tile of draged entity\n    let tile = this.game.map[Helper.coordsToString(pos)];\n    // remove dragged entity from that tile\n    this.game.map[Helper.coordsToString(pos)] = { ...tile, entities: tile.entities.filter((e) => e.id !== this.draggedEntity.id) };\n    // update dragged ent to player's position\n    this.draggedEntity.pos = lastPos;\n    // add dragged ent to new tile\n    this.game.map[Helper.coordsToString(lastPos)].entities.push(this.draggedEntity);\n  }\n  move(targetPos) {\n    const lastPos = { ...this.pos };\n    if (this.draggedEntity) {\n      const moveSuccess = super.move(targetPos);\n      if (moveSuccess) {\n        this.drag(lastPos);\n        return true;\n      }\n      return moveSuccess;\n    }\n    return super.move(targetPos);\n  }\n};\n","export const Charging = superclass => class extends superclass {\n  constructor({ charge = 2, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CHARGING');\n    this.charge = charge;\n    this.chargeMax = charge;\n  }\n  decreaseCharge(value) {\n    this.charge = Math.max(0, this.charge - value);\n  }\n  increaseCharge(value) {\n    this.charge = Math.min(this.chargeMax, this.charge + value);\n  }\n};\n","export const Signing = superclass => class extends superclass {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SIGNING');\n    this.signHistory = [];\n  }\n  addSign(sign) {\n    if (this.signHistory.length >= 4) {\n      this.signHistory.shift();\n    }\n    this.signHistory.push(sign);\n  }\n  clearSigns() {\n    this.signHistory = [];\n  }\n};\n","import uuid from 'uuid/v1';\nimport { destroyEntity } from './helper';\nimport { cloneDeep, find } from 'lodash';\n\nexport const Cloning = superclass => class extends superclass {\n  constructor({ cloneLimit = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CLONING');\n    this.cloneLimit = cloneLimit;\n    this.clones = [];\n  }\n  // perhaps clones should have a status effect that leeches parent actor's energy or chakra\n  // status effects should be removed from engine when owner is removed.\n  destroy() {\n    // add function to override self destroy funtion \n    // if this actor dies, clones should be destroyed as well\n    if (this.clones) {\n      this.clones.map((clone) => {\n        destroyEntity(clone);\n      });\n    }\n    destroyEntity(this);\n  }\n  destroyClone(id) {\n    // overrides clone destroy function\n    // when clone is destroyed, clone count will change accordingly\n    const index = this.clones.findIndex((c) => c.id === id);\n    if (index >= 0) {\n      this.clones[index].super__destroy();\n      this.clones.splice(index, 1);\n    }\n  }\n  createClone(cloneArgs) {\n    if (this.clones.length < this.cloneLimit) {\n      let clone = cloneDeep(this);\n      clone.name = `Clone`;\n      clone.game = this.game;\n      clone.id = uuid();\n      if (clone.entityTypes.includes('HAS_KEYMAP')) {\n        const ignoredKeys = find(cloneArgs, { 'attribute': 'ignoredKeys' });\n        clone.reinitializeKeymap(ignoredKeys? ignoredKeys.value : []);\n      }\n      delete clone.clones;\n      clone['super__destroy'] = clone.destroy;\n      clone.destroy = () => { this.destroyClone(clone.id); };\n      cloneArgs.forEach((arg) => {\n        clone[arg.attribute] = arg.value;\n      });\n      if (this.game.placeActorOnMap(clone)) {\n        this.game.engine.addActorAsNext(clone);\n        this.game.draw();\n        this.clones.push(clone);\n        return true;\n      }\n      ;\n    }\n    return false;\n  }\n};\n","import {CLONE_PATTERNS} from '../constants';\nimport {getPositionsFromStructure} from '../../helper';\nexport const HasShapePattern = superclass => class extends superclass {\n  constructor({ shapePattern = CLONE_PATTERNS.point, ...args }) {\n    super({ ...args });\n    this.shapePattern = shapePattern;\n    this.entityTypes = this.entityTypes.concat('HAS_SHAPE_PATTERN');\n  }\n\n  getPositionsInShape (pos) {\n    return getPositionsFromStructure(this.shapePattern, pos);\n  }\n};\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { ThrowProjectile } from '../Actions/ThrowProjectile';\n\nexport const DestructiveProjecting = superclass => class extends superclass {\n  constructor({ path = false, targetPos = null, attackDamage = 1, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DESTRUCTIVE_PROJECTING');\n    this.path = path;\n    this.targetPos = targetPos;\n    this.attackDamage = attackDamage;\n    this.range = range;\n  }\n  createPath(game) {\n    let path = Helper.calculatePathWithRange(game, this.targetPos, this.pos, 8, this.range);\n    this.path = path;\n  }\n  getAction(game) {\n    if (!this.path) {\n      this.createPath(game);\n    }\n    let targetPos = this.path.length > 0 ? this.path[0] : this.pos;\n    let result = new ThrowProjectile({\n      targetPos,\n      game,\n      actor: this,\n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n    return result;\n  }\n};\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { ThrowProjectileGas } from '../Actions/ThrowProjectileGas';\n\nexport const GaseousDestructiveProjecting = superclass => class extends superclass {\n  constructor({ owner_id = null, path = false, targetPos = null, attackDamage = 1, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('GASEOUS_DESTRUCTIVE_PROJECTING');\n    this.path = path;\n    this.targetPos = targetPos;\n    this.attackDamage = attackDamage;\n    this.range = range;\n    this.owner_id = owner_id;\n  }\n  canAttack(entity) {\n    let success = super.canAttack();\n    if (success) {\n      success = this.owner_id === null || (entity.owner_id !== this.owner_id);\n    }\n    return success;\n  }\n  createPath(game) {\n    let path = Helper.calculatePathWithRange(game, this.targetPos, this.pos, 8, this.range);\n    this.path = path;\n  }\n  getAction(game) {\n    if (!this.path) {\n      this.createPath(game);\n    }\n    let targetPos = this.path.length > 0 ? this.path[0] : this.pos;\n    let result = new ThrowProjectileGas({\n      targetPos,\n      game,\n      actor: this,\n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n    return result;\n  }\n};\n","import uuid from 'uuid/v1';\nimport { cloneDeep, cloneDeepWith } from 'lodash';\nimport * as Constant from '../constants';\n\nexport const Gaseous = superclass => class extends superclass {\n  constructor({ isClone = false, cloneCount = 0, clonePattern = Constant.CLONE_PATTERNS.square, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('GASEOUS');\n    this.isClone = isClone;\n    this.cloneCount = cloneCount;\n    this.clonePattern = cloneDeep(clonePattern);\n  }\n  getAction(game) {\n    let offset = this.clonePattern.positions.find((pos) => !pos.taken);\n    if (!this.isClone && offset) {\n      offset.taken = true;\n      let clone = cloneDeepWith(this, (value, key) => {\n        switch (key) {\n          case 'id':\n          case 'game':\n          case 'engine':\n          case 'clones':\n            return null;\n          default:\n            return undefined;\n        }\n      });\n      clone.game = game;\n      clone.id = uuid();\n      if (this.hasOwnProperty('pos')) {\n        let referencePos = this.pos;\n        clone.pos = {\n          x: referencePos.x + offset.x,\n          y: referencePos.y + offset.y\n        };\n      }\n      if (clone.hasOwnProperty('path')) {\n        clone.path = clone.path.map((pos) => {\n          return {\n            x: pos.x + offset.x,\n            y: pos.y + offset.y\n          };\n        });\n      }\n      clone.isClone = true;\n      this.cloneCount += 1;\n      game.placeActorOnMap(clone);\n      game.engine.addActor(clone);\n      game.draw();\n    }\n    let result = super.getAction(game);\n    return result;\n  }\n};\n","import { FireSpread } from './index';\nimport * as Constant from '../constants';\nimport * as Helper from '../../helper'; \nimport * as MapHelper from '../Maps/helper'; \nimport { Say } from '../Actions/Say';\nimport { DestroySelf } from '../Actions/DestroySelf';\nimport { PlaceActor } from '../Actions/PlaceActor';\n\nexport const Spreading = superclass => class extends superclass {\n  constructor({ timeToSpread = 5, spreadCount = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SPREADING');\n    this.timeToSpreadMax = timeToSpread;\n    this.timeToSpread = timeToSpread;\n    this.spreadCountMax = spreadCount;\n    this.spreadCount = spreadCount;\n  }\n  getAction(game) {\n    // if no more spreads, then destroy\n    if (this.spreadCount <= 0) {\n      return new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n        onAfter: () => {\n          game.map[Helper.coordsToString(this.pos)].type = 'BURNT';\n        },\n      });\n    }\n    // if its time to expand again, create a new fire spread and placeActor\n    if (this.timeToSpread <= 0) {\n      // find adjacent spot to spread to\n      let adjacentPositions = [\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + 1,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + -1,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + 1,\n        },\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + -1,\n        },\n      ];\n      let adjacentPos = null;\n      let kill = 100;\n      while (kill > 0) {\n        let newPos = Helper.getRandomInArray(adjacentPositions);\n        let newTile = MapHelper.getTileFromMap({map: this.game.map, position: newPos});\n        let tileExists = Boolean(newTile);\n        let notBurnt = true;\n        let canBurn = false;\n        if (newTile) {\n          notBurnt = newTile.type !== 'BURNT';\n          canBurn = MapHelper.tileHasTag({tile: newTile, tag: 'BURNABLE'});\n        }\n        if (tileExists && notBurnt && canBurn) {\n          adjacentPos = newPos;\n          break;\n        }\n        kill -= 1;\n      }\n      if (adjacentPos) {\n        // create new fire actor and place\n        let fire = new FireSpread({\n          name: 'Pyro',\n          pos: { x: 0, y: 0 },\n          game,\n          renderer: {\n            character: '*',\n            sprite: '',\n            color: Constant.THEMES.SOLARIZED.base3,\n            background: Constant.THEMES.SOLARIZED.red,\n          },\n          timeToSpread: this.timeToSpreadMax,\n          spreadCount: this.spreadCountMax,\n          durability: this.durability,\n          attackDamage: this.attackDamage,\n          speed: this.speed,\n        });\n        this.timeToSpread = this.timeToSpreadMax;\n        this.spreadCount -= 1;\n        return new PlaceActor({\n          targetPos: adjacentPos,\n          entity: fire,\n          game,\n          actor: this,\n          interrupt: false,\n          energyCost: Constant.ENERGY_THRESHOLD,\n          processDelay: 0,\n          forcePlacement: true,\n        });\n      }\n      this.timeToSpread = this.timeToSpreadMax;\n      this.spreadCount -= 1;\n    }\n    this.timeToSpread -= 1;\n    return new Say({\n      message: 'burning',\n      game,\n      actor: this,\n      processDelay: 0,\n    });\n  }\n};\n","import { FireSpread } from './index';\nimport * as Constant from '../constants';\nimport * as Helper from '../../helper'; \nimport * as Item from '../items'; \nimport { Say } from '../Actions/Say';\nimport { DestroySelf } from '../Actions/DestroySelf';\nimport { PlaceActor } from '../Actions/PlaceActor';\n\nexport const Spawning = superclass => class extends superclass {\n  constructor({ getSpawnedEntity, timeToSpread = 5, spreadCount = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SPAWNING');\n    this.timeToSpreadMax = timeToSpread;\n    this.timeToSpread = timeToSpread;\n    this.spreadCountMax = spreadCount;\n    this.spreadCount = spreadCount;\n    this.getSpawnedEntity = getSpawnedEntity\n  }\n  getAction(game) {\n    // if no more spreads, then destroy\n    if (this.spreadCount <= 0) {\n      return new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n      });\n    }\n    // if its time to expand again, create a new fire spread and placeActor\n    if (this.timeToSpread <= 0) {\n      // find adjacent spot to spread to\n      let adjacentPositions = [\n        {\n          x: this.pos.x + 1,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + -1,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + 1,\n        },\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + -1,\n        },\n      ];\n      let adjacentPos = null;\n      let kill = 100;\n      while (kill > 0) {\n        let newPos = Helper.getRandomInArray(adjacentPositions);\n        let newTile = this.game.map[Helper.coordsToString(newPos)];\n        let tileExists = Boolean(newTile);\n        if (tileExists && game.canOccupyPosition(newPos)) {\n          adjacentPos = newPos;\n          break;\n        }\n        kill -= 1;\n      }\n      if (adjacentPos) {\n        this.timeToSpread = this.timeToSpreadMax;\n        this.spreadCount -= 1;\n        return new PlaceActor({\n          targetPos: adjacentPos,\n          entity: this.getSpawnedEntity(adjacentPos),\n          game,\n          actor: this,\n          interrupt: false,\n          energyCost: Constant.ENERGY_THRESHOLD,\n          processDelay: 0,\n          forcePlacement: true,\n        });\n      }\n      this.timeToSpread = this.timeToSpreadMax;\n      this.spreadCount -= 1;\n    }\n    this.timeToSpread -= 1;\n    return new Say({\n      message: 'boom boom',\n      game,\n      actor: this,\n      processDelay: 0,\n    });\n  }\n};\n","import * as Constant from '../constants'; \n\nexport const IsParticle = superclass => class extends superclass {\n  constructor({ pos = { x: 1, y: 1 }, direction = { x: 0, y: 0 }, life = 1, speed = 1, type = Constant.PARTICLE_TYPE.directional, path = null, ...args }) {\n    super({ ...args });\n    this.pos = pos;\n    this.direction = direction;\n    this.life = life;\n    this.speed = speed;\n    this.type = type;\n    this.path = path;\n    this.entityTypes = this.entityTypes.concat('PARTICLE');\n  }\n  getNextPos(step) {\n    switch (this.type) {\n      case Constant.PARTICLE_TYPE.directional:\n        return {\n          x: this.pos.x + (this.direction.x * this.speed) * step,\n          y: this.pos.y + (this.direction.y * this.speed) * step,\n        };\n      case Constant.PARTICLE_TYPE.path:\n        const nextPos = this.path.shift();\n        return nextPos ? { ...nextPos } : { ...this.pos };\n      default:\n        break;\n    }\n  }\n  update(step) {\n    this.life -= step;\n    if (this.life > 0) {\n      this.pos = this.getNextPos(step);\n    }\n  }\n};\n","import * as Helper from '../../helper';\nimport { Particle } from '../Entities/index';\nimport { PARTICLE_TEMPLATES } from '../constants';\n\nexport class Engine {\n  constructor({\n    statusEffects = [],\n    actors = [],\n    currentActor = 0,\n    isRunning = false,\n    game = null,\n  }) {\n    this.statusEffects = statusEffects;\n    this.actors = actors;\n    this.currentActor = currentActor;\n    this.isRunning = isRunning;\n    this.game = game;\n  }\n\n  async processV1 () { // a turn-based system using speed and round-robin\n    let actor = this.actors[this.currentActor]\n    actor.gainEnergy(actor.speed);\n    if (actor.hasEnoughEnergy()) {\n      let action = actor.getAction(this.game);\n      if (!action) { return false; } // if no action given, kick out to UI input\n      while (true) {\n        let result = action.perform();\n        this.game.draw();\n        await Helper.delay(action.processDelay);\n        if (!result.success) return false;\n        if (result.alternative === null) break;\n        action = result.alternative;\n      }\n    }\n    this.currentActor = (this.currentActor + 1) % this.actors.length;\n    return true\n  }\n\n  async processV2() { // a turn-based system using speed and Action Points\n    let actor = this.actors[this.currentActor]\n    if (this.game.getFirstPlayer() === null) return false\n    let acting = true;\n    while (acting) {\n      if (!actor) return false;\n      // if (!actor.active) return false;\n      if (!actor.active) break;\n      let timePassed = 0;\n      \n      if (actor.hasEnoughEnergy()) {\n        // if (!actor.active) break;\n        let action = actor.getAction(this.game);\n        if (!action) { return false; } // if no action given, kick out to UI input\n        timePassed += action.getEnergyCost();\n        // console.log('timePassed ', timePassed);\n        \n        // timePassed += action.energyCost;\n        while (true) {\n          let result = {\n            success: false,\n            alternative: null,\n          };\n          // if (actor.energy >= action.energyCost) { // replace with checking for all required resources\n          if (action.canPayRequiredResources()) { // replace with checking for all required resources\n            \n            action.onBefore();\n            result = await action.perform();\n            if (result.success) {\n              action.onSuccess();\n              action.payRequiredResources();\n            } else {\n              action.onFailure();\n            }\n            action.onAfter();\n          }\n          if (!await this.processActionFX(action, result.success)) {\n            if (this.shouldAutoRun()) {\n              await Helper.delay(25);\n            } else {\n              await Helper.delay(action.processDelay);\n            }\n            this.game.draw();\n          }\n          if (!actor.active) break;\n          // if (!result.success) return false;\n          if (result.alternative === null) break;\n          action = result.alternative;\n        }\n        this.processStatusEffects(timePassed);\n        if (action.interrupt) {\n          acting = false;\n          break;\n        }\n      } else {\n        actor.gainEnergy(actor.speed);\n        acting = false;\n      }\n    }\n    this.actors = this.actors.filter((actor) => actor.active)\n    this.currentActor += 1;\n    if (this.currentActor >= this.actors.length) {\n      this.currentActor = 0;\n    }\n    return true\n  }\n\n  // a turn-based system using speed and Action Points\n  // it reorders all actors by energy after every round robin\n  async processV3() { \n    let actor = this.actors[this.currentActor]\n    if (!actor) return false;\n    let timePassed = 0;\n    if (actor.hasEnoughEnergy()) {\n      let action = actor.getAction(this.game);\n      if (!action) { return false; } // if no action given, kick out to UI input\n      timePassed += action.energyCost;\n      while (true) {\n        let result = await action.perform();\n        if (!await this.processActionFX(action, result.success)) {\n            await Helper.delay(action.processDelay);\n            this.game.draw();\n        }\n        if (!result.success) return false;\n        if (result.alternative === null) break;\n        action = result.alternative;\n      }\n      this.processStatusEffects(timePassed);\n    } else {\n      actor.gainEnergy(actor.speed);\n    }\n    this.currentActor = (this.currentActor + 1) % this.actors.length;\n    if (this.currentActor === 0) this.sortActorsByEnergy();\n    return true\n  }\n\n  // TODO process that reorders actors after every action\n\n  async start() {\n    this.isRunning = true;\n    while (this.isRunning) {\n      this.isRunning = await this.processV2();\n    }\n    let actor = this.actors[this.currentActor]\n    \n    if (!actor) {\n      // this.game.backToTitle();\n      return false;\n    }\n\n    this.setVisibleKeymap(actor);\n    \n    this.game.updateMode();\n    await this.game.updateReact(this.game);\n  }\n  \n  stop() {\n    this.isRunning = false;\n  }\n\n  setVisibleKeymap (actor) {\n    if (actor.entityTypes.includes('HAS_KEYMAP')) {\n      const keymap = actor.getKeymap()\n      if (keymap) {\n        this.game.visibleKeymap = keymap;\n      }\n    }\n  }\n\n  sortActorsByEnergy () {\n    this.actors = this.actors.sort((a, b) => b.energy - a.energy);\n  }\n\n  shouldAutoRun () {\n  // if there is no player, the engine will continue to run, we don't want it to run too fast\n    const hasPlayer = this.actors.filter((actor) => actor.entityTypes.includes('PLAYING')).length\n    if (hasPlayer) return false;\n    return true;\n  }\n\n  addStatusEffect(newEffect) {\n    if (!newEffect.allowDuplicates) {\n      if (this.statusEffects.filter((effect) => (\n        effect.actor.id === newEffect.actor.id &&\n        effect.name === newEffect.name\n      )).length > 0) {\n        console.log(`${newEffect.name} cannot be applied twice to ${newEffect.actor.name}`);\n        return false;\n      };\n    }\n    newEffect.onStart();\n    this.statusEffects.push(newEffect)\n    return true;\n  }\n\n  removeStatusEffectById (id) {\n    this.statusEffects = this.statusEffects.filter((effect) => {\n      if (effect.id !== id) return true;\n      effect.onStop();\n      return false;\n    });\n  }\n  \n  removeStatusEffectByActorId (actorId) {\n    this.statusEffects = this.statusEffects.filter((effect) => {\n      if (effect.actor.id !== actorId) return true;\n      effect.onStop();\n      return false;\n    });\n  }\n\n  removeDeadStatusEffects() {\n    this.statusEffects = this.statusEffects.filter((effect) =>{\n      if (effect.lifespan >= 0 && effect.timeToLive <= 0) {\n        effect.onStop();\n        return false;\n      }\n      return true;\n    });\n  }\n\n  getStatusEffectsByActorId(actorId) {\n    return this.statusEffects.filter((effect) => effect.actor.id === actorId);\n  }\n\n  processStatusEffects (timePassed) {\n    this.statusEffects.forEach((effect) => {\n      effect.timeSinceLastStep += timePassed;\n      effect.timeToLive -= timePassed;\n      if (effect.timeSinceLastStep >= effect.stepInterval) {\n        effect.onStep();\n        effect.timeSinceLastStep = 0;\n      } \n    });\n    this.removeDeadStatusEffects();\n  }\n\n  async processActionFX (action, actionSuccess) {\n    // EASE IN\n    // let time = .8\n    // let nextT = (t) => t *= t; \n    // EASE OUT\n    // let time = .03\n    // let nextT = (t) => t * (2 - t); \n    // EASE IN OUT QUAD\n    // let time = .4\n    // let nextT = (t) => t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t; \n    // EASE IN CUBIC\n    // let time = .8\n    // let nextT = (t) => t * t * t; \n    // EASE OUT CUBIC\n    // let time = .001\n    // let nextT = (t) => (--t) * t * t + 1; \n    if (!actionSuccess) { \n      // If action is not successful, instead of running action's normal particle animation\n      // we'll show a red X on the entity that initiated the action\n      const particle = new Particle({\n        game: this.game,\n        name: 'particle',\n        passable: true,\n        pos: {...action.actor.pos},\n        renderer: PARTICLE_TEMPLATES.fail.renderer,\n      })\n      this.game.placeActorOnMap(particle);\n      this.game.draw();\n      await Helper.delay(100);\n      this.game.removeActorFromMap(particle);\n      particle.update(1);\n      this.game.draw();\n      action.removeDeadParticles(); // is this needed?\n      return true;\n    }\n\n    if (action.particles.length) {\n      while (action.particles.length > 0) {\n        action.particles.forEach((particle) => {\n          this.game.placeActorOnMap(particle);\n        })\n        this.game.draw();\n        // await Helper.delay(time * 100);\n        // await Helper.delay(time * action.processDelay);\n        await Helper.delay(action.processDelay);\n        // await Helper.delay(0);\n        action.particles.forEach((particle) => {\n          this.game.removeActorFromMap(particle);\n          particle.update(1);\n\n        })\n        this.game.draw();\n        action.removeDeadParticles();\n        // time = nextT(time);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  addActor (entity) {\n    this.actors.push(entity);\n  }\n\n  addActorAsPrevious (entity) {\n    this.actors.splice(this.currentActor, 0, entity);\n  }\n\n  addActorAsNext (entity) {\n    this.actors.splice(this.currentActor + 1, 0, entity);\n  }\n\n  setActorToPrevious (entity) {\n    this.currentActor -= 1;\n    if (this.currentActor <= -1) this.currentActor = this.actors.length - 1;\n  }\n\n  setActorToNext (entity) {\n    this.currentActor = (this.currentActor + 1) % this.actors.length;\n  }\n\n}\n\n\nexport class CrankEngine extends Engine {\n  async process() { // a turn-based system using speed and Action Points\n    let actor = this.actors[this.currentActor]\n    let acting = true;\n    while (acting) {\n      if (actor.hasEnoughEnergy()) {\n        let action = actor.getAction(this.game);\n        if (!action) { return false; } // if no action given, kick out to UI input\n        while (true) {\n          this.game.draw();\n          let result = await action.perform();\n          await Helper.delay(action.processDelay);\n          if (!result.success) return false;\n          if (result.alternative === null) break;\n          action = result.alternative;\n        }\n      } else {\n        // actor.gainEnergy(actor.speed);\n        acting = false;\n      }\n    }\n    // this.currentActor = (this.currentActor + 1) % this.actors.length;\n    this.currentActor += 1;\n    if (this.currentActor + 1 >= this.actors.length) {\n      this.currentActor = 0;\n      this.actors.forEach((actor) => actor.gainEnergy(actor.speed));\n      return false;\n    }\n    return true\n  }\n\n  async start() {\n    this.isRunning = true;\n    while (this.isRunning) {\n      this.isRunning = await this.process();\n    }\n    let actor = this.actors[this.currentActor]\n    this.setVisibleKeymap(actor);\n    // this.game.updateMode();\n    this.game.mode.update();\n    await this.game.updateReact(this.game);\n  }\n}","import * as Helper from '../../helper';\nimport * as MapHelper from './helper';\n\nexport const generate = (map, offsetX, offsetY, unitCount = 12, unitSize = 4, borderWidth = 1) => {\n  let data = {};\n  // const floorPlan = createFloorPlan(unitCount);\n  // let maxX = 0; \n  // let minX = 0; \n  // let maxY = 0; \n  // let minY = 0; \n  // floorPlan.forEach((pos) => {\n  //   if (pos.x > maxX) maxX = pos.x;\n  //   if (pos.x < minX) minX = pos.x;\n  //   if (pos.y > maxY) maxY = pos.y;\n  //   if (pos.y < minY) minY = pos.y;\n  // })\n  // const floorPlanWidth = Math.abs(maxX) + Math.abs(minX) + 1;\n  // const floorPlanHeight = Math.abs(maxY) + Math.abs(minY) + 1;\n  // console.log(floorPlanWidth);\n  // console.log(floorPlanHeight);\n  \n  let floorPlan = createFloorPlan();\n  let kill = 1000\n  while (floorPlan.length < unitCount + 1) {\n    \n    let unit = createRoomInFloorPlan(floorPlan);\n    if (unit) {\n      const unitPosition = getUnitPosition(unit, offsetX, offsetY, unitSize);\n      let didCreate = createUnit(map, unitPosition, unitSize, 0);\n      if (didCreate) floorPlan.push(unit);\n    }\n    \n    kill -= 1;\n    if (kill <= 0) break;\n  }\n\n  // removeInnerWalls(map)\n  // addDoorToOuterWalls(map)\n  // addInnerWalls(map, floorPlan.length)\n  addCorridors(map, floorPlan, offsetX, offsetY, unitSize)\n  return data;\n}\n\nconst addCorridors = (map, floorPlan, offsetX, offsetY, unitSize) => {\n  const relativeCornerCoords = [\n    {x: 1, y: 1},\n    {x: unitSize - 1, y: unitSize - 1},\n    {x: 1, y: unitSize - 1},\n    {x: unitSize - 1, y: 1},\n  ]\n  for (let i = 0; i < (floorPlan.length - 1); i++) {\n    const currentUnit = floorPlan[i];\n    let currentUnitPosition = getUnitPosition(currentUnit, offsetX, offsetY, unitSize);\n    const currentUnitRelativeCornerCoord = Helper.getRandomInArray(relativeCornerCoords)\n    currentUnitPosition.x += currentUnitRelativeCornerCoord.x;\n    currentUnitPosition.y += currentUnitRelativeCornerCoord.y;\n    \n    const neigbors = getNeighboringUnitsFromFloorPlan(floorPlan, currentUnit);\n    neigbors.forEach((neigbor) => {\n      let nextUnitPosition = getUnitPosition(neigbor, offsetX, offsetY, unitSize);\n      const nextUnitRelativeCornerCoord = currentUnitRelativeCornerCoord\n      nextUnitPosition.x += nextUnitRelativeCornerCoord.x;\n      nextUnitPosition.y += nextUnitRelativeCornerCoord.y;\n      \n      digCorridor(map, currentUnitPosition, nextUnitPosition);\n    });\n  }\n}\n\nconst getNeighboringUnitsFromFloorPlan = (floorPlan, currentUnit) => {\n  const neighbors = getNeighboringPoints(currentUnit);\n  return floorPlan.filter((unit) => {\n    return neighbors.find((coords) => coords.x === unit.x && coords.y === unit.y);\n  })\n}\n\nconst digCorridor = (map, currentUnitPosition, nextUnitPosition) => {\n    const corridorDirection = [\n      Math.sign(nextUnitPosition.x - currentUnitPosition.x),\n      Math.sign(nextUnitPosition.y - currentUnitPosition.y)\n    ]\n    let kill = 1000;\n    let corridorPosition = Helper.getPositionInDirection(currentUnitPosition, corridorDirection); \n    let hasDoor = false\n    while (!Helper.coordsAreEqual(corridorPosition, nextUnitPosition)) {\n      let tile = map[Helper.coordsToString(corridorPosition)];\n      if (tile) {\n        if (tileIsWall(tile)) {\n          if (!hasDoor) {\n            tile.type = 'DOOR'\n            hasDoor = true;\n          } else {\n            tile.type = 'FLOOR'\n          }\n        }\n      }\n      corridorPosition = Helper.getPositionInDirection(corridorPosition, corridorDirection); \n      kill -= 1;\n      if (kill <= 0) break;\n    }\n}\n\nconst createFloorPlan = () => {\n  // create origin\n  let floorPlan = [{x: 0, y: 0}];\n  return floorPlan\n}\n\nconst createRoomInFloorPlan = (floorPlan) => {\n  // randomly choose previously created unit\n  // let origin = floorPlan[floorPlan.length - 1];\n  let origin = Helper.getRandomInArray(floorPlan);\n  // randomly choose neighboring point\n  let newUnit = getNeighboringUnit(origin);\n  let unitAlreadyExists = unitExists(newUnit, floorPlan)\n  let kill = 1000\n  while (unitAlreadyExists) {\n    origin = Helper.getRandomInArray(floorPlan.filter((pnt) => !Helper.coordsAreEqual(pnt, origin)));\n    newUnit = getNeighboringUnit(origin);\n    unitAlreadyExists = unitExists(newUnit, floorPlan)\n    kill -= 1;\n    if (kill <= 0) {\n      unitAlreadyExists = false;\n      newUnit = false;\n      break;\n    }\n  }\n  \n  return newUnit\n}\n\nconst getNeighboringUnit = (origin) => Helper.getRandomInArray(getNeighboringPoints(origin))\nconst unitExists = (newUnit, existingUnits) => existingUnits.filter((unit) => unit.x === newUnit.x && unit.y === newUnit.y).length > 0;\nconst getUnitPosition = (floorPlanPos, mapOffsetX, mapOffsetY, unitSize) => {\n  return {\n    x: floorPlanPos.x + mapOffsetX + (unitSize * floorPlanPos.x),\n    y: floorPlanPos.y + mapOffsetY + (unitSize * floorPlanPos.y),\n  }\n}\n\nconst getNeighboringPoints = (origin, eightWay = false) => {\n  let neighbors = [\n    {\n      x: origin.x,\n      y: origin.y + 1\n    },\n    {\n      x: origin.x + 1,\n      y: origin.y\n    },\n    {\n      x: origin.x,\n      y: origin.y - 1\n    },\n    {\n      x: origin.x - 1,\n      y: origin.y\n    },\n  ]\n\n  if (eightWay) {\n    neighbors = neighbors.concat([\n      {\n        x: origin.x + 1,\n        y: origin.y + 1\n      },\n      {\n        x: origin.x + 1,\n        y: origin.y - 1\n      },\n      {\n        x: origin.x - 1,\n        y: origin.y - 1\n      },\n      {\n        x: origin.x - 1,\n        y: origin.y + 1\n      },\n    ])\n  }\n  return neighbors;\n}\n\nconst isCorner = (x, y, roomSize) => {\n  if (x === 0 && y === 0) return true\n  if (x === roomSize && y === roomSize) return true\n  if (x === roomSize && y === 0) return true\n  if (x === 0 && y === roomSize) return true\n  return false;\n};\n\nconst createUnit = (map, position, size, border) => {\n  // const length = size; // this will leave a border\n  // const length = size + 1; // this will close the gap\n  const length = size + 1 - border; // this will calculate using border\n\n  // prevent units from hitting map edge\n  for (let i = 0; i < length; i++) {\n    for (let j = 0; j < length; j++) {\n      const newPosition = {\n        x: position.x + i,\n        y: position.y + j,\n      }\n      let tile = map[Helper.coordsToString(newPosition)];\n      if (!tile) return false;\n      if (tile.type === 'ROAD_EDGE') return false;\n      if (tileIsWall(tile)) return false;\n      if (tile.type === 'FLOOR') return false;\n    }\n  }\n\n  for (let i = 0; i < length; i++) {\n    for (let j = 0; j < length; j++) {\n      const newPosition = {\n        x: position.x + i,\n        y: position.y + j,\n      }\n      let type = 'FLOOR';\n      if (i === 0 || i === (length - 1)) type = 'WALL_VERTICAL';\n      if (j === 0 || j === (length - 1)) type = 'WALL_HORIZONTAL';\n      if (i === 0 && j === 0) type = 'WALL_CORNER_NW';\n      if (i === 0 && j === (length - 1)) type = 'WALL_CORNER_SW';\n      if (i === (length - 1) && j === 0) type = 'WALL_CORNER_NE';\n      if (i === (length - 1) && j === (length - 1)) type = 'WALL_CORNER_SE';\n      let tile = map[Helper.coordsToString(newPosition)];\n      if (tile) tile.type = type;\n    }\n  }\n\n  return true;\n}\n\nconst tileIsWall = (tile) => MapHelper.tileHasTag({tile, tag: 'WALL'})\n\nconst getInnerWalls = (map, tiles) => {\n  return tiles.filter((key) => {\n    const coordArray = key.split(',').map((i) => parseInt(i));\n    const coords = {\n      x: coordArray[0],\n      y: coordArray[1],\n    }\n    const neighbors = getNeighboringPoints(coords, true).filter((point) => {\n      let t = map[Helper.coordsToString(point)];\n      if (t) {\n        if (['FLOOR', 'DOOR'].includes(t.type) || tileIsWall(t)) {\n          return true;\n        }\n      }\n      return false\n    });\n    \n    if (neighbors.length === 8) {\n      return true;\n    }\n    return false;\n  })\n}\n\nconst getOuterWalls = (map, tiles) => {\n  return tiles.filter((key) => {\n    const coordArray = key.split(',').map((i) => parseInt(i));\n    const coords = {\n      x: coordArray[0],\n      y: coordArray[1],\n    }\n    const neighbors = getNeighboringPoints(coords, true).filter((point) => {\n      let t = map[Helper.coordsToString(point)];\n      if (t) {\n        if (['FLOOR'].includes(t.type) || tileIsWall(t)) {\n          return false;\n        }\n      }\n      return true\n    });\n    \n    if (neighbors.length === 8) {\n      return false;\n    }\n    return true;\n  })\n}\n\nconst removeInnerWalls = (map) => {\n  let walls = Object.keys(map).filter((key) => {\n    return tileIsWall(map[key]);\n  })\n\n  let innerWalls = getInnerWalls(map, walls);\n\n  innerWalls.forEach((key) => {\n    map[key].type = 'FLOOR';\n  })\n}\n\nconst addDoorToOuterWalls = (map) => {\n  let walls = Object.keys(map).filter((key) => {\n    return tileIsWall(map[key]);\n  });\n\n  let outerWalls = getOuterWalls(map, walls);\n  let key = Helper.getRandomInArray(outerWalls);\n  map[key].type = 'DOOR'\n}\n\nconst addInnerWalls = (map, count = 2) => {\n  // Finding corners\n  let corners = Object.keys(map).filter((key) => {\n    const tile = map[key];\n    if (!tileIsWall(tile)) return false;\n    const coordArray = key.split(',').map((i) => parseInt(i));\n    const coords = {\n      x: coordArray[0],\n      y: coordArray[1],\n    }\n    const neighbors = getNeighboringPoints(coords, false).filter((point) => {\n      let t = map[Helper.coordsToString(point)];\n      if (t) {\n        if (['GROUND', 'GROUND_ALT', 'ROAD', 'ROAD_EDGE'].includes(t.type)) {\n          return true;\n        }\n      }\n      return false\n    });\n    if (neighbors.length === 2) return true;\n    return false\n  })\n\n  if (!corners.length) return;\n\n  // building walls\n  let wallCount = 0;\n  while (wallCount < count) {\n  // while (wallCount < corners.length) {\n  // for (let i = 0; i < count; i++) {\n    const corner = Helper.getRandomInArray(corners);\n    const coordArray = corner.split(',').map((i) => parseInt(i));\n    const coords = {\n      x: coordArray[0],\n      y: coordArray[1],\n    }\n    const wallNeighbors = getNeighboringPoints(coords, false).filter((point) => {\n      let t = map[Helper.coordsToString(point)];\n      if (t) {\n        if (tileIsWall(t)) {\n          return true;\n        }\n      }\n      return false\n    });\n    const selectedWallPos = Helper.getRandomInArray(wallNeighbors)\n    if (!selectedWallPos) continue;\n    const direction = {\n      x: Math.sign(selectedWallPos.x - coords.x),\n      y: Math.sign(selectedWallPos.y - coords.y)\n    };\n\n    let kill = 100;\n    let build = true;\n    let currentPosition = {...coords}\n    let previousFloorPositions = [];\n    while (build) {\n      currentPosition.x += direction.x;\n      currentPosition.y += direction.y;\n      let tile = map[Helper.coordsToString(currentPosition)];\n      if (!tile) break;\n      // if (tile.type === 'WALL') continue;\n      if (tile.type === 'FLOOR') {\n        tile.type = 'WALL';\n        previousFloorPositions.push({...currentPosition})\n        // console.log(previousFloorPositions.length);\n      }\n      // else if (['GROUND', 'GROUND_ALT', 'ROAD', 'ROAD_EDGE'].includes(tile.type) || (tile.type === 'WALL' && previousFloorPositions.length)) {\n      // else if (['GROUND', 'GROUND_ALT', 'ROAD', 'ROAD_EDGE'].includes(tile.type)) {\n      else if (['GROUND', 'GROUND_ALT', 'ROAD', 'ROAD_EDGE'].includes(tile.type) && previousFloorPositions.length) {\n        // go back two and make FLOOR\n        let prevPos = {\n          x: currentPosition.x - (direction.x * 2),\n          y: currentPosition.y - (direction.y * 2),\n        }\n        map[Helper.coordsToString(prevPos)].type = 'DOOR';\n        // map[Helper.coordsToString(prevPos)].type = 'FLOOR';\n        // go back one more and make FLOOR\n        prevPos = {\n          x: currentPosition.x - (direction.x * 3),\n          y: currentPosition.y - (direction.y * 3),\n        }\n        map[Helper.coordsToString(prevPos)].type = 'DOOR';\n        // map[Helper.coordsToString(prevPos)].type = 'FLOOR';\n        if (previousFloorPositions.length <= 0) {\n          //   // we need to create another wall, this one is bust\n          if (count <= 100) count += 1\n        }\n        break;\n      }\n      kill -= 1;\n      if (kill <= 0) build = false;\n    }\n    wallCount += 1;\n  }\n}","export const COLORS = {\n  base04: '#07111D',\n  base03: '#02252e',\n  // base03: '#002b36',\n  base02: '#073642',\n  base01: '#586e75',\n  base00: '#657b83',\n  // base0: '#96641D',\n  base0: '#839496',\n  base1: '#93a1a1',\n  // base2: '#E19D3F',\n  base2: '#eee8d5',\n  base3: '#fdf6e3',\n  yellow: '#b58900',\n  orange: '#cb4b16',\n  red: '#dc322f',\n  magenta: '#d33682',\n  violet: '#6c71c4',\n  blue: '#268bd2',\n  cyan: '#2aa198',\n  green: '#859900',\n  // // base1: '#07111D',\n  // base1: '#0B0B0B',\n  // base2: '#5A7178',\n  // base3: '#B6ACA3',\n  // base4: '#EDF6F1',\n  cog1: '#27295f',\n  cog2: '#3e7dc9',\n  cog3: '#18c0f8',\n  cog4: '#86C8E4',\n  locust0: '#423a18',\n  locust1: '#96641D',\n  locust2: '#E19D3F',\n  // locust2: '#F89339',\n  locust3: '#E7C898',\n  flesh1: '#833139',\n  flesh2: '#CC7468',\n  flesh3: '#DDA78F',\n  gray: '#6D7886',\n}\nexport const TILE_KEY = {\n  'GROUND': {\n    background: COLORS.base04,\n    foreground: COLORS.base02,\n    character: '.',\n    sprite: '',\n    passable: true,\n    tags: ['PROVIDING_COVER'],\n  },\n  'GROUND_ALT': {\n    background: COLORS.base04,\n    foreground: COLORS.base02,\n    character: '',\n    sprite: '',\n    passable: true,\n    tags: ['PROVIDING_COVER'],\n  },\n  'EMERGENCE_DESTROYED': {\n    background: COLORS.base04,\n    foreground: COLORS.locust0,\n    character: '',\n    // sprite: '',\n    sprite: '',\n    passable: true,\n  },\n  'EMERGENCE_GROUND': {\n    background: COLORS.locust0,\n    foreground: COLORS.locust1,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'EMERGENCE_OUTER_GROUND': {\n    background: COLORS.locust0,\n    foreground: COLORS.locust2,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'FLOOR': {\n    background: COLORS.base02,\n    foreground: COLORS.locust1,\n    character: '',\n    passable: true,\n    tags: ['BURNABLE'],\n  },\n  'WALL': {\n    background: COLORS.base02,\n    foreground: COLORS.locust2,\n    character: '#',\n    sprite: '',\n    passable: false,\n    tags: ['BURNABLE', 'WALL'],\n  },\n  'WALL_VERTICAL': {\n    background: COLORS.base02,\n    foreground: COLORS.locust2,\n    character: '||',\n    sprite: '',\n    passable: false,\n    tags: ['BURNABLE', 'WALL'],\n  },\n  'WALL_HORIZONTAL': {\n    background: COLORS.base02,\n    foreground: COLORS.locust2,\n    character: '=',\n    sprite: '',\n    passable: false,\n    tags: ['BURNABLE', 'WALL'],\n  },\n  'WALL_CORNER_NW': {\n    background: COLORS.base02,\n    foreground: COLORS.locust2,\n    character: '#',\n    sprite: '',\n    passable: false,\n    tags: ['BURNABLE', 'WALL'],\n  },\n  'WALL_CORNER_NE': {\n    background: COLORS.base02,\n    foreground: COLORS.locust2,\n    character: '#',\n    sprite: '',\n    passable: false,\n    tags: ['BURNABLE', 'WALL'],\n  },\n  'WALL_CORNER_SW': {\n    background: COLORS.base02,\n    foreground: COLORS.locust2,\n    character: '#',\n    sprite: '',\n    passable: false,\n    tags: ['BURNABLE', 'WALL'],\n  },\n  'WALL_CORNER_SE': {\n    background: COLORS.base02,\n    foreground: COLORS.locust2,\n    character: '#',\n    sprite: '',\n    passable: false,\n    tags: ['BURNABLE', 'WALL'],\n  },\n  'ROAD_EDGE': {\n    background: COLORS.base03,\n    foreground: COLORS.base02,\n    character: '',\n    sprite: '',\n    passable: true,\n    tags: ['ROAD', 'PROVIDING_COVER'],\n  },\n  'ROAD': {\n    background: COLORS.base03,\n    foreground: COLORS.base02,\n    character: '=',\n    sprite: '',\n    passable: true,\n    tags: ['ROAD', 'PROVIDING_COVER'],\n  },\n  'DOOR': {\n    background: COLORS.base02,\n    foreground: COLORS.base1,\n    character: '+',\n    sprite: '',\n    passable: true,\n    tags: ['BURNABLE'],\n  },\n  'SAFE': {\n    background: COLORS.base04,\n    foreground: COLORS.base02,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'LOCKED_EXIT': {\n    background: COLORS.base04,\n    foreground: COLORS.base02,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'EXIT': {\n    background: COLORS.base04,\n    foreground: COLORS.green,\n    character: '>',\n    sprite: '',\n    passable: true,\n  },\n  'BURNT': {\n    background: COLORS.base03,\n    foreground: COLORS.red,\n    character: 'X',\n    sprite: '',\n    passable: true,\n    tags: ['BURNABLE'],\n    animation: [\n      { background: COLORS.base03, foreground: COLORS.yellow, character: 'X', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.yellow, character: 'x', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.red, character: 'X', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.orange, character: 'x', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.orange, character: 'X', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.red, character: 'x', sprite: '', passable: true, },\n      { background: COLORS.base03, foreground: COLORS.red, character: 'X', sprite: '', passable: true, },\n    ]\n  },\n}\n\nexport const STAT_RENDERERS = {\n  'amount': {\n    background: COLORS.base04,\n    foreground: COLORS.locust2,\n    character: '',\n  },\n  'attackRange': {\n    background: COLORS.green,\n    foreground: COLORS.base3,\n    character: '==>',\n  },\n  'magazine': {\n    background: COLORS.gray,\n    foreground: COLORS.base3,\n    character: '!!',\n  },\n  'baseRangedAccuracy': {\n    background: COLORS.violet,\n    foreground: COLORS.base3,\n    character: '*',\n  },\n  'baseRangedDamage': {\n    background: COLORS.red,\n    foreground: COLORS.base3,\n    character: 'x',\n    sprite: '',\n  },\n  'meleeDamage': {\n    background: COLORS.red,\n    foreground: COLORS.base3,\n    character: 'x',\n    sprite: '',\n  },\n} \n\n// GiArcheryTarget / GiBullseye / GiCrosshair -- accuracy\n// GiBullets -- ammo\n// GiBackwardTime -- ammo / reload\n//  GiBarbedArrow - -range\n// GiBurningDot -- damage\n// GiCog\n\n/*\nSCROLL-O-Sprites\n\n\n\n\n\n\n\n \n*/","import { keys } from 'lodash';\nimport * as Helper from '../../helper';\nimport * as MapHelper from '../Maps/helper';\nimport { CoverWall } from '../Entities/index';\nimport {COLORS} from '../Modes/Jacinto/theme';\nimport Map from 'rot-js/lib/map/map';\n\nexport const generateCoverBlock = (\n    pos,\n    game,\n    name = 'box',\n    character = '%',\n    durability = 5,\n    background = COLORS.base02,\n    color = COLORS.base01\n  ) => {\n    let sprite = Helper.getRandomInArray(['', '']);\n\n    let box = new CoverWall({\n      pos,\n      renderer: {\n        character,\n        sprite,\n        color,\n        background,\n      },\n      name,\n      game,\n      durability,\n      accuracyModifer: -0.3,\n      damageModifer: 0,\n    })\n\n    game.placeActorOnMap(box)\n  }\n\nconst SHAPES = {\n  point: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n    ]\n  },\n  verticalLine: {\n    x_offset: 1,\n    y_offset: 1,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n    ]\n  },\n  horizontalLine: {\n    x_offset: 1,\n    y_offset: 1,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 1, y: 0, taken: false, },\n    ]\n  },\n  smallSquare: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n    ]\n  },\n  southEastVerticalL: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 0, y: 2, taken: false, },\n      { x: 1, y: 2, taken: false, },\n    ]\n  },\n  southWestVerticalL: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 0, y: 2, taken: false, },\n      { x: -1, y: 2, taken: false, },\n    ]\n  },\n  northWestVerticalL: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: 0, y: -2, taken: false, },\n      { x: -1, y: -2, taken: false, },\n    ]\n  },\n  northEastVerticalL: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: 0, y: -2, taken: false, },\n      { x: 1, y: -2, taken: false, },\n    ]\n  },\n  southEastHorizontalL: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 2, y: 0, taken: false, },\n      { x: 2, y: 1, taken: false, },\n    ]\n  },\n  southWestHorizontalL: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: -1, y: 0, taken: false, },\n      { x: -2, y: 0, taken: false, },\n      { x: -2, y: 1, taken: false, },\n    ]\n  },\n  northEastHorizontalL: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 2, y: 0, taken: false, },\n      { x: 2, y: -1, taken: false, },\n    ]\n  },\n  northWestHorizontalL: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: -1, y: 0, taken: false, },\n      { x: -2, y: 0, taken: false, },\n      { x: -2, y: -1, taken: false, },\n    ]\n  },\n}\n\nconst shapeChanceTable = [\n  ...Array(1).fill('point'),\n  ...Array(4).fill('verticalLine'),\n  ...Array(3).fill('horizontalLine'),\n  ...Array(2).fill('smallSquare'),\n  ...Array(2).fill('southEastVerticalL'),\n  ...Array(2).fill('southWestVerticalL'),\n  ...Array(2).fill('northWestVerticalL'),\n  ...Array(2).fill('northEastVerticalL'),\n  ...Array(1).fill('southEastHorizontalL'),\n  ...Array(1).fill('southWestHorizontalL'),\n  ...Array(1).fill('northWestHorizontalL'),\n  ...Array(1).fill('northEastHorizontalL'),\n];\n\nexport const generate = (pos, game, shape) => {\n  const positions = Helper.getPositionsFromStructure(shape, pos);\n  positions.forEach((position) => {\n    let tile = game.map[Helper.coordsToString(position)];\n    if (!tile) return;\n    if (MapHelper.tileHasTag({tile, tag: 'PROVIDING_COVER'})) {\n      generateCoverBlock(position, game);\n    }\n  });\n}\n\nexport const generateSingle = (pos, game) => generate(pos, game, SHAPES.point);\nexport const generateTwoVertically = (pos, game) => generate(pos, game, SHAPES.verticalLine);\nexport const generateTwoHorizontally = (pos, game) => generate(pos, game, SHAPES.horizontalLine);\nexport const generateSquare = (pos, game) => generate(pos, game, SHAPES.smallSquare);\nexport const generateRandom = (pos, game) => {\n  const shape = SHAPES[Helper.getRandomInArray(shapeChanceTable)];\n  generate(pos, game, shape);\n};","import uuid from 'uuid/v1';\nimport {merge} from 'lodash';\n\nexport class Mode {\n  constructor({\n    game = null,\n    data = {},\n  }) {\n    let id = uuid();\n    this.id = id;\n    this.game = game;\n    this.data = data;\n    this.infoBlocks = {}\n    this.progressBars = {}\n  }\n\n  initialize() {}\n\n  update() {}\n\n  createOrUpdateInfoBlock(id, value) {\n    merge(this.infoBlocks, {[id]: value})\n  }\n}","import {Ammo as AmmoEntity} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Ammo = (engine) => new AmmoEntity({\n  game: engine.game,\n  name: 'Ammo',\n  passable: true,\n  renderer: {\n    character: '||',\n    sprite: '',\n    background: COLORS.gray,\n    color: COLORS.base3,\n  },\n});","import * as Constant from '../../constants';\nimport {Grenade as GrenadeEntity} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Grenade = (engine, range) => new GrenadeEntity({\n  game: engine.game,\n  name: 'Grenade',\n  passable: true,\n  renderer: {\n    character: 'x',\n    sprite: '',\n    color: COLORS.red,\n    background: COLORS.base02,\n  },\n  flammability: 0,\n  explosivity: 3,\n  attackDamage: 10,\n  speed: Constant.ENERGY_THRESHOLD * range,\n  energy: 0,\n  range,\n})\n","import { Base } from './Base';\nimport { Say } from './Say';\nimport * as Constant from '../constants';\n\nexport class MultiTargetAttack extends Base {\n  constructor({ targetPositions, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPositions = targetPositions;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (!this.actor.entityTypes.includes('ATTACKING')) {\n      return {\n        success: true,\n        alternative: new Say({\n          message: `Ooh I don\\'t know how to attack`,\n          game: this.game,\n          actor: this.actor,\n        }),\n      };\n    }\n    let particlePath = [];\n    let particlePos = { x: this.actor.pos.x, y: this.actor.pos.y };\n    let renderer = this.particleTemplate.renderer;\n    this.targetPositions.forEach((targetPos) => {\n      let attackSuccess = this.actor.attack(targetPos);\n      particlePath.push(targetPos);\n      if (attackSuccess)\n        success = true;\n    });\n    this.addParticle(particlePath.length + 1, particlePos, null, renderer, Constant.PARTICLE_TYPE.path, particlePath);\n    if (success) {\n      this.actor.energy -= this.energyCost;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Say } from '../../../Actions/Say';\nimport { MultiTargetAttack } from '../../../Actions/MultiTargetAttack';\nimport Behavior from './Behavior';\n\nexport default class ExecuteAttack extends Behavior {\n  constructor({ ...args }) {\n    super({ ...args });\n  }\n\n  isValid () {\n    return this.actor.getCursorPositions().length\n  }\n\n  constructActionClassAndParams () {\n    return [\n      MultiTargetAttack,\n      {\n        targetPositions: this.actor.getCursorPositions(),\n        onAfter: () => this.actor.removeAnimations()\n      }\n    ]\n  }\n}\n","import { Base } from './Base';\n\nexport class Move extends Base {\n  constructor({ targetPos, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = this.actor.move(this.targetPos);\n    let alternative = null;\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n","import { Move } from '../../../Actions/Move';\nimport Behavior from './Behavior';\nimport { calculatePathAroundObstacles } from '../../../../helper'; \n\nexport default class MoveTowardsCover extends Behavior {\n  constructor({ ...args }) {\n    super({ ...args });\n\n    this.targetCover = null;\n  }\n\n  isValid() {\n    return !this.actor.isCovered();\n    // return true\n  }\n\n  getDistanceToTarget (target) {\n    return calculatePathAroundObstacles(this.actor.game, target.getPosition(), this.actor.getPosition(), 8).length;\n  }\n\n  findClosestCover() {\n    let currentClosest = null;\n    const cover = this.actor.getCoverEntities()\n    cover.forEach((entity) => {\n      if (!currentClosest) currentClosest = entity;\n      const distanceTo = this.getDistanceToTarget(entity);\n      const distanceToCurrentClosest = this.getDistanceToTarget(currentClosest);\n      if (distanceTo < distanceToCurrentClosest) {\n        currentClosest = entity;\n      }\n    });\n    return currentClosest;\n  }\n\n  constructActionClassAndParams () {\n    let actionClass = null;\n    let actionParams = null;\n\n    let cover = null;\n    let moveToPosition = this.actor.getPosition();\n\n    // find closest cover\n    if (!this.targetCover) {\n      cover = this.findClosestCover();\n    } else {\n      cover = this.targetCover\n    }\n\n    if (!cover) return [actionClass, actionParams]; \n\n    // get path to cover\n    let path = calculatePathAroundObstacles(this.actor.game, cover.getPosition(), this.actor.getPosition());\n    moveToPosition = path.length > 0 ? path[0] : null;\n\n    actionClass = Move; \n    actionParams = {\n      hidden: true,\n      targetPos: moveToPosition,\n    }\n\n    return [actionClass, actionParams];\n  }\n  // constructActionClassAndParams () {\n  //   let actionClass = Say;\n  //   let actionParams = {message: 'grrr'};\n\n  //   if (this.actor.isCovered()) return [actionClass, actionParams];\n\n  //   let cover = null;\n  //   let moveToPosition = this.actor.getPosition();\n\n  //   // find closest cover\n  //   if (!this.targetCover) {\n  //     cover = this.findClosestCover();\n  //   } else {\n  //     cover = this.targetCover\n  //   }\n\n  //   if (!cover) return [actionClass, actionParams]; \n\n  //   // get path to cover\n  //   let path = calculatePathAroundObstacles(this.actor.game, cover.getPosition(), this.actor.getPosition());\n  //   moveToPosition = path.length > 0 ? path[0] : null;\n\n  //   actionClass = Move; \n  //   actionParams = {\n  //     hidden: true,\n  //     targetPos: moveToPosition,\n  //   }\n\n  //   return [actionClass, actionParams];\n  // }\n}\n","import { Move } from '../../../Actions/Move';\nimport Behavior from './Behavior';\nimport { calculatePathAroundObstacles } from '../../../../helper'; \n\nexport default class MoveTowardsEnemy extends Behavior {\n  constructor({ ...args }) {\n    super({ ...args });\n  }\n\n  isValid () {\n    return true;\n  }\n\n  getDistanceToTarget (target) {\n    return calculatePathAroundObstacles(this.actor.game, target.getPosition(), this.actor.getPosition(), 8).length;\n  }\n\n  findClosestEnemy() {\n    let currentClosestEnemy = null;\n    this.actor.getEnemies().forEach((enemy) => {\n      if (!currentClosestEnemy) currentClosestEnemy = enemy;\n      const distanceToEnemy = this.getDistanceToTarget(enemy);\n      const distanceToCurrentClosestEnemy = this.getDistanceToTarget(currentClosestEnemy);\n      if (distanceToEnemy < distanceToCurrentClosestEnemy) {\n        currentClosestEnemy = enemy;\n      }\n    });\n    return currentClosestEnemy;\n  }\n\n  constructActionClassAndParams () {\n    let actionClass = null;\n    let actionParams = null;\n\n    // find closest enemy\n    const enemy = this.findClosestEnemy();\n    if (!enemy) return [null, null]; \n    // get path to enemy\n    let path = calculatePathAroundObstacles(this.actor.game, enemy.getPosition(), this.actor.getPosition());\n    let moveToPosition = path.length > 0 ? path[0] : null;\n    if (!moveToPosition) return [null, null]\n\n    actionClass = Move; \n    actionParams = {\n      hidden: true,\n      targetPos: moveToPosition,\n    }\n\n    return [actionClass, actionParams];\n  }\n}\n","import { Say } from '../../../Actions/Say';\nimport { getPositionsFromStructure } from '../../../../helper';\nimport {CLONE_PATTERNS} from '../../../constants';\nimport {COLORS} from '../../../Modes/Jacinto/theme';\nimport Behavior from './Behavior';\n\nexport default class TelegraphAttack extends Behavior {\n  constructor({ attackPattern = CLONE_PATTERNS.point, ...args }) {\n    super({ ...args });\n    this.attackPattern = attackPattern;\n  }\n\n  getTargetPosition () {\n    return this.actor.getPosition();\n  }\n\n  constructActionClassAndParams () {\n    // pick one or more tiles to target with attack or action via attackPattern class (random, fixed)\n    const positions = getPositionsFromStructure(this.attackPattern, this.getTargetPosition());\n    // add blink animations or particle animation to targeted tiles\n    this.actor.activateCursor(positions);\n    this.actor.updateAllCursorNodes([\n      {key: 'fill', value: COLORS.red}, \n      {key: 'stroke', value: 'transparent'}, \n    ]);\n    // (or add telegraph entities to map?)\n    // or produce and insert Execute behavior based on attack pattern?\n    // return None action\n    return [\n      Say,\n      {message: 'I am telegraphing my next attack'}\n    ]\n  }\n}\n","import * as Helper from '../../../../helper';\nimport { Say } from '../../../Actions/Say';\nimport {COLORS} from '../../../Modes/Jacinto/theme';\nimport MoveTowardsEnemy from './MoveTowardsEnemy';\n\nexport default class TelegraphRangedAttack extends MoveTowardsEnemy {\n  constructor({ accuracyToAttackThreshold = 0.1, ...args }) {\n    super({ ...args });\n    this.accuracyToAttackThreshold = accuracyToAttackThreshold;\n  }\n\n  isValid () {\n    const attackRange = this.actor.getAttackRange();\n    const enemy = this.findClosestEnemyInRange(attackRange) \n    if (!enemy) return false;\n    \n    const rangedAttackChance = this.actor.getRangedAttackChance(enemy.getPosition());\n    if (rangedAttackChance < this.accuracyToAttackThreshold) return false;\n    \n    return true;\n  }\n\n  findClosestEnemyInRange(range) {\n    let currentClosestEnemy = null;\n    this.actor.getEnemies()\n    .filter((enemy) => {\n      const distanceToEnemy = this.getDistanceToTarget(enemy);\n      return range >= distanceToEnemy;\n    })\n    .forEach((enemy) => {\n      if (!currentClosestEnemy) currentClosestEnemy = enemy;\n      const distanceToEnemy = this.getDistanceToTarget(enemy);\n      const distanceToCurrentClosestEnemy = this.getDistanceToTarget(currentClosestEnemy);\n      if (distanceToEnemy < distanceToCurrentClosestEnemy) {\n        currentClosestEnemy = enemy;\n      }\n    });\n    return currentClosestEnemy;\n  }\n\n  getDistanceToTarget(target) {\n    const targetPos = target.getPosition()\n    return Helper.calculatePath(this.actor.game, targetPos, this.actor.getPosition(), 8).length;\n  }\n\n  getTargetPosition () {\n    return this.findClosestEnemy().getPosition();\n  }\n\n  getEquippedWeapon() {\n    const equippedWeapons = this.actor.getEquipedWeapons();\n    return equippedWeapons[0];\n  }\n\n  constructActionClassAndParams () {\n    const equippedWeapon = this.getEquippedWeapon();\n    const targetPosition = this.getTargetPosition();\n    const positions = equippedWeapon.getPositionsInShape(targetPosition);\n    this.actor.activateCursor(positions);\n    this.actor.updateAllCursorNodes([\n      {key: 'fill', value: COLORS.red}, \n      {key: 'stroke', value: 'transparent'}, \n    ]);\n    return [\n      Say,\n      {message: 'I am telegraphing my next attack'}\n    ]\n  }\n}\n","import { Say } from '../../../Actions/Say';\nimport Behavior from './Behavior';\n\nexport default class Wait extends Behavior {\n  constructor({ ...args }) {\n    super({ ...args });\n  }\n\n  isValid () {\n    return true\n  }\n\n  constructActionClassAndParams () {\n    return [\n      Say,\n      {message: '*breathes*'}\n    ]\n  }\n}\n","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Gnasher = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Gnasher',\n  passable: true,\n  attackRange: 4,\n  magazineSize: 2,\n  baseRangedAccuracy: 0.9,\n  baseRangedDamage: 3,\n  attackDamage: 0,\n  pos,\n  shapePattern: Constant.CLONE_PATTERNS.square,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'G',\n    color: COLORS.base03,\n    background: COLORS.green,\n  },\n});\n","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const HammerBurst = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Hammer Burst',\n  passable: true,\n  attackRange: 12,\n  magazineSize: 4,\n  baseRangedAccuracy: 0.85,\n  baseRangedDamage: 2,\n  attackDamage: 2,\n  pos,\n  shapePattern: Constant.CLONE_PATTERNS.filledClover,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'Hb',\n    color: COLORS.base3,\n    background: COLORS.gray,\n  },\n});\n","import * as Behaviors from '../../../Entities/AI/Behaviors';\nimport { COLORS } from '../theme';\nimport * as Helper from '../../../../helper';\nimport * as Constant from '../../../constants';\nimport {JacintoAI} from '../../../Entities/index';\nimport { ContainerSlot } from '../../../Entities/Containing';\nimport { Gnasher } from '../../../Items/Weapons/Gnasher';\nimport { HammerBurst } from '../../../Items/Weapons/HammerBurst';\nimport { Ammo } from '../../../Items/Pickups/Ammo';\n\nexport function addWretch (mode, pos) {\n  addGrubToMapWithStats(mode, pos, GRUB_STATS.wretch())\n}\nexport function addDrone (mode, pos) {\n  addGrubToMapWithStats(mode, pos, GRUB_STATS.drone())\n}\nexport function addHunter (mode, pos) {\n  addGrubToMapWithStats(mode, pos, GRUB_STATS.hunter())\n}\nexport function addScion (mode, pos) {\n  addGrubToMapWithStats(mode, pos, GRUB_STATS.scion())\n}\nexport function addSkorge (mode, pos) {\n  addGrubToMapWithStats(mode, pos, GRUB_STATS.scion())\n}\nexport function addRandomGrub (mode, pos) {\n  addRandomBasicGrubToMap(mode, pos)\n}\n\nconst GRUB_STATS = {\n  wretch: () => {\n    return {\n      name: 'Wretch',\n      renderer: {\n        character: Helper.getRandomInArray(['w']),\n        color: COLORS.flesh1,\n        background: COLORS.flesh3,\n        sprite: '',\n      },\n      durability: 1,\n      attackDamage: 1,\n      behaviors: [\n        new Behaviors.MoveTowardsEnemy({repeat: 5}),\n        new Behaviors.TelegraphAttack({repeat: 1, attackPattern: Constant.CLONE_PATTERNS.clover}),\n        new Behaviors.ExecuteAttack({repeat: 1}),\n      ],\n    }\n  },\n  drone: () => {\n    return {\n      name: 'Drone',\n      renderer: {\n        character: 'd',\n        color: COLORS.flesh2,\n        background: COLORS.flesh1,\n        sprite: '',\n      },\n      durability: 3,\n      attackDamage: 1,\n      behaviors: [\n        new Behaviors.MoveTowardsEnemy({repeat: 5}),\n        new Behaviors.TelegraphRangedAttack({repeat: 1}),\n        new Behaviors.ExecuteAttack({repeat: 1}),\n      ],\n      loadout: {\n        equipmentCreators: [Gnasher],\n        inventoryCreators: [{amount: 100, creator: Ammo}]\n      },\n    }\n  },\n  hunter: () => {\n    return {\n      name: 'Hunter',\n      renderer: {\n        character: 'h',\n        color: COLORS.flesh2,\n        background: COLORS.flesh1,\n        sprite: '',\n      },\n      durability: 3,\n      attackDamage: 1,\n      behaviors: [\n        new Behaviors.MoveTowardsCover({repeat: 5}),\n        new Behaviors.Wait({repeat: 1}),\n        new Behaviors.TelegraphRangedAttack({repeat: 1}),\n        new Behaviors.ExecuteAttack({repeat: 1}),\n        new Behaviors.TelegraphRangedAttack({repeat: 1}),\n        new Behaviors.ExecuteAttack({repeat: 1}),\n      ],\n      loadout: {\n        equipmentCreators: [HammerBurst],\n        inventoryCreators: [{amount: 100, creator: Ammo}]\n      },\n    }\n  },\n  scion: () => {\n    return {\n      name: 'Scion',\n      renderer: {\n        character: 'S',\n        color: COLORS.flesh2,\n        background: COLORS.flesh1,\n        sprite: '',\n      },\n      durability: 10,\n      attackDamage: 4,\n      behaviors: [\n        new Behaviors.MoveTowardsEnemy({repeat: 5}),\n        new Behaviors.TelegraphAttack({repeat: 1, attackPattern: Constant.CLONE_PATTERNS.clover}),\n        new Behaviors.ExecuteAttack({repeat: 1}),\n      ],\n    }\n  },\n  skorge: () => {\n    return {\n      renderer: {\n        sprite: '',\n        character: 'S',\n        color: COLORS.flesh1,\n        background: COLORS.base04,\n      },\n      name: 'Skorge',\n      durability: 40,\n      attackDamage: 8,\n      behaviors: [\n        new Behaviors.MoveTowardsEnemy({repeat: 5}),\n        new Behaviors.TelegraphAttack({repeat: 1, attackPattern: Constant.CLONE_PATTERNS.clover}),\n        new Behaviors.ExecuteAttack({repeat: 1}),\n      ],\n    }\n  },\n};\n\nconst createBaseGrubStats = (mode, pos) => {\n  return {\n    pos,\n    game: mode.game,\n    faction: 'LOCUST',\n    enemyFactions: ['COG'],\n    equipment: Constant.EQUIPMENT_LAYOUTS.gear(),\n    onDestroy: (actor) => {\n      const chance = Math.random();\n      if (chance <= 0.05) {\n        mode.addAmmoLoot(actor.getPosition());\n      } else if (chance <= 0.1) {\n        mode.addGrenadeLoot(actor.getPosition());\n      }\n    },\n  }\n}\n\nexport function createRandomBasicGrub(mode, pos) {\n  const createStats = Helper.getRandomInArray(\n    Object\n    .keys(GRUB_STATS)\n    .filter((key) => key !== 'skorge')\n    .map((key) => GRUB_STATS[key])\n  )\n  return createNewJacintoAIEntity({\n    ...createBaseGrubStats(mode, pos),\n    ...createStats(),\n  });\n}\n\nfunction createGrubWithStats(mode, pos, stats) {\n  return createNewJacintoAIEntity({\n    ...createBaseGrubStats(mode, pos),\n    ...stats,\n  });\n}\n\nfunction createNewJacintoAIEntity(params) {\n  const {loadout, ...entityParams} = params;\n  const entity = new JacintoAI({...entityParams})\n\n  if (loadout) equipAndFillInventory(entity, loadout)\n  return entity;\n}\n\nfunction equipAndFillInventory(entity, loadout) {\n  const {equipmentCreators, inventoryCreators} = loadout;\n  const engine = entity.game.engine;\n  const container = inventoryCreators.map(({amount, creator}) => createInventorySlot(engine, amount, creator));\n  entity.container = container;\n\n  equipmentCreators.forEach((creator) => {\n    const equipmentPiece = creator(engine);\n    entity.equip(equipmentPiece.equipmentType, equipmentPiece);\n  })\n}\n\nfunction createInventorySlot (engine, amount, creator) {\n  const item = Array(amount).fill('').map(() => creator(engine));\n  return new ContainerSlot({\n    itemType: item[0].name,\n    items: item,\n  });\n} \n\nfunction addRandomBasicGrubToMap (mode, pos) {\n  const entityCreator = () => createRandomBasicGrub(mode, pos)\n  addEntityToMapWithStatsUsingCreator(mode, entityCreator)\n}\n\nfunction addGrubToMapWithStats (mode, pos, stats) {\n  const entityCreator = () => createGrubWithStats(mode, pos, stats)\n  addEntityToMapWithStatsUsingCreator(mode, entityCreator)\n}\n\nfunction addEntityToMapWithStatsUsingCreator (mode, entityCreator) {\n  const entity = entityCreator();\n  if (mode.game.placeActorOnMap(entity)) {\n    mode.game.engine.addActor(entity);\n  };\n}\n","import * as Constant from '../../constants';\nimport * as Helper from '../../../helper';\nimport * as Item from '../../items';\nimport * as MapHelper from '../../Maps/helper';\nimport { generate as generateBuilding } from '../../Maps/generator';\nimport * as CoverGenerator from '../../Maps/coverGenerator';\nimport { EmergenceHole } from '../../Entities/index';\nimport { Mode } from '../default';\nimport SOUNDS from '../../sounds';\nimport * as _ from 'lodash';\nimport {COLORS, TILE_KEY} from './theme';\nimport { Ammo } from '../../Items/Pickups/Ammo';\nimport { Grenade } from '../../Items/Weapons/Grenade';\nimport * as LocustActors from './Actors/Grubs';\nconst MAP_DATA = require('../../Maps/castle.json');\n\nexport class Jacinto extends Mode {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.data = {\n      level: 1,\n      highestLevel: null,\n      turnCount: 0,\n    };\n    this.dataByLevel = [\n      {\n        enemies: Array(3).fill('Wretch'),\n        emergenceHoles: 0,\n        ammoLoot: 2,\n        grenadeLoot: 1,\n      },\n      {\n        enemies: Array(6).fill('RandomGrub'),\n        emergenceHoles: 3,\n        ammoLoot: 1,\n        grenadeLoot: 0,\n      },\n      {\n        enemies: Array(12).fill('RandomGrub'),\n        emergenceHoles: 0,\n        ammoLoot: 3,\n        grenadeLoot: 1,\n      },\n      {\n        enemies: [],\n        emergenceHoles: 5,\n        ammoLoot: 2,\n        grenadeLoot: 0,\n      },\n      {\n        enemies: Array(10).fill('RandomGrub'),\n        emergenceHoles: 4,\n        ammoLoot: 1,\n        grenadeLoot: 0,\n      },\n      {\n        enemies: [],\n        emergenceHoles: 12,\n        ammoLoot: 20,\n        grenadeLoot: 5,\n      },\n      {\n        enemies: [...Array(4).fill('RandomGrub'), 'Skorge'],\n        emergenceHoles: 6,\n        ammoLoot: 20,\n        grenadeLoot: 2,\n      },\n    ]\n  }\n\n  createHorizontalRoad (y, length, x = 0) {\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      { x, y},\n      4,\n      length,\n      'ROAD_EDGE',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      { x, y: y + 1},\n      2,\n      length,\n      'ROAD',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n  }\n\n  createVerticalRoad (x, length, y = 0) {\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      { x, y },\n      length,\n      3,\n      'ROAD_EDGE',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      { x: x + 1, y },\n      length,\n      1,\n      'ROAD',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n  }\n\n  createVerticalRoadGoingNorthAndSouth = () => (x) => this.createVerticalRoad(x, this.game.mapHeight);\n  createVerticalRoadGoingNorth = (fromY) => (x) => this.createVerticalRoad(x, (fromY) + 1);\n  createVerticalRoadGoingSouth = (fromY) => (x) => this.createVerticalRoad(x, (this.game.mapHeight - fromY) - 1, (fromY) + 1);\n\n  createCityBlockLevel (numberOfVerticalRoads, numberOfBuildings) {\n    // Generates the main road\n    const mainRoadY = this.game.mapHeight / 4\n    this.createHorizontalRoad(mainRoadY, this.game.mapWidth)\n\n    // Generates roads to run the height of the map\n    Array(numberOfVerticalRoads).fill('').forEach(() => {\n      const x = Helper.getRandomIntInclusive(0, this.game.mapWidth);\n      const generateRoad = Helper.getRandomInArray([\n        this.createVerticalRoadGoingNorth(mainRoadY),\n        this.createVerticalRoadGoingSouth(mainRoadY),\n        this.createVerticalRoadGoingNorthAndSouth(mainRoadY),\n      ]);\n      generateRoad(x)\n    })\n\n    Array(numberOfBuildings).fill('').forEach(() => {\n      let groundTiles = this.getEmptyGroundTileKeys()\n      let pos = Helper.getRandomInArray(groundTiles);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      const unitCount = Helper.getRandomIntInclusive(1, 6);\n      // const unitCount = 4\n      const unitSize = Helper.getRandomInArray([3, 4, 6]);\n      generateBuilding(this.game.map, posXY[0], posXY[1], unitCount, unitSize);\n    })\n  }\n\n  initialize () {\n    super.initialize();\n    this.game.tileKey = TILE_KEY\n    this.game.createEmptyLevel();\n    this.game.initializeMapTiles();\n    // this.game.createCustomLevel(MAP_DATA);\n\n    this.setWaveData();\n\n    // Generates a safe zone on left-hand edge of map for player to start\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      { x: 0, y: 0 },\n      this.game.mapHeight,\n      1,\n      'SAFE',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n  \n    const numberOfVerticalRoads = Helper.getRandomIntInclusive(0, 5);\n    const numberOfBuildings = Helper.getRandomIntInclusive(0, 10);\n    this.createCityBlockLevel(numberOfVerticalRoads, numberOfBuildings);\n\n    let floorTiles = Object.keys(this.game.map).filter((key) => this.game.map[key].type === 'FLOOR')\n\n    this.placePlayersInSafeZone();\n    const player = this.game.getFirstPlayer();\n    if (player) player.upgrade_points += 1;\n\n    // adding emergence holes\n    for (let index = 0; index < this.data.emergenceHoles; index++) {\n      let pos = Helper.getRandomInArray(this.getEmptyTileKeys());\n      if (!pos) break;\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addEmerenceHole({ x: posXY[0], y: posXY[1] });\n    }\n\n    // adding cover blocks\n    const numberOfCoverStructures = 5 + this.data.enemies.length;\n    \n    let coverEligibleTiles = Object.keys(this.game.map).filter((key) =>  ['ROAD', 'DOOR', 'EMERGENCE_GROUND'].includes(this.game.map[key].type))\n    for (let index = 0; index < numberOfCoverStructures; index++) {\n      let pos = Helper.getRandomInArray(coverEligibleTiles);\n      if (!pos) break;\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      const position = { x: posXY[0], y: posXY[1] };\n      CoverGenerator.generateRandom(position, this.game);\n    }\n\n    // adding  ammo loot\n    for (let index = 0; index < this.data.ammoLoot; index++) {\n      let pos = Helper.getRandomInArray(floorTiles);\n      if (!pos) break;\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addAmmoLoot({ x: posXY[0], y: posXY[1] });\n    }\n\n    // adding  grenade loot\n    for (let index = 0; index < this.data.grenadeLoot; index++) {\n      let pos = Helper.getRandomInArray(floorTiles);\n      if (!pos) break;\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addGrenadeLoot({ x: posXY[0], y: posXY[1] });\n    }\n\n      // adding enemies\n    this.data.enemies.forEach((enemyName) => {\n      let pos = Helper.getRandomInArray(this.getEmptyGroundTileKeys());\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      LocustActors[`add${enemyName}`](this, { x: posXY[0], y: posXY[1] });\n    })\n  }\n\n  // TODO curry these funcs\n  getEmptyTileKeys (keys = Object.keys(this.game.map)) {\n    return keys.filter((key) => !!!this.game.map[key].entities.length)\n  }\n\n  getEmptyGroundTileKeys (keys = Object.keys(this.game.map)) {\n    return this.getEmptyTileKeys(keys).filter((key) => this.game.map[key].type === 'GROUND')\n  }\n\n  getEmptyFloorTileKeys (keys = Object.keys(this.game.map)) {\n    return this.getEmptyTileKeys(keys).filter((key) => this.game.map[key].type === 'FLOOR')\n  }\n\n  getPlayers () {\n    return this.game.engine.actors.filter((actor) => actor.entityTypes.includes('PLAYING'))\n  }\n\n  updateUI() {\n    this.createOrUpdateInfoBlock(\n      'gameProgress',\n      { \n        text: `${this.data.level - 1} of  ${this.dataByLevel.length} city blocks cleared.` \n      }\n    );\n  }\n\n  checkCoverAnimations() {\n    this.game.engine.actors.forEach((actor) => {\n      if (actor.entityTypes.includes('USES_COVER')) {\n        if (actor.resetCoverAnimations());\n      }\n    })\n  }\n\n  update () {\n    super.update();\n    this.checkCoverAnimations();\n    this.updateUI();\n    if (this.hasWon()) {\n      this.game.toWin()\n    }\n    if (this.hasLost()) {\n      SOUNDS.lose.play();\n      this.game.toLose();\n      this.reset();\n      this.game.initializeGameData();\n    }\n    if (this.levelComplete()) {\n      this.nextLevel();\n      this.setWaveData();\n\n      // a hack to persist player data\n      // this would persist all existing actors however\n      this.initialize();\n      // this.game.initializeGameData();\n    }\n  }\n  \n  //Extras\n  setLevel (level) {\n    this.data.level = level;\n    this.data.turnCount = 0;\n  }\n\n  nextLevel () {\n    this.setLevel(this.data.level + 1);\n  }\n\n  reset () {\n    this.setLevel(1);\n    this.initialize();\n  }\n\n  setWaveData () {\n    const level = this.data.level - 1\n    const nextLevelData = _.get(this.dataByLevel, level, {});\n    this.data = {...this.data, ...nextLevelData}\n  }\n\n  levelComplete () {\n    const playerOnExit = this.playerIsOnExit();\n    const enemiesDefeated = this.enemiesDefeated();\n    if (enemiesDefeated) {\n      this.activateExitTiles();\n    }\n    return playerOnExit && enemiesDefeated; \n  }\n\n  enemiesDefeated () {\n    return this.game.engine.actors.filter((actor) => actor['faction'] === 'LOCUST').length <= 0\n  }\n\n  hasWon () {\n    return this.data.level > this.dataByLevel.length;\n  }\n\n  hasLost () {\n    let players = this.getPlayers()\n    if (!players.length) return true;\n    else if (players.length) {\n      if (players[0].durability <= 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  addEmerenceHole(pos) {\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      {x: pos.x - 1, y: pos.y - 1},\n      3,\n      3,\n      'EMERGENCE_GROUND',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    // create new fire actor and place\n    let entity = new EmergenceHole({\n      name: 'Hole',\n      pos,\n      game: this.game,\n      passable: true,\n      renderer: {\n        character: '',\n        sprite: '',\n        color: COLORS.locust1,\n        background: COLORS.base04,\n      },\n      timeToSpread: 1,\n      spreadCount: 3,\n      durability: 1,\n      faction: 'LOCUST',\n      enemyFactions: ['COG'],\n      speed: Constant.ENERGY_THRESHOLD,\n      getSpawnedEntity: (spawnPosition) => LocustActors.createRandomBasicGrub(this, spawnPosition),\n      onDestroy: () => this.game.map[Helper.coordsToString(pos)].type = 'EMERGENCE_DESTROYED',\n    });\n\n    if (this.game.placeActorOnMap(entity)) {\n      this.game.engine.addActor(entity);\n      this.game.draw();\n    };\n  }\n\n  createAmmoStack(amount, pos) {\n    return Array(amount).fill('').map((i) => {\n      const ammo = Ammo(this.game.engine);\n      ammo.pos = pos;\n      return ammo;\n    });\n  }\n\n  addAmmoLoot (pos) {\n    this.createAmmoStack(5, pos).forEach((entity) => {\n      this.game.placeActorOnMap(entity)\n    })\n  }\n\n  addGrenadeLoot (pos) {\n    const entity = Grenade(this.game.engine, 6);\n    entity.pos = pos;\n    this.game.placeActorOnMap(entity)\n  }\n\n  placePlayersInSafeZone () {\n    let players = this.getPlayers()\n    const keys = Object.keys(this.game.map).filter((key) => this.game.map[key].type == 'SAFE');\n    players.forEach((player) => {\n      const key = keys.shift();\n      if (key) {\n        const position = {\n          x: parseInt(key.split(',')[0]),\n          y: parseInt(key.split(',')[1]),\n        }\n        player.pos = {x: position.x, y: player.pos.y};\n        this.game.placeActorOnMap(player)\n      }\n    })\n  }\n\n  playerIsOnExit() {\n    const player = this.game.getFirstPlayer();\n    if (player) {\n      const tile = this.game.map[Helper.coordsToString(player.pos)];\n      if (tile.type === 'EXIT') {\n        return true;\n      }\n    }\n    return false\n  }\n\n  activateExitTiles() {\n    MapHelper.addTileZone(\n      this.game.tileKey,\n      { x: this.game.mapWidth - 3, y: 0 },\n      this.game.mapHeight,\n      3,\n      'EXIT',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n  }\n\n}\n","import { Jacinto } from './Jacinto/jacinto'\n\nexport default {\n  Jacinto,\n}","import React from 'react';\nimport * as ROT from 'rot-js';\nimport * as _ from 'lodash';\nimport * as Constant from './constants';\nimport * as Helper from '../helper';\nimport * as Message from './message';\nimport { Display } from './Display/konvaCustom';\nimport Mode from './Modes/index';\nimport * as MapHelper from './Maps/helper';\n\n// const MAP_DATA = require('./Maps/castle.json');\n// const SOLANGE = require('./Data/solange.json');\n\nconst MAP_WIDTH = 50;\nconst MAP_HEIGHT = 25;\n\nconst TILE_OFFSET = 0;\n\nconst TILE_WIDTH = 26;\nconst TILE_HEIGHT = TILE_WIDTH;\n\nconst canvasWidth = (MAP_WIDTH * TILE_WIDTH) + TILE_OFFSET;\nconst canvasHeight = (MAP_HEIGHT * TILE_HEIGHT) + TILE_OFFSET;\n\nexport class Game {\n  constructor({\n    engine = null,\n    map = {},\n    entityMap = {},\n    entityDictionary = {},\n    mapInitialized = false,\n    tileMap = {},\n    mapWidth = MAP_WIDTH,\n    mapHeight = MAP_HEIGHT,\n    cameraWidth = MAP_WIDTH,\n    cameraHeight = MAP_HEIGHT,\n    tileWidth = TILE_WIDTH,\n    tileHeight = TILE_HEIGHT,\n    tileOffset = TILE_OFFSET,\n    getSelectedCharacter = () => false,\n    spriteMode = true,\n    tileKey = Constant.TILE_KEY,\n    mode = Mode.Flume,\n    messages = [],\n  }) {\n    this.engine = engine;\n    this.map = map;\n    this.entityMap = entityMap;\n    this.entityDictionary = entityDictionary;\n    this.mapInitialized = mapInitialized;\n    this.tileMap = tileMap;\n    this.mapWidth = mapWidth;\n    this.mapHeight = mapHeight;\n    this.cameraWidth = cameraWidth;\n    this.cameraHeight = cameraHeight;\n    this.tileWidth = tileWidth;\n    this.tileHeight = tileHeight;\n    this.tileOffset = tileOffset;\n    this.display = new Display({\n      containerId: 'display',\n      width: canvasWidth,\n      height: canvasHeight,\n      tileWidth: tileWidth,\n      tileHeight: tileHeight,\n      tileOffset: tileOffset,\n      game: this,\n    });\n    this.spriteMode = spriteMode;\n    this.tileKey = tileKey;\n    this.mode = new mode({game: this});\n    this.messages = messages;\n    this.getSelectedCharacter = getSelectedCharacter;\n  }\n\n  initializeMode () {\n    this.mode.initialize();\n  }\n  \n  updateMode () { // this is run every game turn\n    this.mode.update();\n  }\n\n  randomlyPlaceActorOnMap(actor) {\n    let kill = 0;\n    let placed = false;\n    while (!placed) {\n      let pos = Helper.getRandomPos(this.map).coordinates\n      if (this.canOccupyPosition(pos, actor)) {\n        let tile = this.map[Helper.coordsToString(pos)]\n        actor.pos = { ...pos }\n        tile.entities.push(actor);\n        placed = true;\n      }\n      kill += 1;\n      if (kill >= 100) {\n        placed = true;\n      }\n    }\n    return placed;\n  }\n\n  randomlyPlaceAllActorsOnMap() {\n    this.engine.actors.forEach((actor) => {\n      this.randomlyPlaceActorOnMap(actor);\n    })\n  }\n\n  placeActorsOnMap() {\n    this.engine.actors.forEach((actor) => {\n      let tile = this.map[Helper.coordsToString(actor.pos)]\n      if (tile) {\n        tile.entities.push(actor);\n      } else {\n        console.log(`could not place ${actor.id}: ${actor.name} on map`);\n      }\n    })\n  }\n\n  placeActorOnMap(actor) {\n    let tile = this.map[Helper.coordsToString(actor.pos)]\n    if (tile) {\n      tile.entities.push(actor);\n      return true\n    } else {\n      console.log(`could not place ${actor.id}: ${actor.name} on map`);\n      return false\n    }\n  }\n\n  removeActorFromMap (actor) {\n    let tile = this.map[Helper.coordsToString(actor.pos)]\n    if (!tile) return false;\n    this.map[Helper.coordsToString(actor.pos)].entities = tile.entities.filter((ac) => ac.id !== actor.id);\n    return true;\n  }\n\n  createLevel () {\n    let digger = new ROT.Map.Arena(this.mapWidth, this.mapHeight);\n    // let digger = new ROT.Map.Rogue();\n    // let digger = new ROT.Map.DividedMaze();\n    // let digger = new ROT.Map.EllerMaze();\n    // let digger = new ROT.Map.Cellular();\n    // let digger = new ROT.Map.Digger(this.mapWidth, this.mapHeight);\n    // let digger = new ROT.Map.IceyMaze();\n    // let digger = new ROT.Map.Uniform();\n    let freeCells = [];\n    let digCallback = function (x, y, value) {      \n      let key = x + \",\" + y;\n      let type = 'GROUND';\n      if (value) { \n        type = 'WALL';\n        // type = 'WATER';\n      }\n      MapHelper.addTileToMap({map: this.map, key, tileKey: this.tileKey, tileType: type})\n      freeCells.push(key);\n    }\n    digger.create(digCallback.bind(this));\n  }\n\n  createEmptyLevel () {\n    for (let i = 0; i < this.mapHeight; i ++) {\n      for (let j = 0; j < this.mapWidth; j ++) {\n        const key = `${j},${i}`\n        // let type = 'GROUND';\n        let type = Helper.getRandomInArray(['GROUND', 'GROUND_ALT', 'GROUND_ALT', 'GROUND_ALT']);\n        MapHelper.addTileToMap({map: this.map, key, tileKey: this.tileKey, tileType: type})\n      }\n    }\n  }\n\n  createCustomLevel (data) {\n    Object.keys(data.tiles).forEach((key, i) => {\n      const tile = data.tiles[key];\n      let type = tile.data.type;\n      if (!type) {\n        type = 'GROUND';\n      }\n      MapHelper.addTileToMap({map: this.map, key, tileKey: this.tileKey, tileType: type})\n    })\n  }\n\n  canOccupyPosition (pos, entity = {passable: false}) {\n    let result = false;\n    let targetTile = this.map[Helper.coordsToString(pos)];\n    if (targetTile) {\n      let hasImpassableEntity = targetTile.entities.filter((entity) => !entity.passable).length > 0;\n      if (!hasImpassableEntity || entity.passable) {\n        let tile = this.map[Helper.coordsToString(pos)];\n        if (this.tileKey[tile.type].passable) {\n          result = true;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  rangedCursorCanOccupyPosition (pos, entity = {passable: false}) {\n    let result = false;\n    let targetTile = this.map[Helper.coordsToString(pos)];\n    if (targetTile) {\n      let tile = this.map[Helper.coordsToString(pos)];\n      if (this.tileKey[tile.type].passable) {\n        result = true;\n      }\n    }\n\n    return result;\n  }\n\n  cursorCanOccupyPosition(pos) {\n    let result = false;\n    let targetTile = this.map[Helper.coordsToString(pos)];\n    if (targetTile) {\n      result = true;\n    }\n\n    return result;\n  }\n\n  show (document) {\n    this.display.initialize(document)\n  }\n\n  getRenderMap(fullMap, referencePosition, renderWidth, renderHeight, fullWidth, fullHeight) { \n    // create an object with only tile keys that should be rendered (around player)\n    // renderWidth/Height measured in tiles\n    // reference positon usually based on player pos\n    // position from fullMap key should be translated to 0,0 based on referencePos\n    \n    const renderPaddingX = Math.floor((renderWidth / 2));\n    const renderPaddingY = Math.floor((renderHeight / 2));\n    let offsetX = 0;\n    let offsetY = 0;\n    if (referencePosition) {\n      offsetX = referencePosition.x - renderPaddingX;\n      offsetY = referencePosition.y - renderPaddingY;\n    }\n    offsetX = Helper.clamp(offsetX, 0, fullWidth - renderWidth);\n    offsetY = Helper.clamp(offsetY, 0, fullHeight - renderHeight);\n    \n    let result = {}\n    for (let key in fullMap) {\n      let parts = key.split(\",\");\n      let x = parseInt(parts[0]);\n      let y = parseInt(parts[1]);\n      let finalX = x - offsetX;\n      let finalY = y - offsetY;\n      if (finalX >= 0 && finalX <= renderWidth) {\n        if (finalY >= 0 && finalY <= renderHeight) {\n          result[`${finalX},${finalY}`] = fullMap[key]\n        }\n      }\n    }\n    return result\n  }\n\n  processTileMap (callback) {\n    // const map = this.map;\n    // const map = this.getRenderMap(this.map, this.getPlayerPosition(), this.mapWidth, this.mapHeight);\n    // const map = this.getRenderMap(this.map, this.getPlayerPosition(), 50, 25, this.mapWidth, this.mapHeight);\n    const map = this.getRenderMap(this.map, this.getPlayerPosition(), this.cameraWidth, this.cameraHeight, this.mapWidth, this.mapHeight);\n    for (let key in map) {\n      let parts = key.split(\",\");\n      let x = parseInt(parts[0]);\n      let y = parseInt(parts[1]);\n      let tile = map[key];\n      // let { foreground, background } = this.tileKey[tile.type]\n      // Proto code to handle tile animations\n      let tileRenderer = this.tileKey[tile.type]\n      let nextFrame = this.animateTile(tile, tileRenderer);\n      let character = nextFrame.character;\n      let foreground = nextFrame.foreground;\n      let background = nextFrame.background;\n      \n      const renderedEntities = tile.entities.filter((entity) => entity.entityTypes.includes('RENDERING'))\n      if (renderedEntities.length > 0) {\n        let entity = renderedEntities[renderedEntities.length - 1]\n        nextFrame = this.animateEntity(entity);\n\n        character = nextFrame.character\n        foreground = nextFrame.foreground\n        if (nextFrame.background) {\n          background = nextFrame.background\n        }\n      }\n      callback(key, x, y, character, foreground, background);          \n    }\n  }\n\n  initializeMapTiles () {\n    if (this.mapInitialized) return false;\n    this.mapInitialized = true;\n    this.processTileMap((key, x, y, character, foreground, background) => {\n      let node = this.display.createTile(x, y, character, foreground, background);\n      this.tileMap[key] = node;\n    });\n  }\n\n  getPlayers () {\n    return this.engine.actors.filter((actor) => actor.entityTypes.includes('PLAYING'))\n  }\n\n  getFirstPlayer () {\n    const players = this.getPlayers();\n    if (players.length) return players[0]\n    return null\n  }\n\n  getPlayerPosition () {\n    const player = this.getFirstPlayer();\n    if (player) return player.getPosition();\n    return null\n  }\n  \n  draw () {\n    this.processTileMap((key, x, y, character, foreground, background) => {\n      this.display.updateTile(this.tileMap[key], character, foreground, background);\n    });\n    this.display.draw();\n  }\n\n  getEntityRenderer (renderer) {\n    // if sprite mode is on and the renderer has a sprite defined, use that\n    if (this.spriteMode && renderer.hasOwnProperty('sprite')) {\n      return {...renderer, character: renderer.sprite, foreground: renderer.color}\n      // return {character: renderer.sprite, foreground: renderer.background, background: ''}\n    }\n    // else us the ascii character\n    return {...renderer, foreground: renderer.color}\n  }\n\n  getTileRenderer (renderer) {\n    // if sprite mode is on and the renderer has a sprite defined, use that\n    if (this.spriteMode && renderer.hasOwnProperty('sprite')) {\n      return {...renderer, character: renderer.sprite}\n    }\n    // else us the ascii character\n    return renderer\n  }\n  \n  animateEntity (entity) {\n    let renderer = entity.getRenderer();\n    let { character, foreground, background } = this.getEntityRenderer(renderer)\n    if (renderer.animation) {\n      let frame = this.getEntityRenderer(renderer.animation[entity.currentFrame]);\n      character = frame.character;\n      foreground = frame.foreground;\n      background = frame.background;\n      entity.currentFrame = (entity.currentFrame + 1) % renderer.animation.length;\n    }\n    return {character, foreground, background}\n  }\n\n  animateTile (tile, renderer) {\n    let {character, foreground, background} = this.getTileRenderer(renderer)\n    if (renderer.animation) {\n      let frame = this.getTileRenderer(renderer.animation[tile.currentFrame]);\n      character = frame.character\n      foreground = frame.foreground;\n      background = frame.background;\n      tile.currentFrame = (tile.currentFrame + 1) % renderer.animation.length;\n    }\n    return {character, foreground, background}\n  }\n\n  addActor (actor, engine = this.engine) {\n    let isPlaced = this.placeActorOnMap(actor); // replace with placeActorOnMap\n    if (!isPlaced) { return false }\n    engine.actors.push(actor);\n    this.draw();\n    return true\n  }\n\n  placeAndDrawActor (actor) {\n    this.placeActorsOnMap(); // replace with placeActorOnMap\n    this.draw();\n  }\n\n  removeActor (actor) {\n    this.engine.actors = this.engine.actors.filter((ac) => ac.id !== actor.id);\n    // this.engine.currentActor = this.engine.actors.length - 1; // should remove need for this line\n    // this.engine.currentActor = (this.engine.currentActor) % this.engine.actors.length;\n    // this.engine.currentActor = (this.engine.currentActor + 1) % this.engine.actors.length;\n    this.removeActorFromMap(actor);\n    this.draw();\n  }\n\n  initializeUI (presserRef, document) {\n    this.show(document);\n    presserRef.current.focus();\n  }\n\n  initializeGameData () {\n    this.engine.game = this;\n    const selectedCharacter = this.getSelectedCharacter();\n    this.engine.actors = [selectedCharacter];\n    this.engine.actors.forEach((actor) => {\n      actor.game = this;\n    });\n    // this.createEmptyLevel();\n    // this.initializeMapTiles();\n    this.initializeMode();\n    this.draw();\n  }\n\n  initialize (presserRef, document) {\n    this.initializeUI(presserRef, document);\n    this.initializeGameData();\n    // hack to register sprite mode\n    setTimeout(() => {\n      this.spriteMode = false;\n      this.draw()\n    }, 500)\n    setTimeout(() => {\n      this.spriteMode = true;\n      this.draw()\n    }, 500)\n    // end hack\n  }\n\n  addMessage (text, type) {\n    const message = new Message.Message({text, type})\n    this.messages.push(message);\n  }\n}\n\n\n/************************** UI ********************************/\nexport const handleKeyPress = (event, engine) => {\n  if (!engine.isRunning) {\n    let actor = engine.actors[engine.currentActor];\n    let keymap = null;\n    try {\n      keymap = actor.getKeymap();\n    } catch (e) {\n      console.log('keypress error');\n      console.log(e);\n    }\n    if (keymap) {\n      let code = event.key;\n      if (!(code in keymap)) { return; }\n      const getAction = keymap[code];\n      const action = getAction();\n      // const action = keymap[code];\n      action.setAsNextAction();\n      engine.start();\n    }\n  }\n  return;\n}\n\nexport const DisplayElement = (presserRef, handleKeyPress, engine) => {\n  return (\n    <div\n      id='display'\n      ref={presserRef}\n      onKeyDown={(event) => handleKeyPress(event, engine)}\n      // onKeyUp={(event) => handleKeyPress(event, engine)}\n      tabIndex='0'\n    />\n  )\n}\n/************************** UI ********************************/\n","import React from 'react';\nimport { SCREENS } from '../Screen/constants';\nimport * as _ from 'lodash';\n\nclass Instructions extends React.Component {\n  render() {\n    const infoHeader = _.get(this.props.game, 'mode.infoHeader', null);\n    const infoBlocks = _.get(this.props.game, 'mode.infoBlocks', {});\n\n    return (\n      <div className=\"Instructions UI\">\n        {infoHeader && (<p className='flow-text'>{infoHeader}</p>)}\n        <div className='flow-text'>\n          <div \n            className='Instructions__block'\n            // onClick={() => this.props.setActiveScreen(SCREENS.TITLE)}\n            onClick={() => window.location.reload()}\n          >\n            <button className='btn btn-main'>\n              Restart\n            </button>\n          </div>\n          <div \n            className='Instructions__block'\n            onClick={() => this.props.toggleSpriteMode()}\n          >\n            <button className='btn btn-main'>\n              {\n                this.props.spriteMode ? (\n                  'ASCII mode'\n                ) : (\n                  'Sprite mode'\n                )\n              }\n            </button>\n          </div>\n          <div\n            className='Instructions__block'\n          >\n            <button data-target=\"jacinto_help\" className='btn btn-main modal-trigger'>\n              Help\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Instructions;","import React from 'react';\n\nfunction Button(props) {\n  let color = props['color'];\n  if (!color) color = 'grey';\n  return (\n    <button\n      onClick={props.onClick}\n      className={`Button btn ${color}`}\n    >\n      {props.children}  \n    </button>\n  )\n}\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\n\nclass Information extends React.Component {\n  render() {\n    let data = [\n      {\n        label: 'Wave',\n        value: `Current: ${this.props.game.mode.data.level}, Highest: ${this.props.game.mode.data.highestLevel}`,\n      },\n    ];\n\n    data = data.concat(\n      [\n        ...this.props.game.engine.actors.map((actor, index) => {\n          let result = {\n            label: actor.name,\n            // value: index,\n            value: `HP: ${actor.durability}, En/Sp: ${actor.energy}/${actor.speed}`,\n          };\n          if (index === this.props.game.engine.currentActor) {\n            result['color'] = 'red';\n          }\n          return result;\n        })\n      ]\n    )\n\n    return (\n      <div className=\"Information UI\">\n        {\n          data && (\n            data.map((item, index) => {\n              return (\n                <Button key={index} color={item['color']} onClick={() => null}>\n                  {`${item.label}: ${item.value}`}\n                </Button>\n              )\n            })\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Information;","import React from 'react';\n\nfunction Tooltip ({title = 'Effect', text = '', children}) {\n  return (\n    <div className=\"Tooltip\">\n      {children}\n      <div className=\"top\">\n        <h3>{title}</h3>\n        <p>{text}</p>\n        <i></i>\n      </div>\n    </div>\n  )\n}\n\nexport default Tooltip;\n","import React from 'react';\nimport * as _ from 'lodash';\nimport Tooltip from './Tooltip';\n\nfunction ResourceBlock({ resource, superScript, canPay }) {\n  const character = resource.renderer.sprite ? resource.renderer.sprite : resource.renderer.character\n  return (\n    <div className=\"ResourceBlock\" style={{\n      backgroundColor: canPay ? resource.renderer.background : '#616161',\n      color: canPay ? resource.renderer.color : '#bdbdbd',\n      borderColor: canPay ? resource.renderer.color : '#bdbdbd',\n      fontFamily: 'scroll-o-script',\n      width: superScript ? 'auto' : 20,\n    }}>\n      {`${superScript ? superScript + ' ' : ''}${character}`}\n    </div>\n  )\n}\n\nclass ActionBar extends React.Component {\n  render() {\n    return (  \n      <div className=\"ActionBar\">\n        <div className=\"CharacterActions\">\n          {\n            \n            this.props.keymap && (\n              Object.entries(this.props.keymap).map(([key, getAction], index) => {\n                const action = getAction();\n                const hidden = _.get(action, 'hidden', false);\n                const renderer = _.get(action, 'renderer', null);\n                const reqs = action.listPayableResources();\n\n                if (!hidden) {\n                  return (\n                    <Tooltip\n                      key={`${index}-label`}\n                      title={action.label}\n                      text={action.label + ` ${action.actor.name}`}\n                    >\n                      <div \n                        className=\"CharacterActions__item\"\n                        onClick={() => {\n                          action.setAsNextAction();\n                          if (!this.props.game.engine.isRunning) this.props.game.engine.start();\n                          this.props.game.refocus();\n                        }}\n                      >\n                        <div className=\"CharacterActions__item__label\">\n                          {key}\n                        </div>\n                        <div className=\"CharacterActions__item__content\" style={renderer && {\n                          backgroundColor: renderer.background,\n                          color: renderer.color,\n                          borderColor: renderer.color,\n                        }}>\n                          {action.label}\n                        </div>\n                        <div className=\"CharacterActions__item__resources\">\n                          {\n                            reqs.map((req, i) => {\n                              const numBlocks = req.getResourceCost();\n                              return numBlocks > 0 && (\n                                <ResourceBlock\n                                  key={`${i}-${req.name}-resource-block`}\n                                  superScript={numBlocks}\n                                  resource={req}\n                                  canPay={req.canPay}\n                                />\n                              )\n                            })\n                          }\n                        </div>\n                      </div>\n                    </Tooltip>\n                  )\n                }\n              })\n            )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ActionBar;","import React from 'react';\nimport * as _ from 'lodash';\nimport Tooltip from '../Tooltip';\nimport ActionBar from '../ActionBar';\n\nfunction Portrait ({actor}) {\n  return (\n    <div className=\"Portrait\" style={{\n      backgroundColor: actor.renderer.background, \n      color: actor.renderer.color,\n      borderColor: actor.renderer.color,\n    }}>\n      {actor.renderer.sprite ? actor.renderer.sprite : actor.renderer.character}\n    </div>\n  )\n}\n\nfunction StatusEffect ({effect}) {\n  return (\n    <div className=\"StatusEffects__effect\" style={{\n      backgroundColor: effect.renderer.background, \n      color: effect.renderer.color,\n      borderColor: effect.renderer.color,\n    }}>\n      {effect.renderer.sprite ? effect.renderer.sprite : effect.renderer.character}\n    </div>\n  )\n}\n\nfunction StatusEffects ({actor}) {\n  return (\n    <div className=\"StatusEffects\">\n      {\n        actor.game.engine.getStatusEffectsByActorId(actor.id).map((effect, i) => {\n          return (\n            <Tooltip \n              key={i}\n              title={effect.name}\n              text={effect.name}\n            >\n              <StatusEffect effect={effect} />\n            </Tooltip>\n          )\n        })\n      }\n    </div>\n  )\n}\n\nfunction NamePlate ({actor}) {\n  return (\n    <div className=\"NamePlate\">\n      {actor.name}\n    </div>\n  )\n}\n\nfunction ProgressBar ({\n  actor, \n  label, \n  colorFilled = 'red',\n  colorEmpty = 'gray',\n  attributePathMax, \n  attributePath, \n  unit,\n}) {\n  const valueMax = _.get(actor, attributePathMax, 0) / unit;\n  const valueCurrent = _.get(actor, attributePath, 0) / unit;\n  return (\n    <div className=\"ProgressBar\">\n      <div>\n        <span className='ProgressBar__label'>{label}</span>\n      </div>\n      <div>\n        <div className='ProgressBar__blips'>\n          {\n            Array(valueMax).fill(true).map((blip, index) => {\n              return (\n                <span \n                  key={index}\n                  className='ProgressBar__blips__blip' \n                  style={{backgroundColor: valueCurrent > index ? colorFilled : colorEmpty }}\n                />\n              )\n            })\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction CharacterCard ({actor, game}) {\n  return (\n    <div className='CharacterCard'>\n      <Portrait actor={actor}/>\n      <div>\n        <NamePlate actor={actor}/>\n        <ProgressBar \n          label='Action Points'\n          attributePath='energy'\n          attributePathMax='speed'\n          colorFilled='#ff9926'\n          unit={100}\n          actor={actor} \n        />\n        <ProgressBar \n          label='Health Points'\n          attributePath='durability'\n          attributePathMax='durabilityMax'\n          colorFilled='#dc322f'\n          unit={1}\n          actor={actor} \n        />\n        <ProgressBar \n          label='Upgrade Points'\n          attributePath='upgrade_points'\n          attributePathMax='upgrade_points'\n          colorFilled='#3e7dc9'\n          unit={1}\n          actor={actor} \n        />\n        <StatusEffects actor={actor} />\n      </div>\n      <div>\n        {/* <ActionBar keymap={game.visibleKeymap} game={game} /> */}\n        <ActionBar keymap={actor.getKeymap()} game={game} />\n      </div>\n    </div>\n  )\n}\n\nexport default CharacterCard;\n","import React from 'react';\nimport CharacterCard from './CharacterCard';\nimport * as _ from 'lodash';\n\nconst PlayerInformation = ({game}) => {\n  const actors = game.engine.actors.filter((actor) => actor.entityTypes.includes('PRESENTING_UI')).filter((actor) => actor.presentingUI)\n  return (\n    <div className=\"PlayerInformation Information UI\">\n      <div className='CharacterCard_Container'>\n        {\n          actors.map((actor, index) => <CharacterCard key={index} actor={actor} game={game} />)\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default PlayerInformation;","import React from 'react';\nimport Button from './Button';\n\nclass Inventory extends React.Component {\n  render() {\n    return (\n      <div className=\"Inventory UI\">\n        {\n          this.props.inventory && (\n            <div>\n              <div className='flow-text'>Inventory</div>\n              <div>\n                {\n                  this.props.inventory.map((slot, index) => {\n                    return (\n                      <Button key={index} onClick={() => null}>\n                        {`${slot.itemType} | x ${slot.items.length}`}\n                      </Button>\n                    )\n                  })\n                }\n              </div>\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Inventory;","import React from 'react';\n\nfunction Message (props) {\n  return (\n    <div\n      className='Message'\n      style={{\n        color: props.color,\n        backgroundColor: props.backgroundColor,\n        borderColor: props.color,\n      }}\n    >\n      {props.children}\n    </div>\n  )\n}\n\nclass Messages extends React.Component {\n  render() {\n    return (\n      <div className=\"Messages UI\">\n        <div className='flow-text center'>Messages</div>\n        {\n          this.props.messages && (\n            this.props.messages.map((message, index) => {\n              return (\n                <Message \n                  key={index} \n                  color={message.type.color}\n                  backgroundColor={message.type.backgroundColor}\n                >\n                  {`${message.text}`}\n                </Message>\n              )\n            })\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Messages;","import React from 'react';\nimport * as _ from 'lodash';\n\nfunction InfoBlocks(props) {\n  return (\n    <div>\n      {\n        _.map(_.get(props.game, 'mode.infoBlocks', {}), (value, key) => {\n          return (\n            <div key={key} className='Instructions__block Instructions__block--Jacinto'>\n              {value.text}\n            </div>\n          )\n        })\n      } \n    </div>\n  )\n}\n\nexport default InfoBlocks;\n","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nexport class EquipItemFromContainer extends Base {\n  // entities can only equip items from their container/inventory\n  constructor({ item, ...args }) {\n    super({ ...args });\n    this.item = item;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (this.item.equipmentType) {\n      let itemInSlot = this.actor.getItemInSlot(this.item.equipmentType);\n      if (itemInSlot) {\n        this.actor.addToContainer(itemInSlot);\n        this.actor.unequip(itemInSlot);\n      }\n      this.actor.removeFromContainer(this.item);\n      this.actor.equip(this.item.equipmentType, this.item);\n      this.game.addMessage(`${this.actor.name} equips ${this.item.name}.`, MESSAGE_TYPE.ACTION);\n      success = true;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import React from 'react';\nimport {\n  GiCrosshair,\n  GiBullets,\n  GiBackwardTime,\n  GiBarbedArrow,\n  GiBurningDot,\n} from \"react-icons/gi\";\nimport {EquipItemFromContainer} from '../../Actions/EquipItemFromContainer';\nimport {STAT_RENDERERS} from '../../Modes/Jacinto/theme';\n\nfunction StatBlock({stat}) {\n  const {getIcon, value, name} = stat;\n  const character = stat.renderer.sprite ? stat.renderer.sprite : stat.renderer.character\n  return (\n    <div \n      className=\"StatBlock\" \n      style={{\n        backgroundColor: stat.renderer.background,\n        color: stat.renderer.foreground,\n        borderColor: stat.renderer.foreground,\n        fontFamily: 'scroll-o-script',\n        width: stat.value !== null ? 'auto' : 20,\n      }}\n      title={name}\n    >\n      {\n        getIcon ? getIcon() : `${character}`\n      }\n      <span>&nbsp;{value}</span>\n    </div>\n  )\n}\n\nconst EquipmentCard = (props) => {\n  const {\n    game,\n    player,\n    data,\n  } = props;\n  const {\n    item,\n    equipped,\n    amount,\n    equipable,\n  } = data;\n\n  let needsReload = false;\n\n  let onClick = () => null;\n  if (equipable) {\n    const action = new EquipItemFromContainer({\n      item,\n      game,\n      energyCost: 0,\n      actor: player,\n      label: `Equip ${item.name}`,\n    });\n    onClick = () => {\n      game.refocus();\n      action.setAsNextAction();\n      game.engine.start();\n    }\n  }\n\n  let stats = [];\n  if (amount) {\n    stats.push({\n      name: 'amount left',\n      value: amount,\n      renderer: STAT_RENDERERS.amount,\n    })\n  }\n  if (item.hasOwnProperty('attackRange')) {\n    stats.push({\n      name: 'attack range',\n      value: item['attackRange'],\n      renderer: STAT_RENDERERS.attackRange,\n      getIcon: () => <GiBarbedArrow />,\n    })\n  }\n  if (item.hasOwnProperty('magazine')) {\n    stats.push({\n      name: 'shots before reload',\n      value: item.magazine,\n      renderer: STAT_RENDERERS.magazine,\n      getIcon: () => <GiBullets />,\n    })\n    if (item.magazine <= 0) {\n      needsReload = true;\n    }\n  }\n  if (item.hasOwnProperty('baseRangedAccuracy')) {\n    stats.push({\n      name: 'base accuracy',\n      value: `${Math.round(item['baseRangedAccuracy'] * 100)}%`,\n      renderer: STAT_RENDERERS.baseRangedAccuracy,\n      getIcon: () => <GiCrosshair />,\n    })\n  }\n  if (item.hasOwnProperty('baseRangedDamage')) {\n    stats.push({\n      name: 'base damage',\n      value: item['baseRangedDamage'],\n      renderer: STAT_RENDERERS.baseRangedDamage,\n      getIcon: () => <GiBurningDot />,\n    })\n  }\n  if (item.hasOwnProperty('attackDamage')) {\n    stats.push({\n      name: 'base melee damage',\n      value: item['attackDamage'],\n      renderer: STAT_RENDERERS.meleeDamage,\n    })\n  }\n  \n  return (\n    <div \n      className={`EquipmentCard ${equipped ? 'EquipmentCard--selected' : ''}`} \n      onClick={() => game.refocus()}\n    >\n      {needsReload && (\n        <div\n          className=\"EquipmentCard__reload_overlay\"\n          onClick={onClick}\n        >\n          <div className=\"EquipmentCard__reload_overlay__text\">Needs Reload</div>\n          <div className=\"EquipmentCard__reload_overlay__text\"><GiBackwardTime /></div>\n        </div>\n      )}\n      <div\n        className=\"EquipmentCard__item\"\n        onClick={onClick}\n      >\n        <div className=\"EquipmentCard__item__label\">\n          {item.name}\n        </div>\n        <div className=\"EquipmentCard__item__content\" style={item.renderer && {\n          backgroundColor: item.renderer.background,\n          color: item.renderer.color,\n          borderColor: item.renderer.color,\n        }}>\n          {item.renderer.sprite ? item.renderer.sprite : item.renderer.character}\n        </div>\n      </div>\n      <div className=\"EquipmentCard__item__stats\">\n        {\n          stats.map((stat, i) => {\n            return (\n              <StatBlock\n                key={`${i}-${stat.name}-resource-block`}\n                stat={stat}\n              />\n            )\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\nclass Equipment extends React.Component {\n  render() {\n    if (!this.props.player) return null;\n    const player = this.props.player;\n    const game = this.props.game;\n    let items = [];\n    player.equipment.forEach((slot) => {\n      if (slot.item) {\n        items.push({\n          item: slot.item,\n          equipped: true,\n        });\n      }\n    });\n    player.container.forEach((slot) => {\n      if (slot.items.length) {\n        const item = slot.items[0];\n        // disallow duplicates\n        if (items.filter((data) => data.item.name === item.name).length === 0) {\n          const equipable = item.entityTypes.includes('EQUIPABLE');\n          const amount = equipable ? null : slot.items.length;\n          items.push({\n            item,\n            amount,\n            equipable,\n            equipped: false,\n          })\n        }\n      }\n    });\n    return (\n      <div className=\"Equipment UI\">\n        {\n          <div>\n            <div className='flow-text'>Equipment</div>\n            <div>\n              {\n                items.map((item, index) => {\n                  return (\n                    <EquipmentCard \n                      key={index}\n                      game={game} \n                      player={player} \n                      data={item} \n                    />\n                  )\n                })\n              }\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default Equipment;","import React from 'react';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nfunction HelpContent() {\n  return (\n    <div className=\"Jacinto_Help\">\n      <div className=\"modal-content\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <div className=\"Jacinto_Help__section_header\">Goal</div>\n            <div className=\"Jacinto_Help__section_body\">\n              Defend Jacinto, the last human bastion on Sera. Move block by block and clear the city of \n              <span className=\"red-text\">&nbsp;Grubs</span> until you can locate and defeat their leader, \n              <span className=\"red-text\">&nbsp;Skorge</span>.\n            </div>\n          </div>\n          <div className=\"col s12 m6\">\n            <div className=\"Jacinto_Help__section_header\">Hints</div>\n            <div className=\"Jacinto_Help__section_body\">\n              <div>Destroy <span className=\"red-text\">Emergence Holes</span> ASAP.</div>\n              <div>Spend <span className=\"blue-text\">Upgrade Points</span>.</div>\n              <div>Weapon <span className=\"blue-text\">accuracy</span> decreases over distance.</div>\n              <div><span className=\"blue-text\">Grenades</span> can destroy walls as well as grubs, but be wary.</div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <div className=\"Jacinto_Help__section_header\">Controls</div>\n            <div className=\"Jacinto_Help__section_body\">\n              <div>Movement: WASD</div>\n              <div>Actions: click or key press</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default HelpContent;","import React from 'react';\nimport HelpContent from './HelpContent';\n\nfunction Help(props) {\n  React.useLayoutEffect(() => {\n    var elems = document.querySelectorAll(`#${props.id}`);\n    window.M.Modal.init(elems)\n  })\n  return (\n    <div id={props.id} className=\"modal\">\n      <HelpContent />\n      <div className=\"modal-footer\">\n        <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Close</a>\n      </div>\n    </div>\n  )\n}\n\nexport default Help;","import React from 'react';\nimport { SCREENS } from './constants';\nimport * as Engine from '../Engine/engine';\nimport * as Game from '../game';\nimport Instructions from '../UI/Instructions';\nimport Information from '../UI/Information';\nimport PlayerInformation from '../UI/Entity/PlayerInformation';\nimport Inventory from '../UI/Inventory';\n// import KeymapUI from '../UI/Keymap';\nimport KeymapUI from '../UI/ActionBar';\nimport Messages from '../UI/Messages';\nimport InfoBlocks from '../UI/InfoBlocks';\nimport Equipment from '../UI/Jacinto/Equipment';\nimport Help from '../UI/Jacinto/Help';\n\nclass Level extends React.Component {\n  constructor(props) {\n    super(props);\n    let ENGINE = new Engine.Engine({});\n    let game = new Game.Game({ \n      engine: ENGINE, \n      getSelectedCharacter: () => this.props.selectedCharacter.initialize(ENGINE),\n      mode: this.props.selectedMode.class,\n    })\n    this.state = {\n      game: game,\n      activeTab: 0,\n      spriteMode: game.spriteMode,\n    };\n    this.presserRef = React.createRef();\n  }\n\n  async componentDidMount() {\n    this.state.game.initialize(this.presserRef, document)\n    this.state.game['backToTitle'] = () => this.props.setActiveScreen(SCREENS.TITLE);\n    this.state.game['toLose'] = () => {\n      this.props.setActiveScreen(SCREENS.LOSE)\n    };\n    this.state.game['toWin'] = () => {\n      this.props.setActiveScreen(SCREENS.WIN)\n    };\n    this.state.game['refocus'] = () => this.refocus();\n    this.state.game.updateReact = (newGameState) => { this.setState({game: newGameState}) }\n    this.state.game.engine.start()\n  }\n\n  refocus () {\n    if (this.presserRef) this.presserRef.current.focus();\n  }\n\n  toggleSpriteMode () {\n    this.state.game.spriteMode = !this.state.game.spriteMode;\n    this.state.game.draw();\n    this.refocus();\n    this.setState({ spriteMode: this.state.game.spriteMode})\n  }\n\n  render() {\n    return (\n      <div className=\"Level\">\n        <div className='row'>\n          <div className='col s10'>\n            <div className='game_display_container'>\n              {Game.DisplayElement(this.presserRef, Game.handleKeyPress, this.state.game.engine)}\n            </div>\n            <Help id=\"jacinto_help\" />\n            <PlayerInformation game={this.state.game} />\n            {/* <Information game={this.state.game} /> */}\n            <Instructions game={this.state.game} spriteMode={this.state.game.spriteMode} setActiveScreen={this.props.setActiveScreen} toggleSpriteMode={this.toggleSpriteMode.bind(this)} />\n          </div>\n          <div className='col s2'>\n            <Equipment game={this.state.game} player={this.state.game.getFirstPlayer()} />\n            <InfoBlocks game={this.state.game} />\n            <Messages messages={this.state.game.messages.slice(-5).reverse()} />\n            {/* <Inventory inventory={this.state.game.visibleInventory} /> */}\n          </div>\n          {/* <div className='col s2'> */}\n          {/* </div> */}\n          {/* <button className='btn' onClick={() => this.props.setActiveScreen(SCREENS.TITLE)}>Quit</button> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Level;\n","import React from 'react';\nimport {\n  GiCog,\n  GiStarSkull,\n} from \"react-icons/gi\";\nimport { SCREENS } from './constants';\nimport HelpContent from '../UI/Jacinto/HelpContent';\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          className=\"Title__content\"\n          style={{\n\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: '#07111Dff',\n            // backgroundImage: `url(\"${window.PUBLIC_URL}/icons/512x512.png\")`,\n            // backgroundRepeat: 'no-repeat',\n            // backgroundPosition: 'center',\n            // backgroundPositionY: '10px'\n\n          }}\n        >\n          <HelpContent />\n          <h2 className=\"Title__header\"><GiCog/></h2>\n          <button\n            style={{\n              margin: 'initial',\n            }}\n            className={`CharacterSelect__button btn btn-main`}\n            onClick={() => {\n              this.props.setActiveScreen(SCREENS.CHARACTER_SELECT)\n            }}\n          >\n            Defend Jacinto\n          </button>\n          <h2 className=\"Title__header\"><GiStarSkull /></h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;","import React from 'react';\nimport {\n  GiStarSkull,\n} from \"react-icons/gi\";\nimport { SCREENS } from './constants';\n\n\nclass Lose extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          className=\"Title__content\"\n          style={{\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: '#222',\n          }}\n        >\n          <h2 className=\"Title__header\">\n            <GiStarSkull />\n            <GiStarSkull />\n            <GiStarSkull />\n          </h2>\n          <button\n            style={{\n              margin: 'initial',\n            }}\n            className={`CharacterSelect__button btn btn-main`}\n            onClick={() => window.location.reload()}\n          >\n            Restart\n          </button>\n          <h2 className=\"Title__header\">\n            <GiStarSkull />\n            <GiStarSkull />\n            <GiStarSkull />\n          </h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Lose;","import React from 'react';\nimport {\n  GiCog,\n} from \"react-icons/gi\";\n\nclass Win extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          className=\"Title__content\"\n          style={{\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: '#3e7dc9',\n          }}\n        >\n          <h2 className=\"Title__header\">\n            <GiCog />\n            <GiCog />\n            <GiCog />\n          </h2>\n          <button\n            style={{\n              margin: 'initial',\n            }}\n            className={`CharacterSelect__button btn btn-main`}\n            onClick={() => window.location.reload()}\n          >\n            Victory\n          </button>\n          <h2 className=\"Title__header\">\n            <GiCog />\n            <GiCog />\n            <GiCog />\n          </h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Win;","import React from 'react';\nimport { SCREENS } from '../Screen/constants';\n\nconst CharacterSelect = (props) => {\n  return (\n    <div className='CharacterSelect'>\n      {\n        props.characters.map((character, index) => {\n          let color = '';\n          if (props.selectedCharacter) {\n            color = props.selectedCharacter.name === character.name ? 'red' : ''\n          }\n\n          return (\n            <button\n              key={index}\n              className={`CharacterSelect__button btn btn-main`}\n              onClick={() => {\n                props.setSelectedCharacter(character)\n                props.setActiveScreen(SCREENS.LEVEL)\n              }}\n            >\n              Play as {character.name}\n            </button>\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default CharacterSelect;","import React from 'react';\nimport {\n  GiCog,\n  GiStarSkull,\n} from \"react-icons/gi\";\nimport { SCREENS } from './constants';\nimport CharacterSelect from '../UI/CharacterSelect';\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          className=\"Title__content\"\n          style={{\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: '#07111Dff',\n          }}\n        >\n          <h2 className=\"Title__header\"><GiCog/></h2>\n          <CharacterSelect \n            characters={this.props.characters} \n            selectedCharacter={this.props.selectedCharacter} \n            setSelectedCharacter={this.props.setSelectedCharacter}\n            setActiveScreen={this.props.setActiveScreen}\n          />\n          <h2 className=\"Title__header\"><GiStarSkull /></h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;","import React from 'react';\nimport { SCREENS } from '../Screen/constants';\n\nconst ModeSelect = (props) => {\n  return (\n    <div className='CharacterSelect'>\n      {\n        props.modes.map((mode, index) => {\n          let color = '';\n          if (props.selectedMode) {\n            color = props.selectedMode.name === mode.name ? 'red' : ''\n          }\n\n          return (\n            <button\n              key={index}\n              style={{\n                position: 'relative',\n                top: '280px'\n              }}\n              className={`CharacterSelect__button btn btn-main`}\n              onClick={() => {\n                console.log(mode);\n                \n                props.setSelectedMode(mode)\n                props.setActiveScreen(SCREENS.CHARACTER_SELECT)\n              }}\n            >\n              {mode.name}\n            </button>\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default ModeSelect;","import Level from './Level';\nimport Title from './Title';\nimport Lose from './Lose';\nimport Win from './Win';\nimport CharacterSelect from './CharacterSelect';\nimport ModeSelect from './ModeSelect';\n\nexport default {\n  Level,\n  Title,\n  Win,\n  Lose,\n  CharacterSelect,\n  ModeSelect,\n}","import React from 'react';\nimport { SCREENS } from './constants';\nimport ModeSelect from '../UI/ModeSelect';\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          style={{\n\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: 'rgb(4, 49, 61)',\n            backgroundImage: `url(\"${window.PUBLIC_URL}/fire_man_blue.jpg\")`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundPositionY: '10px'\n\n          }}\n        >\n          <ModeSelect \n            modes={this.props.modes} \n            selectedMode={this.props.selectedMode} \n            setSelectedMode={this.props.setSelectedMode}\n            setActiveScreen={this.props.setActiveScreen}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;","import { Base } from './Base';\nexport class GoToPreviousKeymap extends Base {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.label = 'Close';\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    this.actor.goToPreviousKeymap();\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { PlaceActor } from './PlaceActor';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\nimport { TYPE } from '../items';\nimport { DIRECTIONS, ENERGY_THRESHOLD } from '../constants';\nimport { getPositionInDirection, getPointsWithinRadius } from '../../helper';\n\nexport class PrepareDirectionalThrow extends Base {\n  constructor({ \n    passThroughEnergyCost = ENERGY_THRESHOLD, \n    passThroughRequiredResources = [],\n    projectileType = TYPE.DIRECTIONAL_KUNAI,\n    ...args \n  }) {\n    super({ ...args });\n    this.passThroughEnergyCost = passThroughEnergyCost;\n    this.passThroughRequiredResources = passThroughRequiredResources;\n    this.projectileType = projectileType;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n\n    let projectile = this.actor.contains(this.projectileType);\n    if (!projectile) return {\n      success: false,\n      alternative: null,\n    };\n\n    projectile.game = this.game;\n    projectile.pos = {\n      x: this.actor.pos.x,\n      y: this.actor.pos.y,\n    };\n\n    const pos = this.actor.getPosition();\n    // tackle in 4 directions a sfar as the actor has energy\n    let cursor_positions = [];\n    [\n      DIRECTIONS.N,\n      DIRECTIONS.S,\n      DIRECTIONS.E,\n      DIRECTIONS.W,\n    ].forEach((direction, i) => {\n      Array(projectile.range + 1).fill('').forEach((none, distance) => {\n        if (distance > 0) {\n          const endPosition = getPositionInDirection(pos, direction.map((dir) => dir * (distance)))\n          cursor_positions.push(endPosition)\n          if (distance === projectile.range) {\n            const circlePositions = getPointsWithinRadius(endPosition, 3)\n            cursor_positions = cursor_positions.concat(circlePositions)\n          }\n        }\n      })\n    });\n\n    this.actor.activateCursor(cursor_positions)\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n      onAfter: () => this.actor.deactivateCursor(),\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n      \n      w: () => { \n        return new PlaceActor({\n          targetPos: {...projectile.pos},\n          actor: this.actor,\n          game: this.game,\n          entity: projectile,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'throw N',\n          onBefore: () => {\n            projectile.direction = DIRECTIONS.N;\n          },\n          onSuccess: () => {\n            this.actor.deactivateCursor()\n            this.actor.removeFromContainer(projectile);\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      d: () => { \n        return new PlaceActor({\n          targetPos: {...projectile.pos},\n          actor: this.actor,\n          game: this.game,\n          entity: projectile,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'throw E',\n          onBefore: () => {\n            projectile.direction = DIRECTIONS.E;\n          },\n          onSuccess: () => {\n            this.actor.deactivateCursor()\n            this.actor.removeFromContainer(projectile);\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      s: () => { \n        return new PlaceActor({\n          targetPos: {...projectile.pos},\n          actor: this.actor,\n          game: this.game,\n          entity: projectile,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'throw S',\n          onBefore: () => {\n            projectile.direction = DIRECTIONS.S;\n          },\n          onSuccess: () => {\n            this.actor.deactivateCursor()\n            this.actor.removeFromContainer(projectile);\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      a: () => { \n        return new PlaceActor({\n          targetPos: {...projectile.pos},\n          actor: this.actor,\n          game: this.game,\n          entity: projectile,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'throw W',\n          onBefore: () => {\n            projectile.direction = DIRECTIONS.W;\n          },\n          onSuccess: () => {\n            this.actor.deactivateCursor()\n            this.actor.removeFromContainer(projectile);\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n    };\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import * as _ from 'lodash';\nimport { Base } from './Base';\nimport * as Helper from '../../helper';\nimport {THEMES} from '../constants';\n\nexport class MoveRangedAttackCursor extends Base {\n  constructor({ direction, range, targetPos = null, availablePositions = [], ...args }) {\n    super({ ...args });\n    this.direction = direction;\n    this.range = range;\n    this.targetPos = targetPos;\n    this.availablePositions = availablePositions;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n\n  isInRange (targetPos) {\n    return _.find(this.availablePositions, {x: targetPos.x, y: targetPos.y});\n  }\n\n  isInRangeV1 (targetPos) {\n    const initiatedFrom = this.actor.getPosition();\n    const path = Helper.calculateStraightPath(initiatedFrom, targetPos);\n    return this.range ? path.length <= this.range : true;\n  }\n\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (!this.targetPos && !this.direction) {\n      return {success, alternative}\n    }\n    let targetPos = this.targetPos;\n    if (!this.targetPos) {\n      targetPos = Helper.getPositionInDirection(this.actor.getCursorPositions()[0], this.direction);\n    }\n    // const pathIsNotBlocked = path.reduce((acc, curr) => acc && this.game.rangedCursorCanOccupyPosition(curr), true);\n    // if (this.isInRange(targetPos) && pathIsNotBlocked && this.game.rangedCursorCanOccupyPosition(targetPos, this.actor)) {\n    // if (this.isInRange(targetPos) && this.game.rangedCursorCanOccupyPosition(targetPos, this.actor)) {\n    if (this.isInRange(targetPos)) {\n      this.actor.moveCursorToPosition(targetPos);\n      success = true;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nexport class Reload extends Base {\n  constructor({ message, messageType = MESSAGE_TYPE.INFORMATION, ...args }) {\n    super({ ...args });\n    this.processDelay = 0;\n  }\n  perform() {\n    const success = this.actor.reload();\n    this.game.addMessage(`${this.actor.name} says \"RELOADING\"`, MESSAGE_TYPE.INFORMATION);\n    return {\n      success,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { Say } from './Say';\nimport { Reload } from './Reload';\nimport SOUNDS from '../sounds';\nimport * as Constant from '../constants';\nimport * as Helper from '../../helper';\n\nexport class MultiTargetRangedAttack extends Base {\n  constructor({ targetPositions, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPositions = targetPositions;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (!this.actor.entityTypes.includes('RANGED_ATTACKING')) {\n      return {\n        success: true,\n        alternative: new Say({\n          message: `Ooh I don\\'t know how to attack`,\n          game: this.game,\n          actor: this.actor,\n        }),\n      };\n    }\n    const weapons = this.actor.getEquipedWeapons();\n    if (weapons.length > 0) {\n      if (weapons[0].magazine <= 0) {\n        return {\n          success: true,\n          alternative: new Reload({\n            game: this.game,\n            actor: this.actor,\n            energyCost: Constant.ENERGY_THRESHOLD,\n          }),\n        };\n      }\n    }\n    let particlePath = [];\n    let particlePos = { x: this.actor.pos.x, y: this.actor.pos.y };\n    let renderer = this.particleTemplate.renderer;\n    this.targetPositions.forEach((targetPos) => {\n      let [attackSuccess, hit] = this.actor.rangedAttack(targetPos);\n      particlePath.push(targetPos);\n      if (attackSuccess) {\n        success = true;\n        if (!hit) {\n          SOUNDS.release_0.play();\n          success = true;\n          this.addParticle(\n            1,\n            { ...targetPos },\n            { x: 0, y: 0 },\n            Constant.PARTICLE_TEMPLATES.fail.renderer,\n          );\n        } else {\n          const sound = Helper.getRandomInArray([SOUNDS.chop_0, SOUNDS.chop_1]);\n          sound.play();\n          this.addParticle(\n            particlePath.length + 1,\n            particlePos,\n            null,\n            renderer,\n            Constant.PARTICLE_TYPE.path,\n            particlePath\n          );\n        }\n      }\n    });\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { MoveRangedAttackCursor } from './MoveRangedAttackCursor';\nimport { MultiTargetRangedAttack } from './MultiTargetRangedAttack';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\nimport { DIRECTIONS, ENERGY_THRESHOLD, THEMES, EQUIPMENT_TYPES } from '../constants';\nimport * as Helper from '../../helper';\nimport {find} from 'lodash';\n\nexport class PrepareRangedAttack extends Base {\n  constructor({ \n    passThroughEnergyCost = ENERGY_THRESHOLD, \n    passThroughRequiredResources = [], \n    ...args \n  }) {\n    super({ ...args });\n    this.passThroughEnergyCost = passThroughEnergyCost;\n    this.passThroughRequiredResources = passThroughRequiredResources;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n\n  updateCursors(pathAnimations, initiatedFrom) {\n    const cursorPositions = this.actor.getCursorPositions();\n    const path = Helper.calculateStraightPath(initiatedFrom, this.actor.getCursorPositions()[0]);\n    // removing visible path from last action\n    pathAnimations.forEach((anim) => {\n      this.game.display.removeAnimation(anim.id);\n    })\n    \n    // adding visible path to new cursor position\n    path.slice(1).forEach((pathPos) => {\n      if (!find(cursorPositions, {x: pathPos.x, y: pathPos.y})) {\n        const animation = this.game.display.addAnimation(this.game.display.animationTypes.BLINK_TILE, { x: pathPos.x, y: pathPos.y, color: THEMES.SOLARIZED.base3 })\n        pathAnimations.push(animation);\n      }\n    })\n\n    // modifying target curso color based on change to hit\n    cursorPositions.forEach((pos, i) => {\n      const chance = this.actor.getRangedAttackChance(pos);\n      if (chance <= 0) {\n        this.actor.updateCursorNode(i, [\n          {key: 'fill', value: 'transparent'}, \n          {key: 'stroke', value: 'white'}, \n        ]);\n      }\n      if (chance > 0 && chance <= 0.5) {\n        this.actor.updateCursorNode(i, [\n          {key: 'fill', value: THEMES.SOLARIZED.red}, \n          {key: 'stroke', value: 'transparent'}, \n        ]);\n      }\n      if (chance > 0.5 && chance <= 0.7) {\n        this.actor.updateCursorNode(i, [\n          {key: 'fill', value: THEMES.SOLARIZED.yellow}, \n          {key: 'stroke', value: 'transparent'}, \n        ]);\n      }\n      if (chance >= 0.7) {\n        this.actor.updateCursorNode(i, [\n          {key: 'fill', value: THEMES.SOLARIZED.green}, \n          {key: 'stroke', value: 'transparent'}, \n        ]);\n      }\n    })\n  }\n\n  perform() {\n    const pos = this.actor.getPosition();\n    const range = this.actor.getAttackRange();\n    const equippedWeapon = this.actor.getItemInSlot(EQUIPMENT_TYPES.HAND)\n\n    const pathAnimations = [];\n    const rangeAnims = []\n    const deactivateAnimations = (anims) => anims.forEach((anim) => {\n      this.game.display.removeAnimation(anim.id);\n    })\n\n    const positionsInRange = Helper.getPointsWithinRadius(pos, range);\n\n    let targets = [];\n    let targetIndex = 0;\n    positionsInRange.forEach((position) => {\n      // rangeAnims.push(this.game.display.addAnimation(1, {\n      //   x: position.x,\n      //   y: position.y,\n      //   color: THEMES.SOLARIZED.blue\n      // }))\n      let tile = this.game.map[Helper.coordsToString(position)];\n      if (tile) {\n        // const validTargets = Helper.getDestructableEntities(tile.entities);\n        const validTargets = tile.entities.filter((actor) => actor['faction'] === 'LOCUST');\n        let newTarget = validTargets.length ? validTargets[0] : null;\n        if (newTarget) {\n          targets.push(newTarget);\n        }\n      }\n    })\n\n    let positions = [];\n    if (targets.length) {\n      positions.push(targets[0].getPosition());\n      if (targets.length > 1) targetIndex = 1;\n    } else {\n      positions.push({...pos})\n    }\n\n    if (equippedWeapon) positions = equippedWeapon.getPositionsInShape(positions[0]);\n\n    this.actor.activateCursor(positions);\n    this.updateCursors(pathAnimations, pos);\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n      onAfter: () => {\n        this.actor.deactivateCursor()\n        deactivateAnimations(pathAnimations)\n        deactivateAnimations(rangeAnims)\n      },\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n      \n      e: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'Next Target',\n          targetPos: targets.length ? targets[targetIndex].getPosition() : null,\n          range,\n          availablePositions: positionsInRange,\n          onSuccess: () => {\n            targetIndex = (targetIndex + 1) % targets.length;\n            this.updateCursors(pathAnimations, pos);\n          },\n        })\n      },\n      q: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'Previous Target',\n          targetPos: targets.length ? targets[targetIndex].getPosition() : null,\n          range,\n          availablePositions: positionsInRange,\n          onSuccess: () => {\n            if (targetIndex === 0) {\n              targetIndex = targets.length - 1\n            } else {\n              targetIndex -= 1\n            }\n            this.updateCursors(pathAnimations, pos);\n          }\n        })\n      },\n      w: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move N',\n          direction: DIRECTIONS.N,\n          range,\n          availablePositions: positionsInRange,\n          onSuccess: () => {\n            this.updateCursors(pathAnimations, pos);\n          }\n        })\n      },\n      a: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move W',\n          direction: DIRECTIONS.W,\n          range,\n          availablePositions: positionsInRange,\n          onSuccess: () => {\n            this.updateCursors(pathAnimations, pos);\n          }\n        })\n      },\n      s: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move S',\n          direction: DIRECTIONS.S,\n          range,\n          availablePositions: positionsInRange,\n          onSuccess: () => {\n            this.updateCursors(pathAnimations, pos);\n          }\n        })\n      },\n      d: () => { \n        return new MoveRangedAttackCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move E',\n          direction: DIRECTIONS.E,\n          range,\n          availablePositions: positionsInRange,\n          onSuccess: () => {\n            this.updateCursors(pathAnimations, pos);\n          }\n        })\n      },\n      f: () => { \n        return new MultiTargetRangedAttack({\n          label: 'Fire',\n          targetPositions:  [...this.actor.getCursorPositions()],\n          game: this.game,\n          actor: this.actor,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            deactivateAnimations(pathAnimations);\n            deactivateAnimations(rangeAnims);\n            this.actor.setNextAction(goToPreviousKeymap);\n          }\n        })\n      },\n    };\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import { Base } from './Base';\nimport { EquipItemFromContainer } from './EquipItemFromContainer';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\n\n\nexport class OpenInventory extends Base {\n  constructor({ \n    ...args \n  }) {\n    super({ ...args });\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    this.game.visibleInventory = this.actor.container;\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n    };\n\n    this.actor.container.forEach((slot, index) => {\n      const item = slot.items[0];\n      keymap[index] = () => new EquipItemFromContainer({\n        item,\n        game: this.game,\n        actor: this.actor,\n        label: `Equip ${item.name}`,\n        energyCost: 0,\n        onSuccess: () => {\n          this.game.visibleInventory = null\n          this.actor.setNextAction(goToPreviousKeymap);\n        },\n      });\n    })\n\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import * as Helper from '../../helper';\nimport { Base } from './Base';\nimport SOUNDS from '../sounds';\n\nexport class Upgrade extends Base {\n  constructor({ upgrade, ...args }) {\n    super({ ...args });\n    this.upgrade = upgrade;\n    this.particleTemplate = {\n      renderer: {\n        sprite: '',\n        character: '^',\n        color: 'white',\n        background: '#3e7dc9',\n      }\n    };\n  }\n  perform() {\n    let success = false;\n    if (this.actor.upgrade(this.upgrade)) {\n      success = true;\n      let positions = Helper.getPointsOnCircumference(this.actor.pos.x, this.actor.pos.y, 5);\n      positions.forEach((pos) => {\n        this.addParticle(4, { ...pos }, {\n          x: -1 * Math.sign(pos.x - this.actor.pos.x),\n          y: -1 * Math.sign(pos.y - this.actor.pos.y)\n        });\n      });\n      SOUNDS.save.play();\n    }\n    return {\n      success,\n      alternative: null,\n    };\n  }\n}\n;\n","import {ActionResource} from './ActionResource';\n\nexport class UpgradeResource extends ActionResource {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.name = 'Upgrade Points';\n    this.actorResourcePath = 'upgrade_points';\n    this.renderer = { color: 'white', background: '#3e7dc9', character: '^', sprite: '' }\n  }\n}","import { Base } from './Base';\nimport { Say } from './Say';\nimport { Upgrade } from './Upgrade';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\nimport { UpgradeResource } from './ActionResources/UpgradeResource';\n\nexport class OpenUpgrades extends Base {\n  constructor({ \n    ...args \n  }) {\n    super({ ...args });\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n    };\n\n    this.actor.upgrade_tree.forEach((upgrade, index) => {\n      keymap[index] = () => new Upgrade({\n        // message: upgrade.name,\n        upgrade,\n        game: this.game,\n        actor: this.actor,\n        label: `${upgrade.name}`,\n        energyCost: 0,\n        requiredResources: [new UpgradeResource({getResourceCost: () => upgrade.cost })],\n        onSuccess: () => {\n          this.actor.setNextAction(goToPreviousKeymap);\n        },\n      });\n    })\n\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nimport * as Helper from '../../helper';\nimport SOUNDS from '../sounds';\n\nexport class PickupAllItems extends Base {\n  constructor({ ...args }) {\n    super({ ...args });\n  }\n  perform() {\n    let success = false;\n    const items = this.game.map[Helper.coordsToString(this.actor.pos)].entities.filter((e) => e.id !== this.actor.id);\n    if (items.length) {\n      // const item = Helper.getRandomInArray(items);\n      items.forEach((item) => {\n        this.game.addMessage(`${this.actor.name} picks up ${item.name}.`, MESSAGE_TYPE.ACTION);\n        this.actor.addToContainer(item);\n        let entities = this.game.map[Helper.coordsToString(this.actor.pos)].entities;\n        this.game.map[Helper.coordsToString(this.actor.pos)].entities = entities.filter((it) => it.id !== item.id);\n        success = true;\n      });\n      SOUNDS.grab_0.play();\n    }\n    return {\n      success,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport * as Helper from '../../helper'\n\nexport class AddStatusEffect extends Base {\n  constructor({ effect, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.effect = effect;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = this.game.engine.addStatusEffect(this.effect);\n    let positions = Helper.getPointsOnCircumference(this.actor.pos.x, this.actor.pos.y, 4);\n    positions.forEach((pos) => {\n      this.addParticle(3, { ...pos }, {\n        x: -1 * Math.sign(pos.x - this.actor.pos.x),\n        y: -1 * Math.sign(pos.y - this.actor.pos.y)\n      });\n    });\n    return {\n      success,\n      alternative: null,\n    };\n  }\n}\n;\n","export class Base {\n  constructor({ \n    game, \n    actor, \n    name = 'Effect', \n    lifespan = 100,\n    stepInterval = 100,\n    allowDuplicates = true,\n    onStart = () => null,\n    onStep = () => null,\n    onStop = () => null,\n    renderer = {background: 'green', color: 'white', character: '*'}\n  }) {\n    this.game = game\n    this.actor = actor\n    this.name = name\n    this.lifespan = lifespan\n    this.timeToLive = lifespan\n    this.stepInterval = stepInterval\n    this.allowDuplicates = allowDuplicates\n    this.timeSinceLastStep = 0;\n    this.onStart = onStart\n    this.onStep = onStep\n    this.onStop = onStop\n    this.renderer = renderer\n  }\n}","import {Base} from './Base';\n\nexport class MeleeDamage extends Base {\n  constructor({buffValue = 1, ...args}) {\n    super({ ...args });\n    this.name = 'Melee Damage';\n    this.allowDuplicates = false\n    this['actor_background'] = this.actor.renderer.background;\n    this['attackDamage'] = this.actor.attackDamage;\n    this.renderer = {\n      color: '#424242',\n      background: '#e6e6e6',\n      character: ''\n    };\n    this.onStart = () => {\n      this.actor.attackDamage += buffValue;\n    }\n    this.onStop = () => {\n      this.actor.attackDamage = this['attackDamage'];\n    }\n  }\n}","// import deps\nimport * as Constant from '../constants';\nimport { Player } from '../Entities/index';\nimport { ContainerSlot } from '../Entities/Containing';\nimport {Say} from '../Actions/Say';\nimport {MoveOrAttack} from '../Actions/MoveOrAttack';\nimport {PrepareDirectionalThrow} from '../Actions/PrepareDirectionalThrow';\nimport {PrepareRangedAttack} from '../Actions/PrepareRangedAttack';\nimport {OpenInventory} from '../Actions/OpenInventory';\nimport {OpenUpgrades} from '../Actions/OpenUpgrades';\nimport {Upgrade} from '../Entities/Upgradable';\nimport {PickupAllItems} from '../Actions/PickupAllItems';\nimport { Lancer } from '../Items/Weapons/Lancer';\nimport { Snub } from '../Items/Weapons/Snub';\nimport { Grenade } from '../Items/Weapons/Grenade';\nimport { Ammo } from '../Items/Pickups/Ammo';\nimport {COLORS} from '../Modes/Jacinto/theme';\nimport { Reload } from '../Actions/Reload';\nimport { AddStatusEffect } from '../Actions/AddStatusEffect';\nimport {MeleeDamage} from '../StatusEffects/MeleeDamage';\n\n\nexport default function (engine) {\n  const lancer = Lancer(engine);\n  // define keymap\n  const keymap = (engine, actor) => {\n    return {\n      Escape: () => new Say({\n        label: 'Pass',\n        message: 'pass turn...',\n        game: engine.game,\n        actor,\n        interrupt: true,\n        energyCost: 0,\n      }),\n      w: () => {\n        const direction = Constant.DIRECTIONS.N;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new MoveOrAttack({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      s: () => {\n        const direction = Constant.DIRECTIONS.S;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new MoveOrAttack({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      a: () => {\n        const direction = Constant.DIRECTIONS.W;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new MoveOrAttack({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      d: () => {\n        const direction = Constant.DIRECTIONS.E;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new MoveOrAttack({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      p: () => new Say({\n        label: 'Stay',\n        message: 'standing still...',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      f: () => new PrepareRangedAttack({\n        label: 'Fire Weapon',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n        passThroughRequiredResources: [],\n      }),\n      r: () => new Reload({\n        label: 'Reload',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      i: () => new OpenInventory({\n        label: 'Inventory',\n        game: engine.game,\n        actor,\n      }),\n      // o: () => new OpenEquipment({\n      //   label: 'Equipment',\n      //   game: engine.game,\n      //   actor,\n      // }),\n      u: () => new OpenUpgrades({\n        label: 'Upgrade',\n        game: engine.game,\n        actor,\n      }),\n      g: () => new PickupAllItems({\n        label: 'Pickup',\n        game: engine.game,\n        actor,\n      }),\n      t: () => new PrepareDirectionalThrow({\n        label: 'Grenade',\n        projectileType: 'Grenade',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      c: () => new AddStatusEffect({\n        label: 'Rev Lancer Chainsaw',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        effect: new MeleeDamage({\n          buffValue: 12,\n          game: engine.game,\n          actor: lancer, // should be weapon\n          lifespan: Constant.ENERGY_THRESHOLD * 3,\n          stepInterval: Constant.ENERGY_THRESHOLD,\n        }),\n        particleTemplate: {\n          renderer: {\n            color: '#424242',\n            background: '#e6e6e6',\n            character: ''\n          },\n        },\n      })\n    };\n  }\n  // instantiate class\n  \n  const durability = 10;\n  let actor = new Player({\n    pos: { x: 23, y: 7 },\n    renderer: {\n      sprite: '',\n      character: 'G',\n      color: COLORS.base3,\n      background: COLORS.cog2,\n    },\n    name: 'The Scout',\n    actions: [],\n    speed: Constant.ENERGY_THRESHOLD * 8,\n    durability,\n    attackDamage: 0,\n    baseRangedAccuracy: 0,\n    baseRangedDamage: 0,\n    upgrade_points: 0,\n    upgrade_tree: [\n      Upgrade({\n        cost: 1,\n        name: '+1 Health',\n        activate: (actor) => {\n          actor.durabilityMax += 1\n          actor.increaseDurability(1)\n        },\n      }),\n      Upgrade({\n        cost: 1,\n        name: '+10% Lancer Accuracy',\n        activate: (actor) => (lancer.baseRangedAccuracy += 0.1),\n      }),\n      Upgrade({\n        cost: 2,\n        name: '+1 Actions',\n        activate: (actor) => {\n          actor.speed += Constant.ENERGY_THRESHOLD;\n          actor.energy += Constant.ENERGY_THRESHOLD;\n        },\n        // removeOnActivate: true,\n      }),\n      Upgrade({\n        cost: 3,\n        name: 'Full Health',\n        canUpgrade: (actor) => actor.durability < actor.durabilityMax,\n        activate: (actor) => (actor.increaseDurability(actor.durabilityMax - actor.durability)),\n      }),\n    ],\n    equipment: Constant.EQUIPMENT_LAYOUTS.gear(),\n    game: engine.game,\n    presentingUI: true,\n    faction: 'COG',\n    enemyFactions: ['LOCUST'],\n    initializeKeymap: keymap,\n  })\n\n  // add default items to container\n  const ammo = Array(30).fill('').map(() => Ammo(engine));\n  const grenades = Array(4).fill('').map(() => Grenade(engine, 6));\n  const snub = Snub(engine);\n  actor.container = [\n    new ContainerSlot({\n      itemType: snub.name,\n      items: [snub],\n    }),\n    new ContainerSlot({\n      itemType: ammo[0].name,\n      items: ammo,\n    }),\n    new ContainerSlot({\n      itemType: grenades[0].name,\n      items: grenades,\n    }),\n  ]\n\n  actor.equip(lancer.equipmentType, lancer);\n\n  return actor;\n}","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Lancer = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Lancer',\n  passable: true,\n  attackRange: 12,\n  magazineSize: 4,\n  baseRangedAccuracy: 0.85,\n  baseRangedDamage: 2,\n  attackDamage: 2,\n  pos,\n  // shapePattern: Constant.CLONE_PATTERNS.triple_point,\n  // shapePattern: Constant.CLONE_PATTERNS.bigSquare,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'L',\n    color: COLORS.base3,\n    background: COLORS.gray,\n  },\n});\n","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Snub = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Snub',\n  passable: true,\n  attackRange: 6,\n  magazineSize: 10,\n  baseRangedAccuracy: 0.7,\n  baseRangedDamage: 1,\n  attackDamage: 1,\n  pos,\n  // shapePattern: Constant.CLONE_PATTERNS.square,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'S',\n    color: COLORS.base3,\n    background: COLORS.base01,\n  },\n});\n","import { MoveMultiple } from './MoveMultiple';\nimport { Attack } from './Attack';\nimport {ENERGY_THRESHOLD} from '../constants';\n\nexport class Tackle extends MoveMultiple {\n  constructor({ direction, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.direction = direction;\n    this.stepCount = 0;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let alternative = null;\n    let newX = this.actor.pos.x + this.direction[0];\n    let newY = this.actor.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n\n    alternative = new Attack({\n      targetPos,\n      additionalDamage: this.stepCount,\n      game: this.game,\n      actor: this.actor,\n      energyCost: 0,\n    });\n\n    if (this.actor.energy > ENERGY_THRESHOLD) {\n      const shoveSuccess = this.actor.shove(targetPos, this.direction);\n      if (shoveSuccess) {\n        this.stepCount += 1;\n        alternative = this\n        for (let i = 0; i < 3; i++) {\n          this.addParticle(1, {\n            x: this.actor.pos.x - (this.direction[0] * i),\n            y: this.actor.pos.y - (this.direction[1] * i),\n          }, { x: 0, y: 0 });\n        }\n      }\n    }\n\n    return {\n      success: true,\n      alternative,\n    };\n  }\n};\n","import { Base } from './Base';\nimport { Attack } from \"./Attack\";\nimport * as Constant from '../constants';\n\nexport class MoveMultiple extends Base {\n  constructor({ direction, stepCount, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.direction = direction;\n    this.stepCount = stepCount;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let newX = this.actor.pos.x + this.direction[0];\n    let newY = this.actor.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n    if (this.stepCount > 0 && this.actor.move(targetPos)) {\n      this.stepCount -= 1;\n      this.actor.setNextAction(this);\n      success = true;\n    }\n    else {\n      success = true;\n      alternative = new Attack({\n        targetPos: targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { Tackle } from './Tackle';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\nimport { DIRECTIONS, ENERGY_THRESHOLD, PARTICLE_TEMPLATES } from '../constants';\nimport { getPositionInDirection } from '../../helper';\n\nexport class PrepareTackle extends Base {\n  constructor({ \n    passThroughEnergyCost = ENERGY_THRESHOLD, \n    passThroughRequiredResources = [], \n    ...args \n  }) {\n    super({ ...args });\n    this.passThroughEnergyCost = passThroughEnergyCost;\n    this.passThroughRequiredResources = passThroughRequiredResources;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n\n    const pos = this.actor.getPosition();\n    // tackle in 4 directions a sfar as the actor has energy\n    const cursor_positions = [];\n    [\n      DIRECTIONS.N,\n      DIRECTIONS.S,\n      DIRECTIONS.E,\n      DIRECTIONS.W,\n    ].forEach((direction, i) => {\n      Array(this.actor.energy / ENERGY_THRESHOLD).fill('').forEach((none, distance) => {\n        if (distance > 0) {\n          cursor_positions.push(\n            getPositionInDirection(pos, direction.map((dir) => dir * (distance)))\n          )\n        }\n      })\n    });\n    this.actor.activateCursor(cursor_positions)\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n      onAfter: () => this.actor.deactivateCursor(),\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n      \n      w: () => { \n        return new Tackle({\n          actor: this.actor,\n          game: this.game,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'tackle N',\n          direction: DIRECTIONS.N,\n          particleTemplate: PARTICLE_TEMPLATES.leaf,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      d: () => { \n        return new Tackle({\n          actor: this.actor,\n          game: this.game,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'tackle E',\n          direction: DIRECTIONS.E,\n          particleTemplate: PARTICLE_TEMPLATES.leaf,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      s: () => { \n        return new Tackle({\n          actor: this.actor,\n          game: this.game,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'tackle S',\n          direction: DIRECTIONS.S,\n          particleTemplate: PARTICLE_TEMPLATES.leaf,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      a: () => { \n        return new Tackle({\n          actor: this.actor,\n          game: this.game,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'tackle W',\n          direction: DIRECTIONS.W,\n          particleTemplate: PARTICLE_TEMPLATES.leaf,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n    };\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","// import deps\nimport * as Constant from '../constants';\nimport { Player } from '../Entities/index';\nimport { ContainerSlot } from '../Entities/Containing';\nimport {Say} from '../Actions/Say';\nimport {MoveOrAttack} from '../Actions/MoveOrAttack';\nimport {PrepareDirectionalThrow} from '../Actions/PrepareDirectionalThrow';\nimport {PrepareRangedAttack} from '../Actions/PrepareRangedAttack';\nimport {OpenInventory} from '../Actions/OpenInventory';\nimport {OpenUpgrades} from '../Actions/OpenUpgrades';\nimport {Upgrade} from '../Entities/Upgradable';\nimport {PickupAllItems} from '../Actions/PickupAllItems';\nimport { PrepareTackle } from '../Actions/PrepareTackle';\nimport { RetroLancer } from '../Items/Weapons/RetroLancer';\nimport { Boltok } from '../Items/Weapons/Boltok';\nimport { Snub } from '../Items/Weapons/Snub';\nimport { Grenade } from '../Items/Weapons/Grenade';\nimport { Ammo } from '../Items/Pickups/Ammo';\nimport {COLORS} from '../Modes/Jacinto/theme';\nimport { Reload } from '../Actions/Reload';\nimport { Gnasher } from '../Items/Weapons/Gnasher';\n\nexport default function (engine) {\n  // define keymap\n  const keymap = (engine, actor) => {\n    return {\n      Escape: () => new Say({\n        label: 'Pass',\n        message: 'pass turn...',\n        game: engine.game,\n        actor,\n        interrupt: true,\n        energyCost: 0,\n      }),\n      w: () => {\n        const direction = Constant.DIRECTIONS.N;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new MoveOrAttack({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      s: () => {\n        const direction = Constant.DIRECTIONS.S;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new MoveOrAttack({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      a: () => {\n        const direction = Constant.DIRECTIONS.W;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new MoveOrAttack({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      d: () => {\n        const direction = Constant.DIRECTIONS.E;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new MoveOrAttack({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      p: () => new Say({\n        label: 'Stay',\n        message: 'standing still...',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      f: () => new PrepareRangedAttack({\n        label: 'Fire Weapon',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n        passThroughRequiredResources: [],\n      }),\n      r: () => new Reload({\n        label: 'Reload',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      i: () => new OpenInventory({\n        label: 'Inventory',\n        game: engine.game,\n        actor,\n      }),\n      // o: () => new OpenEquipment({\n      //   label: 'Equipment',\n      //   game: engine.game,\n      //   actor,\n      // }),\n      u: () => new OpenUpgrades({\n        label: 'Upgrade',\n        game: engine.game,\n        actor,\n      }),\n      g: () => new PickupAllItems({\n        label: 'Pickup',\n        game: engine.game,\n        actor,\n      }),\n      t: () => new PrepareDirectionalThrow({\n        label: 'Grenade',\n        projectileType: 'Grenade',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      c: () => new PrepareTackle({\n        label: 'Bayonet Charge',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n      }),\n    };\n  }\n  // instantiate class\n  const primary = RetroLancer(engine);\n  const durability = 20;\n  let actor = new Player({\n    pos: { x: 23, y: 7 },\n    renderer: {\n      sprite: '',\n      character: 'G',\n      color: COLORS.base3,\n      background: COLORS.cog2,\n    },\n    name: 'The Veteran',\n    speed: Constant.ENERGY_THRESHOLD * 4,\n    durability,\n    baseRangedAccuracy: 0,\n    baseRangedDamage: 0,\n    attackDamage: 0,\n    upgrade_points: 0,\n    upgrade_tree: [\n      Upgrade({\n        cost: 1,\n        name: '+1 Health',\n        activate: (actor) => {\n          actor.durabilityMax += 1\n          actor.increaseDurability(1)\n        },\n      }),\n      Upgrade({\n        cost: 1,\n        name: '+2 Melee Damage',\n        activate: (actor) => (primary.attackDamage += 2),\n      }),\n      Upgrade({\n        cost: 3,\n        name: 'Full Health',\n        canUpgrade: (actor) => actor.durability < actor.durabilityMax,\n        activate: (actor) => (actor.increaseDurability(actor.durabilityMax - actor.durability)),\n      }),\n    ],\n    equipment: Constant.EQUIPMENT_LAYOUTS.gear(),\n    game: engine.game,\n    presentingUI: true,\n    faction: 'COG',\n    enemyFactions: ['LOCUST'],\n    initializeKeymap: keymap,\n  })\n\n  // add default items to container\n  const ammo = Array(10).fill('').map(() => Ammo(engine));\n  const grenades = Array(2).fill('').map(() => Grenade(engine, 6));\n  const secondary = Gnasher(engine);\n  actor.container = [\n    new ContainerSlot({\n      itemType: secondary.name,\n      items: [secondary],\n    }),\n    new ContainerSlot({\n      itemType: ammo[0].name,\n      items: ammo,\n    }),\n    new ContainerSlot({\n      itemType: grenades[0].name,\n      items: grenades,\n    }),\n  ]\n\n  actor.equip(primary.equipmentType, primary);\n\n  return actor;\n}","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const RetroLancer = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Retro Lancer',\n  passable: true,\n  attackRange: 10,\n  magazineSize: 3,\n  baseRangedAccuracy: 0.7,\n  baseRangedDamage: 2,\n  attackDamage: 6,\n  pos,\n  // shapePattern: Constant.CLONE_PATTERNS.triple_point,\n  // shapePattern: Constant.CLONE_PATTERNS.bigSquare,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'R',\n    color: COLORS.base3,\n    background: COLORS.cog1,\n  },\n});\n","// import deps\nimport * as Constant from '../constants';\nimport { UpgradeResource } from '../Actions/ActionResources/UpgradeResource';\nimport { Player } from '../Entities/index';\nimport { ContainerSlot } from '../Entities/Containing';\nimport {Say} from '../Actions/Say';\nimport {MoveOrAttack} from '../Actions/MoveOrAttack';\nimport {PrepareDirectionalThrow} from '../Actions/PrepareDirectionalThrow';\nimport {PrepareRangedAttack} from '../Actions/PrepareRangedAttack';\nimport {OpenInventory} from '../Actions/OpenInventory';\nimport {OpenUpgrades} from '../Actions/OpenUpgrades';\nimport {Upgrade} from '../Entities/Upgradable';\nimport {PickupAllItems} from '../Actions/PickupAllItems';\nimport { Longshot } from '../Items/Weapons/Longshot';\nimport { Boltok } from '../Items/Weapons/Boltok';\nimport { Grenade } from '../Items/Weapons/Grenade';\nimport { Ammo } from '../Items/Pickups/Ammo';\nimport {COLORS} from '../Modes/Jacinto/theme';\nimport { Reload } from '../Actions/Reload';\nimport { AddSprintStatusEffect } from '../Actions/AddSprintStatusEffect';\n\nexport default function (engine) {\n  // define keymap\n  const keymap = (engine, actor) => {\n    return {\n      Escape: () => new Say({\n        label: 'Pass',\n        message: 'pass turn...',\n        game: engine.game,\n        actor,\n        interrupt: true,\n        energyCost: 0,\n      }),\n      w: () => {\n        const direction = Constant.DIRECTIONS.N;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new MoveOrAttack({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      s: () => {\n        const direction = Constant.DIRECTIONS.S;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new MoveOrAttack({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      a: () => {\n        const direction = Constant.DIRECTIONS.W;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new MoveOrAttack({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      d: () => {\n        const direction = Constant.DIRECTIONS.E;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new MoveOrAttack({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      p: () => new Say({\n        label: 'Stay',\n        message: 'standing still...',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      f: () => new PrepareRangedAttack({\n        label: 'Fire Weapon',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n        passThroughRequiredResources: [],\n      }),\n      r: () => new Reload({\n        label: 'Reload',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      i: () => new OpenInventory({\n        label: 'Inventory',\n        game: engine.game,\n        actor,\n      }),\n      u: () => new OpenUpgrades({\n        label: 'Upgrade',\n        game: engine.game,\n        actor,\n      }),\n      g: () => new PickupAllItems({\n        label: 'Pickup',\n        game: engine.game,\n        actor,\n      }),\n      t: () => new PrepareDirectionalThrow({\n        label: 'Grenade',\n        projectileType: 'Grenade',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      // c: () => new AddSprintStatusEffect({\n      //   label: 'Sprint',\n      //   game: engine.game,\n      //   actor,\n      //   speedBuff: Constant.ENERGY_THRESHOLD * 10,\n      //   requiredResources: [\n      //     new UpgradeResource({ getResourceCost: () => 1 }),\n      //   ],\n      // }),\n    };\n  }\n  // instantiate class\n  const primary = Longshot(engine);\n  const secondary = Boltok(engine);\n  const durability = 12;\n  let actor = new Player({\n    pos: { x: 23, y: 7 },\n    renderer: {\n      sprite: '',\n      character: 'G',\n      color: COLORS.base3,\n      background: COLORS.cog2,\n    },\n    name: 'The Stranded',\n    speed: Constant.ENERGY_THRESHOLD * 6,\n    durability,\n    baseRangedAccuracy: 0,\n    baseRangedDamage: 0,\n    attackDamage: 0,\n    upgrade_points: 0,\n    upgrade_tree: [\n      Upgrade({\n        cost: 1,\n        name: '+1 Health',\n        activate: (actor) => {\n          actor.durabilityMax += 1\n          actor.increaseDurability(1)\n        },\n      }),\n      Upgrade({\n        cost: 1,\n        name: '+5% Longshot Accuracy',\n        activate: (actor) => (primary.baseRangedAccuracy += 0.05),\n      }),\n      Upgrade({\n        cost: 1,\n        name: '+5% Boltok Accuracy',\n        activate: (actor) => (secondary.baseRangedAccuracy += 0.05),\n      }),\n      Upgrade({\n        cost: 1,\n        name: 'Craft 3 Grenades',\n        activate: (actor) => {\n          Array(3).fill('').map(() => actor.addToContainer(Grenade(engine, 6)));\n        },\n      }),\n      Upgrade({\n        cost: 3,\n        name: 'Full Health',\n        canUpgrade: (actor) => actor.durability < actor.durabilityMax,\n        activate: (actor) => (actor.increaseDurability(actor.durabilityMax - actor.durability)),\n      }),\n    ],\n    equipment: Constant.EQUIPMENT_LAYOUTS.gear(),\n    game: engine.game,\n    presentingUI: true,\n    faction: 'COG',\n    enemyFactions: ['LOCUST'],\n    initializeKeymap: keymap,\n  })\n\n  // add default items to container\n  const ammo = Array(20).fill('').map(() => Ammo(engine));\n  const grenades = Array(2).fill('').map(() => Grenade(engine, 6));\n  actor.container = [\n    new ContainerSlot({\n      itemType: secondary.name,\n      items: [secondary],\n    }),\n    new ContainerSlot({\n      itemType: ammo[0].name,\n      items: ammo,\n    }),\n    new ContainerSlot({\n      itemType: grenades[0].name,\n      items: grenades,\n    }),\n  ]\n\n  actor.equip(primary.equipmentType, primary);\n\n  return actor;\n}","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Longshot = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Longshot',\n  passable: true,\n  attackRange: 20,\n  magazineSize: 1,\n  baseRangedAccuracy: 1,\n  baseRangedDamage: 10,\n  attackDamage: 0,\n  pos,\n  // shapePattern: Constant.CLONE_PATTERNS.triple_point,\n  // shapePattern: Constant.CLONE_PATTERNS.bigSquare,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'L',\n    color: COLORS.base1,\n    background: COLORS.base04,\n  },\n});\n","import * as Constant from '../../constants';\nimport {RangedWeapon} from '../../Entities/index';\nimport {COLORS} from '../../Modes/Jacinto/theme';\n\nexport const Boltok = (engine, pos) => new RangedWeapon({\n  game: engine.game,\n  name: 'Boltok',\n  passable: true,\n  attackRange: 4,\n  magazineSize: 2,\n  baseRangedAccuracy: 0.8,\n  baseRangedDamage: 3,\n  attackDamage: 1,\n  pos,\n  // shapePattern: Constant.CLONE_PATTERNS.square,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    character: 'B',\n    color: COLORS.base3,\n    background: COLORS.locust0,\n  },\n});\n","import The_Scout from './GearLight';\nimport The_Veteran from './GearHeavy';\nimport The_Stranded from './GearStranded';\n\nlet Characters = () => {\n  return {\n    The_Scout,\n    The_Veteran,\n    The_Stranded,\n  }\n}\n\nexport default Characters;","import React from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport { SCREENS } from './Screen/constants';\nimport Screens from './Screen/index';\nimport Characters from './Characters/index';\nimport Modes from './Modes/index';\nimport SOUNDS from './sounds';\n\nclass Nystrum extends React.Component {\n  constructor() {\n    super();\n    let characterKey = Characters();\n    let characters = Object.keys(characterKey).map((key, i) => {\n      return {\n        initialize: characterKey[key],\n        selected: false,\n        name: key.split('_').join(' '),\n      }\n    });\n\n    let modes = Object.keys(Modes).map((key, i) => {\n      return {\n        class: Modes[key],\n        selected: false,\n        name: key.split('_').join(' '),\n      }\n    });\n\n    this.state = {\n      activeScreen: SCREENS.TITLE,\n      characters,\n      modes,\n      selectedCharacter: null,\n      selectedMode: modes[0],\n    };\n  }\n\n  setActiveScreen (activeScreen) {\n    if (activeScreen === SCREENS.TITLE) {\n      Object.keys(SOUNDS).forEach(key => {\n        SOUNDS[key].stop();\n      });\n    }\n    this.setState({activeScreen})\n  }\n\n  setSelectedCharacter (character) {\n    this.setState({selectedCharacter: {...character}})\n  }\n\n  setSelectedMode (mode) {\n    this.setState({selectedMode: mode})\n  }\n\n  getActiveScreen () {\n    const characterScreen = <Screens.CharacterSelect \n      key={SCREENS.CHARACTER_SELECT} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n      />\n      const titleScreen = <Screens.Title \n      key={SCREENS.TITLE} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n    />\n    const loseScreen = <Screens.Lose \n      key={SCREENS.LOSE} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n    />\n    const winScreen = <Screens.Win \n      key={SCREENS.WIN} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n    />\n    const levelScreen = <Screens.Level \n      key={SCREENS.LEVEL} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      selectedMode={this.state.selectedMode}\n    />\n\n    switch (this.state.activeScreen) {\n      case SCREENS.CHARACTER_SELECT:\n        return characterScreen\n      case SCREENS.TITLE:\n        return titleScreen\n      case SCREENS.LOSE:\n        return loseScreen\n      case SCREENS.WIN:\n        return winScreen\n      case SCREENS.LEVEL:\n        return levelScreen\n      default:\n        return titleScreen\n    }\n  }\n\n  render() {\n    const activeScreen = this.getActiveScreen();\n    return (\n      <div className=\"Nystrum\">\n        <ReactCSSTransitionGroup\n          transitionName=\"fade\"\n          transitionAppear={true}\n          transitionEnter={true}\n          transitionLeave={true}\n          transitionAppearTimeout={500}\n          transitionEnterTimeout={500}\n          transitionLeaveTimeout={300}\n        >\n          { activeScreen }\n        </ReactCSSTransitionGroup>\n      </div>\n    );\n  }\n}\n\nexport default Nystrum;\n","import React from 'react';\nimport './App.css';\nimport Nystrum from './nystrum/Nystrum';\n\nfunction App() {\n  return (\n    <div className=\"App container-fluid\">\n      <Nystrum />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}