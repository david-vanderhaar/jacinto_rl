{"version":3,"sources":["nystrum/Screen/constants.js","helper.js","nystrum/Entities/Entity.js","nystrum/constants.js","nystrum/Actions/ActionResources/ActionResource.js","nystrum/Actions/ActionResources/EnergyResource.js","nystrum/Actions/Base.js","nystrum/Actions/DestroySelf.js","nystrum/Actions/EngineCrank.js","nystrum/Entities/Parent.js","nystrum/Display/konvaCustom.js","nystrum/message.js","nystrum/Entities/Attacking.js","nystrum/Entities/Equipable.js","nystrum/Entities/Acting.js","nystrum/Entities/Rendering.js","nystrum/Entities/Containing.js","nystrum/sounds.js","nystrum/Entities/Playing.js","nystrum/Entities/helper.js","nystrum/Actions/Say.js","nystrum/Actions/Attack.js","nystrum/Actions/Move.js","nystrum/Actions/ThrowProjectile.js","nystrum/Actions/SelfDestructiveAttack.js","nystrum/Actions/ProjectileMove.js","nystrum/Actions/Shove.js","nystrum/Actions/ThrowProjectileGas.js","nystrum/Entities/Chasing.js","nystrum/Actions/PlaceActor.js","nystrum/Entities/Draggable.js","nystrum/Entities/Pushable.js","nystrum/Entities/Destructable.js","nystrum/Entities/Burnable.js","nystrum/Entities/HasKeymap.js","nystrum/Entities/index.js","nystrum/Entities/UI.js","nystrum/Entities/Speaking.js","nystrum/Entities/Helpless.js","nystrum/Entities/Exploding.js","nystrum/Entities/DirectionalPushing.js","nystrum/Entities/RangedChasing.js","nystrum/Entities/PresentingUI.js","nystrum/Entities/HasTargetingCursor.js","nystrum/Entities/Dragging.js","nystrum/Entities/Charging.js","nystrum/Entities/Signing.js","nystrum/Entities/Equiping.js","nystrum/Entities/HasInnerGates.js","nystrum/Entities/Cloning.js","nystrum/Entities/DestructiveProjecting.js","nystrum/Entities/DirectionalProjecting.js","nystrum/Entities/GaseousDestructiveProjecting.js","nystrum/Entities/Gaseous.js","nystrum/Entities/Spreading.js","nystrum/Entities/IsParticle.js","nystrum/Engine/engine.js","nystrum/Modes/default.js","nystrum/items.js","nystrum/Maps/helper.js","nystrum/Maps/generator.js","nystrum/Modes/flume.js","nystrum/Modes/index.js","nystrum/Modes/castle.js","nystrum/Modes/chunin.js","nystrum/game.js","nystrum/UI/Instructions.js","nystrum/UI/Button.js","nystrum/UI/Information.js","nystrum/UI/Tooltip.js","nystrum/UI/ActionBar.js","nystrum/UI/Entity/CharacterCard.js","nystrum/UI/Entity/PlayerInformation.js","nystrum/UI/Equipment.js","nystrum/UI/Inventory.js","nystrum/UI/Messages.js","nystrum/Screen/Level.js","nystrum/UI/CharacterSelect.js","nystrum/Screen/Title.js","nystrum/Screen/Lose.js","nystrum/Screen/Win.js","nystrum/Screen/CharacterSelect.js","nystrum/UI/ModeSelect.js","nystrum/Screen/index.js","nystrum/Screen/ModeSelect.js","nystrum/Actions/ActionResources/ChakraResource.js","nystrum/Actions/EquipItemFromContainer.js","nystrum/Actions/GoToPreviousKeymap.js","nystrum/Actions/OpenInventory.js","nystrum/Actions/UnequipItemToTile.js","nystrum/Actions/OpenEquipment.js","nystrum/Actions/DropItem.js","nystrum/Actions/OpenDropInventory.js","nystrum/Actions/PickupRandomItem.js","nystrum/Actions/PrepareDirectionalThrow.js","nystrum/Actions/MoveMultiple.js","nystrum/Actions/Tackle.js","nystrum/Actions/PrepareTackle.js","nystrum/Characters/RockLee.js","nystrum/Actions/SandWall.js","nystrum/Actions/PlaceItems.js","nystrum/Actions/PlaceItem.js","nystrum/Actions/MoveTargetingCursor.js","nystrum/Actions/MoveSubstitution.js","nystrum/Actions/PrepareSubstitution.js","nystrum/Actions/SandPulse.js","nystrum/Actions/AddStatusEffect.js","nystrum/StatusEffects/SandSkin.js","nystrum/StatusEffects/Base.js","nystrum/Actions/AddSandSkinStatusEffect.js","nystrum/Actions/CloneSelf.js","nystrum/Characters/Gaara.js","nystrum/Keymap/helper.js","nystrum/Keymap/KeyActions/activateEquipment.js","nystrum/Actions/SprayWater.js","nystrum/Actions/CursorMove.js","nystrum/Keymap/KeyActions/moveCursor.js","nystrum/Keymap/KeyActions/activateProjectile.js","nystrum/Actions/EquipItemFromTile.js","nystrum/Keymap/KeyActions/push.js","nystrum/Keymap/KeyActions/chop.js","nystrum/Actions/ReleaseGrab.js","nystrum/Actions/GrabDirection.js","nystrum/Keymap/KeyActions/activateGrab.js","nystrum/Characters/FireFighter.js","nystrum/Keymap/KeyActions/pickupRandom.js","nystrum/Characters/index.js","nystrum/Nystrum.js","App.js","serviceWorker.js","index.js"],"names":["SCREENS","delay","timeDelayed","Promise","resolve","setTimeout","clamp","value","min","max","Math","getRandomInArray","array","floor","random","length","getRandomInt","ceil","coordsToString","coords","x","y","calculatePath","game","targetPos","currentPos","topology","map","isPassable","tile","tileKey","type","passable","astar","ROT","AStar","path","compute","push","slice","getPositionInDirection","pos","direction","calculatePathWithRange","range","getRandomPos","keys","Object","key","split","coordinates","parseInt","text","getDestructableEntities","entites","filter","entity","hasOwnProperty","getGranularity","radius","pow","getPointsOnCircumference","centerX","centerY","r","n","list","i","round","cos","PI","sin","Entity","name","id","uuid","this","entityTypes","active","COLORS","THEMES","gaara","rock_lee","base03","base02","base01","base00","base0","base1","base2","base3","yellow","orange","red","magenta","violet","blue","cyan","green","TILE_KEY","background","foreground","character","sprite","animation","DIRECTIONS","N","NE","W","NW","SW","S","SE","E","NONE","EQUIPMENT_TYPES","EQUIPMENT_LAYOUTS","item","CLONE_PATTERNS","verticalLine","x_offset","y_offset","positions","taken","smallSquare","square","bigSquare","circle","Helper","PARTICLE_TEMPLATES","default","renderer","color","fail","succede","damage","leaf","water","PARTICLE_TYPE","ALPHABET","ActionResource","getResourceCost","actorResourcePath","actorResourceGetter","actorResourceSetter","EnergyResource","args","Base","actor","label","hidden","energyCost","processDelay","particles","particleTemplate","Constant","onBefore","onAfter","onSuccess","onFailure","interrupt","requiredResources","life","particle","Particle","energy","setNextAction","_","resource","actorVariable","canPay","listPayableResources","resourceCost","success","alternative","DestroySelf","destroy","EngineCrank","engine","console","log","start","Parent","superclass","children","CrankEngine","concat","isInitialized","child","entities","e","actors","draw","includes","forEach","destroyChild","canAttack","bind","placeActorOnMap","addActor","initialize","ANIMATION_TYPES","Animation","display","lifeTime","node","frame","timeDiff","getActive","removeAnimation","ExampleAnimation","BlinkTile","lerpDirection","rect","Konva","Rect","tileWidth","tileOffset","tileGutter","tileHeight","offsetX","offsetY","width","height","fill","strokeEnabled","transformsEnabled","perfectDrawEnabled","listening","shadowForStrokeEnabled","animationLayer","add","opacity","Display","containerId","stage","layer","animations","animationLoop","document","d","getElementById","displayContainer","createElement","appendChild","adjustContentToScreen","Stage","container","Layer","hitGraphEnabled","update","isRunning","stop","display_element","offsetWidth","mapWidth","mapHeight","anim","actual_x","actual_y","Group","Text","fontSize","fontFamily","align","verticalAlign","dis_layer","Image","fromURL","darthNode","setAttrs","scaleX","scaleY","batchDraw","MESSAGE_TYPE","INFORMATION","backgroundColor","ACTION","DANGER","STATUS_EFFECT","ERROR","Message","Attacking","attackDamage","additional","targets","target","getAttackDamage","equipment","slot","addMessage","decreaseDurability","Equipable","equipmentType","Acting","actions","speed","action","Rendering","currentFrame","canOccupyPosition","targetTile","pushable","newPos","move","ContainerSlot","itemType","items","Containing","slots","index","findIndex","createSlot","it","splice","window","PUBLIC_URL","fire_0","Howl","src","volume","loop","fire_1","scream_0","scream_1","scream_2","water_0","water_1","chop_0","chop_1","equip_0","equip_1","explosion_0","save","lose","grab_0","release_0","Playing","keymap","nextAction","destroyEntity","removeStatusEffectByActorId","Say","message","messageType","Attack","additionalDamage","attack","SOUNDS","play","addParticle","Move","ThrowProjectile","move_result","shift","SelfDestructiveAttack","damageToSelf","decreaseDurabilityWithoutDefense","ProjectileMove","Shove","shove","ThrowProjectileGas","Chasing","targetEntity","PlaceActor","forcePlacement","addActorAsNext","Draggable","draggable","Pushable","Destructable","durability","defense","onDestroy","getDefense","current","newDurability","Burnable","canBurn","willResetCanBurn","HasKeymap","initializeKeymap","keymapStack","addKeymap","newKeymap","unshift","ignoredKeys","getKeymap","removeKeymap","UI_Actor","pipe","initiatedBy","Speaker","messages","saved","Wall","Debris","flammability","explosivity","Array","FireSpread","timeToSpread","spreadCount","fire","structure","reduce","acc","curr","position","enflame","explode","MovingWall","Bandit","RangedBandit","getProjectile","pathToCheck","inPath","throwDirection","sign","projectile","createPath","targetInPath","movePath","Player","presentingUI","cursorIsActive","cursorPositions","setCursorPositions","setCursorIsActive","resetAnimations","removeAnimations","getCursorPositions","newAnimation","addAnimation","addAnimations","distance","newPositons","draggedEntity","lastPos","moveSuccess","drag","charge","chargeMax","signHistory","itemName","slotName","find","foundSlot","currentGate","gates","damageBuff","speedBuff","durabilityDebuff","nextGate","nextGateIndex","gate","cloneLimit","clones","clone","c","super__destroy","cloneArgs","cloneDeep","reinitializeKeymap","destroyClone","arg","attribute","Weapon","Armor","DirectionalProjectile","setActorToPrevious","owner_id","isClone","cloneCount","clonePattern","offset","cloneDeepWith","referencePos","timeToSpreadMax","spreadCountMax","adjacentPositions","adjacentPos","kill","newTile","tileExists","Boolean","notBurnt","step","nextPos","getNextPos","Engine","statusEffects","currentActor","gainEnergy","hasEnoughEnergy","getAction","result","perform","acting","timePassed","getEnergyCost","canPayRequiredResources","payRequiredResources","processActionFX","shouldAutoRun","processStatusEffects","sortActorsByEnergy","processV2","setVisibleKeymap","updateMode","updateReact","visibleKeymap","sort","a","b","newEffect","allowDuplicates","effect","onStart","onStop","actorId","lifespan","timeToLive","timeSinceLastStep","stepInterval","onStep","removeDeadStatusEffects","actionSuccess","removeActorFromMap","removeDeadParticles","process","mode","Mode","data","infoBlocks","progressBars","merge","TYPE","directionalKunai","sword","axe","waterGun","fireJacket","addTileZone","origin","j","generate","unitCount","unitSize","floorPlan","createFloorPlan","unit","createRoomInFloorPlan","unitPosition","getUnitPosition","didCreate","createUnit","removeInnerWalls","addInnerWalls","newUnit","getNeighboringUnit","unitAlreadyExists","unitExists","pnt","pos_two","pos_one","getNeighboringPoints","existingUnits","floorPlanPos","mapOffsetX","mapOffsetY","eightWay","neighbors","size","border","unitCollidesWithEdge","newPosition","coordArray","point","t","count","corners","wallCount","corner","wallNeighbors","selectedWallPos","build","currentPosition","previousFloorPositions","prevPos","Flume","infoHeader","level","highestLevel","fireIntensity","npcCount","debrisCount","mediumDebrisCount","heavyDebrisCount","smallGasCanCount","mediumGasCanCount","largeGasCanCount","turnCount","createEmptyLevel","initializeMapTiles","generateBuilding","MapHelper","placeInitialItems","placePlayersInSafeZone","posXY","coord","addDebris","mediumCanCount","addFire","addNPC","updateUI","playing","getSaveCountRequirement","propogateFire","burnEntities","checkRemoveSafeFloors","hasLost","reset","initializeGameData","hasWon","nextLevel","increaseIntensity","createOrUpdateInfoBlock","countNpcSafe","setLevel","resetIntensity","toWin","gasCanCount","minimum","toLose","box","ent","burn","resetCanBurn","objects","Item","pop","players","player","require","Castle","creatureCount","setWaveData","padding","floorTiles","groundTiles","addEnemy","beginNextWave","banditLevels","entityClass","banditStats","getBanditStats","Chunin","dataByLevel","enemies","enemyName","getPlayers","currentBlips","maxBlips","arr","join","levelComplete","nextLevelData","Game","entityMap","entityDictionary","mapInitialized","tileMap","cameraWidth","cameraHeight","getSelectedCharacter","spriteMode","MAP_WIDTH","MAP_HEIGHT","placed","randomlyPlaceActorOnMap","ac","digger","Arena","freeCells","create","randomlyPlaceAllActorsOnMap","tiles","hasImpassableEntity","fullMap","referencePosition","renderWidth","renderHeight","fullWidth","fullHeight","renderPaddingX","renderPaddingY","parts","finalX","finalY","callback","getRenderMap","getPlayerPosition","tileRenderer","nextFrame","animateTile","renderedEntities","animateEntity","processTileMap","createTile","updateTile","getRenderer","getEntityRenderer","getTileRenderer","isPlaced","placeActorsOnMap","presserRef","show","focus","selectedCharacter","initializeMode","initializeUI","handleKeyPress","event","code","setAsNextAction","Instructions","props","className","onClick","setActiveScreen","toggleSpriteMode","React","Component","Button","Information","Tooltip","title","ResourceBlock","superScript","style","borderColor","ActionBar","entries","reqs","refocus","req","numBlocks","Portrait","StatusEffect","StatusEffects","getStatusEffectsByActorId","NamePlate","ProgressBar","colorFilled","colorEmpty","attributePathMax","attributePath","valueMax","valueCurrent","blip","CharacterCard","PlayerInformation","Level","ENGINE","selectedMode","class","state","activeTab","createRef","newGameState","setState","ref","onKeyDown","tabIndex","CharacterSelect","characters","top","setSelectedCharacter","Title","backgroundImage","backgroundRepeat","backgroundPosition","backgroundPositionY","Lose","Win","ModeSelect","modes","setSelectedMode","ChakraResource","EquipItemFromContainer","itemInSlot","getItemInSlot","addToContainer","unequip","removeFromContainer","equip","GoToPreviousKeymap","goToPreviousKeymap","OpenInventory","visibleInventory","Escape","setKeymap","UnequipItemToTile","OpenEquipment","visibleEquipment","DropItem","OpenDropInventory","PickupRandomItem","PrepareDirectionalThrow","passThroughEnergyCost","passThroughRequiredResources","contains","w","s","MoveMultiple","stepCount","Tackle","PrepareTackle","getPosition","cursor_positions","none","dir","activateCursor","deactivateCursor","newX","newY","p","o","u","g","l","kunais","swords","SandWall","targetPositions","getTargetPositions","directionString","getDirectionKey","PrepareSandWall","sandWallEnergyCost","sandWallRequiredResources","MoveTargetingCursor","initiatedFrom","moveCursorInDirection","MoveSubstitution","spawnedEntity","createSandWall","PrepareSubstitution","SandPulse","parameters","addActorAsPrevious","AddStatusEffect","addStatusEffect","SandSkin","defenseBuff","AddSandSkinStatusEffect","CloneSelf","createClone","k","h","addAlphabeticallyToKeymap","obj","alphabetAllowed","letter","deactivateUIKeymap","visibleUIKey","currentUiActor","removeActor","createFourDirectionMoveOptions","moveFunction","activate","activateEquipment","ui","keymapEquipment","SprayWater","hasItemNameEquipped","ITEM_TYPES","CursorMove","cursorCanOccupyPosition","moveCursor","previousKeymap","cursor","trigger","EquipItemFromTile","chop","directions","keyMapChop","ReleaseGrab","releasedEntity","release","GrabDirection","grab","keymapCursorToGrabEntity","initialKeymap","grabDirection","Keymap","Characters","Gaara","RockLee","FireFighter","Nystrum","characterKey","selected","Modes","activeScreen","characterScreen","Screen","modeScreen","titleScreen","loseScreen","winScreen","levelScreen","getActiveScreen","transitionName","transitionAppear","transitionEnter","transitionLeave","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","App","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b068d3aa.chunk.js","sourcesContent":["export const SCREENS = {\n  TITLE: 'Title',\n  LEVEL: 'Level',\n  LOSE: 'Lose',\n  WIN: 'Win',\n  CHARACTER_SELECT: 'CharacterSelect',\n  MODE_SELECT: 'ModeSelect',\n}","import * as ROT from 'rot-js';\n\nexport const delay = (timeDelayed = 100) => {\n  // return;\n  if (timeDelayed <= 0) return;\n  return new Promise(resolve => setTimeout(resolve, timeDelayed));\n}\n\nexport const clamp = (value, min, max) => {\n  return Math.min(Math.max(value, min), max);\n};\n\nexport const getRandomInArray = (array) => {\n  return array[Math.floor(Math.random() * array.length)];\n}\n\nexport const getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nexport const getRandomIntInclusive = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport const coordsAreEqual = (pos_one, pos_two) => pos_one.x === pos_two.x && pos_one.y === pos_two.y\n\nexport const coordsToString = (coords) => `${coords.x},${coords.y}`\n\nexport const calculatePath = (game, targetPos, currentPos, topology = 4) => {\n  let map = game.map\n  let isPassable = function (x, y) {\n    const tile = map[x + \",\" + y];\n    if (tile) {\n      return (game.tileKey[tile.type].passable);\n    } else {\n      return false\n    }\n  }\n  let astar = new ROT.Path.AStar(targetPos.x, targetPos.y, isPassable, { topology });\n  let path = [];\n  astar.compute(currentPos.x, currentPos.y, function (x, y) {\n    path.push({ x, y })\n  });\n\n  return path.slice(1);\n}\n\nexport const getPositionInDirection = (pos, direction) => {\n  return {x: pos.x + direction[0], y: pos.y + direction[1]}\n}\n\nexport const calculatePathWithRange = (game, targetPos, currentPos, topology, range) => {\n  let path = calculatePath(game, targetPos, currentPos, topology);\n  return path.slice(0, range + 1);\n}\n\nexport const getRandomPos = (map) => {\n  let keys = Object.keys(map);\n  let key = getRandomInArray(keys).split(',');\n  let pos = { x: parseInt(key[0]), y: parseInt(key[1])}\n  return {coordinates: pos, text: key}\n}\n\nexport const getDestructableEntities = (entites) => {\n  return entites.filter((entity) => entity.hasOwnProperty('durability'));\n}\n\nconst getGranularity = (radius) => {\n  let result = (2 / 3) * (Math.pow(radius, 3) - (9 * Math.pow(radius, 2)) + (32 * radius) - 18)\n  return result\n}\n\nexport const getPointsOnCircumference = (centerX = 0, centerY = 0, r = 3) => {\n  const n = getGranularity(r);\n  let list = [];\n  for (let i = 0; i < n; i++) {\n    let x = Math.round(centerX + (Math.cos(2 * Math.PI / n * i) * r))\n    let y = Math.round(centerY + (Math.sin(2 * Math.PI / n * i) * r))\n    list.push({ x, y });\n  }\n  return list\n}\n","import uuid from 'uuid/v1';\nexport class Entity {\n  constructor({ game = null, passable = false, name = 'nameless' }) {\n    let id = uuid();\n    this.entityTypes = ['Entity'];\n    this.id = id;\n    this.name = name;\n    this.game = game;\n    this.passable = passable;\n    this.active = true;\n  }\n}\n","import * as Helper from '../helper'\n\nexport const ENERGY_THRESHOLD = 100;\n\nexport const COLORS = {\n  black_1: '#424242',\n  gray_1: '#262d37',\n  gray_2: '#606b79',\n  gray_4: '#B7C3CD',\n  gray_5: '#CED5DD',\n  green_1: '#1d533c',\n  green_2: '#227743',\n  green_3: '#2d9c59',\n  red_4: '#D82D33',\n  red_5: '#E16264',\n  purple_3: '#c45ffd',\n}\n\nexport const THEMES = {\n  NARUTO: {\n    gaara: '#603030',\n    rock_lee: '#155859',\n  },\n  SOLARIZED: {\n    base03: '#002b36',\n    base02: '#073642',\n    base01: '#586e75',\n    base00: '#657b83',\n    base0: '#839496',\n    base1: '#93a1a1',\n    base2: '#eee8d5',\n    base3: '#fdf6e3',\n    yellow: '#b58900',\n    orange: '#cb4b16',\n    red: '#dc322f',\n    magenta: '#d33682',\n    violet: '#6c71c4',\n    blue: '#268bd2',\n    cyan: '#2aa198',\n    green: '#859900',\n  },\n}\n\nexport const NPC_NAME = 'Helpless Citizen';\nexport const PLAYER_NAME = 'Fire Fighter';\n\nexport const TILE_KEY = {\n  'GROUND': {\n    background: THEMES.SOLARIZED.base03,\n    foreground: THEMES.SOLARIZED.base01,\n    character: '.',\n    sprite: '',\n    passable: true,\n  },\n  'FLOOR': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base0,\n    character: '',\n    passable: true,\n  },\n  'SAFE_FLOOR': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base0,\n    character: '',\n    passable: true,\n  },\n  'BURNT': {\n    background: THEMES.SOLARIZED.base03,\n    foreground: THEMES.SOLARIZED.red,\n    character: 'X',\n    sprite: '',\n    passable: true,\n    animation: [\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'X', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'x', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'X', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.orange, character: 'x', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.orange, character: 'X', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.yellow, character: 'x', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.red, character: 'X', sprite: '', passable: true, },\n    ]\n  },\n  'WET': {\n    background: THEMES.SOLARIZED.base03,\n    foreground: THEMES.SOLARIZED.blue,\n    character: '=',\n    sprite: '',\n    passable: true,\n    animation: [\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '=', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '~', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '=', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.base0, character: '~', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.base1, character: '=', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.base1, character: '~', sprite: '', passable: true, },\n      { background: THEMES.SOLARIZED.base03, foreground: THEMES.SOLARIZED.blue, character: '=', sprite: '', passable: true, },\n    ]\n  },\n  'WALL': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base2,\n    character: '#',\n    sprite: '',\n    passable: false,\n  },\n  'DOOR': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.base0,\n    character: '+',\n    sprite: '',\n    passable: true,\n  },\n  'SAFE': {\n    background: THEMES.SOLARIZED.base02,\n    foreground: THEMES.SOLARIZED.green,\n    character: '+',\n    sprite: '',\n    passable: true,\n  },\n\n  'WATER': {\n    animation: [\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#9dc3d3', character: '░', passable: false,},\n      { background: '#424242', foreground: '#8aa', character: '▒', passable: false, },\n      { background: '#424242', foreground: '#8aa', character: '▓', passable: false, },\n    ],\n    background: '#9dc3d3',\n    character: '░',\n    passable: false,\n  },\n}\n\nexport const HAND_SIGNS = {\n  Power: {\n    type: 'Power',\n    name: 'Rin',\n    description: 'Strength of mind, body, spirit',\n  },\n  Energy: {\n    type: 'Energy',\n    name: 'Pyo',\n    description: 'energy direction',\n  },\n  Harmony: {\n    type: 'Harmony',\n    name: 'To',\n    description: 'one- ness with the universe or self',\n  },\n  Healing: {\n    type: 'Healing',\n    name: 'Sha',\n    description: 'of self and others',\n  },\n  Intuition: {\n    type: 'Intuition',\n    name: 'Kai',\n    description: 'premonition of danger, feeling others intent',\n  },\n  Awareness: {\n    type: 'Awareness',\n    name: 'Jin',\n    description: 'feeling thoughts of others, perhaps hiding your own',\n  },\n  Dimension: {\n    type: 'Dimension',\n    name: 'Retsu',\n    description: 'control of time and space',\n  },\n  Creation: {\n    type: 'Creation',\n    name: 'Zai',\n    description: 'understanding nature',\n  },\n  Absolute: {\n    type: 'Absolute',\n    name: 'Zen',\n    description: 'enlightenment',\n  }, \n}\n\nexport const DIRECTIONS = {\n  N: [0, -1],\n  NE: [1, -1],\n  W: [-1, 0],\n  NW: [-1, -1],\n  SW: [-1, 1],\n  S: [0, 1],\n  SE: [1, 1],\n  E: [1, 0],\n  NONE: [0, 0],\n}\n\nexport const getDirectionKey = (direction) => {\n  let directionString = `${direction}`;\n  let keys = Object.keys(DIRECTIONS);\n  let result = false\n  keys.forEach((key) => {\n    if (`${DIRECTIONS[key]}` === directionString) {\n      result = key\n    }\n  })\n  return result\n}\n\nexport const EQUIPMENT_TYPES = {\n  HEAD: 'HEAD',\n  TORSO: 'TORSO',\n  BACK: 'BACK',\n  HAND: 'HAND',\n  FEET: 'FEET',\n  GENERIC: 'GENERIC',\n}\n\nexport const EQUIPMENT_LAYOUTS = {\n  human: () => {\n    return [\n      {type: EQUIPMENT_TYPES.HEAD, name: 'head', item: null},\n      {type: EQUIPMENT_TYPES.TORSO, name: 'torso', item: null},\n      {type: EQUIPMENT_TYPES.BACK, name: 'back', item: null},\n      {type: EQUIPMENT_TYPES.HAND, name: 'left_hand', item: null},\n      {type: EQUIPMENT_TYPES.HAND, name: 'right_hand', item: null},\n      {type: EQUIPMENT_TYPES.FEET, name: 'feet', item: null},\n    ]\n  },\n  limited: () => {\n    return [\n      {type: EQUIPMENT_TYPES.GENERIC, name: 'slot_1', item: null},\n      {type: EQUIPMENT_TYPES.GENERIC, name: 'slot_2', item: null},\n    ]\n  }\n}\n\nexport const CLONE_PATTERNS = {\n  verticalLine: {\n    x_offset: 1,\n    y_offset: 1,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n    ]\n  },\n  smallSquare: {\n    x_offset: 1,\n    y_offset: 1,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n    ]\n  },\n  square: {\n    x_offset: 2,\n    y_offset: 2,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 1, y: -1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: -1, y: -1, taken: false, },\n      { x: -1, y: 0, taken: false, },\n      { x: -1, y: 1, taken: false, },\n    ]\n  },\n  bigSquare: {\n    x_offset: 2,\n    y_offset: 2,\n    positions: [\n      { x: 0, y: 0, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 1, y: 1, taken: false, },\n      { x: 1, y: 0, taken: false, },\n      { x: 1, y: -1, taken: false, },\n      { x: 0, y: -1, taken: false, },\n      { x: -1, y: -1, taken: false, },\n      { x: -1, y: 0, taken: false, },\n      { x: -1, y: 1, taken: false, },\n      { x: 0, y: 1, taken: false, },\n      { x: 2, y: 2, taken: false, },\n      { x: 2, y: 0, taken: false, },\n      { x: 2, y: -2, taken: false, },\n      { x: 0, y: -2, taken: false, },\n      { x: -2, y: -2, taken: false, },\n      { x: -2, y: 0, taken: false, },\n      { x: -2, y: 2, taken: false, },\n    ],\n  },\n  circle: {\n    x_offset: 0,\n    y_offset: 0,\n    positions: [\n      ...Helper.getPointsOnCircumference(0, 0, 2),\n      ...Helper.getPointsOnCircumference(0, 0, 3)\n    ]\n  },\n}\n\nexport const PARTICLE_TEMPLATES = {\n  default: {\n    renderer: {\n      character: '*',\n      color: 'black',\n      background: 'white',\n    }\n  },\n  fail: {\n    renderer: {\n      character: 'x',\n      color: 'black',\n      background: 'red',\n    }\n  },\n  succede: {\n    renderer: {\n      character: 'x',\n      color: THEMES.SOLARIZED.base3,\n      background: THEMES.SOLARIZED.green,\n    }\n  },\n  damage: {\n    renderer: {\n      character: '*',\n      color: 'darkred',\n      background: 'red',\n    }\n  },\n  leaf: {\n    renderer: {\n      character: '✤',\n      color: '#36635b',\n      background: '#F0D8C0',\n    }\n  },\n  water: {\n    renderer: {\n      character: '~',\n      color: THEMES.SOLARIZED.base3,\n      background: THEMES.SOLARIZED.blue,\n    }\n  },\n}\n\nexport const PARTICLE_TYPE = {\n  directional: 0,\n  path: 1,\n}\n\nexport const ALPHABET = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];","export class ActionResource {\n  constructor({\n    name = 'Resource',\n    getResourceCost = () => null,\n    actorResourcePath = null,\n    actorResourceGetter = null,\n    actorResourceSetter = null,\n    renderer = {background: 'transparent', color: 'black', character: '*'}\n  }) {\n    this.name = name;\n    this.getResourceCost = getResourceCost;\n    this.actorResourcePath = actorResourcePath;\n    this.actorResourceGetter = actorResourceGetter;\n    this.actorResourceSetter = actorResourceSetter;\n    this.renderer = renderer;\n  }\n}\n","import {ActionResource} from './ActionResource';\n\nexport class EnergyResource extends ActionResource {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.name = 'Energy';\n    this.actorResourcePath = 'energy';\n    this.renderer = { color: 'black', background: '#ff9926', character: '' }\n  }\n}","import * as _ from 'lodash';\nimport { Particle } from '../Entities/index';\nimport * as Constant from '../constants';\nimport {EnergyResource} from './ActionResources/EnergyResource';\n\nexport class Base {\n  constructor({ \n    game,\n    actor,\n    label = 'action label',\n    hidden = false,\n    energyCost = Constant.ENERGY_THRESHOLD, \n    processDelay = 50, \n    particles = [], \n    renderer = null, \n    particleTemplate = Constant.PARTICLE_TEMPLATES.default, \n    onBefore = () => null, \n    onAfter = () => null, \n    onSuccess = () => null, \n    onFailure = () => null, \n    interrupt = false, \n    requiredResources = [],\n  }) {\n    this.actor = actor;\n    this.game = game;\n    this.label = label;\n    this.hidden = hidden;\n    this.energyCost = energyCost;\n    this.processDelay = processDelay;\n    this.particles = particles;\n    this.renderer = renderer;\n    this.particleTemplate = particleTemplate;\n    this.onBefore = onBefore;\n    this.onAfter = onAfter;\n    this.onSuccess = onSuccess;\n    this.onFailure = onFailure;\n    this.interrupt = interrupt;\n    this.requiredResources = [new EnergyResource({ getResourceCost: () => this.energyCost }), ...requiredResources];\n  }\n\n  addParticle(\n    life, \n    pos, \n    direction, \n    renderer = { ...this.particleTemplate.renderer }, \n    type = Constant.PARTICLE_TYPE.directional, \n    path = null\n  ) {\n    let particle = new Particle({\n      game: this.game,\n      name: 'particle',\n      passable: true,\n      life,\n      pos,\n      direction,\n      energy: 100,\n      renderer,\n      type,\n      path,\n    });\n    this.particles.push(particle);\n  }\n\n  removeDeadParticles() {\n    this.particles = this.particles.filter((particle) => particle.life > 0);\n  }\n\n  setAsNextAction() {\n    this.actor.setNextAction(this);\n  }\n\n  getEnergyCost() {\n    return _.find(this.requiredResources, {name: 'Energy'}).getResourceCost();\n  }\n\n  getRequiredResourceName() {\n    return _.map(this.requiredResources, 'name');\n  }\n\n  listPayableResources() {\n    return _.map(this.requiredResources, (resource) => {\n      const getResourceCost = resource.getResourceCost; \n      const actorResourcePath = resource.actorResourcePath; \n      const actorResourceGetter = resource.actorResourceGetter;\n\n      const actorVariable = _.get(this.actor, actorResourcePath, null);\n      \n      let canPay = false;\n      // if the actor has provided a setter for this variable, use that \n      if (_.get(this.actor, actorResourceGetter, null) !== null) {\n        canPay = this.actor[actorResourceGetter]() >= getResourceCost();\n      } else if (actorVariable !== null) {\n        // else if the actor has a path to the appropriate variable, get that value and set it manually\n        canPay = actorVariable >= getResourceCost();\n      }\n\n      return {\n        canPay,\n        ...resource\n      }\n    })\n  }\n\n  canPayRequiredResources() {\n    return !_.find(this.listPayableResources(), {'canPay': false});\n  }\n\n  payRequiredResources() {\n    _.each(this.requiredResources, (resource) => {\n      const getResourceCost = resource.getResourceCost;\n      const actorResourcePath = resource.actorResourcePath;\n      const actorResourceSetter = resource.actorResourceSetter;\n      \n      const actorVariable = _.get(this.actor, actorResourcePath, null);\n      const resourceCost = getResourceCost();\n      // if the actor has provided a setter for this variable, use that \n      if (_.get(this.actor, actorResourceSetter, null)) {\n        this.actor[actorResourceSetter](actorVariable - resourceCost)\n        return true;\n      }\n\n      // else if the actor has a path to the appropriate variable, get that value and set it manually\n      if (actorVariable) {\n        this.actor[actorResourcePath] -= resourceCost;\n        return true;\n        // return _.set(this.actor, actorResourcePath, actorVariable - getResourceCost());\n      }\n      return false;\n    })\n  }\n  \n  perform() {\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n\n}","import { Base } from './Base';\nexport class DestroySelf extends Base {\n  constructor({ processDelay = 0, ...args }) {\n    super({ ...args });\n    this.processDelay = processDelay;\n  }\n  perform() {\n    // console.log(`${this.actor.name} is self-destructing`);\n    this.actor.energy -= this.energyCost;\n    this.actor.destroy();\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { DestroySelf } from './DestroySelf';\nimport * as Constant from '../constants';\n\nexport class EngineCrank extends Base {\n  constructor({ engine, ...args }) {\n    super({ ...args });\n    this.engine = engine;\n  }\n  async perform() {\n    let success = true;\n    let alternative = null;\n    console.log(`${this.actor.name} is cranking its engine.`);\n    try {\n      await this.engine.start();\n      this.actor.energy -= this.energyCost;\n    }\n    catch (error) {\n      console.log('EngineCrank');\n      console.log(error);\n      alternative = new DestroySelf({\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { CrankEngine } from '../Engine/engine';\nimport { EngineCrank } from '../Actions/EngineCrank';\n\nexport const Parent = superclass => class extends superclass {\n  constructor({ children = [], engine = new CrankEngine({}), ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('PARENT');\n    this.children = children;\n    this.engine = engine;\n    this.isInitialized = false;\n  }\n  destroyChild(child) {\n    child.energy = 0;\n    let tile = this.game.map[Helper.coordsToString(child.pos)];\n    this.game.map[Helper.coordsToString(child.pos)].entities = tile.entities.filter((e) => e.id !== child.id);\n    this.engine.actors = this.engine.actors.filter((e) => e.id !== child.id);\n    this.game.draw();\n  }\n  canAttack(entity) {\n    const childIds = this.children.map((child) => child.id);\n    return !childIds.includes(entity.id);\n  }\n  initialize() {\n    this.isInitialized = true;\n    this.engine.game = this.game;\n    this.engine.actors = this.children;\n    this.engine.actors.forEach((actor) => {\n      actor.game = this.game;\n      actor.destroy = () => { this.destroyChild(actor); };\n      actor.canAttack = this.canAttack.bind(this);\n      // actor.canAttack = (entity) => {this.canAttack(entity)};\n      this.game.placeActorOnMap(actor);\n      this.engine.addActor(actor);\n      this.game.draw();\n    });\n  }\n  getAction(game) {\n    // crank engine one turn\n    if (!this.isInitialized) {\n      this.initialize();\n    }\n    let result = new EngineCrank({\n      game,\n      actor: this,\n      engine: this.engine,\n      energyCost: Constant.ENERGY_THRESHOLD,\n      processDelay: 10\n    });\n    return result;\n  }\n};\n","import Konva from 'konva';\nimport uuid from 'uuid/v1';\nimport * as Helper from '../../helper';\n\nexport const ANIMATION_TYPES = {\n  DEFAULT: 0,\n  BLINK_TILE: 1,\n  SOLID_TILE: 2,\n}\n\nclass Animation {\n  constructor({display}) {\n    const id = uuid();\n    this.id = id;\n    this.lifeTime = 0;\n    this.active = true;\n    this.display = display;\n    this.node = null;\n  }\n\n  getActive () {\n    return false;\n  }\n\n  initialize () {\n    return;\n  }\n\n  update (frame) {\n    this.lifeTime += frame.timeDiff;\n    this.active = this.getActive();\n    if (!this.active) {\n      this.display.removeAnimation(this.id);\n    }\n  }\n}\n\nclass ExampleAnimation extends Animation {\n  constructor({...args}) {\n    super({...args})\n  }\n\n  getActive () {\n    if (this.lifeTime > 500) {\n      return false;\n    }\n    return true;\n  }\n}\n\nclass BlinkTile extends Animation {\n  constructor({\n    x,\n    y,\n    lerpDirection = -1,\n    color = '#fff',\n    ...args\n  }) {\n    super({ ...args });\n    this.x = x;\n    this.y = y;\n    this.lerpDirection = lerpDirection;\n    this.color = color;\n  }\n\n  getActive () {\n    return this.active;\n  }\n\n  initialize () {\n    this.active = true;\n    let rect = new Konva.Rect({\n      name: 'rect',\n      x: (this.display.tileWidth * this.x) + (this.display.tileOffset + this.display.tileGutter),\n      y: (this.display.tileHeight * this.y) + (this.display.tileOffset + this.display.tileGutter),\n      offsetX: this.display.tileWidth / -4,\n      offsetY: this.display.tileHeight / -4,\n      width: this.display.tileWidth / 2,\n      height: this.display.tileHeight / 2,\n      fill: this.color,\n      strokeEnabled: false,\n      // for optimization\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n    });\n    this.display.animationLayer.add(rect);\n    this.node = rect;\n    super.initialize();\n  }\n\n  update (frame) {\n    let opacity = this.node.opacity();\n    if (opacity >= 1) this.lerpDirection = -1;\n    if (opacity <= 0) this.lerpDirection = 1;\n    opacity += (0.05 * this.lerpDirection)\n    this.node.opacity(Helper.clamp(opacity, 0, 1))\n    super.update(frame);\n  }\n  \n}\n\nexport class Display {\n  constructor({\n    containerId = null,\n    width = 100,\n    height = 100,\n    tileWidth = 10,\n    tileHeight = 10,\n    tileGutter = 0,\n    tileOffset = 10,\n    game = null,\n  }) {\n    this.containerId = containerId;\n    this.width = width;\n    this.height = height;\n    this.tileWidth = tileWidth;\n    this.tileHeight = tileHeight;\n    this.tileGutter = tileGutter;\n    this.tileOffset = tileOffset;\n    this.stage = null;\n    this.layer = null;\n    this.animationLayer = null;\n    this.animations = [];\n    this.animationLoop = null;\n    this.game = game;\n  }\n\n  initialize (document) {\n    let d = document.getElementById(this.containerId)\n    let displayContainer = document.createElement('div');\n    d.appendChild(displayContainer);\n\n    this.adjustContentToScreen(d);\n    \n    this.stage = new Konva.Stage({\n      container: 'display',   // id of container <div>\n      width: this.width,\n      height: this.height\n    });\n\n    \n    // setting up main tile map layer\n    this.layer = new Konva.Layer({\n      hitGraphEnabled: false,\n    });\n    \n    this.stage.add(this.layer);\n    \n    // setting up animation layer\n    this.animationLayer = new Konva.Layer({});\n    this.stage.add(this.animationLayer);\n    let animationLoop = new Konva.Animation((frame) => {\n      this.animations.forEach((animation) => animation.update(frame))\n      // Stop animation updates if no animations to process\n      if (this.animations.length <= 0) {\n        if (this.animationLoop) {\n          if (this.animationLoop.isRunning()) {\n            this.animationLoop.stop();\n          }\n        }\n      }\n    }, this.animationLayer);\n    this.animationLoop = animationLoop;\n    animationLoop.start();\n  }\n\n  adjustContentToScreen (display_element) {\n    const DEVICE_WIDTH = display_element.offsetWidth;\n    const value = (DEVICE_WIDTH - this.tileOffset) / this.game.mapWidth;\n    this.tileWidth = Math.ceil(value);\n    this.tileHeight = this.tileWidth;\n    this.width = ((this.game.mapWidth - 1) * this.tileWidth) + this.tileOffset;\n    this.height = (this.game.mapHeight * this.tileHeight) + this.tileOffset;\n  }\n\n  addAnimation (type, args) {\n    let animation;\n    switch (type) {\n      case ANIMATION_TYPES.SOLID_TILE:\n        animation = new ExampleAnimation({display: this, ...args})\n        break;\n      case ANIMATION_TYPES.BLINK_TILE:\n        animation = new BlinkTile({display: this, ...args})\n        break;\n      case ANIMATION_TYPES.DEFAULT:\n      default:\n        animation = new Animation({ display: this, ...args})\n        break;\n    }\n    animation.initialize();\n    this.animations.push(animation)\n    if (!this.animationLoop.isRunning()) this.animationLoop.start();\n    return animation\n  }\n\n  removeAnimation (id) {\n    this.animations = this.animations.filter((anim) => {\n      if (anim.id !== id) return true;\n      // if anim is being removed, remove associated nodes and shapes too\n      anim.node.destroy();\n      return false;\n    });\n    \n  }\n\n  updateTile(tile, character, foreground, background) {\n    // child[0] is the rectangle\n    // child[1] is the text\n    if (tile) {\n      tile.children[0].fill(background);\n      tile.children[1].fill(foreground);\n      tile.children[1].text(character);\n    }\n  }\n\n  createTile(x, y, character, foreground, background, layer = 'layer') {\n    const actual_x = (this.tileWidth * x) + (this.tileOffset + this.tileGutter);\n    const actual_y = (this.tileHeight * y) + (this.tileOffset + this.tileGutter);\n    let node = new Konva.Group({\n      id: `${x},${y}`,\n      x: (this.tileWidth * x) + (this.tileOffset + this.tileGutter),\n      y: (this.tileHeight * y) + (this.tileOffset + this.tileGutter),\n      width: this.tileWidth,\n      height: this.tileHeight,\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n    });\n\n    let rect = new Konva.Rect({\n      name: 'rect',\n      width: this.tileWidth,\n      height: this.tileHeight,\n      fill: background,\n      strokeEnabled: false,\n      // for optimization\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n    });\n\n    let text = new Konva.Text({\n      name: 'text',\n      text: character,\n      width: this.tileWidth,\n      height: this.tileHeight,\n      fontSize: this.tileWidth - 4,\n      fontFamily: 'scroll-o-script',\n      fill: foreground,\n      align: 'center',\n      verticalAlign: 'middle',\n      // for optimization\n      transformsEnabled: 'position',\n      perfectDrawEnabled: false,\n      listening: false,\n      shadowForStrokeEnabled: false,\n    });\n\n    const dis_layer = this.layer;\n    if (x === 1 && y === 1) {\n      Konva.Image.fromURL('/tile241.png', function (darthNode) {\n        darthNode.setAttrs({\n          x: actual_x,\n          y: actual_y,\n          scaleX: 1,\n          scaleY: 1,\n          fill: 'pink',\n          opacity: 0.5\n        });\n        dis_layer.add(darthNode);\n      });\n      // var imageObj = new Image();\n      // imageObj.onload = function () {\n      //   var yoda = new Konva.Image({\n      //     x: 50,\n      //     y: 50,\n      //     image: imageObj,\n      //     width: 106,\n      //     height: 118,\n      //   });\n\n      //   // add the shape to the layer\n      //   this.layer.add(yoda);\n      //   // layer.batchDraw();\n      // };\n      // imageObj.src = '/tile241.png';\n    }\n\n    node.add(rect);\n    node.add(text);\n    this.layer.add(node);\n    return node;\n  }\n\n  getAbsoultueX(x) {\n    return (this.tileWidth * x) + (this.tileOffset + this.tileGutter)\n  }\n\n  getAbsoultueY(y) {\n    return (this.tileWidth * y) + (this.tileOffset + this.tileGutter)\n  }\n\n  getTilesWide (width, tileOffset, tileWidth) {\n    return Math.floor((width - tileOffset) / tileWidth)\n  }\n  \n  getTilesHigh(height, tileOffset, tileHeight) {\n    return Math.floor((height - tileOffset) / tileHeight)\n  }\n\n  getTilesAcrossOnScreen () { return Math.floor(this.width / this.tileWidth)}\n  getTilesDownOnScreen () { return Math.floor(this.height / this.tileHeight)}\n\n  draw () {\n    this.layer.batchDraw();\n  }\n}","import { COLORS, THEMES } from './constants';\nimport uuid from 'uuid/v1';\n\nexport const MESSAGE_TYPE = {\n  INFORMATION: {\n    color: COLORS.gray_4,\n    backgroundColor: COLORS.black_1,\n  },\n  ACTION: {\n    color: COLORS.gray_2,\n    backgroundColor: COLORS.gray_5,\n  },\n  DANGER: {\n    color: COLORS.red_5,\n    backgroundColor: COLORS.black_1,\n  },\n  STATUS_EFFECT: {\n    color: THEMES.SOLARIZED.base3,\n    backgroundColor: THEMES.SOLARIZED.violet,\n  },\n  ERROR: {\n    color: THEMES.SOLARIZED.base3,\n    backgroundColor: THEMES.SOLARIZED.yellow,\n  },\n}\n\nexport class Message {\n  constructor({ text = '', type = MESSAGE_TYPE.INFORMATION }) {\n    let id = uuid();\n    this.id = id;\n    this.text = text;\n    this.type = type;\n  }\n}","import { MESSAGE_TYPE } from '../message';\nimport * as Helper from '../../helper';\n\nexport const Attacking = superclass => class extends superclass {\n  constructor({ attackDamage = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('ATTACKING');\n    this.attackDamage = attackDamage;\n  }\n  getAttackDamage(additional = 0) {\n\n    return this.attackDamage + additional;\n  }\n  canAttack(entity) {\n    return true;\n  }\n  attack(targetPos, additional = 0) {\n    let success = false;\n    let tile = this.game.map[Helper.coordsToString(targetPos)];\n    if (!tile) {\n      return success;\n    }\n    let targets = Helper.getDestructableEntities(tile.entities);\n    if (targets.length > 0) {\n      let target = targets[0];\n      console.log(target);\n      if (this.canAttack(target)) {\n        let damage = this.getAttackDamage(additional);\n        if (this.entityTypes.includes('EQUIPING')) {\n          this.equipment.forEach((slot) => {\n            if (slot.item) {\n              if (slot.item.entityTypes.includes('ATTACKING')) {\n                damage += slot.item.getAttackDamage();\n              }\n            }\n          });\n        }\n        this.game.addMessage(`${this.name} does ${damage} to ${target.name}`, MESSAGE_TYPE.DANGER);\n        console.log('attackDamage ', this.attackDamage);\n        console.log('additionalDamage ', additional);\n        console.log('damage ', damage);\n        target.decreaseDurability(damage);\n        success = true;\n      }\n    }\n    return success;\n  }\n};\n","import * as Constant from '../constants';\n\nexport const Equipable = superclass => class extends superclass {\n  constructor({ name = 'nameless', equipmentType = Constant.EQUIPMENT_TYPES.HAND, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('EQUIPABLE');\n    this.name = name;\n    this.equipmentType = equipmentType;\n  }\n};\n","import * as Helper from '../../helper';\n\nexport const Acting = superclass => class extends superclass {\n  constructor({ actions = [], speed = 100, energy = 0, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('ACTING');\n    this.actions = actions;\n    this.speed = speed;\n    this.energy = speed;\n  }\n  getAction() {\n    let action = Helper.getRandomInArray(this.actions);\n    if (action) {\n      return action;\n    }\n  }\n  gainEnergy(value = this.speed) {\n    this.energy += value;\n  }\n  hasEnoughEnergy() {\n    return this.energy > 0;\n  }\n};\n","import * as Helper from '../../helper';\n\nexport const Rendering = superclass => class extends superclass {\n  constructor({ pos = { x: 0, y: 0 }, renderer, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('RENDERING');\n    this.pos = pos;\n    this.renderer = { ...renderer };\n    this.currentFrame = 0;\n  }\n\n  getRenderer() {\n    return this.renderer\n  }\n\n  getPosition() {\n    return this.pos;\n  }\n  move(targetPos) {\n    let success = false;\n    if (this.game.canOccupyPosition(targetPos, this)) {\n      let tile = this.game.map[Helper.coordsToString(this.pos)];\n      this.game.map[Helper.coordsToString(this.pos)] = { ...tile, entities: tile.entities.filter((e) => e.id !== this.id) };\n      this.pos = targetPos;\n      this.game.map[Helper.coordsToString(targetPos)].entities.push(this);\n      success = true;\n    }\n    return success;\n  }\n  shove(targetPos, direction) {\n    let success = false;\n    let targetTile = this.game.map[Helper.coordsToString(targetPos)];\n    if (targetTile) {\n      targetTile.entities.map((entity) => {\n        if (entity.entityTypes.includes('PUSHABLE')) {\n          if (!entity.passable && entity.pushable) {\n            let newX = entity.pos.x + direction[0];\n            let newY = entity.pos.y + direction[1];\n            let newPos = { x: newX, y: newY };\n            entity.move(newPos);\n          }\n        }\n      });\n    }\n    success = this.move(targetPos);\n    return success;\n  }\n};\n","export class ContainerSlot {\n  constructor({ itemType, items }) {\n    this.itemType = itemType;\n    this.items = items;\n  }\n}\n\nexport const Containing = superclass => class extends superclass {\n  constructor({ container = [], ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CONTAINING');\n    this.container = container;\n  }\n  createSlot(item) {\n    let slot = new ContainerSlot({\n      itemType: item.name,\n      items: [item],\n    });\n    this.container.push(slot);\n  }\n  contains(itemType) {\n    let container = this.container;\n    let slots = container.filter((slot) => slot.itemType === itemType);\n    return slots.length > 0 ? slots[0].items[0] : false;\n  }\n  addToContainer(item) {\n    const index = this.container.findIndex((slot) => slot.itemType === item.name);\n    if (index >= 0) {\n      this.container[index].items.push(item);\n    }\n    else {\n      this.createSlot(item);\n    }\n  }\n  removeFromContainer(item) {\n    this.container.forEach((slot, index) => {\n      slot.items = slot.items.filter((it) => it.id !== item.id);\n      if (!slot.items.length)\n        this.container.splice(index, 1);\n    });\n  }\n};\n","import { Howl, Howler } from 'howler';\n\nconsole.log(window.PUBLIC_URL);\n\n\nexport default {\n  fire_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/fire-00.mp3'],\n    volume: 0.5,\n    loop: true,\n  }),\n  fire_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/fire-01.mp3'],\n    volume: 0.05,\n    loop: true,\n  }),\n  scream_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/scream-00.wav']\n  }),\n  scream_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/scream-01.wav']\n  }),\n  scream_2: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/scream-02.wav']\n  }),\n  water_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/water-04.wav']\n  }),\n  water_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/water-05.wav']\n  }),\n  chop_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/chop-00.wav']\n  }),\n  chop_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/chop-01.wav']\n  }),\n  equip_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/equip-00.wav']\n  }),\n  equip_1: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/equip-01.wav']\n  }),\n  explosion_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/explosion-00.wav'],\n    volume: 0.2,\n  }),\n  save: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/save.wav'],\n  }),\n  lose: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/lose-00.wav'],\n  }),\n  grab_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/grab-00.wav'],\n  }),\n  release_0: new Howl({\n    src: [window.PUBLIC_URL + '/sounds/grab-01.wav'],\n  }),\n}","export const Playing = superclass => class extends superclass {\n  constructor({ keymap = {}, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('PLAYING');\n    this.nextAction = null;\n    this.keymap = keymap;\n  }\n  setNextAction(action) {\n    this.nextAction = action;\n  }\n  getAction() {\n    let action = this.nextAction;\n    this.nextAction = null;\n    return action;\n  }\n};\n","import * as Helper from '../../helper';\n\nexport const destroyEntity = (entity) => {\n  entity.energy = 0;\n  if (entity.pos) {\n    let tile = entity.game.map[Helper.coordsToString(entity.pos)];\n    entity.game.map[Helper.coordsToString(entity.pos)].entities = tile.entities.filter((e) => e.id !== entity.id);\n  }\n  // entity.game.engine.actors = entity.game.engine.actors.filter((e) => e.id !== entity.id);\n  entity.game.engine.removeStatusEffectByActorId(entity.id);\n  entity.game.draw()\n  entity.active = false;\n}","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nexport class Say extends Base {\n  constructor({ message, messageType = MESSAGE_TYPE.INFORMATION, processDelay = 50, ...args }) {\n    super({ ...args });\n    this.message = message;\n    this.messageType = messageType;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    this.game.addMessage(`${this.actor.name} says \"${this.message}\"`, this.messageType);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import SOUNDS from '../sounds';\nimport { Base } from './Base';\nimport { Say } from './Say';\nimport * as Helper from '../../helper';\nimport * as Constant from '../constants';\n\nexport class Attack extends Base {\n  constructor({ targetPos, additionalDamage = 0, processDelay = 100, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.additionalDamage = additionalDamage;\n    this.processDelay = processDelay;\n    this.particleTemplate = Constant.PARTICLE_TEMPLATES.damage;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (!this.actor.entityTypes.includes('ATTACKING')) {\n      return {\n        success: true,\n        alternative: new Say({\n          message: `Ooh I don\\'t know how to attack`,\n          game: this.game,\n          actor: this.actor,\n          energyCost: 0,\n        }),\n      };\n    }\n    success = this.actor.attack(this.targetPos, this.additionalDamage);\n    if (success) {\n      const sound = Helper.getRandomInArray([SOUNDS.chop_0, SOUNDS.chop_1]);\n      sound.play();\n      this.addParticle(1, { ...this.targetPos }, { x: 0, y: 0 });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { Attack } from \"./Attack\";\n\nexport class Move extends Base {\n  constructor({ targetPos, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let moveSuccess = this.actor.move(this.targetPos);\n    if (moveSuccess) {\n      success = true;\n    } else {\n      success = true;\n      alternative = new Attack({\n        targetPos: this.targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: 0\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Move } from './Move';\nimport { DestroySelf } from './DestroySelf';\nimport * as Constant from '../constants';\n\nexport class ThrowProjectile extends Move {\n  constructor({ ...args }) {\n    super({ ...args });\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    this.actor.passable = false;\n    let move_result = super.perform();\n    if (move_result.success) {\n      this.actor.path.shift();\n      success = true;\n    }\n    if (this.actor.path.length === 0) {\n      success = true;\n      alternative = new DestroySelf({\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n      });\n    }\n    if (move_result.alternative) {\n      let attackSuccess = this.actor.attack(this.targetPos);\n      if (attackSuccess) {\n        alternative = new DestroySelf({\n          game: this.game,\n          actor: this.actor,\n          energyCost: Constant.ENERGY_THRESHOLD,\n          processDelay: 0,\n        });\n      }\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n","import { Attack } from './Attack';\nexport class SelfDestructiveAttack extends Attack {\n  constructor({ damageToSelf, ...args }) {\n    super({ ...args });\n    this.damageToSelf = damageToSelf;\n    this.onSuccess = () => {\n      console.log('Self destruct success');\n      this.actor.decreaseDurabilityWithoutDefense(damageToSelf);\n    };\n    this.onFailure = () => {\n      console.log('Self destruct fails');\n      this.actor.destroy();\n    };\n  }\n}\n","import { Base } from './Base';\nimport { SelfDestructiveAttack } from \"./SelfDestructiveAttack\";\nimport * as Constant from '../constants';\n\nexport class ProjectileMove extends Base {\n  constructor({ targetPos, damageToSelf = 1, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.processDelay = processDelay;\n    this.damageToSelf = damageToSelf;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let moveSuccess = this.actor.move(this.targetPos);\n    if (moveSuccess) {\n      this.actor.energy -= this.energyCost;\n      success = true;\n    }\n    else {\n      success = true;\n      alternative = new SelfDestructiveAttack({\n        targetPos: this.targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        damageToSelf: this.damageToSelf,\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { Attack } from \"./Attack\";\nimport * as Constant from '../constants';\n\nexport class Shove extends Base {\n  constructor({ targetPos, direction, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.direction = direction;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let moveSuccess = this.actor.shove(this.targetPos, this.direction);\n    if (moveSuccess) {\n      this.actor.energy -= this.energyCost;\n      success = true;\n    }\n    else {\n      success = true;\n      alternative = new Attack({\n        targetPos: this.targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Move } from './Move';\nimport { DestroySelf } from './DestroySelf';\nimport * as Constant from '../constants';\n\nexport class ThrowProjectileGas extends Move {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.processDelay = 0;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    this.actor.passable = false;\n    let move_result = super.perform();\n    if (move_result.success) {\n      this.actor.path.shift();\n      success = true;\n    }\n    if (this.actor.path.length === 0) {\n      success = true;\n      alternative = new DestroySelf({\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n      });\n    }\n    if (move_result.alternative) {\n      this.actor.attack(this.targetPos);\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { Move } from '../Actions/Move';\n\nexport const Chasing = superclass => class extends superclass {\n  constructor({ targetEntity = null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CHASING');\n    this.targetEntity = targetEntity;\n  }\n  getAction(game) {\n    let path = Helper.calculatePath(game, this.targetEntity.pos, this.pos);\n    let targetPos = path.length > 0 ? path[0] : this.pos;\n    let result = new Move({\n      targetPos,\n      game,\n      actor: this,\n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n    return result;\n  }\n};\n","import { Base } from './Base';\nimport * as Helper from '../../helper';\n\nexport class PlaceActor extends Base {\n  constructor({ targetPos, entity, interrupt = true, forcePlacement = false, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.entity = entity;\n    this.interrupt = interrupt;\n    this.forcePlacement = forcePlacement;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    // let canPlace = true;\n    // if (!this.game.canOccupyPosition(this.targetPos, this.entity)) canPlace = false;\n    // if (this.entity.entityTypes.includes('PARENT')) {\n    //   this.entity.children.forEach((child) => {\n    //     console.log(child.pos);\n    //     if (!this.game.canOccupyPosition(child.pos, child)) canPlace = false;\n    //   })\n    // }\n    // if (canPlace) {\n    //   this.entity.pos = this.targetPos;\n    //   this.game.engine.addActorAsPrevious(this.entity);\n    //   this.game.engine.start(); // should this be used outside of engine?\n    //   success = true;      \n    // }\n    let canOccupyPosition = this.forcePlacement ? true : this.game.canOccupyPosition(this.targetPos, this.entity);\n    const tile = this.game.map[Helper.coordsToString(this.targetPos)];\n    if (canOccupyPosition && tile) {\n      this.entity.pos = this.targetPos;\n      tile.entities.push(this.entity);\n      // this.game.engine.addActorAsPrevious(this.entity);\n      // this.game.engine.addActor(this.entity);\n      this.game.engine.addActorAsNext(this.entity);\n      // this.interrupt = true;\n      // this.game.engine.start(); // BUGGED - should this be used outside of engine?\n      success = true;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","export const Draggable = superclass => class extends superclass {\n  constructor({ draggable = true, ...args }) {\n    super({ ...args });\n    this.draggable = draggable;\n    this.entityTypes = this.entityTypes.concat('DRAGGABLE');\n  }\n};\n","export const Pushable = superclass => class extends superclass {\n  constructor({ pushable = true, ...args }) {\n    super({ ...args });\n    this.pushable = pushable;\n    this.entityTypes = this.entityTypes.concat('PUSHABLE');\n  }\n};\n","import { destroyEntity } from './helper';\nexport const Destructable = superclass => class extends superclass {\n  constructor({ durability = 1, defense = 0, onDestroy = () => null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DESTRUCTABLE');\n    this.durability = durability;\n    this.defense = defense;\n    this.onDestroy = onDestroy;\n  }\n  getDefense() {\n    let defense = this.defense;\n    // add in reducer to get defense stats of all equpiment\n    if (this.entityTypes.includes('EQUIPING')) {\n      this.equipment.forEach((slot) => {\n        if (slot.item) {\n          if (slot.item.entityTypes.includes('DESTRUCTABLE')) {\n            defense += slot.item.getDefense();\n          }\n        }\n      });\n    }\n    return defense;\n  }\n  decreaseDurabilityWithoutDefense(value) {\n    this.durability -= value;\n    if (this.durability <= 0) {\n      this.destroy();\n    }\n  }\n  decreaseDurability(value) {\n    const current = this.durability;\n    const newDurability = current - (value - this.getDefense());\n    this.durability = Math.min(current, newDurability);\n    this.renderer.character = this.durability;\n    this.game.draw();\n    if (this.durability <= 0) {\n      this.destroy();\n    }\n  }\n  increaseDurability(value) {\n    this.durability += value;\n  }\n  destroy() {\n    this.onDestroy();\n    destroyEntity(this);\n  }\n};\n","export const Burnable = superclass => class extends superclass {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('BURNABLE');\n    this.canBurn = true;\n    this.willResetCanBurn = false;\n  }\n  resetCanBurn() {\n    this.willResetCanBurn = false;\n    this.canBurn = true;\n  }\n  burn() {\n    if (this.canBurn) {\n      this.decreaseDurability(2);\n      return true;\n    }\n    return false;\n  }\n};\n","import * as _ from 'lodash';\n\nexport const HasKeymap = superclass => class extends superclass {\n  constructor({ initializeKeymap, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HAS_KEYMAP');\n    this.keymapStack = [];\n    this.initializeKeymap = initializeKeymap;\n    const keymap = initializeKeymap(this.game.engine, this);\n    this.addKeymap(keymap);\n  }\n\n  getKeymap () {\n    return _.get(this.keymapStack, '0', null);\n  }\n\n  addKeymap (newKeymap) {\n    this.keymapStack.unshift(newKeymap);\n  }\n\n  removeKeymap () {\n    this.keymapStack.shift();\n  }\n\n  reinitializeKeymap (ignoredKeys = []) {\n    this.keymapStack = [];\n    const keymap = this.initializeKeymap(this.game.engine, this);\n    ignoredKeys.forEach((key) => delete keymap[key])\n    this.addKeymap(keymap);\n  }\n\n  setKeymap (newKeymap) {\n    this.addKeymap(newKeymap);\n    return this.getKeymap;\n  }\n\n  goToPreviousKeymap () {\n    this.removeKeymap();\n    return this.getKeymap();\n  }\n};\n","import pipe from 'lodash/fp/pipe';\nimport { Entity } from './Entity';\nimport { Parent } from './Parent';\nimport { PresentingUI } from './PresentingUI';\nimport { HasInnerGates } from './HasInnerGates';\nimport { UI } from './UI';\nimport {HasTargetingCursor} from './HasTargetingCursor';\nimport { Attacking } from './Attacking';\nimport { Equipable } from './Equipable';\nimport { Acting } from './Acting';\nimport { Rendering } from './Rendering';\nimport { Containing } from './Containing';\nimport { Equiping } from './Equiping';\nimport { Charging } from './Charging';\nimport { Signing } from './Signing';\nimport { Playing } from './Playing';\nimport { Cloning } from './Cloning';\nimport { DestructiveProjecting } from './DestructiveProjecting';\nimport { DirectionalProjecting } from './DirectionalProjecting';\nimport { DirectionalPushing } from './DirectionalPushing';\nimport { GaseousDestructiveProjecting } from './GaseousDestructiveProjecting';\nimport { Gaseous } from './Gaseous';\nimport { Chasing } from './Chasing';\nimport { RangedChasing } from './RangedChasing';\nimport { Dragging } from './Dragging';\nimport { Draggable } from './Draggable';\nimport { Pushable } from './Pushable';\nimport { Spreading } from './Spreading';\nimport { Destructable } from './Destructable';\nimport { IsParticle } from './IsParticle';\nimport { Speaking } from './Speaking';\nimport { Burnable } from './Burnable';\nimport { Exploding } from './Exploding';\nimport { Helpless } from './Helpless';\nimport { HasKeymap } from './HasKeymap';\n\nexport const UI_Actor = pipe(\n  Acting,\n  Rendering,\n  Playing,\n  HasKeymap,\n  UI\n)(Entity);\n\nexport const Actor = pipe(\n  Acting,\n  Rendering\n)(Entity);\n\nexport const Speaker = pipe(\n  Acting,\n  Rendering,\n  Destructable,\n  Speaking,\n  Draggable,\n  Pushable,\n  Burnable,\n  Helpless,\n)(Entity);\n\nexport const Wall = pipe(\n  Rendering,\n  Destructable,\n)(Entity);\n\nexport const Debris = pipe(\n  Rendering,\n  Containing,\n  Draggable,\n  Burnable,\n  Destructable,\n  Exploding,\n  Pushable,\n)(Entity);\n\nexport const MovingWall = pipe(\n  Acting,\n  Rendering,\n  // Pushing,\n  DirectionalPushing,\n  Destructable,\n)(Entity);\n\nexport const Chaser = pipe(\n  Acting,\n  Rendering,\n  Chasing,\n  Destructable\n)(Entity);\n\nexport const Bandit = pipe(\n  Acting,\n  Rendering,\n  Chasing,\n  Destructable,\n  Attacking,\n  Pushable,\n)(Entity);\n\nexport const RangedBandit = pipe(\n  Acting,\n  Rendering,\n  RangedChasing,\n  Destructable,\n  Attacking,\n  Pushable,\n)(Entity);\n\nexport const Player = pipe(\n  Acting,\n  Rendering,\n  PresentingUI,\n  HasTargetingCursor,\n  HasKeymap,\n  Dragging,\n  Charging,\n  Signing,\n  Containing,\n  Equiping,\n  Attacking,\n  HasInnerGates,\n  Destructable,\n  Cloning,\n  Playing,\n  Burnable,\n)(Entity);\n\nexport const Weapon = pipe(\n  Rendering,\n  Equipable,\n  Attacking\n)(Entity);\n\nexport const Armor = pipe(\n  Rendering,\n  Equipable,\n  Destructable,\n)(Entity);\n\nexport const DestructiveProjectile = pipe(\n  Acting,\n  Rendering,\n  Attacking,\n  DestructiveProjecting,\n  Destructable\n)(Entity);\n\nexport const DirectionalProjectile = pipe(\n  Acting,\n  Rendering,\n  Attacking,\n  DirectionalProjecting,\n  Destructable,\n)(Entity);\n\nexport const DestructiveCloudProjectile = pipe(\n  Acting,\n  Rendering,\n  Attacking,\n  GaseousDestructiveProjecting,\n  Destructable,\n  Gaseous\n)(Entity);\n\nexport const DestructiveCloudProjectileV2 = pipe(\n  Acting,\n  Destructable,\n  Parent,\n)(Entity);\n\nexport const FireSpread = pipe(\n  Acting,\n  Rendering,\n  Destructable,\n  Attacking,\n  Spreading,\n)(Entity);\n\nexport const Particle = pipe(\n  Acting,\n  Rendering,\n  IsParticle,\n)(Entity);\n\nexport const ParticleEmitter = pipe(\n  Acting,\n  Destructable,\n  Parent,\n)(Entity);","export const UI = superclass => class extends superclass {\n  constructor({ initiatedBy = null, range = null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('UI');\n    this.initiatedBy = initiatedBy;\n    this.active = true;\n    this.range = range;\n  }\n  hasEnoughEnergy() {\n    return this.active;\n  }\n};\n","import { Say } from '../Actions/Say';\n\nexport const Speaking = superclass => class extends superclass {\n  constructor({ messages = ['I have nothing to say.'], messageType, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SPEAKING');\n    this.messages = messages;\n    this.messageType = messageType;\n  }\n  getAction(game) {\n    const message = this.messages.shift();\n    this.messages.push(message);\n    return new Say({\n      actor: this,\n      game,\n      message: message,\n      messageType: this.messageType,\n      processDelay: 0,\n    });\n  }\n};\n","import SOUNDS from '../sounds';\nimport * as Helper from '../../helper';\n\nexport const Helpless = superclass => class extends superclass {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HELPLESS');\n    this.saved = false;\n  }\n  save() {\n    this.saved = true;\n    SOUNDS.save.play();\n  }\n  destroy() {\n    const sound = Helper.getRandomInArray([SOUNDS.scream_0, SOUNDS.scream_1, SOUNDS.scream_2]);\n    sound.play();\n    super.destroy();\n  }\n};\n","import SOUNDS from '../sounds';\nimport { FireSpread } from './index';\nimport * as Constant from '../constants';\nimport * as Helper from '../../helper';\n\nexport const Exploding = superclass => class extends superclass {\n  constructor({ flammability = 1, explosivity = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('EXPLODING');\n    this.flammability = flammability;\n    this.explosivity = explosivity;\n  }\n  enflame() {\n    // create num of fireSpreads\n    const fires = Array(this.flammability).fill('').map((item) => {\n      return new FireSpread({\n        name: 'Pyro',\n        pos: { ...this.pos },\n        game: this.game,\n        renderer: {\n          character: '*',\n          color: Constant.THEMES.SOLARIZED.base3,\n          background: Constant.THEMES.SOLARIZED.red,\n        },\n        timeToSpread: 1,\n        spreadCount: 1,\n        durability: 1,\n        attackDamage: 1,\n        speed: 100,\n      });\n    });\n    fires.forEach((fire) => {\n      // add them to map\n      this.game.placeActorOnMap(fire);\n      // add them to engine\n      this.game.engine.addActor(fire);\n    });\n  }\n  explode() {\n    let structure = {\n      x_offset: 0,\n      y_offset: 0,\n      positions: Array(this.explosivity).fill('').reduce((acc, curr, i) => {\n        return acc.concat(...Helper.getPointsOnCircumference(0, 0, i + 1));\n      }, [])\n    };\n    structure.positions.forEach((slot) => {\n      let position = {\n        x: this.pos.x + slot.x + structure.x_offset,\n        y: this.pos.y + slot.y + structure.y_offset\n      };\n      const tile = this.game.map[Helper.coordsToString(position)];\n      if (tile)\n        tile.type = 'BURNT';\n    });\n    if (this.explosivity > 0)\n      SOUNDS.explosion_0.play();\n    // this.game.draw(); //may not need draw here\n  }\n  destroy() {\n    this.enflame();\n    this.explode();\n    super.destroy();\n  }\n};\n","import * as Constant from '../constants';\nimport { Shove } from '../Actions/Shove';\nimport { DestroySelf } from '../Actions/DestroySelf';\n\nexport const DirectionalPushing = superclass => class extends superclass {\n  constructor({ path = false, direction = { x: 0, y: 0 }, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DIRECTIONAL_PUSHING');\n    this.path = path;\n    this.direction = direction;\n    this.range = range;\n  }\n  getAction(game) {\n    let result = null;\n    let newX = this.pos.x + this.direction[0];\n    let newY = this.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n    this.passable = false;\n    if (this.range > 0) {\n      result = new Shove({\n        targetPos: targetPos,\n        direction: this.direction,\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        onSuccess: () => this.range -= 1,\n      });\n    }\n    else {\n      result = new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: 0\n      });\n    }\n    return result;\n  }\n};\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper'; \nimport { PlaceActor } from '../Actions/PlaceActor';\nimport { Say } from '../Actions/Say';\nimport { Move } from '../Actions/Move';\n\nexport const RangedChasing = superclass => class extends superclass {\n  constructor({ targetEntity = null, getProjectile = () => null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('RANGED_CHASING');\n    this.targetEntity = targetEntity;\n    this.getProjectile = getProjectile;\n  }\n  targetInPath(pathToCheck, targetPos) {\n    let inPath = false;\n    pathToCheck.forEach((pos) => {\n      if (pos.x === targetPos.x && pos.y === targetPos.y) {\n        inPath = true;\n      }\n    });\n    return inPath;\n  }\n  getAction(game) {\n    let throwDirection = {\n      x: Math.sign(this.targetEntity.pos.x - this.pos.x),\n      y: Math.sign(this.targetEntity.pos.y - this.pos.y),\n    };\n    // projectile.initialize()\n    let projectile = this.getProjectile({\n      pos: {\n        x: this.pos.x,\n        y: this.pos.y,\n      },\n      targetPos: { ...this.targetEntity.pos },\n      direction: [throwDirection.x, throwDirection.y],\n      range: 10,\n    });\n    // projectile.getPath()\n    projectile.createPath(game);\n    // is target in path\n    const inPath = this.targetInPath(projectile.path, this.targetEntity.pos);\n    if (inPath) {\n      // throw\n      if (game.canOccupyPosition(projectile.pos, projectile)) {\n        return new PlaceActor({\n          targetPos: { ...projectile.pos },\n          entity: projectile,\n          game,\n          actor: this,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      }\n      return new Say({\n        message: `I'll get you with this kunai!`,\n        game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n    // if not, select target tile in range of enemy and move\n    let movePath = Helper.calculatePath(game, this.targetEntity.pos, this.pos);\n    let targetPos = movePath.length > 0 ? movePath[0] : this.pos;\n    return new Move({\n      targetPos,\n      game,\n      actor: this,\n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n  }\n};\n","export const PresentingUI = superclass => class extends superclass {\n  constructor({ presentingUI = false, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('PRESENTING_UI');\n    this.presentingUI = presentingUI;\n  }\n};\n","import * as Helper from '../../helper';\nimport { THEMES } from '../constants';\nimport { ANIMATION_TYPES } from '../Display/konvaCustom';\n\nexport const HasTargetingCursor = superclass => class extends superclass {\n  constructor({...args}) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HAS_TARGETING_CURSOR');\n    this.cursorIsActive = false;\n    this.cursorPositions = []; \n    this.animations = []; \n  }\n\n  setCursorIsActive (active = true) {\n    this.cursorIsActive = active;\n  }\n\n  activateCursor (positions) {\n    this.setCursorPositions(positions);\n    this.setCursorIsActive(true);\n    this.resetAnimations();\n  }\n\n  deactivateCursor () {\n    this.setCursorIsActive(false);\n    this.removeAnimations();\n  }\n\n  getCursorPositions () {\n    return this.cursorPositions;\n  }\n\n  setCursorPositions (positions) {\n    this.cursorPositions = positions;\n    return this.getCursorPositions();\n  }\n\n  addAnimations () {\n    const positions = this.getCursorPositions();\n    if (positions.length) {\n      positions.forEach((position) => {\n      const newAnimation = this.game.display.addAnimation(\n        ANIMATION_TYPES.BLINK_TILE, \n        {\n          x: position.x, \n          y: position.y, \n          color: THEMES.SOLARIZED.base3 \n        })\n        this.animations.push(newAnimation);\n      })\n    }\n  }\n\n  removeAnimations () {\n    if (this.animations.length) {\n      this.animations.forEach((animation) => this.game.display.removeAnimation(animation.id))\n    }\n    this.animations = [];\n  }\n\n  resetAnimations () {\n    this.removeAnimations();\n    this.addAnimations();\n  }\n\n  moveCursorInDirection (direction, distance = 1) {\n    const newPositons = this.getCursorPositions().map(\n      (pos) => ({\n        x: pos.x + (direction[0] * distance),\n        y: pos.y + (direction[1] * distance)\n      })\n    );\n    this.setCursorPositions(newPositons);\n    this.resetAnimations();\n    return newPositons;\n  }\n};\n","import * as Helper from '../../helper'; \n\nexport const Dragging = superclass => class extends superclass {\n  constructor({ draggedEntity = null, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DRAGGING');\n    this.draggedEntity = draggedEntity;\n  }\n  grab(pos) {\n    const tile = this.game.map[Helper.coordsToString(pos)];\n    if (!tile)\n      return false;\n    if (tile.entities.length > 0) {\n      const entity = tile.entities[0];\n      if (entity.entityTypes.includes('DRAGGABLE'))\n        if (!this.draggedEntity && entity.draggable === true) {\n          this.draggedEntity = entity;\n          return true;\n        }\n    }\n    return false;\n  }\n  release() {\n    if (!this.draggedEntity)\n      return false;\n    const draggedEntity = { ...this.draggedEntity };\n    this.draggedEntity = null;\n    return draggedEntity;\n  }\n  drag(lastPos) {\n    // update entity position\n    const pos = this.draggedEntity.pos;\n    // get tile of draged entity\n    let tile = this.game.map[Helper.coordsToString(pos)];\n    // remove dragged entity from that tile\n    this.game.map[Helper.coordsToString(pos)] = { ...tile, entities: tile.entities.filter((e) => e.id !== this.draggedEntity.id) };\n    // update dragged ent to player's position\n    this.draggedEntity.pos = lastPos;\n    // add dragged ent to new tile\n    this.game.map[Helper.coordsToString(lastPos)].entities.push(this.draggedEntity);\n  }\n  move(targetPos) {\n    const lastPos = { ...this.pos };\n    if (this.draggedEntity) {\n      const moveSuccess = super.move(targetPos);\n      if (moveSuccess) {\n        this.drag(lastPos);\n        return true;\n      }\n      return moveSuccess;\n    }\n    return super.move(targetPos);\n  }\n};\n","export const Charging = superclass => class extends superclass {\n  constructor({ charge = 2, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CHARGING');\n    this.charge = charge;\n    this.chargeMax = charge;\n  }\n  decreaseCharge(value) {\n    this.charge = Math.max(0, this.charge - value);\n  }\n  increaseCharge(value) {\n    this.charge = Math.min(this.chargeMax, this.charge + value);\n  }\n};\n","export const Signing = superclass => class extends superclass {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SIGNING');\n    this.signHistory = [];\n  }\n  addSign(sign) {\n    if (this.signHistory.length >= 4) {\n      this.signHistory.shift();\n    }\n    this.signHistory.push(sign);\n  }\n  clearSigns() {\n    this.signHistory = [];\n  }\n};\n","import SOUNDS from '../sounds';\nimport * as Constant from '../constants';\n\nexport const Equiping = superclass => class extends superclass {\n  constructor({ equipment = Constant.EQUIPMENT_LAYOUTS.human(), ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('EQUIPING');\n    this.equipment = equipment;\n  }\n  hasItemNameEquipped(itemName) {\n    const equipment = this.equipment.filter((slot) => {\n      if (slot.item) {\n        if (slot.item.name === itemName) {\n          return true;\n        }\n      }\n      return false;\n    });\n    return equipment.length > 0;\n  }\n  getItemInSlot(slotName) {\n    let openSlots = this.equipment.filter((slot) => {\n      return (slot.item === null && slot.type === slotName);\n    });\n    if (openSlots.length > 0) {\n      return false;\n    }\n    let slot = this.equipment.find((slot) => slot.type === slotName);\n    if (!slot) {\n      return false;\n    }\n    if (!slot.item) {\n      return false;\n    }\n    return slot.item;\n  }\n  equip(slotName, item) {\n    let foundSlot = false;\n    this.equipment = this.equipment.map((slot) => {\n      if (!foundSlot && slot.type === slotName && slot.item === null) {\n        slot.item = item;\n        foundSlot = true;\n        SOUNDS.equip_1.play();\n      }\n      return slot;\n    });\n    return foundSlot;\n  }\n  unequip(item) {\n    this.equipment = this.equipment.map((slot) => {\n      if (slot.item) {\n        if (slot.item.id === item.id) {\n          slot.item = null;\n          SOUNDS.equip_0.play();\n        }\n      }\n      return slot;\n    });\n  }\n};\n","export const HasInnerGates = superclass => class extends superclass {\n  constructor({ currentGate = null, gates = [], ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('HAS_INNER_GATES');\n    this.currentGate = currentGate;\n    this.gates = [\n      {\n        name: 'Gate of Opening',\n        damageBuff: 1,\n        speedBuff: 100,\n        durabilityDebuff: 1,\n        character: '1'\n      },\n      {\n        name: 'Gate of Healing',\n        damageBuff: 1,\n        speedBuff: 100,\n        durabilityDebuff: 1,\n        character: '2'\n      },\n      {\n        name: 'Gate of Life',\n        damageBuff: 1,\n        speedBuff: 100,\n        durabilityDebuff: 1,\n        character: '3'\n      },\n      {\n        name: 'Gate of Pain',\n        damageBuff: 1,\n        speedBuff: 100,\n        durabilityDebuff: 1,\n        character: '4'\n      },\n      {\n        name: 'Gate of Limit',\n        damageBuff: 1,\n        speedBuff: 100,\n        durabilityDebuff: 1,\n        character: '5'\n      },\n    ];\n  }\n  setNextGate() {\n    let currentGate = this.currentGate;\n    let nextGate = null;\n    if (!currentGate) {\n      nextGate = this.gates[0];\n      this.currentGate = { ...nextGate };\n    }\n    else {\n      let nextGateIndex = this.gates.findIndex((gate) => currentGate.name === gate.name) + 1;\n      if (this.gates.length > nextGateIndex) {\n        nextGate = this.gates[nextGateIndex];\n        this.currentGate = { ...nextGate };\n      }\n    }\n    return nextGate;\n  }\n  getNextGate() {\n    let currentGate = this.currentGate;\n    let nextGate = null;\n    if (!currentGate) {\n      nextGate = this.gates[0];\n    }\n    else {\n      let nextGateIndex = this.gates.findIndex((gate) => currentGate.name === gate.name) + 1;\n      if (this.gates.length > nextGateIndex) {\n        nextGate = this.gates[nextGateIndex];\n      }\n    }\n    return nextGate;\n  }\n};\n","import uuid from 'uuid/v1';\nimport { destroyEntity } from './helper';\nimport { cloneDeep, find } from 'lodash';\n\nexport const Cloning = superclass => class extends superclass {\n  constructor({ cloneLimit = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('CLONING');\n    this.cloneLimit = cloneLimit;\n    this.clones = [];\n  }\n  // perhaps clones should have a status effect that leeches parent actor's energy or chakra\n  // status effects should be removed from engine when owner is removed.\n  destroy() {\n    // add function to override self destroy funtion \n    // if this actor dies, clones should be destroyed as well\n    if (this.clones) {\n      this.clones.map((clone) => {\n        destroyEntity(clone);\n      });\n    }\n    destroyEntity(this);\n  }\n  destroyClone(id) {\n    // overrides clone destroy function\n    // when clone is destroyed, clone count will change accordingly\n    const index = this.clones.findIndex((c) => c.id === id);\n    if (index >= 0) {\n      this.clones[index].super__destroy();\n      this.clones.splice(index, 1);\n    }\n  }\n  createClone(cloneArgs) {\n    if (this.clones.length < this.cloneLimit) {\n      let clone = cloneDeep(this);\n      clone.name = `Clone`;\n      clone.game = this.game;\n      clone.id = uuid();\n      if (clone.entityTypes.includes('HAS_KEYMAP')) {\n        const ignoredKeys = find(cloneArgs, { 'attribute': 'ignoredKeys' });\n        clone.reinitializeKeymap(ignoredKeys? ignoredKeys.value : []);\n      }\n      delete clone.clones;\n      clone['super__destroy'] = clone.destroy;\n      clone.destroy = () => { this.destroyClone(clone.id); };\n      cloneArgs.forEach((arg) => {\n        clone[arg.attribute] = arg.value;\n      });\n      if (this.game.placeActorOnMap(clone)) {\n        this.game.engine.addActorAsNext(clone);\n        this.game.draw();\n        this.clones.push(clone);\n        return true;\n      }\n      ;\n    }\n    return false;\n  }\n};\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { ThrowProjectile } from '../Actions/ThrowProjectile';\n\nexport const DestructiveProjecting = superclass => class extends superclass {\n  constructor({ path = false, targetPos = null, attackDamage = 1, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DESTRUCTIVE_PROJECTING');\n    this.path = path;\n    this.targetPos = targetPos;\n    this.attackDamage = attackDamage;\n    this.range = range;\n  }\n  createPath(game) {\n    let path = Helper.calculatePathWithRange(game, this.targetPos, this.pos, 8, this.range);\n    this.path = path;\n  }\n  getAction(game) {\n    if (!this.path) {\n      this.createPath(game);\n    }\n    let targetPos = this.path.length > 0 ? this.path[0] : this.pos;\n    let result = new ThrowProjectile({\n      targetPos,\n      game,\n      actor: this,\n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n    return result;\n  }\n};\n","import * as Constant from '../constants';\nimport { ProjectileMove } from '../Actions/ProjectileMove';\nimport { DestroySelf } from '../Actions/DestroySelf';\n\nexport const DirectionalProjecting = superclass => class extends superclass {\n  constructor({ path = false, direction = { x: 0, y: 0 }, attackDamage = 1, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('DIRECTIONAL_PROJECTING');\n    this.path = path;\n    this.direction = direction;\n    this.attackDamage = attackDamage;\n    this.range = range;\n  }\n  createPath(game) {\n    let path = [];\n    for (let i = 1; i < this.range + 1; i++) {\n      path.push({\n        x: this.pos.x + (this.direction[0] * i),\n        y: this.pos.y + (this.direction[1] * i)\n      });\n    }\n    this.path = path;\n  }\n  getAction(game) {\n    let result = null;\n    let newX = this.pos.x + this.direction[0];\n    let newY = this.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n    this.passable = false;\n    if (this.range > 0) {\n      result = new ProjectileMove({\n        targetPos: targetPos,\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        damageToSelf: 1,\n        onSuccess: () => this.range -= 1,\n        onAfter: () => {\n          if (this.energy <= 100) {\n            game.engine.setActorToPrevious();\n          }\n        }\n      });\n    }\n    else {\n      result = new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: 0\n      });\n    }\n    return result;\n  }\n};\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { ThrowProjectileGas } from '../Actions/ThrowProjectileGas';\n\nexport const GaseousDestructiveProjecting = superclass => class extends superclass {\n  constructor({ owner_id = null, path = false, targetPos = null, attackDamage = 1, range = 3, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('GASEOUS_DESTRUCTIVE_PROJECTING');\n    this.path = path;\n    this.targetPos = targetPos;\n    this.attackDamage = attackDamage;\n    this.range = range;\n    this.owner_id = owner_id;\n  }\n  canAttack(entity) {\n    let success = super.canAttack();\n    if (success) {\n      success = this.owner_id === null || (entity.owner_id !== this.owner_id);\n    }\n    return success;\n  }\n  createPath(game) {\n    let path = Helper.calculatePathWithRange(game, this.targetPos, this.pos, 8, this.range);\n    this.path = path;\n  }\n  getAction(game) {\n    if (!this.path) {\n      this.createPath(game);\n    }\n    let targetPos = this.path.length > 0 ? this.path[0] : this.pos;\n    let result = new ThrowProjectileGas({\n      targetPos,\n      game,\n      actor: this,\n      energyCost: Constant.ENERGY_THRESHOLD\n    });\n    return result;\n  }\n};\n","import uuid from 'uuid/v1';\nimport { cloneDeep, cloneDeepWith } from 'lodash';\nimport * as Constant from '../constants';\n\nexport const Gaseous = superclass => class extends superclass {\n  constructor({ isClone = false, cloneCount = 0, clonePattern = Constant.CLONE_PATTERNS.square, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('GASEOUS');\n    this.isClone = isClone;\n    this.cloneCount = cloneCount;\n    this.clonePattern = cloneDeep(clonePattern);\n  }\n  getAction(game) {\n    let offset = this.clonePattern.positions.find((pos) => !pos.taken);\n    if (!this.isClone && offset) {\n      offset.taken = true;\n      let clone = cloneDeepWith(this, (value, key) => {\n        switch (key) {\n          case 'id':\n          case 'game':\n          case 'engine':\n          case 'clones':\n            return null;\n          default:\n            return undefined;\n        }\n      });\n      clone.game = game;\n      clone.id = uuid();\n      if (this.hasOwnProperty('pos')) {\n        let referencePos = this.pos;\n        clone.pos = {\n          x: referencePos.x + offset.x,\n          y: referencePos.y + offset.y\n        };\n      }\n      if (clone.hasOwnProperty('path')) {\n        clone.path = clone.path.map((pos) => {\n          return {\n            x: pos.x + offset.x,\n            y: pos.y + offset.y\n          };\n        });\n      }\n      clone.isClone = true;\n      this.cloneCount += 1;\n      game.placeActorOnMap(clone);\n      game.engine.addActor(clone);\n      game.draw();\n    }\n    let result = super.getAction(game);\n    return result;\n  }\n};\n","import { FireSpread } from './index';\nimport * as Constant from '../constants';\nimport * as Helper from '../../helper'; \nimport { Say } from '../Actions/Say';\nimport { DestroySelf } from '../Actions/DestroySelf';\nimport { PlaceActor } from '../Actions/PlaceActor';\n\nexport const Spreading = superclass => class extends superclass {\n  constructor({ timeToSpread = 5, spreadCount = 1, ...args }) {\n    super({ ...args });\n    this.entityTypes = this.entityTypes.concat('SPREADING');\n    this.timeToSpreadMax = timeToSpread;\n    this.timeToSpread = timeToSpread;\n    this.spreadCountMax = spreadCount;\n    this.spreadCount = spreadCount;\n  }\n  getAction(game) {\n    // if no more spreads, then destroy\n    if (this.spreadCount <= 0) {\n      return new DestroySelf({\n        game: game,\n        actor: this,\n        energyCost: Constant.ENERGY_THRESHOLD,\n        processDelay: 0,\n        onAfter: () => {\n          game.map[Helper.coordsToString(this.pos)].type = 'BURNT';\n        },\n      });\n    }\n    // if its time to expand again, create a new fire spread and placeActor\n    if (this.timeToSpread <= 0) {\n      // find adjacent spot to spread to\n      let adjacentPositions = [\n        {\n          x: this.pos.x + 1,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + -1,\n          y: this.pos.y + 0,\n        },\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + 1,\n        },\n        {\n          x: this.pos.x + 0,\n          y: this.pos.y + -1,\n        },\n      ];\n      let adjacentPos = null;\n      let kill = 100;\n      while (kill > 0) {\n        let newPos = Helper.getRandomInArray(adjacentPositions);\n        let newTile = this.game.map[Helper.coordsToString(newPos)];\n        let tileExists = Boolean(newTile);\n        let notBurnt = true;\n        let canBurn = false;\n        if (newTile) {\n          notBurnt = newTile.type !== 'BURNT';\n          canBurn = ['WALL', 'FLOOR', 'DOOR'].includes(newTile.type);\n        }\n        if (tileExists && notBurnt && canBurn) {\n          adjacentPos = newPos;\n          break;\n        }\n        kill -= 1;\n      }\n      if (adjacentPos) {\n        // create new fire actor and place\n        let fire = new FireSpread({\n          name: 'Pyro',\n          pos: { x: 0, y: 0 },\n          game,\n          renderer: {\n            character: '*',\n            sprite: '',\n            color: Constant.THEMES.SOLARIZED.base3,\n            background: Constant.THEMES.SOLARIZED.red,\n          },\n          timeToSpread: this.timeToSpreadMax,\n          spreadCount: this.spreadCountMax,\n          durability: this.durability,\n          attackDamage: this.attackDamage,\n          speed: this.speed,\n        });\n        this.timeToSpread = this.timeToSpreadMax;\n        this.spreadCount -= 1;\n        return new PlaceActor({\n          targetPos: adjacentPos,\n          entity: fire,\n          game,\n          actor: this,\n          interrupt: false,\n          energyCost: Constant.ENERGY_THRESHOLD,\n          processDelay: 0,\n          forcePlacement: true,\n        });\n      }\n      this.timeToSpread = this.timeToSpreadMax;\n      this.spreadCount -= 1;\n    }\n    this.timeToSpread -= 1;\n    return new Say({\n      message: 'burning',\n      game,\n      actor: this,\n      processDelay: 0,\n    });\n  }\n};\n","import * as Constant from '../constants'; \n\nexport const IsParticle = superclass => class extends superclass {\n  constructor({ pos = { x: 1, y: 1 }, direction = { x: 0, y: 0 }, life = 1, speed = 1, type = Constant.PARTICLE_TYPE.directional, path = null, ...args }) {\n    super({ ...args });\n    this.pos = pos;\n    this.direction = direction;\n    this.life = life;\n    this.speed = speed;\n    this.type = type;\n    this.path = path;\n    this.entityTypes = this.entityTypes.concat('PARTICLE');\n  }\n  getNextPos(step) {\n    switch (this.type) {\n      case Constant.PARTICLE_TYPE.directional:\n        return {\n          x: this.pos.x + (this.direction.x * this.speed) * step,\n          y: this.pos.y + (this.direction.y * this.speed) * step,\n        };\n      case Constant.PARTICLE_TYPE.path:\n        const nextPos = this.path.shift();\n        return nextPos ? { ...nextPos } : { ...this.pos };\n      default:\n        break;\n    }\n  }\n  update(step) {\n    this.life -= step;\n    if (this.life > 0) {\n      this.pos = this.getNextPos(step);\n    }\n  }\n};\n","import * as Helper from '../../helper';\nimport { Particle } from '../Entities/index';\nimport { PARTICLE_TEMPLATES } from '../constants';\n\nexport class Engine {\n  constructor({\n    statusEffects = [],\n    actors = [],\n    currentActor = 0,\n    isRunning = false,\n    game = null,\n  }) {\n    this.statusEffects = statusEffects;\n    this.actors = actors;\n    this.currentActor = currentActor;\n    this.isRunning = isRunning;\n    this.game = game;\n  }\n\n  async processV1 () { // a turn-based system using speed and round-robin\n    let actor = this.actors[this.currentActor]\n    actor.gainEnergy(actor.speed);\n    if (actor.hasEnoughEnergy()) {\n      let action = actor.getAction(this.game);\n      if (!action) { return false; } // if no action given, kick out to UI input\n      while (true) {\n        let result = action.perform();\n        this.game.draw();\n        await Helper.delay(action.processDelay);\n        if (!result.success) return false;\n        if (result.alternative === null) break;\n        action = result.alternative;\n      }\n    }\n    this.currentActor = (this.currentActor + 1) % this.actors.length;\n    return true\n  }\n\n  async processV2() { // a turn-based system using speed and Action Points\n    let actor = this.actors[this.currentActor]\n    let acting = true;\n    while (acting) {\n      if (!actor) return false;\n      // if (!actor.active) return false;\n      if (!actor.active) break;\n      let timePassed = 0;\n      \n      if (actor.hasEnoughEnergy()) {\n        // if (!actor.active) break;\n        let action = actor.getAction(this.game);\n        if (!action) { return false; } // if no action given, kick out to UI input\n        timePassed += action.getEnergyCost();\n        // console.log('timePassed ', timePassed);\n        \n        // timePassed += action.energyCost;\n        while (true) {\n          let result = {\n            success: false,\n            alternative: null,\n          };\n          // if (actor.energy >= action.energyCost) { // replace with checking for all required resources\n          if (action.canPayRequiredResources()) { // replace with checking for all required resources\n            \n            action.onBefore();\n            result = await action.perform();\n            if (result.success) {\n              action.onSuccess();\n              action.payRequiredResources();\n            } else {\n              action.onFailure();\n            }\n            action.onAfter();\n          }\n          if (!await this.processActionFX(action, result.success)) {\n            if (this.shouldAutoRun()) {\n              await Helper.delay(25);\n            } else {\n              await Helper.delay(action.processDelay);\n            }\n            this.game.draw();\n          }\n          if (!actor.active) break;\n          // if (!result.success) return false;\n          if (result.alternative === null) break;\n          action = result.alternative;\n        }\n        this.processStatusEffects(timePassed);\n        if (action.interrupt) {\n          acting = false;\n          break;\n        }\n      } else {\n        actor.gainEnergy(actor.speed);\n        acting = false;\n      }\n    }\n    this.actors = this.actors.filter((actor) => actor.active)\n    this.currentActor += 1;\n    if (this.currentActor >= this.actors.length) {\n      this.currentActor = 0;\n    }\n    return true\n  }\n\n  // a turn-based system using speed and Action Points\n  // it reorders all actors by energy after every round robin\n  async processV3() { \n    let actor = this.actors[this.currentActor]\n    if (!actor) return false;\n    let timePassed = 0;\n    if (actor.hasEnoughEnergy()) {\n      let action = actor.getAction(this.game);\n      if (!action) { return false; } // if no action given, kick out to UI input\n      timePassed += action.energyCost;\n      while (true) {\n        let result = await action.perform();\n        if (!await this.processActionFX(action, result.success)) {\n            await Helper.delay(action.processDelay);\n            this.game.draw();\n        }\n        if (!result.success) return false;\n        if (result.alternative === null) break;\n        action = result.alternative;\n      }\n      this.processStatusEffects(timePassed);\n    } else {\n      actor.gainEnergy(actor.speed);\n    }\n    this.currentActor = (this.currentActor + 1) % this.actors.length;\n    if (this.currentActor === 0) this.sortActorsByEnergy();\n    return true\n  }\n\n  // TODO process that reorders actors after every action\n\n  async start() {\n    this.isRunning = true;\n    while (this.isRunning) {\n      this.isRunning = await this.processV2();\n    }\n    let actor = this.actors[this.currentActor]\n    \n    if (!actor) {\n      // this.game.backToTitle();\n      return false;\n    }\n\n    this.setVisibleKeymap(actor);\n    \n    this.game.updateMode();\n    await this.game.updateReact(this.game);\n  }\n  \n  stop() {\n    this.isRunning = false;\n  }\n\n  setVisibleKeymap (actor) {\n    if (actor.entityTypes.includes('HAS_KEYMAP')) {\n      const keymap = actor.getKeymap()\n      if (keymap) {\n        this.game.visibleKeymap = keymap;\n      }\n    }\n  }\n\n  sortActorsByEnergy () {\n    this.actors = this.actors.sort((a, b) => b.energy - a.energy);\n  }\n\n  shouldAutoRun () {\n  // if there is no player, the engine will continue to run, we don't want it to run too fast\n    const hasPlayer = this.actors.filter((actor) => actor.entityTypes.includes('PLAYING')).length\n    if (hasPlayer) return false;\n    return true;\n  }\n\n  addStatusEffect(newEffect) {\n    if (!newEffect.allowDuplicates) {\n      if (this.statusEffects.filter((effect) => (\n        effect.actor.id === newEffect.actor.id &&\n        effect.name === newEffect.name\n      )).length > 0) {\n        console.log(`${newEffect.name} cannot be applied twice to ${newEffect.actor.name}`);\n        return false;\n      };\n    }\n    newEffect.onStart();\n    this.statusEffects.push(newEffect)\n    return true;\n  }\n\n  removeStatusEffectById (id) {\n    this.statusEffects = this.statusEffects.filter((effect) => {\n      if (effect.id !== id) return true;\n      effect.onStop();\n      return false;\n    });\n  }\n  \n  removeStatusEffectByActorId (actorId) {\n    this.statusEffects = this.statusEffects.filter((effect) => {\n      if (effect.actor.id !== actorId) return true;\n      effect.onStop();\n      return false;\n    });\n  }\n\n  removeDeadStatusEffects() {\n    this.statusEffects = this.statusEffects.filter((effect) =>{\n      if (effect.lifespan >= 0 && effect.timeToLive <= 0) {\n        effect.onStop();\n        return false;\n      }\n      return true;\n    });\n  }\n\n  getStatusEffectsByActorId(actorId) {\n    return this.statusEffects.filter((effect) => effect.actor.id === actorId);\n  }\n\n  processStatusEffects (timePassed) {\n    this.statusEffects.forEach((effect) => {\n      effect.timeSinceLastStep += timePassed;\n      effect.timeToLive -= timePassed;\n      if (effect.timeSinceLastStep >= effect.stepInterval) {\n        effect.onStep();\n        effect.timeSinceLastStep = 0;\n      } \n    });\n    this.removeDeadStatusEffects();\n  }\n\n  async processActionFX (action, actionSuccess) {\n    // EASE IN\n    // let time = .8\n    // let nextT = (t) => t *= t; \n    // EASE OUT\n    // let time = .03\n    // let nextT = (t) => t * (2 - t); \n    // EASE IN OUT QUAD\n    // let time = .4\n    // let nextT = (t) => t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t; \n    // EASE IN CUBIC\n    // let time = .8\n    // let nextT = (t) => t * t * t; \n    // EASE OUT CUBIC\n    // let time = .001\n    // let nextT = (t) => (--t) * t * t + 1; \n    if (!actionSuccess) { \n      // If action is not successful, instead of running action's normal particle animation\n      // we'll show a red X on the entity that initiated the action\n      const particle = new Particle({\n        game: this.game,\n        name: 'particle',\n        passable: true,\n        pos: {...action.actor.pos},\n        renderer: PARTICLE_TEMPLATES.fail.renderer,\n      })\n      this.game.placeActorOnMap(particle);\n      this.game.draw();\n      await Helper.delay(100);\n      this.game.removeActorFromMap(particle);\n      particle.update(1);\n      this.game.draw();\n      action.removeDeadParticles(); // is this needed?\n      return true;\n    }\n\n    if (action.particles.length) {\n      while (action.particles.length > 0) {\n        action.particles.forEach((particle) => {\n          this.game.placeActorOnMap(particle);\n        })\n        this.game.draw();\n        // await Helper.delay(time * 100);\n        // await Helper.delay(time * action.processDelay);\n        await Helper.delay(action.processDelay);\n        // await Helper.delay(0);\n        action.particles.forEach((particle) => {\n          this.game.removeActorFromMap(particle);\n          particle.update(1);\n\n        })\n        this.game.draw();\n        action.removeDeadParticles();\n        // time = nextT(time);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  addActor (entity) {\n    this.actors.push(entity);\n  }\n\n  addActorAsPrevious (entity) {\n    this.actors.splice(this.currentActor, 0, entity);\n  }\n\n  addActorAsNext (entity) {\n    this.actors.splice(this.currentActor + 1, 0, entity);\n  }\n\n  setActorToPrevious (entity) {\n    this.currentActor -= 1;\n    if (this.currentActor <= -1) this.currentActor = this.actors.length - 1;\n  }\n\n  setActorToNext (entity) {\n    this.currentActor = (this.currentActor + 1) % this.actors.length;\n  }\n\n}\n\n\nexport class CrankEngine extends Engine {\n  async process() { // a turn-based system using speed and Action Points\n    let actor = this.actors[this.currentActor]\n    let acting = true;\n    while (acting) {\n      if (actor.hasEnoughEnergy()) {\n        let action = actor.getAction(this.game);\n        if (!action) { return false; } // if no action given, kick out to UI input\n        while (true) {\n          this.game.draw();\n          let result = await action.perform();\n          await Helper.delay(action.processDelay);\n          if (!result.success) return false;\n          if (result.alternative === null) break;\n          action = result.alternative;\n        }\n      } else {\n        // actor.gainEnergy(actor.speed);\n        acting = false;\n      }\n    }\n    // this.currentActor = (this.currentActor + 1) % this.actors.length;\n    this.currentActor += 1;\n    if (this.currentActor + 1 >= this.actors.length) {\n      this.currentActor = 0;\n      this.actors.forEach((actor) => actor.gainEnergy(actor.speed));\n      return false;\n    }\n    return true\n  }\n\n  async start() {\n    this.isRunning = true;\n    while (this.isRunning) {\n      this.isRunning = await this.process();\n    }\n    let actor = this.actors[this.currentActor]\n    this.setVisibleKeymap(actor);\n    // this.game.updateMode();\n    this.game.mode.update();\n    await this.game.updateReact(this.game);\n  }\n}","import uuid from 'uuid/v1';\nimport {merge} from 'lodash';\n\nexport class Mode {\n  constructor({\n    game = null,\n    data = {},\n  }) {\n    let id = uuid();\n    this.id = id;\n    this.game = game;\n    this.data = data;\n    this.infoBlocks = {}\n    this.progressBars = {}\n  }\n\n  initialize() {}\n\n  update() {}\n\n  createOrUpdateInfoBlock(id, value) {\n    merge(this.infoBlocks, {[id]: value})\n  }\n}","import * as Constant from './constants';\nimport {\n  DestructiveCloudProjectileV2,\n  DestructiveProjectile,\n  DirectionalProjectile,\n  MovingWall,\n  DestructiveCloudProjectile,\n  Weapon,\n  Armor,\n} from './Entities/index';\n\nexport const TYPE = {\n  KUNAI: 'Kunai',\n  DIRECTIONAL_KUNAI: 'Directional Kunai',\n  SWORD: 'Sword',\n  AXE: 'Axe',\n  ARMOR: 'Armor',\n  WATER_GUN: 'Water Gun',\n  BARRIER: 'Barrier',\n}\n\nconst createProjectileCloud = ({ \n  engine, \n  actor, \n  targetPos, \n  throwDirection,\n  speed,\n  structureType,\n  createProjectile,\n}) => {\n  let structure = Constant.CLONE_PATTERNS[structureType];\n\n  let children = structure.positions.map((slot) => {\n    let position = {\n      x: actor.pos.x + slot.x + (throwDirection.x * structure.x_offset),\n      y: actor.pos.y + slot.y + (throwDirection.y * structure.y_offset)\n    }\n    \n    let targetPosition = {\n      x: targetPos.x + slot.x,\n      y: targetPos.y + slot.y,\n    }\n\n    return createProjectile(engine, position, targetPosition);\n  })\n\n  return new DestructiveCloudProjectileV2({\n    game: engine.game,\n    passable: true,\n    speed,\n    children,\n  })\n}\n\nconst createProjectileSingularity = ({ \n  engine, \n  actor, \n  targetPos, \n  speed,\n  structureType,\n  createProjectile,\n}) => {\n  let structure = Constant.CLONE_PATTERNS[structureType];\n\n  let children = structure.positions.map((slot) => {\n    let position = {\n      x: targetPos.x + slot.x + structure.x_offset,\n      y: targetPos.y + slot.y + structure.y_offset\n    }\n\n    let targetPosition = {\n      x: targetPos.x,\n      y: targetPos.y,\n    }\n\n    return createProjectile(engine, position, targetPosition);\n\n  })\n\n  return new DestructiveCloudProjectileV2({\n    game: engine.game,\n    passable: true,\n    speed,\n    children,\n  })\n}\n\nconst createProjectileBurst = ({ \n  engine, \n  actor, \n  targetPos, \n  speed,\n  structureType,\n  createProjectile,\n}) => {\n  let structure = Constant.CLONE_PATTERNS[structureType];\n\n  let children = structure.positions.map((slot) => {\n    let position = {\n      x: targetPos.x + structure.x_offset,\n      y: targetPos.y + structure.y_offset\n    }\n\n    let targetPosition = {\n      x: targetPos.x + slot.x,\n      y: targetPos.y + slot.y,\n    }\n\n    return createProjectile(engine, position, targetPosition);\n\n  })\n\n  return new DestructiveCloudProjectileV2({\n    game: engine.game,\n    passable: true,\n    speed,\n    children,\n  })\n}\n\nexport const sandTomb = ({\n  engine,\n  actor,\n  targetPos,\n}) => createProjectileSingularity({\n  engine,\n  actor,\n  targetPos,\n  speed: 100,\n  structureType: 'circle',\n  createProjectile: sandTombPart,\n})\n\nexport const sandBurst = ({\n  engine,\n  actor,\n  targetPos,\n}) => createProjectileBurst({\n  engine,\n  actor,\n  targetPos,\n  speed: 500,\n  structureType: 'circle',\n  createProjectile: sandTombPart,\n})\n\nexport const sandWallPulse = ({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n}) => createProjectileCloud({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n  speed: 500,\n  structureType: 'smallSquare',\n  createProjectile: movingSandWall,\n})\n\nexport const kunaiCloud = ({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n}) => createProjectileCloud({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n  speed: 500,\n  structureType: 'square',\n  createProjectile: kunai,\n})\n\nexport const fireballCloud = ({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n}) => createProjectileCloud({\n  engine,\n  actor,\n  targetPos,\n  throwDirection,\n  speed: 500,\n  structureType: 'square',\n  createProjectile: fireball,\n})\n\nexport const kunai = (engine, pos, targetPos) => new DestructiveProjectile({\n  game: engine.game,\n  targetPos,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    character: '>',\n    color: 'white',\n    background: '',\n    animation: [\n      { background: '', color: 'white', character: '>', },\n      { background: '', color: 'white', character: 'v', },\n      { background: '', color: 'white', character: '<', },\n      { background: '', color: 'white', character: '^', },\n      { background: '', color: 'white', character: '>', },\n    ],\n  },\n  name: TYPE.KUNAI,\n  speed: 600,\n  energy: 0,\n  range: 30,\n})\n\nexport const directionalKunai = (engine, pos, direction, range) => new DirectionalProjectile({\n  game: engine.game,\n  direction,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    character: '>',\n    color: 'white',\n    background: '',\n    animation: [\n      { background: 'lightgrey', color: 'grey', character: '>', },\n      { background: 'lightgrey', color: 'grey', character: 'v', },\n      { background: 'lightgrey', color: 'grey', character: '<', },\n      { background: 'lightgrey', color: 'grey', character: '^', },\n      { background: 'lightgrey', color: 'grey', character: '>', },\n    ],\n  },\n  name: TYPE.DIRECTIONAL_KUNAI,\n  speed: 600,\n  energy: 0,\n  range,\n})\n\nexport const movingSandWall = (engine, pos, targetPos, range) => new MovingWall({\n  game: engine.game,\n  passable: false,\n  pos: { x: pos.x, y: pos.y },\n  targetPos,\n  renderer: {\n    // character: '>',\n    character: ']',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.KUNAI,\n  // name: TYPE.BARRIER,\n  durability: 3,\n  range,\n  speed: 300,\n})\n\nexport const sandShuriken = (engine, pos, direction, range) => new DirectionalProjectile({\n  game: engine.game,\n  direction,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '✦️',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.DIRECTIONAL_KUNAI,\n  speed: 600,\n  energy: 0,\n  range,\n})\n\nexport const sandTombPart = (engine, pos, targetPos) => new DestructiveProjectile({\n  game: engine.game,\n  targetPos,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '✦️',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.KUNAI,\n  speed: 600,\n  energy: 0,\n  range: 30,\n})\n\nexport const fireball = (engine, pos, targetPos) => new DestructiveProjectile({\n  game: engine.game,\n  targetPos,\n  passable: true,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '🔥',\n    color: 'wheat',\n    background: 'tomato',\n  },\n  name: TYPE.KUNAI,\n  speed: 100,\n  energy: 0,\n  range: 30,\n})\n\nexport const fireballGas = (engine, actor, targetPos) => {\n  return new DestructiveCloudProjectile({\n    game: engine.game,\n    owner_id: actor ? actor.id : null,\n    targetPos,\n    passable: true,\n    pos: actor ? { x: actor.pos.x, y: actor.pos.y } : null,\n    renderer: {\n      // character: '@',\n      character: '🔥',\n      color: 'wheat',\n      background: 'tomato',\n    },\n    name: TYPE.KUNAI,\n    speed: 100,\n    range: 10,\n    clonePattern: Constant.CLONE_PATTERNS.bigSquare,\n    // clonePattern: Constant.CLONE_PATTERNS.square,\n  })\n}\n\nexport const waterball = (engine, actor, targetPos) => new DestructiveCloudProjectile({\n  game: engine.game,\n  owner_id: actor ? actor.id : null,\n  targetPos,\n  passable: true,\n  pos: actor ? { x: actor.pos.x, y: actor.pos.y } : null,\n  renderer: {\n    // character: '~',\n    character: '🌊',\n    color: 'silver',\n    background: 'lightslategrey',\n  },\n  name: TYPE.KUNAI,\n  speed: 800,\n  range: 10,\n  clonePattern: Constant.CLONE_PATTERNS.bigSquare,\n  // clonePattern: Constant.CLONE_PATTERNS.square,\n})\n\nexport const sword = (engine) => new Weapon({\n  game: engine.game,\n  name: TYPE.SWORD,\n  passable: true,\n  attackDamage: 1,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    // character: '|',\n    character: '🗡️',\n    color: 'white',\n    background: '',\n  },\n})\n\nexport const axe = (engine) => new Weapon({\n  game: engine.game,\n  name: TYPE.AXE,\n  passable: true,\n  attackDamage: 5,\n  equipmentType: Constant.EQUIPMENT_TYPES.GENERIC,\n  renderer: {\n    character: 'a',\n    sprite: '',\n    color: 'white',\n    background: '',\n  },\n})\n\nexport const waterGun = (engine) => new Weapon({\n  game: engine.game,\n  name: TYPE.WATER_GUN,\n  passable: true,\n  attackDamage: 0,\n  equipmentType: Constant.EQUIPMENT_TYPES.GENERIC,\n  renderer: {\n    character: 'w',\n    sprite: '',\n    color: Constant.THEMES.SOLARIZED.blue,\n    background: '',\n  },\n})\n\nexport const fireJacket = (engine) => new Armor({\n  game: engine.game,\n  name: 'Fire Jacket',\n  passable: true,\n  defense: 1,\n  equipmentType: Constant.EQUIPMENT_TYPES.GENERIC,\n  renderer: {\n    character: 'J',\n    sprite: '',\n    color: Constant.THEMES.SOLARIZED.magenta,\n    background: '',\n  },\n})\n\nexport const test = (engine, pos) => new Weapon({\n  game: engine.game,\n  name: TYPE.SWORD,\n  passable: true,\n  attackDamage: 1,\n  pos,\n  equipmentType: Constant.EQUIPMENT_TYPES.HAND,\n  renderer: {\n    // character: '|',\n    character: '🗡️',\n    color: 'white',\n    background: 'lightsteelblue',\n  },\n})\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\n\nexport const addTileZone = (origin = { x: 0, y: 0 }, height = 3, width = 3, type = 'GROUND', map, mapHeight, mapWidth) => {\n  for (let i = 0; i < mapHeight; i++) {\n    for (let j = 0; j < mapWidth; j++) {\n      if (i >= origin.y && i <= origin.y + (height - 1) && j >= origin.x && j <= origin.x + (width - 1)) {\n        const key = `${j},${i}`\n        let currentFrame = 0;\n\n        if (Constant.TILE_KEY[type].animation) {\n          currentFrame = Helper.getRandomInt(0, Constant.TILE_KEY[type].animation.length)\n        }\n\n        map[key] = {\n          type,\n          currentFrame,\n          entities: [],\n        };\n      }\n    }\n  }\n}","import * as Helper from '../../helper';\n\nexport const generate = (map, offsetX, offsetY, unitCount = 12, unitSize = 4, borderWidth = 1) => {\n  let data = {};\n  // const floorPlan = createFloorPlan(unitCount);\n  // let maxX = 0; \n  // let minX = 0; \n  // let maxY = 0; \n  // let minY = 0; \n  // floorPlan.forEach((pos) => {\n  //   if (pos.x > maxX) maxX = pos.x;\n  //   if (pos.x < minX) minX = pos.x;\n  //   if (pos.y > maxY) maxY = pos.y;\n  //   if (pos.y < minY) minY = pos.y;\n  // })\n  // const floorPlanWidth = Math.abs(maxX) + Math.abs(minX) + 1;\n  // const floorPlanHeight = Math.abs(maxY) + Math.abs(minY) + 1;\n  // console.log(floorPlanWidth);\n  // console.log(floorPlanHeight);\n  \n  let floorPlan = createFloorPlan();\n  let kill = 1000\n  while (floorPlan.length < unitCount + 1) {\n    \n    let unit = createRoomInFloorPlan(floorPlan);\n    if (unit) {\n      const unitPosition = getUnitPosition(unit, offsetX, offsetY, unitSize);\n      let didCreate = createUnit(map, unitPosition, unitSize, 0);\n      if (didCreate) floorPlan.push(unit);\n    }\n    \n    kill -= 1;\n    if (kill <= 0) break;\n  }\n  \n  removeInnerWalls(map)\n  addInnerWalls(map, floorPlan.length)\n  return data;\n}\n\nconst createFloorPlan = () => {\n  // create origin\n  let floorPlan = [{x: 0, y: 0}];\n  return floorPlan\n}\n\nconst createRoomInFloorPlan = (floorPlan) => {\n  // randomly choose previously created unit\n  // let origin = floorPlan[floorPlan.length - 1];\n  let origin = Helper.getRandomInArray(floorPlan);\n  // randomly choose neighboring point\n  let newUnit = getNeighboringUnit(origin);\n  let unitAlreadyExists = unitExists(newUnit, floorPlan)\n  let kill = 1000\n  while (unitAlreadyExists) {\n    origin = Helper.getRandomInArray(floorPlan.filter((pnt) => !Helper.coordsAreEqual(pnt, origin)));\n    newUnit = getNeighboringUnit(origin);\n    unitAlreadyExists = unitExists(newUnit, floorPlan)\n    kill -= 1;\n    if (kill <= 0) {\n      unitAlreadyExists = false;\n      newUnit = false;\n      break;\n    }\n  }\n  \n  return newUnit\n}\n\nconst getNeighboringUnit = (origin) => Helper.getRandomInArray(getNeighboringPoints(origin))\nconst unitExists = (newUnit, existingUnits) => existingUnits.filter((unit) => unit.x === newUnit.x && unit.y === newUnit.y).length > 0;\nconst getUnitPosition = (floorPlanPos, mapOffsetX, mapOffsetY, unitSize) => {\n  return {\n    x: floorPlanPos.x + mapOffsetX + (unitSize * floorPlanPos.x),\n    y: floorPlanPos.y + mapOffsetY + (unitSize * floorPlanPos.y),\n  }\n}\n\nconst getNeighboringPoints = (origin, eightWay = false) => {\n  let neighbors = [\n    {\n      x: origin.x,\n      y: origin.y + 1\n    },\n    {\n      x: origin.x + 1,\n      y: origin.y\n    },\n    {\n      x: origin.x,\n      y: origin.y - 1\n    },\n    {\n      x: origin.x - 1,\n      y: origin.y\n    },\n  ]\n\n  if (eightWay) {\n    neighbors = neighbors.concat([\n      {\n        x: origin.x + 1,\n        y: origin.y + 1\n      },\n      {\n        x: origin.x + 1,\n        y: origin.y - 1\n      },\n      {\n        x: origin.x - 1,\n        y: origin.y - 1\n      },\n      {\n        x: origin.x - 1,\n        y: origin.y + 1\n      },\n    ])\n  }\n  return neighbors;\n}\n\nconst createUnit = (map, position, size, border) => {\n  // const length = size; // this will leave a border\n  // const length = size + 1; // this will close the gap\n  const length = size + 1 - border; // this will calculate using border\n\n  // prevent units from hitting map edge\n  let unitCollidesWithEdge = false;\n  for (let i = 0; i < length; i++) {\n    for (let j = 0; j < length; j++) {\n      const newPosition = {\n        x: position.x + i,\n        y: position.y + j,\n      }\n      let tile = map[Helper.coordsToString(newPosition)];\n      if (!tile) unitCollidesWithEdge = true;\n    }\n  }\n\n  if (!unitCollidesWithEdge) {\n    for (let i = 0; i < length; i++) {\n      for (let j = 0; j < length; j++) {\n        const newPosition = {\n          x: position.x + i,\n          y: position.y + j,\n        }\n        let type = 'FLOOR';\n        if (i === 0 || i === (length - 1)) type = 'WALL';\n        if (j === 0 || j === (length - 1)) type = 'WALL';\n        let tile = map[Helper.coordsToString(newPosition)];\n        if (tile) tile.type = type;\n      }\n    }\n  }\n\n  return !unitCollidesWithEdge;\n}\n\nconst removeInnerWalls = (map) => {\n  let walls = Object.keys(map).filter((key) => {\n    return map[key].type === 'WALL';\n  })\n\n  let innerWalls = walls.filter((key) => {\n    const coordArray = key.split(',').map((i) => parseInt(i));\n    const coords = {\n      x: coordArray[0],\n      y: coordArray[1],\n    }\n    const neighbors = getNeighboringPoints(coords, true).filter((point) => {\n      let t = map[Helper.coordsToString(point)];\n      if (t) {\n        if (['WALL', 'FLOOR'].includes(t.type)) {\n          return true;\n        }\n      }\n      return false\n    });\n    \n    if (neighbors.length === 8) {\n      return true;\n    }\n    return false;\n  })\n\n  innerWalls.forEach((key) => {\n    map[key].type = 'FLOOR';\n  })\n}\n\nconst addInnerWalls = (map, count = 2) => {\n  // Finding corners\n  let corners = Object.keys(map).filter((key) => {\n    const tile = map[key];\n    if (tile.type !== 'WALL') return false;\n    const coordArray = key.split(',').map((i) => parseInt(i));\n    const coords = {\n      x: coordArray[0],\n      y: coordArray[1],\n    }\n    const neighbors = getNeighboringPoints(coords, false).filter((point) => {\n      let t = map[Helper.coordsToString(point)];\n      if (t) {\n        if (['GROUND'].includes(t.type)) {\n          return true;\n        }\n      }\n      return false\n    });\n    if (neighbors.length === 2) return true;\n    return false\n  })\n\n  // building walls\n  let wallCount = 0;\n  while (wallCount < count) {\n  // while (wallCount < corners.length) {\n  // for (let i = 0; i < count; i++) {\n    const corner = Helper.getRandomInArray(corners);\n    const coordArray = corner.split(',').map((i) => parseInt(i));\n    const coords = {\n      x: coordArray[0],\n      y: coordArray[1],\n    }\n    const wallNeighbors = getNeighboringPoints(coords, false).filter((point) => {\n      let t = map[Helper.coordsToString(point)];\n      if (t) {\n        if (['WALL'].includes(t.type)) {\n          return true;\n        }\n      }\n      return false\n    });\n    const selectedWallPos = Helper.getRandomInArray(wallNeighbors)\n    if (!selectedWallPos) continue;\n    const direction = {\n      x: Math.sign(selectedWallPos.x - coords.x),\n      y: Math.sign(selectedWallPos.y - coords.y)\n    };\n\n    let kill = 100;\n    let build = true;\n    let currentPosition = {...coords}\n    let previousFloorPositions = [];\n    while (build) {\n      currentPosition.x += direction.x;\n      currentPosition.y += direction.y;\n      let tile = map[Helper.coordsToString(currentPosition)];\n      if (!tile) break;\n      // if (tile.type === 'WALL') continue;\n      if (tile.type === 'FLOOR') {\n        tile.type = 'WALL';\n        previousFloorPositions.push({...currentPosition})\n        // console.log(previousFloorPositions.length);\n        \n      } else if (tile.type === 'GROUND' || (tile.type === 'WALL' && previousFloorPositions.length)) {\n        // go back two and make FLOOR\n        let prevPos = {\n          x: currentPosition.x - (direction.x * 2),\n          y: currentPosition.y - (direction.y * 2),\n        }\n        map[Helper.coordsToString(prevPos)].type = 'DOOR';\n        // map[Helper.coordsToString(prevPos)].type = 'FLOOR';\n        // go back one more and make FLOOR\n        prevPos = {\n          x: currentPosition.x - (direction.x * 3),\n          y: currentPosition.y - (direction.y * 3),\n        }\n        map[Helper.coordsToString(prevPos)].type = 'DOOR';\n        // map[Helper.coordsToString(prevPos)].type = 'FLOOR';\n        if (previousFloorPositions.length <= 0) {\n          //   // we need to create another wall, this one is bust\n          if (count <= 100) count += 1\n        }\n        break;\n      }\n      kill -= 1;\n      if (kill <= 0) build = false;\n    }\n    wallCount += 1;\n  }\n}","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport * as Item from '../items';\nimport * as MapHelper from '../Maps/helper';\nimport { generate as generateBuilding } from '../Maps/generator';\nimport { FireSpread, Speaker, Debris } from '../Entities/index';\nimport { MESSAGE_TYPE } from '../message';\nimport { Mode } from './default';\nimport SOUNDS from '../sounds';\n\nexport class Flume extends Mode {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.infoHeader = 'Save all of the citizens from the burning keep and get them to the safe zone!'\n    this.data = {\n      level: 1,\n      highestLevel: null,\n      fireIntensity: 1, // increase this number to increase fire spread\n      npcCount: 1,\n      debrisCount: 4,\n      mediumDebrisCount: 3,\n      heavyDebrisCount: 4,\n      smallGasCanCount: 3,\n      mediumGasCanCount: 0,\n      largeGasCanCount: 1,\n      turnCount: 0,\n    };\n  }\n\n  initialize () {\n    super.initialize();\n    this.game.createEmptyLevel();\n    this.game.initializeMapTiles();\n    const offsetX = Math.floor(this.game.mapWidth / 2)\n    const offsetY = Math.floor(this.game.mapHeight / 2)\n    generateBuilding(this.game.map, offsetX, offsetY);\n    MapHelper.addTileZone(\n      { x: 0, y: 0 },\n      3,\n      3,\n      'SAFE',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    this.placeInitialItems();\n    this.placePlayersInSafeZone();\n\n    let array = Object.keys(this.game.map).filter((key) => this.game.map[key].type === 'FLOOR')\n    for (let index = 0; index < this.data.debrisCount; index++) {\n      let pos = Helper.getRandomInArray(array);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addDebris({ x: posXY[0], y: posXY[1] });\n    }\n    for (let index = 0; index < this.data.mediumDebrisCount; index++) {\n      let pos = Helper.getRandomInArray(array);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addDebris({ x: posXY[0], y: posXY[1] }, 'Medium Sized Debris', 'm', 10, 0);\n    }\n    for (let index = 0; index < this.data.heavyDebrisCount; index++) {\n      let pos = Helper.getRandomInArray(array);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addDebris({ x: posXY[0], y: posXY[1] }, 'Heavy Sized Debris', 'H', 10, 0, false, false);\n    }\n    for (let index = 0; index < this.data.smallGasCanCount; index++) {\n      let pos = Helper.getRandomInArray(array);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addDebris({ x: posXY[0], y: posXY[1] }, 'gas can', 'Xs', 1, 1, true, true, Constant.THEMES.SOLARIZED.orange);\n    }\n    for (let index = 0; index < this.data.mediumCanCount; index++) {\n      let pos = Helper.getRandomInArray(array);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addDebris({ x: posXY[0], y: posXY[1] }, 'gas can', 'X', 1, 3, true, true, Constant.THEMES.SOLARIZED.orange);\n    }\n    for (let index = 0; index < this.data.largeGasCanCount; index++) {\n      let pos = Helper.getRandomInArray(array);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addDebris({ x: posXY[0], y: posXY[1] }, 'gas can', 'XL', 1, 10, true, true, Constant.THEMES.SOLARIZED.orange);\n    }\n    for (let index = 0; index < this.data.fireIntensity; index++) {\n      let pos = Helper.getRandomInArray(array);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addFire({ x: posXY[0], y: posXY[1] });\n    }\n    for (let index = 0; index < this.data.npcCount; index++) {\n      let pos = Helper.getRandomInArray(array);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addNPC({ x: posXY[0], y: posXY[1] });\n    }\n\n    // ui\n    this.updateUI()\n\n    // sounds\n    if (!SOUNDS.fire_1.playing()) SOUNDS.fire_1.play();    \n  }\n\n  checkRemoveSafeFloors () {\n    const currentActor = this.game.engine.actors[this.game.engine.currentActor];\n    if (currentActor.name !== Constant.PLAYER_NAME) return;\n\n    this.data.turnCount += 1;\n    if (this.data.turnCount > this.getSaveCountRequirement() * 50) {\n      Object.keys(this.game.map).filter((key) => this.game.map[key].type == 'SAFE_FLOOR').forEach((key) => {\n        this.game.map[key].type = 'FLOOR';\n      });\n\n    }\n  }\n\n  update () {\n    super.update();\n    this.propogateFire();\n    this.burnEntities();\n    this.checkRemoveSafeFloors();\n    this.updateUI()\n    if (this.hasLost()) {\n      this.reset();\n      this.game.initializeGameData();\n    }\n    // triggerd once all npcs are saved\n    if (this.hasWon()) {\n      this.nextLevel();\n      this.increaseIntensity()\n      this.game.initializeGameData();\n    }\n  }\n\n  updateUI () {\n    this.createOrUpdateInfoBlock('levelProgress', { text: `${this.countNpcSafe()} of  ${this.getSaveCountRequirement()} are safe!` })\n  }\n  \n  //Extras\n\n  setLevel (level) {\n    this.data.level = level;\n    this.data.turnCount = 0;\n  }\n\n  nextLevel () {\n    this.setLevel(this.data.level + 1);\n  }\n\n  reset () {\n    this.resetIntensity();\n    this.setLevel(1);\n    this.initialize();\n  }\n\n  increaseIntensity () {\n    switch (this.data.level) {\n\n      case 2:\n        this.data.fireIntensity = 2;\n        this.data.npcCount = 1;\n        this.data.debrisCount = 4;\n        this.data.mediumDebrisCount = 4;\n        this.data.heavyDebrisCount = 1\n        this.data.smallGasCanCount = 1;\n        this.data.mediumGasCanCount = 1;\n        this.data.largeGasCanCount = 1;\n        break;\n      case 3:\n        this.data.fireIntensity = 3;\n        this.data.npcCount = 2;\n        this.data.debrisCount = 50;\n        this.data.mediumDebrisCount = 4;\n        this.data.heavyDebrisCount = 1\n        this.data.smallGasCanCount = 1;\n        this.data.mediumGasCanCount = 2;\n        this.data.largeGasCanCount = 1;\n        break;\n      case 4:\n        this.data.fireIntensity = 4;\n        this.data.npcCount = 2;\n        this.data.debrisCount = 6;\n        this.data.mediumDebrisCount = 4;\n        this.data.heavyDebrisCount = 1\n        this.data.smallGasCanCount = 3;\n        this.data.mediumGasCanCount = 2;\n        this.data.largeGasCanCount = 1;\n        break;\n      case 5:\n        this.data.fireIntensity = 5;\n        this.data.npcCount = 3;\n        this.data.debrisCount = 6;\n        this.data.mediumDebrisCount = 4;\n        this.data.heavyDebrisCount = 1\n        this.data.smallGasCanCount = 3;\n        this.data.mediumGasCanCount = 1;\n        this.data.largeGasCanCount = 1;\n        break;\n      case 6:\n        this.data.fireIntensity = 4;\n        this.data.npcCount = 3;\n        this.data.debrisCount = 10;\n        this.data.mediumDebrisCount = 4;\n        this.data.heavyDebrisCount = 1\n        this.data.smallGasCanCount = 3;\n        this.data.mediumGasCanCount = 1;\n        this.data.largeGasCanCount = 1;\n        break;\n      case 7:\n        this.data.fireIntensity = 1;\n        this.data.npcCount = 3;\n        this.data.debrisCount = 80;\n        this.data.mediumDebrisCount = 4;\n        this.data.heavyDebrisCount = 1\n        this.data.smallGasCanCount = 25;\n        this.data.mediumGasCanCount = 1;\n        this.data.largeGasCanCount = 1;\n        break;\n      case 8:\n        this.data.fireIntensity = 3;\n        this.data.npcCount = 3;\n        this.data.debrisCount = 20;\n        this.data.mediumDebrisCount = 4;\n        this.data.heavyDebrisCount = 1\n        this.data.smallGasCanCount = 6;\n        this.data.mediumGasCanCount = 1;\n        this.data.largeGasCanCount = 1;\n        break;\n      case 9:\n        this.game.toWin();\n        break;\n      default:\n        this.data.fireIntensity = 3;\n        this.data.npcCount = 3;\n        this.data.debrisCount = 20;\n        this.data.mediumDebrisCount = 4;\n        this.data.heavyDebrisCount = 1\n        this.data.gasCanCount = 5;\n        break;\n    }\n  }\n\n  resetIntensity () {\n    this.data.fireIntensity = 1;\n    this.data.npcCount = 1;\n    this.data.debrisCount = 4;\n  }\n\n  countNpcSafe () {\n    const helpless = this.game.engine.actors.filter((actor) => {\n      if (actor.entityTypes.includes('HELPLESS')) {\n        const tile = this.game.map[Helper.coordsToString(actor.pos)];\n        if (tile.type === 'SAFE') {\n          if (!actor.saved) actor.save();\n          return true;\n        }\n      }\n      return false\n    });\n\n    return helpless.length;\n  }\n\n  getSaveCountRequirement () {\n    const minimum = Math.ceil(this.data.npcCount * 0.66);\n    return Math.max(1, minimum);\n  }\n\n  hasWon () {\n    return this.countNpcSafe() >= this.getSaveCountRequirement();\n  }\n\n  hasLost () {\n    const helpless = this.game.engine.actors.filter((actor) => actor.entityTypes.includes('HELPLESS'));\n    if (helpless.length < this.getSaveCountRequirement()) {\n      SOUNDS.lose.play();\n      this.game.toLose();\n      return true;\n    }\n    return false;\n  }\n\n  addDebris (pos, name = 'box', character = '%', durability = 5, explosivity = 0, pushable = true, draggable = true, background = Constant.THEMES.SOLARIZED.base01) {\n    let sprite = Helper.getRandomInArray(['', '', '', '', '', '']);\n    switch (character) {\n      case '%':\n        sprite = Helper.getRandomInArray(['', '']);\n        break;\n      case 'm':\n        sprite = Helper.getRandomInArray(['', '']);\n        break;\n      case 'H':\n        sprite = Helper.getRandomInArray(['', '']);\n        break;\n      case 'Xs':\n        sprite = ''\n        break;\n      case 'X':\n        sprite = ''\n        break;\n      case 'XL':\n        sprite = ''\n        break;\n      default:\n        sprite = '';\n        break;\n    }\n\n    let box = new Debris({\n      pos,\n      renderer: {\n        character,\n        sprite,\n        color: Constant.THEMES.SOLARIZED.base2,\n        background,\n      },\n      name,\n      game: this.game,\n      durability,\n      explosivity,\n      flammability: 0,\n      draggable,\n      pushable,\n    })\n\n    this.game.placeActorOnMap(box)\n    this.game.draw();\n  }\n\n  addNPC (pos) {\n    // create new entity and place\n    let entity = new Speaker({\n      name: Constant.NPC_NAME,\n      // messages: SOLANGE.lyrics,\n      messages: ['help!', 'ahh!', 'It\\'s getting hot in hurr.'],\n      messageType: MESSAGE_TYPE.ACTION,\n      pos,\n      game: this.game,\n      renderer: {\n        character: 'C',\n        sprite: '',\n        color: Constant.THEMES.SOLARIZED.base3,\n        background: Constant.THEMES.SOLARIZED.violet,\n      },\n      durability: 2,\n    })\n\n    if (this.game.placeActorOnMap(entity)) {\n      const tile = this.game.map[Helper.coordsToString(entity.pos)];\n      tile.type = 'SAFE_FLOOR';\n      this.game.engine.addActor(entity);\n      this.game.draw();\n    };\n  }\n\n  addFire (pos) {\n    // create new fire actor and place\n    let fire = new FireSpread({\n      name: 'Pyro',\n      pos,\n      game: this.game,\n      renderer: {\n        character: '*',\n        sprite: '',\n        color: Constant.THEMES.SOLARIZED.base3,\n        background: Constant.THEMES.SOLARIZED.red,\n      },\n      timeToSpread: 1,\n      spreadCount: 1,\n      durability: 1,\n      attackDamage: 2,\n      speed: 100,\n    })\n\n    if (this.game.placeActorOnMap(fire)) {\n      this.game.engine.addActor(fire);\n      this.game.draw();\n    };\n  }\n\n  propogateFire () {\n    const fires = this.game.engine.actors.filter((actor) => actor.name === 'Pyro')\n    if (fires.length < this.data.fireIntensity) {\n      // find burnt tile\n      const keys = Object.keys(this.game.map).filter((key) => this.game.map[key].type == 'BURNT');\n      const key = Helper.getRandomInArray(keys);\n      if (key) {\n        const position = {\n          x: parseInt(key.split(',')[0]),\n          y: parseInt(key.split(',')[1]),\n        }\n        this.addFire(position)\n      }\n    }\n  }\n\n  burnEntities () {\n    // burn all entiies on burning tiles\n    const coordinates = Object.keys(this.game.map).filter((key) => this.game.map[key].type === 'BURNT');\n    const entities = coordinates.reduce((acc, curr) => acc.concat(this.game.map[curr].entities), []);\n    entities.forEach((ent) => {\n      if (ent.entityTypes.includes('BURNABLE')) {\n        const burned = ent.burn();\n        if (burned) this.game.addMessage(`${ent.name} is burned.`, MESSAGE_TYPE.DANGER);\n        if (ent.willResetCanBurn) ent.resetCanBurn();\n      }\n    })\n  }\n\n  placeInitialItems () {\n    let objects = [\n      Item.axe(this.game.engine),\n      Item.waterGun(this.game.engine),\n      Item.fireJacket(this.game.engine),\n    ];\n\n    const keys = Object.keys(this.game.map).filter((key) => this.game.map[key].type == 'SAFE');\n\n    objects.forEach((item) => {\n      const key = keys.pop();\n      if (key) {\n        const position = {\n          x: parseInt(key.split(',')[0]),\n          y: parseInt(key.split(',')[1]),\n        }\n        item.pos = position;\n        let tile = this.game.map[key];\n        if (tile) {\n          tile.entities.push(item);\n        }\n      }\n    })\n  }\n\n  placePlayersInSafeZone () {\n    let players = this.game.engine.actors.filter((actor) => actor.entityTypes.includes('PLAYING'))\n    const keys = Object.keys(this.game.map).filter((key) => this.game.map[key].type == 'SAFE');\n    players.forEach((player) => {\n      const key = keys.shift();\n      if (key) {\n        const position = {\n          x: parseInt(key.split(',')[0]),\n          y: parseInt(key.split(',')[1]),\n        }\n        player.pos = position;\n        let tile = this.game.map[key];\n        if (tile) {\n          tile.entities.push(player);\n        }\n      }\n    })\n  }\n\n}\n","import { Mode } from './default'\nimport { Flume } from './flume'\nimport { Castle } from './castle'\nimport { Chunin } from './chunin'\n\nexport default {\n  Mode,\n  Flume,\n  Castle,\n  Chunin,\n}","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport * as Item from '../items';\nimport * as MapHelper from '../Maps/helper';\nimport { generate as generateBuilding } from '../Maps/generator';\nimport { FireSpread, Speaker, Debris, Bandit, RangedBandit } from '../Entities/index';\nimport { MESSAGE_TYPE } from '../message';\nimport { Mode } from './default';\nimport SOUNDS from '../sounds';\nimport Konva from 'konva';\n\nconst MAP_DATA = require('../Maps/castle.json');\n\nexport class Castle extends Mode {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.data = {\n      level: 1,\n      highestLevel: null,\n      fireIntensity: 0, // increase this number to increase fire spread\n      npcCount: 1,\n      creatureCount: 1,\n      turnCount: 0,\n    };\n  }\n\n  initialize () {\n    super.initialize();\n    this.game.createEmptyLevel();\n    this.game.initializeMapTiles();\n    // this.game.createCustomLevel(MAP_DATA);\n    \n    this.setWaveData(this.data.level);\n    const offsetX = Math.floor(this.game.mapWidth / 2)\n    const offsetY = Math.floor(this.game.mapHeight / 2)\n    // generateBuilding(this.game.map, 2, 2, 1, 18);\n    // generateBuilding(this.game.map, 10, 10, 2, 4);\n    // generateBuilding(this.game.map, offsetX, offsetY, 2, 4);\n    let padding = 3;\n    MapHelper.addTileZone(\n      { x: padding, y: padding },\n      this.game.mapHeight - (padding * 2),\n      this.game.mapWidth - (padding * 2),\n      'WALL',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    padding = 4\n    MapHelper.addTileZone(\n      { x: padding, y: padding },\n      this.game.mapHeight - (padding * 2),\n      this.game.mapWidth - (padding * 2),\n      'FLOOR',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    padding = 5;\n    MapHelper.addTileZone(\n      { x: padding, y: padding },\n      this.game.mapHeight - (padding * 2),\n      this.game.mapWidth - (padding * 2),\n      'WALL',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    padding = 6\n    MapHelper.addTileZone(\n      { x: padding, y: padding },\n      this.game.mapHeight - (padding * 2),\n      this.game.mapWidth - (padding * 2),\n      'GROUND',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n\n    MapHelper.addTileZone(\n      { x: 31, y: 9 },\n      4,\n      4,\n      'SAFE',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    generateBuilding(this.game.map, 10, 10, 2, 4);\n\n\n    this.placeInitialItems();\n    this.placePlayersInSafeZone();\n    let floorTiles = Object.keys(this.game.map).filter((key) => this.game.map[key].type === 'FLOOR')\n    for (let index = 0; index < this.data.npcCount; index++) {\n      let pos = Helper.getRandomInArray(floorTiles);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addNPC({ x: posXY[0], y: posXY[1] });\n    }\n    let groundTiles = Object.keys(this.game.map).filter((key) => this.game.map[key].type === 'GROUND')\n    for (let index = 0; index < this.data.creatureCount; index++) {\n      let pos = Helper.getRandomInArray(groundTiles);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this.addEnemy({ x: posXY[0], y: posXY[1] });\n    }\n  }\n\n  update () {\n    super.update();\n    this.propogateFire();\n    this.burnEntities();\n    if (this.hasLost()) {\n      this.reset();\n      this.game.initializeGameData();\n    }\n    // triggerd once all npcs are saved\n    if (this.hasWon()) {\n      this.nextLevel();\n      this.beginNextWave();\n      this.game.initializeGameData();\n    }\n  }\n  \n  //Extras\n  setLevel (level) {\n    this.data.level = level;\n    this.data.turnCount = 0;\n  }\n\n  nextLevel () {\n    this.setLevel(this.data.level + 1);\n  }\n\n  reset () {\n    this.setLevel(1);\n    this.initialize();\n  }\n\n  setWaveData (level) {\n    switch (level) {\n      case 1:\n        this.data.creatureCount = 0;\n        this.data.npcCount = 1;\n        break;\n      case 2:\n        this.data.creatureCount = 5;\n        this.data.npcCount = 1;\n        break;\n      case 3:\n        this.data.creatureCount = 10;\n        this.data.npcCount = 1;\n        break;\n      default:\n        this.data.creatureCount = 20;\n        this.data.npcCount = 1;\n        break;\n    }\n  }\n\n  countNpcSafe () {\n    const helpless = this.game.engine.actors.filter((actor) => {\n      if (actor.entityTypes.includes('HELPLESS')) {\n        const tile = this.game.map[Helper.coordsToString(actor.pos)];\n        if (tile.type === 'SAFE') {\n          if (!actor.saved) actor.save();\n          return true;\n        }\n      }\n      return false\n    });\n\n    return helpless.length;\n  }\n\n  getSaveCountRequirement () {\n    const minimum = Math.ceil(this.data.npcCount * 0.66);\n    return Math.max(1, minimum);\n  }\n\n  hasWon () {\n    return this.countNpcSafe() >= this.getSaveCountRequirement();\n  }\n\n  hasLost () {\n    const helpless = this.game.engine.actors.filter((actor) => actor.entityTypes.includes('HELPLESS'));\n    if (helpless.length < this.getSaveCountRequirement()) {\n      SOUNDS.lose.play();\n      this.game.toLose();\n      return true;\n    }\n    return false;\n  }\n\n  addDebris (pos, name = 'box', character = '%', durability = 5, explosivity = 0, pushable = true, draggable = true, background = Constant.THEMES.SOLARIZED.base01) {\n    let sprite = Helper.getRandomInArray(['', '', '', '', '', '']);\n    switch (character) {\n      case '%':\n        sprite = Helper.getRandomInArray(['', '']);\n        break;\n      case 'm':\n        sprite = Helper.getRandomInArray(['', '']);\n        break;\n      case 'H':\n        sprite = Helper.getRandomInArray(['', '']);\n        break;\n      case 'Xs':\n        sprite = ''\n        break;\n      case 'X':\n        sprite = ''\n        break;\n      case 'XL':\n        sprite = ''\n        break;\n      default:\n        sprite = '';\n        break;\n    }\n\n    let box = new Debris({\n      pos,\n      renderer: {\n        character,\n        sprite,\n        color: Constant.THEMES.SOLARIZED.base2,\n        background,\n      },\n      name,\n      game: this.game,\n      durability,\n      explosivity,\n      flammability: 0,\n      draggable,\n      pushable,\n    })\n\n    this.game.placeActorOnMap(box)\n    // this.game.draw();\n  }\n\n  addNPC (pos) {\n    // create new entity and place\n    let entity = new Speaker({\n      name: Constant.NPC_NAME,\n      // messages: SOLANGE.lyrics,\n      messages: ['help!', 'ahh!', 'It\\'s getting hot in hurr.'],\n      messageType: MESSAGE_TYPE.ACTION,\n      pos,\n      game: this.game,\n      renderer: {\n        character: 'C',\n        sprite: '',\n        color: Constant.THEMES.SOLARIZED.base3,\n        background: Constant.THEMES.SOLARIZED.violet,\n      },\n      durability: 2,\n    })\n\n    if (this.game.placeActorOnMap(entity)) {\n      const tile = this.game.map[Helper.coordsToString(entity.pos)];\n      tile.type = 'SAFE_FLOOR';\n      this.game.engine.addActor(entity);\n      // this.game.draw();\n    };\n  }\n\n  addFire (pos) {\n    // create new fire actor and place\n    let fire = new FireSpread({\n      name: 'Pyro',\n      pos,\n      game: this.game,\n      renderer: {\n        character: '*',\n        sprite: '',\n        color: Constant.THEMES.SOLARIZED.base3,\n        background: Constant.THEMES.SOLARIZED.red,\n      },\n      timeToSpread: 1,\n      spreadCount: 1,\n      durability: 1,\n      attackDamage: 2,\n      speed: 100,\n    })\n\n    if (this.game.placeActorOnMap(fire)) {\n      this.game.engine.addActor(fire);\n      // this.game.draw();\n    };\n  }\n\n  getBanditStats () {\n    let banditLevels = [\n      {\n        name: 'Slingshot',\n        renderer: {\n          character: Helper.getRandomInArray(['r']),\n          color: '#ced5dd',\n          background: '',\n        },\n        durability: 1,\n        attackDamage: 1,\n        speed: 100,\n        entityClass: RangedBandit\n      },\n      {\n        name: 'Buckshot',\n        renderer: {\n          character: Helper.getRandomInArray(['r']),\n          color: '#3fc072',\n          background: '',\n        },\n        durability: 2,\n        attackDamage: 1,\n        speed: 200,\n        entityClass: RangedBandit\n      },\n      {\n        name: 'Ross',\n        renderer: {\n          character: Helper.getRandomInArray(['b']),\n          color: '#ced5dd',\n          background: '',\n        },\n        durability: 1,\n        attackDamage: 1,\n        speed: 100,\n        entityClass: Bandit\n      },\n      {\n        name: 'Kevin',\n        renderer: {\n          character: Helper.getRandomInArray(['b']),\n          color: '#3fc072',\n          background: '',\n        },\n        durability: 2,\n        attackDamage: 1,\n        speed: 100,\n        entityClass: Bandit\n      },\n      {\n        name: 'Jacob',\n        renderer: {\n          character: Helper.getRandomInArray(['b']),\n          color: '#67a1d7',\n          background: '',\n        },\n        durability: 3,\n        attackDamage: 1,\n        speed: 100,\n        entityClass: Bandit\n      },\n      {\n        name: 'Jarod',\n        renderer: {\n          character: Helper.getRandomInArray(['b']),\n          color: '#e16264',\n          background: '',\n        },\n        durability: 1,\n        attackDamage: 5,\n        speed: 300,\n        entityClass: Bandit\n      },\n      {\n        name: 'Bigii',\n        renderer: {\n          character: Helper.getRandomInArray(['b']),\n          color: '#9f62e1',\n          background: '',\n        },\n        durability: 15,\n        attackDamage: 10,\n        speed: 100,\n        entityClass: Bandit\n      },\n    ]\n    return Helper.getRandomInArray(banditLevels);\n  }\n\n  addEnemy (pos) {\n    let players = this.game.engine.actors.filter((actor) => actor.entityTypes.includes('PLAYING'))\n    let targetEntity = players[0]\n    const banditStats = this.getBanditStats();\n    let entity = new banditStats.entityClass({\n      targetEntity,\n      pos,\n      renderer: banditStats.renderer,\n      name: banditStats.name,\n      game: this.game,\n      actions: [],\n      attackDamage: banditStats.attackDamage,\n      durability: banditStats.durability,\n      speed: banditStats.speed,\n      // directional projectile destruction breaks engine\n      getProjectile: ({ pos, targetPos, direction, range }) => Item.directionalKunai(this.game.engine, { ...pos }, direction, range)\n      // getProjectile: ({ pos, targetPos, direction, range }) => Item.kunai(game.engine, { ...pos }, { ...targetPos })\n    })\n    if (this.game.placeActorOnMap(entity)) {\n      this.game.engine.addActor(entity);\n      // this.game.draw();\n    };\n  }\n\n  propogateFire () {\n    const fires = this.game.engine.actors.filter((actor) => actor.name === 'Pyro')\n    if (fires.length < this.data.fireIntensity) {\n      // find burnt tile\n      const keys = Object.keys(this.game.map).filter((key) => this.game.map[key].type == 'BURNT');\n      const key = Helper.getRandomInArray(keys);\n      if (key) {\n        const position = {\n          x: parseInt(key.split(',')[0]),\n          y: parseInt(key.split(',')[1]),\n        }\n        this.addFire(position)\n      }\n    }\n  }\n\n  burnEntities () {\n    // burn all entiies on burning tiles\n    const coordinates = Object.keys(this.game.map).filter((key) => this.game.map[key].type === 'BURNT');\n    const entities = coordinates.reduce((acc, curr) => acc.concat(this.game.map[curr].entities), []);\n    entities.forEach((ent) => {\n      if (ent.entityTypes.includes('BURNABLE')) {\n        const burned = ent.burn();\n        if (burned) this.game.addMessage(`${ent.name} is burned.`, MESSAGE_TYPE.DANGER);\n        if (ent.willResetCanBurn) ent.resetCanBurn();\n      }\n    })\n  }\n\n  placeInitialItems () {\n    let objects = [\n      Item.axe(this.game.engine),\n      Item.waterGun(this.game.engine),\n      Item.fireJacket(this.game.engine),\n    ];\n\n    const keys = Object.keys(this.game.map).filter((key) => this.game.map[key].type == 'SAFE');\n\n    objects.forEach((item) => {\n      const key = keys.pop();\n      if (key) {\n        const position = {\n          x: parseInt(key.split(',')[0]),\n          y: parseInt(key.split(',')[1]),\n        }\n        item.pos = position;\n        let tile = this.game.map[key];\n        if (tile) {\n          tile.entities.push(item);\n        }\n      }\n    })\n  }\n\n  placePlayersInSafeZone () {\n    let players = this.game.engine.actors.filter((actor) => actor.entityTypes.includes('PLAYING'))\n    const keys = Object.keys(this.game.map).filter((key) => this.game.map[key].type == 'SAFE');\n    players.forEach((player) => {\n      const key = keys.shift();\n      if (key) {\n        const position = {\n          x: parseInt(key.split(',')[0]),\n          y: parseInt(key.split(',')[1]),\n        }\n        player.pos = position;\n        let tile = this.game.map[key];\n        if (tile) {\n          tile.entities.push(player);\n        }\n      }\n    })\n  }\n\n}\n","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport * as Item from '../items';\nimport * as MapHelper from '../Maps/helper';\nimport { generate as generateBuilding } from '../Maps/generator';\nimport { Debris, Bandit, RangedBandit } from '../Entities/index';\nimport { MESSAGE_TYPE } from '../message';\nimport { Mode } from './default';\nimport SOUNDS from '../sounds';\nimport * as _ from 'lodash';\n\nexport class Chunin extends Mode {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.data = {\n      level: 1,\n      highestLevel: null,\n      turnCount: 0,\n    };\n    this.dataByLevel = [\n      {\n        enemies: Array(1).fill('Bandit'),\n        // enemies: Array(10).fill('Bandit'),\n      },\n      // {\n      //   enemies: Array(10).fill('Bandit'),\n      // },\n    ]\n  }\n\n  initialize () {\n    super.initialize();\n    this.game.createEmptyLevel();\n    this.game.initializeMapTiles();\n    \n    this.setWaveData();\n    MapHelper.addTileZone(\n      { x: 31, y: 9 },\n      4,\n      4,\n      'SAFE',\n      this.game.map,\n      this.game.mapHeight,\n      this.game.mapWidth,\n    );\n    generateBuilding(this.game.map, 10, 10, 2, 4);\n    generateBuilding(this.game.map, 20, 5, 6, 4);\n\n    this.placePlayersInSafeZone();\n    let groundTiles = Object.keys(this.game.map).filter((key) => this.game.map[key].type === 'GROUND')\n    this.data.enemies.forEach((enemyName) => {\n      let pos = Helper.getRandomInArray(groundTiles);\n      let posXY = pos.split(',').map((coord) => parseInt(coord));\n      this[`add${enemyName}`]({ x: posXY[0], y: posXY[1] });\n    })\n  }\n\n  getPlayers () {\n    return this.game.engine.actors.filter((actor) => actor.entityTypes.includes('PLAYING'))\n  }\n\n  updateUI() {\n    _.each(this.getPlayers(), (player, index) => {\n      const currentBlips = Math.floor(player.energy / 100);\n      const maxBlips = Math.floor(player.speed / 100);\n      const arr = [\n        ...Array(currentBlips).fill(''),\n        ...Array(maxBlips - currentBlips).fill('_'),\n      ];\n      this.createOrUpdateInfoBlock(`playerSpeed${player.id}`, { text: `${player.name} | AP: ${arr.join(' ')}` })\n      // this.createOrUpdateInfoBlock(`playerSpeed`, { text: `AP: ${player.energy}/${player.speed}` })\n    })\n  }\n\n  update () {\n    super.update();\n    // this.updateUI();\n    if (this.hasWon()) {\n      this.game.toWin()\n    }\n    if (this.hasLost()) {\n      SOUNDS.lose.play();\n      this.game.toLose();\n      this.reset();\n      this.game.initializeGameData();\n    }\n    if (this.levelComplete()) {\n      this.nextLevel();\n      this.setWaveData();\n      this.game.initializeGameData();\n    }\n  }\n  \n  //Extras\n  setLevel (level) {\n    this.data.level = level;\n    this.data.turnCount = 0;\n  }\n\n  nextLevel () {\n    this.setLevel(this.data.level + 1);\n  }\n\n  reset () {\n    this.setLevel(1);\n    this.initialize();\n  }\n\n  setWaveData () {\n    const level = this.data.level - 1\n    const nextLevelData = _.get(this.dataByLevel, level, {});\n    this.data = {...this.data, ...nextLevelData}\n  }\n\n  levelComplete () {\n    return this.game.engine.actors.length === 1; \n  }\n\n  hasWon () {\n    return this.data.level > this.dataByLevel.length;\n  }\n\n  hasLost () {\n    let players = this.getPlayers()\n    if (!players.length) return true;\n    else if (players.length) {\n      if (players[0].durability <= 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  addDebris (pos, name = 'box', character = '%', durability = 5, explosivity = 0, pushable = true, draggable = true, background = Constant.THEMES.SOLARIZED.base01) {\n    let sprite = Helper.getRandomInArray(['', '', '', '', '', '']);\n    switch (character) {\n      case '%':\n        sprite = Helper.getRandomInArray(['', '']);\n        break;\n      case 'm':\n        sprite = Helper.getRandomInArray(['', '']);\n        break;\n      case 'H':\n        sprite = Helper.getRandomInArray(['', '']);\n        break;\n      case 'Xs':\n        sprite = ''\n        break;\n      case 'X':\n        sprite = ''\n        break;\n      case 'XL':\n        sprite = ''\n        break;\n      default:\n        sprite = '';\n        break;\n    }\n\n    let box = new Debris({\n      pos,\n      renderer: {\n        character,\n        sprite,\n        color: Constant.THEMES.SOLARIZED.base2,\n        background,\n      },\n      name,\n      game: this.game,\n      durability,\n      explosivity,\n      flammability: 0,\n      draggable,\n      pushable,\n    })\n\n    this.game.placeActorOnMap(box)\n    // this.game.draw();\n  }\n\n  getBanditStats () {\n    let banditLevels = [\n      {\n        name: 'Slingshot',\n        renderer: {\n          character: Helper.getRandomInArray(['r']),\n          color: '#ced5dd',\n          background: '',\n        },\n        durability: 1,\n        attackDamage: 1,\n        speed: 100,\n        entityClass: RangedBandit\n      },\n      {\n        name: 'Buckshot',\n        renderer: {\n          character: Helper.getRandomInArray(['r']),\n          color: '#3fc072',\n          background: '',\n        },\n        durability: 2,\n        attackDamage: 1,\n        speed: 200,\n        entityClass: RangedBandit\n      },\n      {\n        name: 'Ross',\n        renderer: {\n          character: Helper.getRandomInArray(['b']),\n          color: '#ced5dd',\n          background: '',\n        },\n        durability: 1,\n        attackDamage: 1,\n        speed: 100,\n        entityClass: Bandit\n      },\n      {\n        name: 'Kevin',\n        renderer: {\n          character: Helper.getRandomInArray(['b']),\n          color: '#3fc072',\n          background: '',\n        },\n        durability: 2,\n        attackDamage: 1,\n        speed: 100,\n        entityClass: Bandit\n      },\n      {\n        name: 'Jacob',\n        renderer: {\n          character: Helper.getRandomInArray(['b']),\n          color: '#67a1d7',\n          background: '',\n        },\n        durability: 3,\n        attackDamage: 1,\n        speed: 100,\n        entityClass: Bandit\n      },\n      {\n        name: 'Jarod',\n        renderer: {\n          character: Helper.getRandomInArray(['b']),\n          color: '#e16264',\n          background: '',\n        },\n        durability: 1,\n        attackDamage: 5,\n        speed: 300,\n        entityClass: Bandit\n      },\n      {\n        name: 'Bigii',\n        renderer: {\n          character: Helper.getRandomInArray(['b']),\n          color: '#9f62e1',\n          background: '',\n        },\n        durability: 15,\n        attackDamage: 10,\n        speed: 100,\n        entityClass: Bandit\n      },\n    ]\n    return Helper.getRandomInArray(banditLevels);\n  }\n\n  addBandit (pos) {\n    let players = this.getPlayers()\n    let targetEntity = players[0]\n    const banditStats = this.getBanditStats();\n    let entity = new banditStats.entityClass({\n      targetEntity,\n      pos,\n      renderer: banditStats.renderer,\n      name: banditStats.name,\n      game: this.game,\n      actions: [],\n      attackDamage: banditStats.attackDamage,\n      durability: banditStats.durability,\n      speed: banditStats.speed,\n      // directional projectile destruction breaks engine\n      getProjectile: ({ pos, targetPos, direction, range }) => Item.directionalKunai(this.game.engine, { ...pos }, direction, range)\n      // getProjectile: ({ pos, targetPos, direction, range }) => Item.kunai(game.engine, { ...pos }, { ...targetPos })\n    })\n    if (this.game.placeActorOnMap(entity)) {\n      this.game.engine.addActor(entity);\n      // this.game.draw();\n    };\n  }\n\n  placePlayersInSafeZone () {\n    let players = this.getPlayers()\n    const keys = Object.keys(this.game.map).filter((key) => this.game.map[key].type == 'SAFE');\n    players.forEach((player) => {\n      const key = keys.shift();\n      if (key) {\n        const position = {\n          x: parseInt(key.split(',')[0]),\n          y: parseInt(key.split(',')[1]),\n        }\n        player.pos = position;\n        let tile = this.game.map[key];\n        if (tile) {\n          tile.entities.push(player);\n        }\n      }\n    })\n  }\n\n}\n","import React from 'react';\nimport * as ROT from 'rot-js';\nimport * as Constant from './constants';\nimport * as Helper from '../helper';\nimport * as Message from './message';\nimport { Display } from './Display/konvaCustom';\nimport Mode from './Modes/index';\nimport * as _ from 'lodash';\n\n// const MAP_DATA = require('./Maps/castle.json');\n// const SOLANGE = require('./Data/solange.json');\n\nconst MAP_WIDTH = 60;\nconst MAP_HEIGHT = 25;\n\nconst TILE_OFFSET = 0;\n\nconst TILE_WIDTH = 30;\nconst TILE_HEIGHT = TILE_WIDTH;\n\nconst canvasWidth = (MAP_WIDTH * TILE_WIDTH) + TILE_OFFSET;\nconst canvasHeight = (MAP_HEIGHT * TILE_HEIGHT) + TILE_OFFSET;\n\nexport class Game {\n  constructor({\n    engine = null,\n    map = {},\n    entityMap = {},\n    entityDictionary = {},\n    mapInitialized = false,\n    tileMap = {},\n    mapWidth = MAP_WIDTH,\n    mapHeight = MAP_HEIGHT,\n    cameraWidth = MAP_WIDTH,\n    cameraHeight = MAP_HEIGHT,\n    tileWidth = TILE_WIDTH,\n    tileHeight = TILE_HEIGHT,\n    tileOffset = TILE_OFFSET,\n    getSelectedCharacter = () => false,\n    spriteMode = true,\n    tileKey = Constant.TILE_KEY,\n    mode = Mode.Flume,\n    messages = [],\n  }) {\n    this.engine = engine;\n    this.map = map;\n    this.entityMap = entityMap;\n    this.entityDictionary = entityDictionary;\n    this.mapInitialized = mapInitialized;\n    this.tileMap = tileMap;\n    this.mapWidth = mapWidth;\n    this.mapHeight = mapHeight;\n    this.cameraWidth = cameraWidth;\n    this.cameraHeight = cameraHeight;\n    this.tileWidth = tileWidth;\n    this.tileHeight = tileHeight;\n    this.tileOffset = tileOffset;\n    this.display = new Display({\n      containerId: 'display',\n      width: canvasWidth,\n      height: canvasHeight,\n      tileWidth: tileWidth,\n      tileHeight: tileHeight,\n      tileOffset: tileOffset,\n      game: this,\n    });\n    this.spriteMode = spriteMode;\n    this.tileKey = tileKey;\n    this.mode = new mode({game: this});\n    this.messages = messages;\n    this.getSelectedCharacter = getSelectedCharacter;\n  }\n\n  initializeMode () {\n    this.mode.initialize();\n  }\n  \n  updateMode () { // this is run every game turn\n    this.mode.update();\n  }\n\n  randomlyPlaceActorOnMap(actor) {\n    let kill = 0;\n    let placed = false;\n    while (!placed) {\n      let pos = Helper.getRandomPos(this.map).coordinates\n      if (this.canOccupyPosition(pos, actor)) {\n        let tile = this.map[Helper.coordsToString(pos)]\n        actor.pos = { ...pos }\n        tile.entities.push(actor);\n        placed = true;\n      }\n      kill += 1;\n      if (kill >= 100) {\n        placed = true;\n      }\n    }\n    return placed;\n  }\n\n  randomlyPlaceAllActorsOnMap() {\n    this.engine.actors.forEach((actor) => {\n      this.randomlyPlaceActorOnMap(actor);\n    })\n  }\n\n  placeActorsOnMap() {\n    this.engine.actors.forEach((actor) => {\n      let tile = this.map[Helper.coordsToString(actor.pos)]\n      if (tile) {\n        tile.entities.push(actor);\n      } else {\n        console.log(`could not place ${actor.id}: ${actor.name} on map`);\n      }\n    })\n  }\n\n  placeActorOnMap(actor) {\n    let tile = this.map[Helper.coordsToString(actor.pos)]\n    if (tile) {\n      tile.entities.push(actor);\n      return true\n    } else {\n      console.log(`could not place ${actor.id}: ${actor.name} on map`);\n      return false\n    }\n  }\n\n  removeActorFromMap (actor) {\n    let tile = this.map[Helper.coordsToString(actor.pos)]\n    if (!tile) return false;\n    this.map[Helper.coordsToString(actor.pos)].entities = tile.entities.filter((ac) => ac.id !== actor.id);\n    return true;\n  }\n\n  createLevel () {\n    let digger = new ROT.Map.Arena(this.mapWidth, this.mapHeight);\n    // let digger = new ROT.Map.Rogue();\n    // let digger = new ROT.Map.DividedMaze();\n    // let digger = new ROT.Map.EllerMaze();\n    // let digger = new ROT.Map.Cellular();\n    // let digger = new ROT.Map.Digger(this.mapWidth, this.mapHeight);\n    // let digger = new ROT.Map.IceyMaze();\n    // let digger = new ROT.Map.Uniform();\n    let freeCells = [];\n    let digCallback = function (x, y, value) {      \n      let key = x + \",\" + y;\n      let type = 'GROUND';\n      let currentFrame = 0;\n      if (value) { \n        type = 'WALL';\n        // type = 'WATER';\n      }\n\n      if (Constant.TILE_KEY[type].animation) {\n        currentFrame = Helper.getRandomInt(0, Constant.TILE_KEY[type].animation.length)\n      }\n\n      this.map[key] = {\n        type,\n        currentFrame,\n        entities: [],\n      };\n      freeCells.push(key);\n    }\n    digger.create(digCallback.bind(this));\n    this.randomlyPlaceAllActorsOnMap()\n  }\n\n  createEmptyLevel () {\n    for (let i = 0; i < this.mapHeight; i ++) {\n      for (let j = 0; j < this.mapWidth; j ++) {\n        const key = `${j},${i}`\n        let type = 'GROUND';\n        let currentFrame = 0;\n\n        if (Constant.TILE_KEY[type].animation) {\n          currentFrame = Helper.getRandomInt(0, Constant.TILE_KEY[type].animation.length)\n        }\n\n        this.map[key] = {\n          type,\n          currentFrame,\n          entities: [],\n        };\n      }\n    }\n  }\n\n  createCustomLevel (data) {\n    Object.keys(data.tiles).forEach((key, i) => {\n      const tile = data.tiles[key];\n      let type = tile.data.type;\n      let currentFrame = 0;\n      if (!type) {\n        type = 'GROUND';\n      }\n\n      if (Constant.TILE_KEY[type].animation) {\n        currentFrame = Helper.getRandomInt(0, Constant.TILE_KEY[type].animation.length)\n      }\n\n    \n      this.map[key] = {\n        type,\n        currentFrame,\n        entities: [],\n      };\n    })\n\n    // this.placeInitialEntities();\n  }\n\n  canOccupyPosition (pos, entity = {passable: false}) {\n    let result = false;\n    let targetTile = this.map[Helper.coordsToString(pos)];\n    if (targetTile) {\n      let hasImpassableEntity = targetTile.entities.filter((entity) => !entity.passable).length > 0;\n      if (!hasImpassableEntity || entity.passable) {\n        let tile = this.map[Helper.coordsToString(pos)];\n        if (this.tileKey[tile.type].passable) {\n          result = true;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  cursorCanOccupyPosition(pos) {\n    let result = false;\n    let targetTile = this.map[Helper.coordsToString(pos)];\n    if (targetTile) {\n      result = true;\n    }\n\n    return result;\n  }\n\n  show (document) {\n    this.display.initialize(document)\n  }\n\n  getRenderMap(fullMap, referencePosition, renderWidth, renderHeight, fullWidth, fullHeight) { \n    // create an object with only tile keys that should be rendered (around player)\n    // renderWidth/Height measured in tiles\n    // reference positon usually based on player pos\n    // position from fullMap key should be translated to 0,0 based on referencePos\n    \n    const renderPaddingX = Math.floor((renderWidth / 2));\n    const renderPaddingY = Math.floor((renderHeight / 2));\n    let offsetX = 0;\n    let offsetY = 0;\n    if (referencePosition) {\n      offsetX = referencePosition.x - renderPaddingX;\n      offsetY = referencePosition.y - renderPaddingY;\n    }\n    offsetX = Helper.clamp(offsetX, 0, fullWidth - renderWidth);\n    offsetY = Helper.clamp(offsetY, 0, fullHeight - renderHeight);\n    \n    let result = {}\n    for (let key in fullMap) {\n      let parts = key.split(\",\");\n      let x = parseInt(parts[0]);\n      let y = parseInt(parts[1]);\n      let finalX = x - offsetX;\n      let finalY = y - offsetY;\n      if (finalX >= 0 && finalX <= renderWidth) {\n        if (finalY >= 0 && finalY <= renderHeight) {\n          result[`${finalX},${finalY}`] = fullMap[key]\n        }\n      }\n    }\n    return result\n  }\n\n  processTileMap (callback) {\n    // const map = this.map;\n    // const map = this.getRenderMap(this.map, this.getPlayerPosition(), this.mapWidth, this.mapHeight);\n    // const map = this.getRenderMap(this.map, this.getPlayerPosition(), 50, 25, this.mapWidth, this.mapHeight);\n    const map = this.getRenderMap(this.map, this.getPlayerPosition(), this.cameraWidth, this.cameraHeight, this.mapWidth, this.mapHeight);\n    for (let key in map) {\n      let parts = key.split(\",\");\n      let x = parseInt(parts[0]);\n      let y = parseInt(parts[1]);\n      let tile = map[key];\n      // let { foreground, background } = this.tileKey[tile.type]\n      // Proto code to handle tile animations\n      let tileRenderer = this.tileKey[tile.type]\n      let nextFrame = this.animateTile(tile, tileRenderer);\n      let character = nextFrame.character;\n      let foreground = nextFrame.foreground;\n      let background = nextFrame.background;\n      \n      const renderedEntities = tile.entities.filter((entity) => entity.entityTypes.includes('RENDERING'))\n      if (renderedEntities.length > 0) {\n        let entity = renderedEntities[renderedEntities.length - 1]\n        nextFrame = this.animateEntity(entity);\n\n        character = nextFrame.character\n        foreground = nextFrame.foreground\n        if (nextFrame.background) {\n          background = nextFrame.background\n        }\n      }\n      callback(key, x, y, character, foreground, background);          \n    }\n  }\n\n  initializeMapTiles () {\n    if (this.mapInitialized) return false;\n    this.mapInitialized = true;\n    this.processTileMap((key, x, y, character, foreground, background) => {\n      let node = this.display.createTile(x, y, character, foreground, background);\n      this.tileMap[key] = node;\n    });\n  }\n\n  getPlayers () {\n    return this.engine.actors.filter((actor) => actor.entityTypes.includes('PLAYING'))\n  }\n\n  getPlayerPosition () {\n    const players = this.getPlayers();\n    if (players.length) return players[0].pos\n    return null\n  }\n  \n  draw () {\n    this.processTileMap((key, x, y, character, foreground, background) => {\n      this.display.updateTile(this.tileMap[key], character, foreground, background);\n    });\n    this.display.draw();\n  }\n\n  getEntityRenderer (renderer) {\n    // if sprite mode is on and the renderer has a sprite defined, use that\n    if (this.spriteMode && renderer.hasOwnProperty('sprite')) {\n      return {...renderer, character: renderer.sprite, foreground: renderer.color}\n      // return {character: renderer.sprite, foreground: renderer.background, background: ''}\n    }\n    // else us the ascii character\n    return {...renderer, foreground: renderer.color}\n  }\n\n  getTileRenderer (renderer) {\n    // if sprite mode is on and the renderer has a sprite defined, use that\n    if (this.spriteMode && renderer.hasOwnProperty('sprite')) {\n      return {...renderer, character: renderer.sprite}\n    }\n    // else us the ascii character\n    return renderer\n  }\n  \n  animateEntity (entity) {\n    let renderer = entity.getRenderer();\n    let { character, foreground, background } = this.getEntityRenderer(renderer)\n    if (renderer.animation) {\n      let frame = this.getEntityRenderer(renderer.animation[entity.currentFrame]);\n      character = frame.character;\n      foreground = frame.foreground;\n      background = frame.background;\n      entity.currentFrame = (entity.currentFrame + 1) % renderer.animation.length;\n    }\n    return {character, foreground, background}\n  }\n\n  animateTile (tile, renderer) {\n    let {character, foreground, background} = this.getTileRenderer(renderer)\n    if (renderer.animation) {\n      let frame = this.getTileRenderer(renderer.animation[tile.currentFrame]);\n      character = frame.character\n      foreground = frame.foreground;\n      background = frame.background;\n      tile.currentFrame = (tile.currentFrame + 1) % renderer.animation.length;\n    }\n    return {character, foreground, background}\n  }\n\n  addActor (actor, engine = this.engine) {\n    let isPlaced = this.placeActorOnMap(actor); // replace with placeActorOnMap\n    if (!isPlaced) { return false }\n    engine.actors.push(actor);\n    this.draw();\n    return true\n  }\n\n  placeAndDrawActor (actor) {\n    this.placeActorsOnMap(); // replace with placeActorOnMap\n    this.draw();\n  }\n\n  removeActor (actor) {\n    this.engine.actors = this.engine.actors.filter((ac) => ac.id !== actor.id);\n    // this.engine.currentActor = this.engine.actors.length - 1; // should remove need for this line\n    // this.engine.currentActor = (this.engine.currentActor) % this.engine.actors.length;\n    // this.engine.currentActor = (this.engine.currentActor + 1) % this.engine.actors.length;\n    this.removeActorFromMap(actor);\n    this.draw();\n  }\n\n  initializeUI (presserRef, document) {\n    this.show(document);\n    presserRef.current.focus();\n  }\n\n  initializeGameData () {\n    this.engine.game = this;\n    const selectedCharacter = this.getSelectedCharacter();\n    this.engine.actors = [selectedCharacter];\n    this.engine.actors.forEach((actor) => {\n      actor.game = this;\n    });\n    // this.createEmptyLevel();\n    // this.initializeMapTiles();\n    this.initializeMode();\n    this.draw();\n  }\n\n  initialize (presserRef, document) {\n    this.initializeUI(presserRef, document);\n    this.initializeGameData();\n    // hack to register sprite mode\n    setTimeout(() => {\n      this.spriteMode = false;\n      this.draw()\n    }, 100)\n    setTimeout(() => {\n      this.spriteMode = true;\n      this.draw()\n    }, 100)\n    // end hack\n  }\n\n  addMessage (text, type) {\n    const message = new Message.Message({text, type})\n    this.messages.push(message);\n  }\n}\n\n\n/************************** UI ********************************/\nexport const handleKeyPress = (event, engine) => {\n  if (!engine.isRunning) {\n    let actor = engine.actors[engine.currentActor];\n    let keymap = null;\n    try {\n      keymap = actor.getKeymap();\n    } catch (e) {\n      console.log('keypress error');\n      console.log(e);\n    }\n    if (keymap) {\n      let code = event.key;\n      console.log(code);\n      if (!(code in keymap)) { return; }\n      const getAction = keymap[code];\n      const action = getAction();\n      // const action = keymap[code];\n      action.setAsNextAction();\n      engine.start()\n    }\n  }\n  return;\n}\n\nexport const DisplayElement = (presserRef, handleKeyPress, engine) => {\n  return (\n    <div\n      id='display'\n      ref={presserRef}\n      onKeyDown={(event) => handleKeyPress(event, engine)}\n      // onKeyUp={(event) => handleKeyPress(event, engine)}\n      tabIndex='0'\n    />\n  )\n}\n/************************** UI ********************************/\n","import React from 'react';\nimport { SCREENS } from '../Screen/constants';\nimport * as _ from 'lodash';\n\nclass Instructions extends React.Component {\n  render() {\n    const infoHeader = _.get(this.props.game, 'mode.infoHeader', null);\n    const infoBlocks = _.get(this.props.game, 'mode.infoBlocks', {});\n\n    return (\n      <div className=\"Instructions UI\">\n        {infoHeader && (<p className='flow-text'>{infoHeader}</p>)}\n        <div className='flow-text'>\n          {\n            _.map(infoBlocks, (value, key) => {\n              return (\n                <div key={key} className='Instructions__block'>\n                  {value.text}\n                </div>\n              )\n            })\n          }\n          <div \n            className='Instructions__block'\n            onClick={() => this.props.setActiveScreen(SCREENS.TITLE)}\n          >\n            <button className='btn btn-main'>\n              Restart\n            </button>\n          </div>\n          <div \n            className='Instructions__block'\n            onClick={() => this.props.toggleSpriteMode()}\n          >\n            <button className='btn btn-main'>\n              {\n                this.props.spriteMode ? (\n                  'ASCII mode'\n                ) : (\n                  'Sprite mode'\n                )\n              }\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Instructions;","import React from 'react';\n\nfunction Button(props) {\n  let color = props['color'];\n  if (!color) color = 'grey';\n  return (\n    <button\n      onClick={props.onClick}\n      className={`Button btn ${color}`}\n    >\n      {props.children}  \n    </button>\n  )\n}\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\n\nclass Information extends React.Component {\n  render() {\n    let data = [\n      {\n        label: 'Wave',\n        value: `Current: ${this.props.game.mode.data.level}, Highest: ${this.props.game.mode.data.highestLevel}`,\n      },\n    ];\n\n    data = data.concat(\n      [\n        ...this.props.game.engine.actors.map((actor, index) => {\n          let result = {\n            label: actor.name,\n            // value: index,\n            value: `HP: ${actor.durability}, En/Sp: ${actor.energy}/${actor.speed}`,\n          };\n          if (index === this.props.game.engine.currentActor) {\n            result['color'] = 'red';\n          }\n          return result;\n        })\n      ]\n    )\n\n    return (\n      <div className=\"Information UI\">\n        {\n          data && (\n            data.map((item, index) => {\n              return (\n                <Button key={index} color={item['color']} onClick={() => null}>\n                  {`${item.label}: ${item.value}`}\n                </Button>\n              )\n            })\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Information;","import React from 'react';\n\nfunction Tooltip ({title = 'Effect', text = '', children}) {\n  return (\n    <div className=\"Tooltip\">\n      {children}\n      <div className=\"top\">\n        <h3>{title}</h3>\n        <p>{text}</p>\n        <i></i>\n      </div>\n    </div>\n  )\n}\n\nexport default Tooltip;\n","import React from 'react';\nimport * as _ from 'lodash';\nimport Tooltip from './Tooltip';\n\nfunction ResourceBlock({ resource, superScript, canPay }) {\n  return (\n    <div className=\"ResourceBlock\" style={{\n      backgroundColor: canPay ? resource.renderer.background : '#616161',\n      color: canPay ? resource.renderer.color : '#bdbdbd',\n      borderColor: canPay ? resource.renderer.color : '#bdbdbd',\n      fontFamily: 'scroll-o-script',\n      width: superScript ? 'auto' : 20,\n    }}>\n      {`${superScript ? superScript + ' ' : ''}${resource.renderer.character}`}\n    </div>\n  )\n}\n\nclass ActionBar extends React.Component {\n  render() {\n    return (  \n      <div className=\"ActionBar\">\n        <div className=\"CharacterActions\">\n          {\n            \n            this.props.keymap && (\n              Object.entries(this.props.keymap).map(([key, getAction], index) => {\n                const action = getAction();\n                const hidden = _.get(action, 'hidden', false);\n                const renderer = _.get(action, 'renderer', null);\n                const reqs = action.listPayableResources();\n\n                if (!hidden) {\n                  return (\n                    <Tooltip\n                      key={`${index}-label`}\n                      title={action.label}\n                      text={action.label + ` ${action.actor.name}`}\n                    >\n                      <div \n                        className=\"CharacterActions__item\"\n                        onClick={() => {\n                          action.setAsNextAction();\n                          if (!this.props.game.engine.isRunning) this.props.game.engine.start();\n                          this.props.game.refocus();\n                        }}\n                      >\n                        <div className=\"CharacterActions__item__label\">\n                          {action.label}\n                        </div>\n                        <div className=\"CharacterActions__item__content\" style={renderer && {\n                          backgroundColor: renderer.background,\n                          color: renderer.color,\n                          borderColor: renderer.color,\n                        }}>\n                          {key}\n                        </div>\n                        <div className=\"CharacterActions__item__resources\">\n                          {\n                            reqs.map((req, i) => {\n                              const numBlocks = req.getResourceCost();\n                              return numBlocks > 0 && (\n                                <ResourceBlock\n                                  key={`${i}-${req.name}-resource-block`}\n                                  superScript={numBlocks}\n                                  resource={req}\n                                  canPay={req.canPay}\n                                />\n                              )\n                            })\n                          }\n                        </div>\n                      </div>\n                    </Tooltip>\n                  )\n                }\n              })\n            )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ActionBar;","import React from 'react';\nimport * as _ from 'lodash';\nimport Tooltip from '../Tooltip';\nimport ActionBar from '../ActionBar';\n\nfunction Portrait ({actor}) {\n  return (\n    <div className=\"Portrait\" style={{\n      backgroundColor: actor.renderer.background, \n      color: actor.renderer.color,\n      borderColor: actor.renderer.color,\n    }}>\n      {actor.renderer.character}\n    </div>\n  )\n}\n\nfunction StatusEffect ({effect}) {\n  return (\n    <div className=\"StatusEffects__effect\" style={{\n      backgroundColor: effect.renderer.background, \n      color: effect.renderer.color,\n      borderColor: effect.renderer.color,\n    }}>\n      {effect.renderer.character}\n    </div>\n  )\n}\n\nfunction StatusEffects ({actor}) {\n  return (\n    <div className=\"StatusEffects\">\n      {\n        actor.game.engine.getStatusEffectsByActorId(actor.id).map((effect, i) => {\n          return (\n            <Tooltip \n              key={i}\n              title={effect.name}\n              text={effect.name}\n            >\n              <StatusEffect effect={effect} />\n            </Tooltip>\n          )\n        })\n      }\n    </div>\n  )\n}\n\nfunction NamePlate ({actor}) {\n  return (\n    <div className=\"NamePlate\">\n      {actor.name}\n    </div>\n  )\n}\n\nfunction ProgressBar ({\n  actor, \n  label, \n  colorFilled = 'red',\n  colorEmpty = 'gray',\n  attributePathMax, \n  attributePath, \n  unit,\n}) {\n  const valueMax = _.get(actor, attributePathMax, 0) / unit;\n  const valueCurrent = _.get(actor, attributePath, 0) / unit;\n  return (\n    <div className=\"ProgressBar\">\n      <div>\n        <span className='ProgressBar__label'>{label}</span>\n      </div>\n      <div>\n        <div className='ProgressBar__blips'>\n          {\n            Array(valueMax).fill(true).map((blip, index) => {\n              return (\n                <span \n                  key={index}\n                  className='ProgressBar__blips__blip' \n                  style={{backgroundColor: valueCurrent > index ? colorFilled : colorEmpty }}\n                />\n              )\n            })\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction CharacterCard ({actor, game}) {\n  return (\n    <div className='CharacterCard'>\n      <Portrait actor={actor}/>\n      <div>\n        <NamePlate actor={actor}/>\n        <ProgressBar \n          label='Action Points'\n          attributePath='energy'\n          attributePathMax='speed'\n          colorFilled='#ff9926'\n          unit={100}\n          actor={actor} \n        />\n        <ProgressBar \n          label='Chakara Points'\n          attributePath='charge'\n          attributePathMax='chargeMax'\n          colorFilled='#13b8d7'\n          unit={1}\n          actor={actor} \n        />\n        <StatusEffects actor={actor} />\n      </div>\n      <div>\n        {/* <ActionBar keymap={game.visibleKeymap} game={game} /> */}\n        <ActionBar keymap={actor.getKeymap()} game={game} />\n      </div>\n    </div>\n  )\n}\n\nexport default CharacterCard;\n","import React from 'react';\nimport CharacterCard from './CharacterCard';\nimport * as _ from 'lodash';\n\nconst PlayerInformation = ({game}) => {\n  const actors = game.engine.actors.filter((actor) => actor.entityTypes.includes('PRESENTING_UI')).filter((actor) => actor.presentingUI)\n  return (\n    <div className=\"PlayerInformation Information UI\">\n      <div className='CharacterCard_Container'>\n        {\n          actors.map((actor, index) => <CharacterCard key={index} actor={actor} game={game} />)\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default PlayerInformation;","import React from 'react';\nimport Button from './Button';\n\nclass Equipment extends React.Component {\n  render() {\n    return (\n      <div className=\"Equipment UI\">\n        {\n          this.props.equipment && (\n            <div>\n              <div className='flow-text'>Equipment</div>\n              <div>\n                {\n                  this.props.equipment.map((slot, index) => {\n                    return (\n                      <Button key={index} onClick={() => null}>\n                        {slot.name} {slot.item ? slot.item.renderer.character : ''}\n                      </Button>\n                    )\n                  })\n                }\n              </div>\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Equipment;","import React from 'react';\nimport Button from './Button';\n\nclass Inventory extends React.Component {\n  render() {\n    return (\n      <div className=\"Inventory UI\">\n        {\n          this.props.inventory && (\n            <div>\n              <div className='flow-text'>Inventory</div>\n              <div>\n                {\n                  this.props.inventory.map((slot, index) => {\n                    return (\n                      <Button key={index} onClick={() => null}>\n                        {`${slot.itemType} | x ${slot.items.length}`}\n                      </Button>\n                    )\n                  })\n                }\n              </div>\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Inventory;","import React from 'react';\n\nfunction Message (props) {\n  return (\n    <div\n      className='Message'\n      style={{\n        color: props.color,\n        backgroundColor: props.backgroundColor,\n        borderColor: props.color,\n      }}\n    >\n      {props.children}\n    </div>\n  )\n}\n\nclass Messages extends React.Component {\n  render() {\n    return (\n      <div className=\"Messages UI\">\n        <div className='flow-text center'>Messages</div>\n        {\n          this.props.messages && (\n            this.props.messages.map((message, index) => {\n              return (\n                <Message \n                  key={index} \n                  color={message.type.color}\n                  backgroundColor={message.type.backgroundColor}\n                >\n                  {`${message.text}`}\n                </Message>\n              )\n            })\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Messages;","import React from 'react';\nimport { SCREENS } from './constants';\nimport * as Engine from '../Engine/engine';\nimport * as Game from '../game';\nimport Instructions from '../UI/Instructions';\nimport Information from '../UI/Information';\nimport PlayerInformation from '../UI/Entity/PlayerInformation';\nimport Equipment from '../UI/Equipment';\nimport Inventory from '../UI/Inventory';\n// import KeymapUI from '../UI/Keymap';\nimport KeymapUI from '../UI/ActionBar';\nimport Messages from '../UI/Messages';\n\nclass Level extends React.Component {\n  constructor(props) {\n    super(props);\n    let ENGINE = new Engine.Engine({});\n    let game = new Game.Game({ \n      engine: ENGINE, \n      getSelectedCharacter: () => this.props.selectedCharacter.initialize(ENGINE),\n      mode: this.props.selectedMode.class,\n    })\n    this.state = {\n      game: game,\n      activeTab: 0,\n      spriteMode: game.spriteMode,\n    };\n    this.presserRef = React.createRef();\n  }\n\n  async componentDidMount() {\n    this.state.game.initialize(this.presserRef, document)\n    this.state.game['backToTitle'] = () => this.props.setActiveScreen(SCREENS.TITLE);\n    this.state.game['toLose'] = () => this.props.setActiveScreen(SCREENS.LOSE);\n    this.state.game['toWin'] = () => this.props.setActiveScreen(SCREENS.WIN);\n    this.state.game['refocus'] = () => this.refocus();\n    this.state.game.updateReact = (newGameState) => { this.setState({game: newGameState}) }\n    this.state.game.engine.start()\n  }\n\n  refocus () {\n    if (this.presserRef) this.presserRef.current.focus();\n  }\n\n  toggleSpriteMode () {\n    this.state.game.spriteMode = !this.state.game.spriteMode;\n    this.state.game.draw();\n    this.refocus();\n    this.setState({ spriteMode: this.state.game.spriteMode})\n  }\n\n  render() {\n    return (\n      <div className=\"Level\">\n        <div className='row'>\n          <div className='col s12'>\n            <div className='game_display_container'>\n              {Game.DisplayElement(this.presserRef, Game.handleKeyPress, this.state.game.engine)}\n            </div>\n            <PlayerInformation game={this.state.game} />\n            <Information game={this.state.game} />\n            <Instructions game={this.state.game} spriteMode={this.state.game.spriteMode} setActiveScreen={this.props.setActiveScreen} toggleSpriteMode={this.toggleSpriteMode.bind(this)} />\n            {/* <Messages messages={this.state.game.messages.slice(-5).reverse()} /> */}\n          </div>\n          {/* <div className='col s2'> */}\n          {/* </div> */}\n          {/* <button className='btn' onClick={() => this.props.setActiveScreen(SCREENS.TITLE)}>Quit</button> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Level;\n","import React from 'react';\nimport { SCREENS } from '../Screen/constants';\n\nconst CharacterSelect = (props) => {\n  return (\n    <div className='CharacterSelect'>\n      {\n        props.characters.map((character, index) => {\n          let color = '';\n          if (props.selectedCharacter) {\n            color = props.selectedCharacter.name === character.name ? 'red' : ''\n          }\n\n          return (\n            <button\n              key={index}\n              style={{\n                position: 'relative',\n                top: '280px'\n              }}\n              className={`CharacterSelect__button btn btn-main`}\n              onClick={() => {\n                props.setSelectedCharacter(character)\n                props.setActiveScreen(SCREENS.LEVEL)\n              }}\n            >\n              Play as {character.name}\n            </button>\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default CharacterSelect;","import React from 'react';\nimport { SCREENS } from './constants';\nimport CharacterSelect from '../UI/CharacterSelect';\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          style={{\n\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: 'rgb(4, 49, 61)',\n            backgroundImage: `url(\"${window.PUBLIC_URL}/fire_man_blue.jpg\")`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundPositionY: '10px'\n\n          }}\n        >\n          <button\n            style={{\n              position: 'relative',\n              top: '280px'\n            }}\n            className={`CharacterSelect__button btn btn-main`}\n            onClick={() => {\n              this.props.setActiveScreen(SCREENS.MODE_SELECT)\n            }}\n          >\n            Play\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;","import React from 'react';\nimport CharacterSelect from '../UI/CharacterSelect';\n\n\nclass Lose extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          style={{\n\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: '#222',\n            // backgroundColor: 'rgb(4, 49, 61)',\n            backgroundImage: `url(\"${window.PUBLIC_URL}/fire_man_blue.jpg\")`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundPositionY: '10px'\n\n          }}\n        >\n          <CharacterSelect \n            characters={this.props.characters} \n            selectedCharacter={this.props.selectedCharacter} \n            setSelectedCharacter={this.props.setSelectedCharacter}\n            setActiveScreen={this.props.setActiveScreen}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Lose;","import React from 'react';\nimport CharacterSelect from '../UI/CharacterSelect';\n\nclass Win extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          style={{\n\n            width: '100vw',\n            height: '100vh',\n            // backgroundColor: '#eee',\n            backgroundColor: 'rgb(54,160,190)',\n            backgroundImage: `url(\"${window.PUBLIC_URL}/fire_man_blue.jpg\")`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundPositionY: '10px'\n\n          }}\n        >\n          <CharacterSelect \n            characters={this.props.characters} \n            selectedCharacter={this.props.selectedCharacter} \n            setSelectedCharacter={this.props.setSelectedCharacter}\n            setActiveScreen={this.props.setActiveScreen}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Win;","import React from 'react';\nimport { SCREENS } from './constants';\nimport CharacterSelect from '../UI/CharacterSelect';\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          style={{\n\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: 'rgb(4, 49, 61)',\n            backgroundImage: `url(\"${window.PUBLIC_URL}/fire_man_blue.jpg\")`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundPositionY: '10px'\n\n          }}\n        >\n          <CharacterSelect \n            characters={this.props.characters} \n            selectedCharacter={this.props.selectedCharacter} \n            setSelectedCharacter={this.props.setSelectedCharacter}\n            setActiveScreen={this.props.setActiveScreen}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;","import React from 'react';\nimport { SCREENS } from '../Screen/constants';\n\nconst ModeSelect = (props) => {\n  return (\n    <div className='CharacterSelect'>\n      {\n        props.modes.map((mode, index) => {\n          let color = '';\n          if (props.selectedMode) {\n            color = props.selectedMode.name === mode.name ? 'red' : ''\n          }\n\n          return (\n            <button\n              key={index}\n              style={{\n                position: 'relative',\n                top: '280px'\n              }}\n              className={`CharacterSelect__button btn btn-main`}\n              onClick={() => {\n                console.log(mode);\n                \n                props.setSelectedMode(mode)\n                props.setActiveScreen(SCREENS.CHARACTER_SELECT)\n              }}\n            >\n              {mode.name}\n            </button>\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default ModeSelect;","import Level from './Level';\nimport Title from './Title';\nimport Lose from './Lose';\nimport Win from './Win';\nimport CharacterSelect from './CharacterSelect';\nimport ModeSelect from './ModeSelect';\n\nexport default {\n  Level,\n  Title,\n  Win,\n  Lose,\n  CharacterSelect,\n  ModeSelect,\n}","import React from 'react';\nimport { SCREENS } from './constants';\nimport ModeSelect from '../UI/ModeSelect';\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Title\">\n        <div\n          style={{\n\n            width: '100vw',\n            height: '100vh',\n            backgroundColor: 'rgb(4, 49, 61)',\n            backgroundImage: `url(\"${window.PUBLIC_URL}/fire_man_blue.jpg\")`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundPositionY: '10px'\n\n          }}\n        >\n          <ModeSelect \n            modes={this.props.modes} \n            selectedMode={this.props.selectedMode} \n            setSelectedMode={this.props.setSelectedMode}\n            setActiveScreen={this.props.setActiveScreen}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;","import {ActionResource} from './ActionResource';\n\nexport class ChakraResource extends ActionResource {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.name = 'Chakra';\n    this.actorResourcePath = 'charge';\n    this.renderer = { color: '#224c92', background: '#13b8d7', character: '' }\n  }\n}","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nexport class EquipItemFromContainer extends Base {\n  // entities can only equip items from their container/inventory\n  constructor({ item, ...args }) {\n    super({ ...args });\n    this.item = item;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (this.item.equipmentType) {\n      let itemInSlot = this.actor.getItemInSlot(this.item.equipmentType);\n      if (itemInSlot) {\n        this.actor.addToContainer(itemInSlot);\n        this.actor.unequip(itemInSlot);\n      }\n      this.actor.removeFromContainer(this.item);\n      this.actor.equip(this.item.equipmentType, this.item);\n      this.game.addMessage(`${this.actor.name} equips ${this.item.name}.`, MESSAGE_TYPE.ACTION);\n      success = true;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nexport class GoToPreviousKeymap extends Base {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.label = 'Close';\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    this.actor.goToPreviousKeymap();\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { EquipItemFromContainer } from './EquipItemFromContainer';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\n\n\nexport class OpenInventory extends Base {\n  constructor({ \n    ...args \n  }) {\n    super({ ...args });\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    this.game.visibleInventory = this.actor.container;\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n    };\n\n    this.actor.container.forEach((slot, index) => {\n      const item = slot.items[0];\n      keymap[index] = () => new EquipItemFromContainer({\n        item,\n        game: this.game,\n        actor: this.actor,\n        label: `Equip ${item.name}`,\n        onSuccess: () => {\n          this.game.visibleInventory = null\n          this.actor.setNextAction(goToPreviousKeymap);\n        },\n      });\n    })\n\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nimport * as Helper from '../../helper';\n\nexport class UnequipItemToTile extends Base {\n  constructor({ item, ...args }) {\n    super({ ...args });\n    this.item = item;\n  }\n  perform() {\n    this.game.addMessage(`${this.actor.name} drops ${this.item.name}.`, MESSAGE_TYPE.ACTION);\n    this.actor.unequip(this.item);\n    this.game.map[Helper.coordsToString(this.actor.pos)].entities.splice(0, 0, this.item);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { UnequipItemToTile } from './UnequipItemToTile';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\n\n\nexport class OpenEquipment extends Base {\n  constructor({ \n    ...args \n  }) {\n    super({ ...args });\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    this.game.visibleEquipment = this.actor.equipment;\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n    };\n\n    this.actor.equipment.filter((slot) => slot.item).forEach((slot, index) => {\n      keymap[index] = () => new UnequipItemToTile({\n        item: slot.item,\n        game: this.game,\n        actor: this.actor,\n        label: `Unequip ${slot.item.name}`,\n        onSuccess: () => {\n          this.game.visibleEquipment = null\n          this.actor.setNextAction(goToPreviousKeymap);\n        },\n      });\n    })\n\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nimport * as Helper from '../../helper';\n\nexport class DropItem extends Base {\n  constructor({ item, ...args }) {\n    super({ ...args });\n    this.item = item;\n  }\n  perform() {\n    this.game.addMessage(`${this.actor.name} drops ${this.item.name}.`, MESSAGE_TYPE.ACTION);\n    this.actor.removeFromContainer(this.item);\n    this.game.map[Helper.coordsToString(this.actor.pos)].entities.push(this.item);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { DropItem } from './DropItem';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\n\n\nexport class OpenDropInventory extends Base {\n  constructor({ \n    ...args \n  }) {\n    super({ ...args });\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    this.game.visibleInventory = this.actor.container;\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n    };\n\n    this.actor.container.forEach((slot, index) => {\n      const item = slot.items[0];\n      keymap[index] = () => new DropItem({\n        item,\n        game: this.game,\n        actor: this.actor,\n        label: `Drop ${item.name}`,\n        onSuccess: () => {\n          this.game.visibleInventory = null\n          this.actor.setNextAction(goToPreviousKeymap);\n        },\n      });\n    })\n\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nimport * as Helper from '../../helper';\n\nexport class PickupRandomItem extends Base {\n  constructor({ ...args }) {\n    super({ ...args });\n  }\n  perform() {\n    let success = false;\n    const items = this.game.map[Helper.coordsToString(this.actor.pos)].entities.filter((e) => e.id !== this.actor.id);\n    if (items.length) {\n      const item = Helper.getRandomInArray(items);\n      this.game.addMessage(`${this.actor.name} picks up ${item.name}.`, MESSAGE_TYPE.ACTION);\n      this.actor.addToContainer(item);\n      let entities = this.game.map[Helper.coordsToString(this.actor.pos)].entities;\n      this.game.map[Helper.coordsToString(this.actor.pos)].entities = entities.filter((it) => it.id !== item.id);\n      success = true;\n    } \n    return {\n      success,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport { PlaceActor } from './PlaceActor';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\nimport { TYPE } from '../items';\nimport { DIRECTIONS, ENERGY_THRESHOLD } from '../constants';\n\nexport class PrepareDirectionalThrow extends Base {\n  constructor({ \n    passThroughEnergyCost = ENERGY_THRESHOLD, \n    passThroughRequiredResources = [], \n    ...args \n  }) {\n    super({ ...args });\n    this.passThroughEnergyCost = passThroughEnergyCost;\n    this.passThroughRequiredResources = passThroughRequiredResources;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n\n    let projectile = this.actor.contains(TYPE.DIRECTIONAL_KUNAI);\n    if (!projectile) return {\n      success: false,\n      alternative: null,\n    };\n\n    projectile.game = this.game;\n    projectile.pos = {\n      x: this.actor.pos.x,\n      y: this.actor.pos.y,\n    };\n\n    this.actor.removeFromContainer(projectile);\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n      \n      w: () => { \n        return new PlaceActor({\n          targetPos: {...projectile.pos},\n          actor: this.actor,\n          game: this.game,\n          entity: projectile,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'throw N',\n          onBefore: () => {\n            projectile.direction = DIRECTIONS.N;\n          },\n          onSuccess: () => {\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      d: () => { \n        return new PlaceActor({\n          targetPos: {...projectile.pos},\n          actor: this.actor,\n          game: this.game,\n          entity: projectile,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'throw E',\n          onBefore: () => {\n            projectile.direction = DIRECTIONS.E;\n          },\n          onSuccess: () => {\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      s: () => { \n        return new PlaceActor({\n          targetPos: {...projectile.pos},\n          actor: this.actor,\n          game: this.game,\n          entity: projectile,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'throw S',\n          onBefore: () => {\n            projectile.direction = DIRECTIONS.S;\n          },\n          onSuccess: () => {\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      a: () => { \n        return new PlaceActor({\n          targetPos: {...projectile.pos},\n          actor: this.actor,\n          game: this.game,\n          entity: projectile,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'throw W',\n          onBefore: () => {\n            projectile.direction = DIRECTIONS.W;\n          },\n          onSuccess: () => {\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n    };\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import { Base } from './Base';\nimport { Attack } from \"./Attack\";\nimport * as Constant from '../constants';\n\nexport class MoveMultiple extends Base {\n  constructor({ direction, stepCount, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.direction = direction;\n    this.stepCount = stepCount;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let newX = this.actor.pos.x + this.direction[0];\n    let newY = this.actor.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n    if (this.stepCount > 0 && this.actor.move(targetPos)) {\n      this.stepCount -= 1;\n      this.actor.setNextAction(this);\n      success = true;\n    }\n    else {\n      success = true;\n      alternative = new Attack({\n        targetPos: targetPos,\n        game: this.game,\n        actor: this.actor,\n        energyCost: Constant.ENERGY_THRESHOLD\n      });\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { MoveMultiple } from './MoveMultiple';\nimport { Attack } from './Attack';\nimport {ENERGY_THRESHOLD} from '../constants';\n\nexport class Tackle extends MoveMultiple {\n  constructor({ direction, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.direction = direction;\n    this.stepCount = 0;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let alternative = null;\n    let newX = this.actor.pos.x + this.direction[0];\n    let newY = this.actor.pos.y + this.direction[1];\n    let targetPos = { x: newX, y: newY };\n\n    alternative = new Attack({\n      targetPos,\n      additionalDamage: this.stepCount,\n      game: this.game,\n      actor: this.actor,\n      energyCost: 0,\n    });\n\n    if (this.actor.energy > ENERGY_THRESHOLD) {\n      const shoveSuccess = this.actor.shove(targetPos, this.direction);\n      if (shoveSuccess) {\n        this.stepCount += 1;\n        alternative = this\n        for (let i = 0; i < 3; i++) {\n          this.addParticle(1, {\n            x: this.actor.pos.x - (this.direction[0] * i),\n            y: this.actor.pos.y - (this.direction[1] * i),\n          }, { x: 0, y: 0 });\n        }\n      }\n    }\n\n    return {\n      success: true,\n      alternative,\n    };\n  }\n};\n","import { Base } from './Base';\nimport { Tackle } from './Tackle';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\nimport { DIRECTIONS, ENERGY_THRESHOLD, PARTICLE_TEMPLATES } from '../constants';\nimport { getPositionInDirection } from '../../helper';\n\nexport class PrepareTackle extends Base {\n  constructor({ \n    passThroughEnergyCost = ENERGY_THRESHOLD, \n    passThroughRequiredResources = [], \n    ...args \n  }) {\n    super({ ...args });\n    this.passThroughEnergyCost = passThroughEnergyCost;\n    this.passThroughRequiredResources = passThroughRequiredResources;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n\n    const pos = this.actor.getPosition();\n    // tackle in 4 directions a sfar as the actor has energy\n    const cursor_positions = [];\n    [\n      DIRECTIONS.N,\n      DIRECTIONS.S,\n      DIRECTIONS.E,\n      DIRECTIONS.W,\n    ].forEach((direction, i) => {\n      Array(this.actor.energy / ENERGY_THRESHOLD).fill('').forEach((none, distance) => {\n        if (distance > 0) {\n          cursor_positions.push(\n            getPositionInDirection(pos, direction.map((dir) => dir * (distance)))\n          )\n        }\n      })\n    });\n    this.actor.activateCursor(cursor_positions)\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n      onAfter: () => this.actor.deactivateCursor(),\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n      \n      w: () => { \n        return new Tackle({\n          actor: this.actor,\n          game: this.game,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'tackle N',\n          direction: DIRECTIONS.N,\n          particleTemplate: PARTICLE_TEMPLATES.leaf,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      d: () => { \n        return new Tackle({\n          actor: this.actor,\n          game: this.game,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'tackle E',\n          direction: DIRECTIONS.E,\n          particleTemplate: PARTICLE_TEMPLATES.leaf,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      s: () => { \n        return new Tackle({\n          actor: this.actor,\n          game: this.game,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'tackle S',\n          direction: DIRECTIONS.S,\n          particleTemplate: PARTICLE_TEMPLATES.leaf,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n      a: () => { \n        return new Tackle({\n          actor: this.actor,\n          game: this.game,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          label: 'tackle W',\n          direction: DIRECTIONS.W,\n          particleTemplate: PARTICLE_TEMPLATES.leaf,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            this.actor.setNextAction(goToPreviousKeymap);\n          },\n        })\n      },\n    };\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","// import deps\nimport * as Item from '../items';\nimport * as Constant from '../constants';\nimport { Player } from '../Entities/index';\nimport { ContainerSlot } from '../Entities/Containing';\nimport { ChakraResource } from '../Actions/ActionResources/ChakraResource';\nimport { Say } from '../Actions/Say';\nimport { Move } from '../Actions/Move';\nimport { OpenInventory } from '../Actions/OpenInventory';\nimport { OpenEquipment } from '../Actions/OpenEquipment';\nimport { OpenDropInventory } from '../Actions/OpenDropInventory';\nimport { PickupRandomItem } from '../Actions/PickupRandomItem';\nimport { PrepareDirectionalThrow } from '../Actions/PrepareDirectionalThrow';\nimport { PrepareTackle } from '../Actions/PrepareTackle';\n\n\n\nexport default function (engine) {\n  // define keymap\n  const keymap = (engine, actor) => {\n    return {\n      w: () => {\n        const direction = Constant.DIRECTIONS.N;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      s: () => {\n        const direction = Constant.DIRECTIONS.S;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      a: () => {\n        const direction = Constant.DIRECTIONS.W;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      d: () => {\n        const direction = Constant.DIRECTIONS.E;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      p: () => new Say({\n        label: 'Stay',\n        message: 'standing still...',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      Escape: () => new Say({\n        label: 'Pass',\n        message: 'pass turn...',\n        game: engine.game,\n        actor,\n        interrupt: true,\n        energyCost: 0,\n      }),\n      i: () => new OpenInventory({\n        label: 'Inventory',\n        game: engine.game,\n        actor,\n      }),\n      o: () => new OpenEquipment({\n        label: 'Equipment',\n        game: engine.game,\n        actor,\n      }),\n      u: () => new OpenDropInventory({\n        label: 'Drop Items',\n        game: engine.game,\n        actor,\n      }),\n      g: () => new PickupRandomItem({\n        label: 'Pickup',\n        game: engine.game,\n        actor,\n      }),\n      t: () => new PrepareDirectionalThrow({\n        label: 'Throw',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      l: () => new PrepareTackle({\n        label: 'Flying Lotus',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      // k: {\n      //   activate: () => Keymap.removeWeights(engine, 200),\n      //   label: 'Remove wraps',\n      // },\n      // j: {\n      //   activate: () => Keymap.drunkenFist(engine),\n      //   label: 'Sip Sake',\n      // },\n      // h: {\n      //   activate: () => Keymap.leafWhirlwind(engine),\n      //   label: 'Leaf Whirlwind',\n      // },\n      // g: {\n      //   activate: () => Keymap.openInnerGate(engine),\n      //   label: 'Gate of Opening',\n      // },\n    };\n  }\n  // instantiate class\n  let actor = new Player({\n    pos: { x: 23, y: 7 },\n    renderer: {\n      character: 'R',\n      color: Constant.THEMES.SOLARIZED.base3,\n      background: Constant.THEMES.NARUTO.rock_lee,\n    },\n    name: 'Rock Lee',\n    actions: [],\n    speed: 600,\n    durability: 20,\n    game: engine.game,\n    presentingUI: true,\n    initializeKeymap: keymap,\n  })\n\n  // add default items to container\n  const kunais = Array(100).fill('').map(() => Item.directionalKunai(engine, { ...actor.pos }, null, 10));\n  const swords = Array(2).fill('').map(() => Item.sword(engine));\n  actor.container = [\n    new ContainerSlot({\n      itemType: kunais[0].name,\n      items: kunais,\n    }),\n    new ContainerSlot({\n      itemType: swords[0].name,\n      items: swords,\n    }),\n  ]\n\n  return actor;\n}","import { Base } from './Base';\nimport { PlaceItems } from './PlaceItems';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\nimport { Wall } from '../Entities/index';\nimport { TYPE } from '../items';\nimport { getDirectionKey, DIRECTIONS, ENERGY_THRESHOLD } from '../constants';\n\n\nconst createSandWall = (engine, pos) => new Wall({\n  game: engine.game,\n  passable: false,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    character: '✦️',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.BARRIER,\n  durability: 3,\n});\n\nexport class SandWall extends PlaceItems {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.entity = createSandWall(this.game.engine, { ...this.actor.pos });\n  }\n\n  perform () {\n    this.actor.setNextAction(new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n    }))\n    return super.perform();\n  }\n};\n\nconst getTargetPositions = (direction, actor) => {\n  let targetPositions = [];\n  let directionKey = getDirectionKey(direction);\n  switch (directionKey) {\n    case 'N':\n      targetPositions = targetPositions.concat([\n        {\n          x: actor.pos.x - 1,\n          y: actor.pos.y - 1,\n        },\n        {\n          x: actor.pos.x,\n          y: actor.pos.y - 1,\n        },\n        {\n          x: actor.pos.x + 1,\n          y: actor.pos.y - 1,\n        },\n      ]);\n      break;\n    case 'S':\n      targetPositions = targetPositions.concat([\n        {\n          x: actor.pos.x - 1,\n          y: actor.pos.y + 1,\n        },\n        {\n          x: actor.pos.x,\n          y: actor.pos.y + 1,\n        },\n        {\n          x: actor.pos.x + 1,\n          y: actor.pos.y + 1,\n        },\n      ]);\n      break;\n    case 'E':\n      targetPositions = targetPositions.concat([\n        {\n          x: actor.pos.x + 1,\n          y: actor.pos.y - 1,\n        },\n        {\n          x: actor.pos.x + 1,\n          y: actor.pos.y,\n        },\n        {\n          x: actor.pos.x + 1,\n          y: actor.pos.y + 1,\n        },\n      ]);\n      break;\n    case 'W':\n      targetPositions = targetPositions.concat([\n        {\n          x: actor.pos.x - 1,\n          y: actor.pos.y - 1,\n        },\n        {\n          x: actor.pos.x - 1,\n          y: actor.pos.y,\n        },\n        {\n          x: actor.pos.x - 1,\n          y: actor.pos.y + 1,\n        },\n      ]);\n      break;\n    default:\n      break;\n  }\n  return targetPositions;\n}\n\nexport class PrepareSandWall extends Base {\n  constructor({ \n    sandWallEnergyCost = ENERGY_THRESHOLD, \n    sandWallRequiredResources = [], \n    ...args \n  }) {\n    super({ ...args });\n    this.sandWallEnergyCost = sandWallEnergyCost;\n    this.sandWallRequiredResources = sandWallRequiredResources;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n    })\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n      w: () => new SandWall({\n        targetPositions: getTargetPositions(DIRECTIONS.N, this.actor),\n        actor: this.actor,\n        game: this.game,\n        energyCost: this.sandWallEnergyCost,\n        requiredResources: this.sandWallRequiredResources,\n        label: 'activate N',\n      }),\n      d: () => new SandWall({\n        targetPositions: getTargetPositions(DIRECTIONS.E, this.actor),\n        actor: this.actor,\n        game: this.game,\n        energyCost: this.sandWallEnergyCost,\n        requiredResources: this.sandWallRequiredResources,\n        label: 'activate E',\n      }),\n      s: () => new SandWall({\n        targetPositions: getTargetPositions(DIRECTIONS.S, this.actor),\n        actor: this.actor,\n        game: this.game,\n        energyCost: this.sandWallEnergyCost,\n        requiredResources: this.sandWallRequiredResources,\n        label: 'activate S',\n      }),\n      a: () => new SandWall({\n        targetPositions: getTargetPositions(DIRECTIONS.W, this.actor),\n        actor: this.actor,\n        game: this.game,\n        energyCost: this.sandWallEnergyCost,\n        requiredResources: this.sandWallRequiredResources,\n        label: 'activate W',\n      }),\n    };\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import { cloneDeep } from 'lodash';\nimport uuid from 'uuid/v1';\nimport { PlaceItem } from './PlaceItem';\nexport class PlaceItems extends PlaceItem {\n  constructor({ targetPositions = [], ...args }) {\n    super({ ...args });\n    this.targetPositions = targetPositions;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    this.targetPositions.forEach((targetPos) => {\n      if (this.game.canOccupyPosition(targetPos, this.entity)) {\n        let clone = cloneDeep(this.entity);\n        clone.game = this.game;\n        clone.id = uuid();\n        clone.pos = targetPos;\n        let placementSuccess = this.game.placeActorOnMap(clone);\n        if (placementSuccess)\n          success = true;\n      }\n    });\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nexport class PlaceItem extends Base {\n  constructor({ targetPos, entity, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.processDelay = processDelay;\n    this.entity = entity;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (this.game.canOccupyPosition(this.targetPos, this.entity)) {\n      this.entity.pos = this.targetPos;\n      success = this.game.placeActorOnMap(this.entity);\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport * as Helper from '../../helper';\n\nexport class MoveTargetingCursor extends Base {\n  constructor({ direction, range, ...args }) {\n    super({ ...args });\n    this.direction = direction;\n    this.range = range;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    const initiatedFrom = this.actor.getPosition();\n    const targetPos = Helper.getPositionInDirection(this.actor.getCursorPositions()[0], this.direction);\n    const path = Helper.calculatePath(this.game, targetPos, initiatedFrom, 8);\n    const isInRange = this.range ? path.length <= this.range : true;\n    if (isInRange && this.game.canOccupyPosition(targetPos, this.actor)) {\n      this.actor.moveCursorInDirection(this.direction);\n      success = true;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Base } from './Base';\n\nexport class MoveSubstitution extends Base {\n  constructor({ spawnedEntity, targetPos, processDelay = 25, ...args }) {\n    super({ ...args });\n    this.spawnedEntity = spawnedEntity;\n    this.targetPos = targetPos;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    let move_success = this.actor.move(this.targetPos);\n    if (move_success) {\n      success = true;\n      this.game.placeActorOnMap(this.spawnedEntity)\n      this.game.draw();\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n};\n","import { Base } from './Base';\nimport { MoveTargetingCursor } from './MoveTargetingCursor';\nimport { MoveSubstitution } from './MoveSubstitution';\nimport { GoToPreviousKeymap } from './GoToPreviousKeymap';\nimport { TYPE } from '../items';\nimport { Wall } from '../Entities/index';\nimport { DIRECTIONS, ENERGY_THRESHOLD, THEMES } from '../constants';\n\nconst createSandWall = (engine, pos) => new Wall({\n  game: engine.game,\n  passable: false,\n  pos: { x: pos.x, y: pos.y },\n  renderer: {\n    // character: '>',\n    character: '✦️',\n    color: '#A89078',\n    background: '#D8C0A8',\n  },\n  name: TYPE.BARRIER,\n  durability: 3,\n})\n\nexport class PrepareSubstitution extends Base {\n  constructor({ \n    passThroughEnergyCost = ENERGY_THRESHOLD, \n    passThroughRequiredResources = [], \n    ...args \n  }) {\n    super({ ...args });\n    this.passThroughEnergyCost = passThroughEnergyCost;\n    this.passThroughRequiredResources = passThroughRequiredResources;\n    this.processDelay = 0;\n    this.energyCost = 0;\n  }\n\n  perform() {\n\n    const pos = this.actor.getPosition();\n    this.actor.activateCursor([{...pos}])\n\n    const goToPreviousKeymap = new GoToPreviousKeymap({\n      actor: this.actor,\n      game: this.game,\n      onAfter: () => this.actor.deactivateCursor(),\n    })\n\n    let keymap = {\n      Escape: () => goToPreviousKeymap,\n      \n      w: () => { \n        return new MoveTargetingCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move N',\n          direction: DIRECTIONS.N,\n          range: 4,\n        })\n      },\n      a: () => { \n        return new MoveTargetingCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move W',\n          direction: DIRECTIONS.W,\n          range: 4,\n        })\n      },\n      s: () => { \n        return new MoveTargetingCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move S',\n          direction: DIRECTIONS.S,\n          range: 4,\n        })\n      },\n      d: () => { \n        return new MoveTargetingCursor({\n          actor: this.actor,\n          game: this.game,\n          label: 'move E',\n          direction: DIRECTIONS.E,\n          range: 4,\n        })\n      },\n      r: () => { \n        return new MoveSubstitution({\n          targetPos: { ...this.actor.getCursorPositions()[0] },\n          spawnedEntity: createSandWall(this.game.engine, { ...this.actor.getPosition() }),\n          game: this.game,\n          actor: this.actor,\n          energyCost: this.passThroughEnergyCost,\n          requiredResources: this.passThroughRequiredResources,\n          onSuccess: () => {\n            this.actor.deactivateCursor();\n            this.actor.setNextAction(goToPreviousKeymap);\n          }\n        })\n      },\n    };\n    this.actor.setKeymap(keymap);\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n};\n","import { Base } from './Base';\nimport { MovingWall } from '../Entities/index';\nimport { TYPE } from '../items';\nimport { DIRECTIONS } from '../constants';\nimport * as Helper from '../../helper';\n\n\n\nexport class SandPulse extends Base {\n  constructor({ ...args }) {\n    super({ ...args });\n    this.interrupt = true\n  }\n\n  perform () {\n    const parameters = {\n      game: this.game,\n      passable: false,\n      pos: this.actor.pos,\n      renderer: {\n        character: ']',\n        color: '#A89078',\n        background: '#D8C0A8',\n      },\n      name: TYPE.KUNAI,\n      durability: 3,\n      range: 10,\n      speed: 300,\n    }\n    const pulseParticles = [\n      new MovingWall({direction: DIRECTIONS.N, ...parameters}),\n      new MovingWall({direction: DIRECTIONS.E, ...parameters}),\n      new MovingWall({direction: DIRECTIONS.S, ...parameters}),\n      new MovingWall({direction: DIRECTIONS.W, ...parameters}),\n    ]\n\n    pulseParticles.forEach((entity) => {\n      const pos = {x: entity.pos.x + entity.direction[0], y: entity.pos.y + entity.direction[1]}\n      entity.pos = pos;\n      const tile = this.game.map[Helper.coordsToString(pos)];\n      tile.entities.push(entity);\n      this.game.engine.addActorAsPrevious(entity);\n    });\n\n    return {\n      success: true,\n      alternative: null,\n    }\n  }\n};\n\n","import { Base } from './Base';\nimport * as Helper from '../../helper'\n\nexport class AddStatusEffect extends Base {\n  constructor({ effect, processDelay = 0, ...args }) {\n    super({ ...args });\n    this.effect = effect;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = this.game.engine.addStatusEffect(this.effect);\n    let positions = Helper.getPointsOnCircumference(this.actor.pos.x, this.actor.pos.y, 2);\n    positions.forEach((pos) => {\n      this.addParticle(5, { ...pos }, {\n        x: Math.sign(pos.x - this.actor.pos.x),\n        y: Math.sign(pos.y - this.actor.pos.y)\n      });\n    });\n    return {\n      success,\n      alternative: null,\n    };\n  }\n}\n;\n","import {Base} from './Base';\nimport {MESSAGE_TYPE} from '../message';\n\nexport class SandSkin extends Base {\n  constructor({defenseBuff = 1, ...args}) {\n    super({ ...args });\n    this.name = 'Sand Skin';\n    this.allowDuplicates = false\n    this['actor_background'] = this.actor.renderer.background;\n    this.renderer = {\n      character: '✦️',\n      color: '#A89078',\n      background: '#D8C0A8',\n    }\n    this.onStart = () => {\n      this.actor.defense += defenseBuff;\n      this.game.addMessage(`${this.actor.name} was enveloped in hardened sand.`, MESSAGE_TYPE.INFORMATION);\n      this.actor.renderer.background = '#A89078'\n    }\n    this.onStop = () => {\n      this.actor.defense = Math.max(0, this.actor.defense - defenseBuff);\n      this.game.addMessage(`${this.actor.name}'s hardened sand skin fell away.`, MESSAGE_TYPE.INFORMATION);\n      this.actor.renderer.background = this['actor_background'];\n    }\n  }\n}","export class Base {\n  constructor({ \n    game, \n    actor, \n    name = 'Effect', \n    lifespan = 100,\n    stepInterval = 100,\n    allowDuplicates = true,\n    onStart = () => null,\n    onStep = () => null,\n    onStop = () => null,\n    renderer = {background: 'green', color: 'white', character: '*'}\n  }) {\n    this.game = game\n    this.actor = actor\n    this.name = name\n    this.lifespan = lifespan\n    this.timeToLive = lifespan\n    this.stepInterval = stepInterval\n    this.allowDuplicates = allowDuplicates\n    this.timeSinceLastStep = 0;\n    this.onStart = onStart\n    this.onStep = onStep\n    this.onStop = onStop\n    this.renderer = renderer\n  }\n}","import * as Constant from '../constants';\nimport * as Helper from '../../helper';\nimport { AddStatusEffect } from './AddStatusEffect';\nimport { SandSkin } from '../StatusEffects/SandSkin';\n\nexport class AddSandSkinStatusEffect extends AddStatusEffect {\n  constructor({ defenseBuff, ...args }) {\n    super({ ...args });\n    this.processDelay = 25\n    this.effect = new SandSkin({\n      defenseBuff,\n      game: this.game,\n      actor: this.actor,\n      lifespan: Constant.ENERGY_THRESHOLD * 10,\n      stepInterval: Constant.ENERGY_THRESHOLD,\n    });\n    this.particleTemplate = {\n      renderer: {\n        character: '✦️',\n        color: '#A89078',\n        background: '#D8C0A8',\n      }\n    };\n  }\n  perform() {\n    let success = this.game.engine.addStatusEffect(this.effect);\n    let positions = Helper.getPointsOnCircumference(this.actor.pos.x, this.actor.pos.y, 4);\n    positions.forEach((pos) => {\n      this.addParticle(3, { ...pos }, {\n        x: -1 * Math.sign(pos.x - this.actor.pos.x),\n        y: -1 * Math.sign(pos.y - this.actor.pos.y)\n      });\n    });\n    return {\n      success,\n      alternative: null,\n    };\n  }\n};\n","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nexport class CloneSelf extends Base {\n  constructor({ cloneArgs = [], ...args }) {\n    super({ ...args });\n    this.cloneArgs = cloneArgs;\n  }\n  perform() {\n    let success = false;\n    if (this.actor.createClone(this.cloneArgs)) {\n      success = true;\n      // this.actor.energy -= this.energyCost;\n      this.game.addMessage(`${this.actor.name} is cloning itself`, MESSAGE_TYPE.ACTION);\n    }\n    // let clone = cloneDeep(this.actor);\n    // clone.game = this.actor.game;\n    // clone.id = uuid();\n    // this.cloneArgs.forEach((arg) => {\n    //   console.log(arg);\n    //   clone[arg.attribute] = arg.value\n    // });\n    // if (this.game.placeActorOnMap(clone)) {\n    //   this.game.engine.addActorAsNext(clone);\n    //   this.game.draw();\n    //   success = true;\n    // };\n    return {\n      success,\n      alternative: null,\n    };\n  }\n}\n;\n","// import deps\nimport * as Item from '../items';\nimport * as Constant from '../constants';\nimport { Player } from '../Entities/index';\nimport { ContainerSlot } from '../Entities/Containing';\nimport {ChakraResource} from '../Actions/ActionResources/ChakraResource';\nimport {Say} from '../Actions/Say';\nimport {Move} from '../Actions/Move';\nimport {PrepareSandWall} from '../Actions/SandWall';\nimport {PrepareDirectionalThrow} from '../Actions/PrepareDirectionalThrow';\nimport {PrepareSubstitution} from '../Actions/PrepareSubstitution';\nimport {SandPulse} from '../Actions/SandPulse';\nimport {AddSandSkinStatusEffect} from '../Actions/AddSandSkinStatusEffect';\nimport {OpenInventory} from '../Actions/OpenInventory';\nimport {OpenEquipment} from '../Actions/OpenEquipment';\nimport {OpenDropInventory} from '../Actions/OpenDropInventory';\nimport {CloneSelf} from '../Actions/CloneSelf';\nimport {PickupRandomItem} from '../Actions/PickupRandomItem';\n\nexport default function (engine) {\n  // define keymap\n  const keymap = (engine, actor) => {\n    return {\n      w: () => {\n        const direction = Constant.DIRECTIONS.N;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      s: () => {\n        const direction = Constant.DIRECTIONS.S;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      a: () => {\n        const direction = Constant.DIRECTIONS.W;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      d: () => {\n        const direction = Constant.DIRECTIONS.E;\n        let newX = actor.pos.x + direction[0];\n        let newY = actor.pos.y + direction[1];\n        return new Move({\n          hidden: true,\n          targetPos: { x: newX, y: newY },\n          game: engine.game,\n          actor,\n          energyCost: Constant.ENERGY_THRESHOLD\n        });\n      },\n      p: () => new Say({\n        label: 'Stay',\n        message: 'standing still...',\n        game: engine.game,\n        actor,\n        energyCost: Constant.ENERGY_THRESHOLD,\n      }),\n      Escape: () => new Say({\n        label: 'Pass',\n        message: 'pass turn...',\n        game: engine.game,\n        actor,\n        interrupt: true,\n        energyCost: 0,\n      }),\n      l: () => new PrepareSandWall({\n        label: 'Sand Wall',\n        game: engine.game,\n        actor,\n        sandWallRequiredResources: [new ChakraResource({ getResourceCost: () => 1 })]\n      }),\n      r: () => new PrepareSubstitution({\n        label: 'Substitution',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n        passThroughRequiredResources: [new ChakraResource({ getResourceCost: () => 1 })]\n      }),\n      k: () => new SandPulse({\n        label: 'Sand Pulse',\n        game: engine.game,\n        actor,\n      }),\n      h: () => new AddSandSkinStatusEffect({\n        label: 'Sand Skin',\n        game: engine.game,\n        actor,\n        requiredResources: [\n          new ChakraResource({ getResourceCost: () => 2 }),\n        ],\n      }),\n      c: () => new CloneSelf({\n        label: 'Sand Clone',\n        game: engine.game,\n        actor,\n        cloneArgs: [\n          {\n            attribute: 'renderer',\n            value: { ...actor.renderer, background: '#A89078' }\n          },\n          {\n            attribute: 'ignoredKeys',\n            value: ['g'],\n          },\n        ],\n        requiredResources: [\n          new ChakraResource({ getResourceCost: () => 4 }),\n        ],\n      }),\n      i: () => new OpenInventory({\n        label: 'Inventory',\n        game: engine.game,\n        actor,\n      }),\n      o: () => new OpenEquipment({\n        label: 'Equipment',\n        game: engine.game,\n        actor,\n      }),\n      u: () => new OpenDropInventory({\n        label: 'Drop Items',\n        game: engine.game,\n        actor,\n      }),\n      g: () => new PickupRandomItem({\n        label: 'Pickup',\n        game: engine.game,\n        actor,\n      }),\n      t: () => new PrepareDirectionalThrow({\n        label: 'Throw',\n        game: engine.game,\n        actor,\n        passThroughEnergyCost: Constant.ENERGY_THRESHOLD,\n      })\n    };\n  }\n  // instantiate class\n  let actor = new Player({\n    pos: { x: 23, y: 7 },\n    renderer: {\n      character: 'G',\n      color: Constant.THEMES.SOLARIZED.base2,\n      background: Constant.THEMES.NARUTO.gaara,\n    },\n    name: 'Gaara',\n    actions: [],\n    speed: 400,\n    durability: 20,\n    charge: 10,\n    game: engine.game,\n    presentingUI: true,\n    initializeKeymap: keymap,\n  })\n\n  // add default items to container\n  const kunais = Array(100).fill('').map(() => Item.directionalKunai(engine, { ...actor.pos }, null, 10));\n  const swords = Array(2).fill('').map(() => Item.sword(engine));\n  actor.container = [\n    new ContainerSlot({\n      itemType: kunais[0].name,\n      items: kunais,\n    }),\n    new ContainerSlot({\n      itemType: swords[0].name,\n      items: swords,\n    }),\n  ]\n\n  return actor;\n}","import { ALPHABET, DIRECTIONS } from '../constants';\n\nexport const createKeyAction = ({\n  label = 'KeyAction',\n  activate = () => null,\n  action = null,\n}) => {\n  return {\n    label,\n    activate,\n    action,\n  }\n}\n\nexport const addAlphabeticallyToKeymap = (keymap, obj) => {\n  let alphabetAllowed = ALPHABET.filter((letter) => {\n    return !Object.keys(keymap).includes(letter);\n  });\n  keymap[alphabetAllowed[0]] = obj;\n}\n\nexport const deactivateUIKeymap = (engine, visibleUIKey) => {\n  let currentUiActor = engine.actors[engine.currentActor];\n  engine.game.removeActor(currentUiActor);\n  engine.game[visibleUIKey] = null;\n}\n\nexport const createFourDirectionMoveOptions = (moveFunction, engine, label = 'move', hidden = false) => {\n  return {\n    w: {\n      activate: () => moveFunction(DIRECTIONS.N, engine),\n      label: `${label} N`,\n      hidden,\n    },\n    d: {\n      activate: () => moveFunction(DIRECTIONS.E, engine),\n      label: `${label} E`,\n      hidden,\n    },\n    s: {\n      activate: () => moveFunction(DIRECTIONS.S, engine),\n      label: `${label} S`,\n      hidden,\n    },\n    a: {\n      activate: () => moveFunction(DIRECTIONS.W, engine),\n      label: `${label} W`,\n      hidden,\n    },\n  }\n}\n\nexport const createEightDirectionMoveOptions = (moveFunction, engine, label = 'move', hidden = false) => {\n  return {\n    w: {\n      activate: () => moveFunction(DIRECTIONS.N, engine),\n      label: `${label} N`,\n      hidden,\n    },\n    e: {\n      activate: () => moveFunction(DIRECTIONS.NE, engine),\n      label: `${label} NE`,\n      hidden,\n    },\n    d: {\n      activate: () => moveFunction(DIRECTIONS.E, engine),\n      label: `${label} E`,\n      hidden,\n    },\n    c: {\n      activate: () => moveFunction(DIRECTIONS.SE, engine),\n      label: `${label} SE`,\n      hidden,\n    },\n    x: {\n      activate: () => moveFunction(DIRECTIONS.S, engine),\n      label: `${label} S`,\n      hidden,\n    },\n    z: {\n      activate: () => moveFunction(DIRECTIONS.SW, engine),\n      label: `${label} SW`,\n      hidden,\n    },\n    a: {\n      activate: () => moveFunction(DIRECTIONS.W, engine),\n      label: `${label} W`,\n      hidden,\n    },\n    q: {\n      activate: () => moveFunction(DIRECTIONS.NW, engine),\n      label: `${label} NW`,\n      hidden,\n    },\n  }\n}","import { UnequipItemToTile } from \"../../Actions/UnequipItemToTile\";\nimport { UnequipItem } from \"../../Actions/UnequipItem\";\nimport { UI_Actor } from '../../Entities/index';\nimport { addAlphabeticallyToKeymap, deactivateUIKeymap } from '../helper';\n\nconst keymapEquipment = (engine, initiatedBy) => {\n  let keymap = {\n    Escape: {\n      activate: () => deactivateUIKeymap(engine, 'visibleEquipment'),\n      label: 'Close',\n    }\n  };\n\n  initiatedBy.equipment.filter((slot) => slot.item).map((slot) => {\n    let obj = {\n      activate: null,\n      label: ''\n    }\n    obj['activate'] = () => {\n      initiatedBy.setNextAction(new UnequipItemToTile({\n        item: slot.item,\n        game: engine.game,\n        actor: initiatedBy,\n      }))\n      deactivateUIKeymap(engine, 'visibleEquipment');\n    }\n    obj['label'] = `Unequip ${slot.item.name}`;\n    addAlphabeticallyToKeymap(keymap, obj);\n    return true;\n  })\n\n  return keymap;\n}\n\nexport const activateEquipment = (engine) => {\n  let currentActor = engine.actors[engine.currentActor]\n  engine.game.visibleEquipment = currentActor.equipment;\n\n  let ui = new UI_Actor({\n    initiatedBy: currentActor,\n    pos: { ...currentActor.pos },\n    renderer: {\n      character: 'E',\n      color: 'white',\n      background: '',\n    },\n    name: 'Equipment',\n    game: engine.game,\n  })\n  engine.addActorAsPrevious(ui);\n  engine.game.placeActorOnMap(ui)\n  engine.game.draw()\n  ui.keymap = keymapEquipment(engine, currentActor);\n}","import { MESSAGE_TYPE } from '../message';\nimport { TYPE as ITEM_TYPES } from '../items';\nimport SOUNDS from '../sounds';\nimport { Base } from './Base';\nimport * as Helper from '../../helper';\nimport * as Constant from '../constants';\n\nexport class SprayWater extends Base {\n  constructor({ targetPos, radius = 1, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.radius = radius;\n    this.particleTemplate = Constant.PARTICLE_TEMPLATES.water;\n  }\n  perform() {\n    if (!this.actor.hasItemNameEquipped(ITEM_TYPES.WATER_GUN)) {\n      this.game.addMessage(`${this.actor.name} doesn't have a ${ITEM_TYPES.WATER_GUN}.`, MESSAGE_TYPE.ERROR);\n      return {\n        success: false,\n        alternative: null,\n      };\n    }\n    let structure = {\n      x_offset: 0,\n      y_offset: 0,\n      positions: Array(this.radius).fill('').reduce((acc, curr, i) => {\n        return acc.concat(...Helper.getPointsOnCircumference(0, 0, i + 1));\n      }, [])\n    };\n    const positions = structure.positions.map((slot) => {\n      return {\n        x: this.targetPos.x + slot.x + structure.x_offset,\n        y: this.targetPos.y + slot.y + structure.y_offset\n      };\n    }).concat({ ...this.targetPos });\n    positions.forEach((position) => {\n      const tile = this.game.map[Helper.coordsToString(position)];\n      if (tile) {\n        if (tile.type === 'BURNT')\n          tile.type = 'GROUND';\n        if (tile.type === 'FLOOR')\n          tile.type = 'WET';\n      }\n    });\n    // adding particles\n    positions.forEach((pos) => {\n      this.addParticle(3, { ...pos }, {\n        x: Math.sign(pos.x - this.targetPos.x),\n        y: Math.sign(pos.y - this.targetPos.y)\n      });\n    });\n    // sounds\n    const sound = Helper.getRandomInArray([SOUNDS.water_0, SOUNDS.water_1]);\n    sound.play();\n    this.actor.energy -= this.energyCost;\n    return {\n      success: true,\n      alternative: null,\n    };\n  }\n}\n;\n","import { Base } from './Base';\nimport * as Helper from '../../helper';\n\nexport class CursorMove extends Base {\n  constructor({ targetPos, processDelay = 0, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n    this.processDelay = processDelay;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    const initiatedFrom = this.actor.initiatedBy.pos;\n    const path = Helper.calculatePath(this.game, this.targetPos, initiatedFrom, 8);\n    const isInRange = this.actor.range ? path.length <= this.actor.range : true;\n    if (isInRange && this.game.cursorCanOccupyPosition(this.targetPos)) {\n      let tile = this.game.map[Helper.coordsToString(this.actor.pos)];\n      this.game.map[Helper.coordsToString(this.actor.pos)] = { ...tile, entities: tile.entities.filter((e) => e.id !== this.actor.id) };\n      this.actor.pos = this.targetPos;\n      this.game.map[Helper.coordsToString(this.targetPos)].entities.push(this.actor);\n      success = true;\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { CursorMove } from \"../../Actions/CursorMove\";\n\nexport const moveCursor = (direction, engine) => {\n  let actor = engine.actors[engine.currentActor];\n  let newX = actor.pos.x + direction[0];\n  let newY = actor.pos.y + direction[1];\n  actor.setNextAction(new CursorMove({\n    targetPos: { x: newX, y: newY },\n    game: engine.game,\n    actor,\n    energyCost: 0,\n  }))\n}","import { SprayWater } from \"../../Actions/SprayWater\";\nimport * as Constant from '../../constants';\nimport { UI_Actor } from '../../Entities/index';\nimport { moveCursor } from './moveCursor';\nimport { createFourDirectionMoveOptions } from '../helper';\n\nconst trigger = (engine, actor, radius = 1) => {\n  let cursor = engine.actors[engine.currentActor];\n\n  actor.setNextAction(\n    // new Action.Say({\n    //   game: engine.game,\n    //   actor,\n    //   message: 'I\\'ll crush you!',\n    //   energyCost: Constant.ENERGY_THRESHOLD\n    // })\n    new SprayWater({\n      targetPos: { ...cursor.pos },\n      radius,\n      game: engine.game,\n      actor,\n      energyCost: Constant.ENERGY_THRESHOLD\n    })\n  )\n}\n\nconst keymap = (engine, initiatedBy, previousKeymap, radius) => {\n  const goToPreviousKeymap = () => {\n    let cursor = engine.actors[engine.currentActor];\n    cursor.active = false;\n    engine.game.removeActor(cursor);\n    // make sure actor is burnable once targeting is complete or canceled\n    initiatedBy['willResetCanBurn'] = true;\n    \n  };\n  return {\n    Escape: {\n      activate: goToPreviousKeymap,\n      label: 'Close',\n    },\n    ...createFourDirectionMoveOptions(moveCursor, engine),\n    t: {\n      activate: () => {\n        // make sure actor is burnable once targeting is complete or canceled\n        initiatedBy['canBurn'] = true;\n        trigger(engine, initiatedBy, radius);\n        goToPreviousKeymap();\n      },\n      label: 'activate'\n    },\n  };\n}\n\nexport const activateProjectile = (engine, radius, range = 2) => {\n  let currentActor = engine.actors[engine.currentActor]\n  let game = engine.game;\n  let pos = currentActor.pos;\n  // prevent player from being burned while on fire.\n  currentActor['canBurn'] = false;\n\n  let cursor = new UI_Actor({\n    initiatedBy: currentActor,\n    range,\n    pos,\n    renderer: {\n      character: '█',\n      color: 'white',\n      background: '',\n    },\n    name: 'Cursor',\n    game,\n    keymap: keymap(engine, currentActor, { ...currentActor.keymap }, radius),\n  })\n  engine.addActorAsPrevious(cursor);\n  game.placeActorOnMap(cursor)\n  game.draw()\n}","import { MESSAGE_TYPE } from '../message';\nimport { Base } from './Base';\nimport * as Helper from '../../helper';\n\nexport class EquipItemFromTile extends Base {\n  // entities can only equip items from their container/inventory\n  constructor({ item, ...args }) {\n    super({ ...args });\n    this.item = item;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (this.item.equipmentType) {\n      let itemInSlot = this.actor.getItemInSlot(this.item.equipmentType);\n      // if (itemInSlot) {\n      //   this.game.map[Helper.coordsToString(this.actor.pos)].entities.push(itemInSlot);\n      // }\n      if (itemInSlot) {\n        this.game.addMessage(`${this.actor.name}\\'s equipment slots are full.`, MESSAGE_TYPE.ERROR);\n      }\n      else {\n        this.actor.equip(this.item.equipmentType, this.item);\n        let entities = this.game.map[Helper.coordsToString(this.actor.pos)].entities;\n        this.game.map[Helper.coordsToString(this.actor.pos)].entities = entities.filter((it) => it.id !== this.item.id);\n        this.game.addMessage(`${this.actor.name} equips ${this.item.name}.`, MESSAGE_TYPE.ACTION);\n        success = true;\n        this.actor.energy -= this.energyCost;\n      }\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { Shove } from \"../../Actions/Shove\";\nimport { ENERGY_THRESHOLD } from '../../constants';\n\nexport const push = (direction, engine) => {\n  let actor = engine.actors[engine.currentActor];\n  let newX = actor.pos.x + direction[0];\n  let newY = actor.pos.y + direction[1];\n  actor.setNextAction(new Shove({\n    targetPos: { x: newX, y: newY },\n    game: engine.game,\n    actor,\n    direction,\n    energyCost: ENERGY_THRESHOLD,\n    processDelay: 25,\n  }))\n}","import { Attack } from \"../../Actions/Attack\";\nimport { getDirectionKey, DIRECTIONS, ENERGY_THRESHOLD, THEMES } from '../../constants';\n\n\nconst keyMapChop = (engine, initiatedBy, previousKeymap, animations) => {\n  let actor = engine.actors[engine.currentActor];\n  const goToPreviousKeymap = () => {\n    initiatedBy.keymap = previousKeymap;\n    // animation code\n    if (animations.length) {\n      animations.forEach((animation) => engine.game.display.removeAnimation(animation.id))\n    }\n    // end\n  }\n  return {\n    Escape: {\n      activate: goToPreviousKeymap,\n      label: 'Cancel Chop',\n    },\n    w: {\n      activate: () => {\n        let targetPos = {\n            x: actor.pos.x + DIRECTIONS.N[0], //[0, -1]\n            y: actor.pos.y + DIRECTIONS.N[1]\n        }\n        actor.setNextAction( new Attack({\n            targetPos: targetPos,\n            game: engine.game,\n            actor: actor,\n        }))\n        goToPreviousKeymap();\n      },\n      label: 'activate N',\n    },\n    d: {\n      activate: () => {\n        let targetPos = {\n            x: actor.pos.x + DIRECTIONS.E[0],\n            y: actor.pos.y + DIRECTIONS.E[1]\n        }\n        actor.setNextAction( new Attack({\n            targetPos: targetPos,\n            game: engine.game,\n            actor: actor,\n        }))\n        goToPreviousKeymap();\n      },\n      label: 'activate E',\n    },\n    s: {\n      activate: () => {\n        let targetPos = {\n            x: actor.pos.x + DIRECTIONS.S[0],\n            y: actor.pos.y + DIRECTIONS.S[1]\n        }\n        actor.setNextAction( new Attack({\n            targetPos: targetPos,\n            game: engine.game,\n            actor: actor,\n        }))\n        goToPreviousKeymap();\n      },\n      label: 'activate S',\n    },\n    a: {\n      activate: () => {\n        let targetPos = {\n            x: actor.pos.x + DIRECTIONS.W[0],\n            y: actor.pos.y + DIRECTIONS.W[1]\n        }\n        actor.setNextAction( new Attack({\n            targetPos: targetPos,\n            game: engine.game,\n            actor: actor,\n        }))\n        goToPreviousKeymap();\n      },\n      label: 'activate W',\n    },\n  };\n}\n\nexport const chop = (engine) => {\n  let currentActor = engine.actors[engine.currentActor]\n\n  // animation code: could be abstrated for easier use\n  const directions = [\n    DIRECTIONS.N,\n    DIRECTIONS.E,\n    DIRECTIONS.S,\n    DIRECTIONS.W,\n  ];\n\n  let animations = [];\n\n  directions.forEach((direction) => {\n    let pos = {\n      x: currentActor.pos.x + direction[0],\n      y: currentActor.pos.y + direction[1],\n    }\n    const animation = engine.game.display.addAnimation(1, { x: pos.x, y: pos.y, color: THEMES.SOLARIZED.base3 })\n    animations.push(animation);\n  })\n  // end\n\n  currentActor.keymap = keyMapChop(engine, currentActor, { ...currentActor.keymap }, animations);\n}","import SOUNDS from '../sounds';\nimport { Base } from './Base';\nimport * as Constant from '../constants';\n\nexport class ReleaseGrab extends Base {\n  constructor({ ...args }) {\n    super({ ...args });\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    const releasedEntity = this.actor.release();\n    if (releasedEntity) {\n      this.actor.energy -= this.energyCost;\n      // add particles\n      this.addParticle(2, { ...releasedEntity.pos }, { x: 0, y: 0 }, Constant.PARTICLE_TEMPLATES.succede.renderer);\n      success = true;\n      SOUNDS.release_0.play();\n    }\n    ;\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import SOUNDS from '../sounds';\nimport { Base } from './Base';\nimport * as Constant from '../constants';\n\nexport class GrabDirection extends Base {\n  constructor({ targetPos, ...args }) {\n    super({ ...args });\n    this.targetPos = targetPos;\n  }\n  perform() {\n    let success = false;\n    let alternative = null;\n    if (this.actor.grab(this.targetPos)) {\n      this.actor.energy -= this.energyCost;\n      success = true;\n      // add particles\n      this.addParticle(2, { ...this.targetPos }, { x: 0, y: 0 }, Constant.PARTICLE_TEMPLATES.succede.renderer);\n      SOUNDS.grab_0.play();\n    }\n    return {\n      success,\n      alternative,\n    };\n  }\n}\n;\n","import { ReleaseGrab } from \"../../Actions/ReleaseGrab\";\nimport { GrabDirection } from \"../../Actions/GrabDirection\";\nimport * as Constant from '../../constants';\nimport { createFourDirectionMoveOptions } from '../helper';\n\nconst grabDirection = (direction, engine, actor, animation) => {\n  const pos = {\n    x: actor.pos.x + direction[0],\n    y: actor.pos.y + direction[1],\n  };\n  actor.setNextAction(\n    new GrabDirection({\n      targetPos: pos,\n      game: engine.game,\n      actor,\n      energyCost: Constant.ENERGY_THRESHOLD,\n    })\n  )\n}\n\n\nconst keymapCursorToGrabEntity = (engine, initiatedBy, initialKeymap, animations) => {\n  const goToPreviousKeymap = () => {\n    initiatedBy.keymap = initialKeymap;\n    // animation code\n    if (animations.length) {\n      animations.forEach((animation) => engine.game.display.removeAnimation(animation.id))\n    }\n    // end\n  }\n  return {\n    Escape: {\n      activate: goToPreviousKeymap,\n      label: 'Cancel Grab',\n    },\n    ...createFourDirectionMoveOptions(\n      (direction, engine) => {\n        grabDirection(direction, engine, initiatedBy);\n        goToPreviousKeymap();\n      },\n      engine,\n      'grab',\n    )\n  }\n}\n\nexport const activateGrab = (engine) => {\n  let game = engine.game;\n  let currentActor = engine.actors[game.engine.currentActor]\n  let initialKeymap = currentActor.keymap;\n\n  // animation code: could be abstrated for easier use\n  const directions = [\n    Constant.DIRECTIONS.N,\n    Constant.DIRECTIONS.E,\n    Constant.DIRECTIONS.S,\n    Constant.DIRECTIONS.W,\n  ];\n\n  let animations = [];\n\n  directions.forEach((direction) => {\n    let pos = {\n      x: currentActor.pos.x + direction[0],\n      y: currentActor.pos.y + direction[1],\n    }\n    const animation = engine.game.display.addAnimation(1, { x: pos.x, y: pos.y, color: Constant.THEMES.SOLARIZED.base3 })\n    animations.push(animation);\n  }) \n  // end\n\n  currentActor.keymap = keymapCursorToGrabEntity(engine, currentActor, initialKeymap, animations);\n}\n\nexport const releaseGrab = (engine) => {\n  let actor = engine.actors[engine.currentActor];\n  actor.setNextAction(new ReleaseGrab({\n    game: engine.game,\n    actor,\n    energyCost: Constant.ENERGY_THRESHOLD\n  }))\n}","// import deps\nimport { Player } from '../Entities/index'\nimport * as Constant from '../constants';\nimport * as Keymap from '../Keymap';\nimport { createFourDirectionMoveOptions } from '../Keymap/helper';\n\nexport default function (engine) {\n  // define keymap\n  const keymap = (engine) => {\n    return {\n      ...createFourDirectionMoveOptions(Keymap.push, engine, 'push', true),\n      t: {\n        activate: () => Keymap.activateProjectile(engine, 1, 5),\n        label: 'shoot water',\n      },\n      c: {\n        activate: () => Keymap.chop(engine),\n        label: 'chop',\n      },\n      e: {\n        activate: () => Keymap.activateEquipment(engine),\n        label: 'equipment',\n      },\n      p: {\n        activate: () => Keymap.equipRandomFromTile(engine),\n        label: 'pick up',\n      },\n      g: {\n        activate: () => Keymap.activateGrab(engine),\n        label: 'grab',\n      },\n      r: {\n        activate: () => Keymap.releaseGrab(engine),\n        label: 'release',\n      },\n    };\n  }\n  // instantiate class\n  let actor = new Player({\n    pos: { x: 19, y: 22 },\n    renderer: {\n      character: 'F',\n      sprite: '',\n      color: Constant.THEMES.SOLARIZED.base3,\n      background: Constant.THEMES.SOLARIZED.yellow,\n    },\n    name: Constant.PLAYER_NAME,\n    equipment: Constant.EQUIPMENT_LAYOUTS.limited(),\n    actions: [],\n    speed: 100,\n    durability: 4000,\n    keymap: keymap(engine),\n  })\n\n  // default items to container\n  // const axe = Array(2).fill('').map(() => Item.axe(engine));\n  // actor.container = [\n  //   new Entity.ContainerSlot({\n  //     itemType: axe[0].name,\n  //     items: axe,\n  //   }),\n  // ]\n  return actor;\n}","import { PickupItem } from \"../../Actions/PickupItem\";\nimport { EquipItemFromTile } from \"../../Actions/EquipItemFromTile\";\nimport { ENERGY_THRESHOLD } from '../../constants';\nimport { coordsToString, getRandomInArray } from '../../../helper';\nimport { MESSAGE_TYPE } from '../../message';\n\nexport const pickupRandom = (engine) => {\n  let actor = engine.actors[engine.currentActor];\n  let entities = engine.game.map[coordsToString(actor.pos)].entities.filter((e) => e.id !== actor.id);\n  if (entities.length > 0) {\n    actor.setNextAction(new PickupItem({\n      item: getRandomInArray(entities),\n      game: engine.game,\n      actor,\n      energyCost: ENERGY_THRESHOLD\n    }));\n  }\n  else {\n    console.log('nothing to pickup.');\n  }\n};\n\nexport const equipRandomFromTile = (engine) => {\n  let actor = engine.actors[engine.currentActor];\n  let entities = engine.game.map[coordsToString(actor.pos)].entities.filter((e) => e.id !== actor.id);\n  if (entities.length > 0) {\n    actor.setNextAction(new EquipItemFromTile({\n      item: getRandomInArray(entities),\n      game: engine.game,\n      actor,\n      energyCost: ENERGY_THRESHOLD\n    }));\n  }\n  else {\n    engine.game.addMessage(`nothing to equip.`, MESSAGE_TYPE.ACTION);\n  }\n};","import RockLee from './RockLee';\nimport Gaara from './Gaara';\nimport FireFighter from './FireFighter';\n\nlet Characters = () => {\n  return {\n    Gaara,\n    RockLee,\n    FireFighter,\n  }\n}\n\nexport default Characters;","import React from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport { SCREENS } from './Screen/constants';\nimport Screens from './Screen/index';\nimport Characters from './Characters/index';\nimport Modes from './Modes/index';\nimport SOUNDS from './sounds';\n\nclass Nystrum extends React.Component {\n  constructor() {\n    super();\n    let characterKey = Characters();\n    let characters = Object.keys(characterKey).map((key, i) => {\n      return {\n        initialize: characterKey[key],\n        selected: false,\n        name: key,\n      }\n    });\n\n    let modes = Object.keys(Modes).map((key, i) => {\n      return {\n        class: Modes[key],\n        selected: false,\n        name: key,\n      }\n    });\n\n    this.state = {\n      activeScreen: SCREENS.TITLE,\n      characters,\n      modes,\n      selectedCharacter: null,\n      selectedMode: null,\n    };\n  }\n\n  setActiveScreen (activeScreen) {\n    if (activeScreen === SCREENS.TITLE) {\n      Object.keys(SOUNDS).forEach(key => {\n        SOUNDS[key].stop();\n      });\n    }\n    this.setState({activeScreen})\n  }\n\n  setSelectedCharacter (character) {\n    this.setState({selectedCharacter: {...character}})\n  }\n\n  setSelectedMode (mode) {\n    this.setState({selectedMode: mode})\n  }\n\n  getActiveScreen () {\n    const characterScreen = <Screens.CharacterSelect \n      key={SCREENS.CHARACTER_SELECT} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n    />\n    const modeScreen = <Screens.ModeSelect \n      key={SCREENS.MODE_SELECT} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedMode={this.setSelectedMode.bind(this)}\n      selectedMode={this.state.selectedMode}\n      modes={this.state.modes}\n    />\n    const titleScreen = <Screens.Title \n      key={SCREENS.TITLE} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n    />\n    const loseScreen = <Screens.Lose \n      key={SCREENS.LOSE} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n    />\n    const winScreen = <Screens.Win \n      key={SCREENS.WIN} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      setSelectedCharacter={this.setSelectedCharacter.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      characters={this.state.characters}\n    />\n    const levelScreen = <Screens.Level \n      key={SCREENS.LEVEL} \n      setActiveScreen={this.setActiveScreen.bind(this)}\n      selectedCharacter={this.state.selectedCharacter}\n      selectedMode={this.state.selectedMode}\n    />\n\n    switch (this.state.activeScreen) {\n      case SCREENS.CHARACTER_SELECT:\n        return characterScreen\n      case SCREENS.MODE_SELECT:\n        return modeScreen\n      case SCREENS.TITLE:\n        return titleScreen\n      case SCREENS.LOSE:\n        return loseScreen\n      case SCREENS.WIN:\n        return winScreen\n      case SCREENS.LEVEL:\n        return levelScreen\n      default:\n        return titleScreen\n    }\n  }\n\n  render() {\n    const activeScreen = this.getActiveScreen();\n    return (\n      <div className=\"Nystrum\">\n        <ReactCSSTransitionGroup\n          transitionName=\"fade\"\n          transitionAppear={true}\n          transitionEnter={true}\n          transitionLeave={true}\n          transitionAppearTimeout={500}\n          transitionEnterTimeout={500}\n          transitionLeaveTimeout={300}\n        >\n          { activeScreen }\n        </ReactCSSTransitionGroup>\n      </div>\n    );\n  }\n}\n\nexport default Nystrum;\n","import React from 'react';\nimport './App.css';\nimport Nystrum from './nystrum/Nystrum';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App container-fluid\">\n        <Nystrum />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}